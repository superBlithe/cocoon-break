{"version":3,"sources":["webpack://FYGE/webpack/universalModuleDefinition","webpack://FYGE/webpack/bootstrap","webpack://FYGE/./src/2d/const.ts","webpack://FYGE/./src/2d/utils/index.ts","webpack://FYGE/./src/2d/math/index.ts","webpack://FYGE/./src/3d/math/Vector3.ts","webpack://FYGE/./src/2d/HashObject.ts","webpack://FYGE/./src/2d/filter/Filter.ts","webpack://FYGE/./src/glCore/index.ts","webpack://FYGE/./src/3d/Geometry.ts","webpack://FYGE/./src/2d/events/Event.ts","webpack://FYGE/./src/2d/texture/Texture.ts","webpack://FYGE/./src/3d/math/Matrix4.ts","webpack://FYGE/./src/2d/display/index.ts","webpack://FYGE/./src/2d/display/Container.ts","webpack://FYGE/./src/2d/events/EventDispatcher.ts","webpack://FYGE/./src/2d/filter/defaultVerts.ts","webpack://FYGE/./src/2d/texture/index.ts","webpack://FYGE/./src/3d/Object3D.ts","webpack://FYGE/./src/spine/animation/utils.ts","webpack://FYGE/./src/3d/Mesh3D.ts","webpack://FYGE/./src/2d/display/DisplayObject.ts","webpack://FYGE/./src/2d/display/Sprite.ts","webpack://FYGE/./src/3d/math/Vector2.ts","webpack://FYGE/./src/2d/utils/tbminiAdapte.ts","webpack://FYGE/./src/2d/loader/index.ts","webpack://FYGE/./src/2d/events/MouseEvent.ts","webpack://FYGE/./src/2d/events/index.ts","webpack://FYGE/./src/3d/materials/BaseMaterial.ts","webpack://FYGE/./src/3d/math/Sphere.ts","webpack://FYGE/./src/spine/animation/BaseTrack.ts","webpack://FYGE/./src/2d/math/Point.ts","webpack://FYGE/./src/2d/renderers/CanvasRenderer.ts","webpack://FYGE/./src/2d/texture/BaseTexture.ts","webpack://FYGE/./src/2d/mesh/Mesh.ts","webpack://FYGE/./src/2d/text/TextField.ts","webpack://FYGE/./src/3d/math/Quaternion.ts","webpack://FYGE/./src/3d/lights/Light.ts","webpack://FYGE/./src/3d/materials/index.ts","webpack://FYGE/./src/spine/SpineColor.ts","webpack://FYGE/./src/2d/math/Matrix.ts","webpack://FYGE/./src/2d/renderers/WebglRenderer.ts","webpack://FYGE/./src/2d/renderers/webgl/ObjectRenderer.ts","webpack://FYGE/./src/glCore/shader/mapType.ts","webpack://FYGE/./src/glCore/shader/defaultValue.ts","webpack://FYGE/./src/2d/renderers/renderTarget/RenderTarget.ts","webpack://FYGE/./src/2d/graphics/index.ts","webpack://FYGE/./src/tween/index.ts","webpack://FYGE/./src/3d/index.ts","webpack://FYGE/./src/3d/math/Box3.ts","webpack://FYGE/./src/3d/cameras/PerspectiveCamera.ts","webpack://FYGE/./src/3d/materials/ShaderMaterial.ts","webpack://FYGE/./src/spine/attachment/Attachment.ts","webpack://FYGE/./src/2d/math/ObservablePoint.ts","webpack://FYGE/./src/2d/math/Rectangle.ts","webpack://FYGE/./src/2d/math/GroupD8.ts","webpack://FYGE/./src/2d/display/FloatDisplay.ts","webpack://FYGE/./src/2d/renderers/plugins/CanvasGraphicsRenderer.ts","webpack://FYGE/./src/2d/renderers/SystemRenderer.ts","webpack://FYGE/./src/2d/utils/canUseNewCanvasBlendModes.ts","webpack://FYGE/./src/glCore/checkMaxIfStatementsInShader.ts","webpack://FYGE/./src/glCore/createContext.ts","webpack://FYGE/./src/2d/renderers/webgl/BatchBuffer.ts","webpack://FYGE/./src/glCore/GLTexture.ts","webpack://FYGE/./src/glCore/shader/compileProgram.ts","webpack://FYGE/./src/glCore/shader/extractAttributes.ts","webpack://FYGE/./src/glCore/shader/mapSize.ts","webpack://FYGE/./src/glCore/shader/extractUniforms.ts","webpack://FYGE/./src/glCore/shader/setPrecision.ts","webpack://FYGE/./src/glCore/shader/generateUniformAccessObject.ts","webpack://FYGE/./src/2d/filter/index.ts","webpack://FYGE/./src/2d/filter/blur/BlurXFilter.ts","webpack://FYGE/./src/2d/filter/blur/generateBlurVertSource.ts","webpack://FYGE/./src/2d/filter/blur/generateBlurFragSource.ts","webpack://FYGE/./src/2d/filter/blur/getMaxBlurKernelSize.ts","webpack://FYGE/./src/2d/filter/blur/BlurYFilter.ts","webpack://FYGE/./src/2d/texture/TextureMatrix.ts","webpack://FYGE/./src/2d/graphics/Graphics.ts","webpack://FYGE/./src/2d/texture/RenderTexture.ts","webpack://FYGE/./src/2d/texture/BaseRenderTexture.ts","webpack://FYGE/./src/2d/graphics/shapes/index.ts","webpack://FYGE/./src/2d/graphics/geomBuild/earcut.ts","webpack://FYGE/./src/2d/graphics/styles/FillStyle.ts","webpack://FYGE/./src/2d/mesh/index.ts","webpack://FYGE/./src/2d/mesh/Plane.ts","webpack://FYGE/./src/tween/Tween.ts","webpack://FYGE/./src/2d/ui/ScrollPage.ts","webpack://FYGE/./src/2d/ui/forLottie/BezierEaser.ts","webpack://FYGE/./src/3d/math/Euler.ts","webpack://FYGE/./src/3d/math/Ray.ts","webpack://FYGE/./src/3d/Scene3D.ts","webpack://FYGE/./src/3d/materials/LightMaterial.ts","webpack://FYGE/./src/3d/animation/utils.ts","webpack://FYGE/./src/3d/animation/AnimationTrack3D.ts","webpack://FYGE/./src/3d/bones/Skeleton3D.ts","webpack://FYGE/./src/3d/bones/Bone3D.ts","webpack://FYGE/./src/2d/AnimationClip.ts","webpack://FYGE/./src/2d/AnimationManager.ts","webpack://FYGE/./src/spine/Spine.ts","webpack://FYGE/./src/spine/loadAtlas.ts","webpack://FYGE/./src/index.ts","webpack://FYGE/./src/2d/math/Transform.ts","webpack://FYGE/./src/2d/utils/mapPremultipliedBlendModes.ts","webpack://FYGE/./src/2d/utils/twiddle.ts","webpack://FYGE/./src/2d/utils/toDisplayDataURL.ts","webpack://FYGE/./src/2d/renderers/managers/CanvasMaskManager.ts","webpack://FYGE/./src/2d/renderers/plugins/CanvasSpriteRenderer.ts","webpack://FYGE/./src/2d/renderers/renderTarget/CanvasRenderTarget.ts","webpack://FYGE/./src/2d/renderers/plugins/CanvasMeshRenderer.ts","webpack://FYGE/./src/2d/utils/getTintedTexture.ts","webpack://FYGE/./src/2d/utils/mapWebGLBlendModes.ts","webpack://FYGE/./src/2d/utils/mapCanvasBlendModes.ts","webpack://FYGE/./src/2d/loader/Loader.ts","webpack://FYGE/./src/2d/texture/TextureUvs.ts","webpack://FYGE/./src/2d/display/Stage.ts","webpack://FYGE/./src/2d/renderers/plugins/BatchRenderer.ts","webpack://FYGE/./src/2d/renderers/webgl/BatchDrawCall.ts","webpack://FYGE/./src/2d/renderers/webgl/generateMultiTextureShader.ts","webpack://FYGE/./src/glCore/GLBuffer.ts","webpack://FYGE/./src/glCore/VertexArrayObject.ts","webpack://FYGE/./src/glCore/setVertexAttribArrays.ts","webpack://FYGE/./src/glCore/GLFramebuffer.ts","webpack://FYGE/./src/glCore/GLShader.ts","webpack://FYGE/./src/2d/renderers/managers/TextureManager.ts","webpack://FYGE/./src/2d/renderers/managers/TextureGarbageCollector.ts","webpack://FYGE/./src/2d/renderers/webgl/WebGLState.ts","webpack://FYGE/./src/2d/renderers/managers/BatchManager.ts","webpack://FYGE/./src/2d/renderers/managers/MaskManager.ts","webpack://FYGE/./src/2d/filter/extractUniformsFromSrc.ts","webpack://FYGE/./src/2d/filter/fxaa/FXAAFilter.ts","webpack://FYGE/./src/2d/filter/noise/NoiseFilter.ts","webpack://FYGE/./src/2d/filter/displacement/DisplacementFilter.ts","webpack://FYGE/./src/2d/filter/blur/BlurFilter.ts","webpack://FYGE/./src/2d/filter/colormatrix/ColorMatrixFilter.ts","webpack://FYGE/./src/2d/filter/alpha/AlphaFilter.ts","webpack://FYGE/./src/2d/filter/spriteMask/SpriteMaskFilter.ts","webpack://FYGE/./src/2d/filter/blur/BlurFilterNew.ts","webpack://FYGE/./src/2d/filter/advanced-bloom/AdvancedBloomFilter.ts","webpack://FYGE/./src/2d/filter/advanced-bloom/ExtractBrightnessFilter.ts","webpack://FYGE/./src/2d/filter/kawase-blur/KawaseBlurFilter.ts","webpack://FYGE/./src/2d/renderers/managers/StencilManager.ts","webpack://FYGE/./src/2d/renderers/managers/FilterManager.ts","webpack://FYGE/./src/2d/renderers/webgl/Quad.ts","webpack://FYGE/./src/2d/renderers/webgl/createIndicesForQuads.ts","webpack://FYGE/./src/2d/filter/filterTransforms.ts","webpack://FYGE/./src/2d/events/GDispatcher.ts","webpack://FYGE/./src/2d/graphics/GraphicsData.ts","webpack://FYGE/./src/2d/graphics/shapes/Circle.ts","webpack://FYGE/./src/2d/graphics/shapes/Ellipse.ts","webpack://FYGE/./src/2d/graphics/shapes/Polygon.ts","webpack://FYGE/./src/2d/graphics/shapes/RoundedRectangle.ts","webpack://FYGE/./src/2d/graphics/geomBuild/buildPoly.ts","webpack://FYGE/./src/2d/graphics/geomBuild/buildCircle.ts","webpack://FYGE/./src/2d/graphics/geomBuild/buildRectangle.ts","webpack://FYGE/./src/2d/graphics/geomBuild/buildRoundedRectangle.ts","webpack://FYGE/./src/2d/graphics/geomBuild/buildLine.ts","webpack://FYGE/./src/2d/graphics/styles/LineStyle.ts","webpack://FYGE/./src/2d/graphics/utils/index.ts","webpack://FYGE/./src/2d/graphics/utils/bezierCurveTo.ts","webpack://FYGE/./src/2d/graphics/utils/bezierCurveControlPoint.ts","webpack://FYGE/./src/2d/graphics/Shape.ts","webpack://FYGE/./src/2d/mesh/NineSlicePlane.ts","webpack://FYGE/./src/2d/mesh/Rope.ts","webpack://FYGE/./src/2d/text/index.ts","webpack://FYGE/./src/2d/text/EditableText.ts","webpack://FYGE/./src/2d/text/InputText.ts","webpack://FYGE/./src/2d/text/BitmapText.ts","webpack://FYGE/./src/2d/texture/createTextureSheet.ts","webpack://FYGE/./src/2d/ui/index.ts","webpack://FYGE/./src/2d/ui/Button.ts","webpack://FYGE/./src/2d/ui/FrameAni.ts","webpack://FYGE/./src/tween/Ease.ts","webpack://FYGE/./src/2d/ui/ScrollList.ts","webpack://FYGE/./src/2d/ui/ShowWord.ts","webpack://FYGE/./src/2d/ui/MovieClip.ts","webpack://FYGE/./src/2d/ui/Lottie.ts","webpack://FYGE/./src/2d/ui/forLottie/buildBezierProps.ts","webpack://FYGE/./src/2d/ui/forLottie/buildBezierEaserProps.ts","webpack://FYGE/./src/3d/cameras/Camera.ts","webpack://FYGE/./src/3d/Raycaster.ts","webpack://FYGE/./src/3d/geometries/index.ts","webpack://FYGE/./src/3d/geometries/SphereGeometry.ts","webpack://FYGE/./src/3d/geometries/BoxGeometry.ts","webpack://FYGE/./src/3d/geometries/PlaneGeometry.ts","webpack://FYGE/./src/3d/geometries/CircleGeometry.ts","webpack://FYGE/./src/3d/geometries/CylinderGeometry.ts","webpack://FYGE/./src/3d/geometries/RingGeometry.ts","webpack://FYGE/./src/3d/geometries/TorusGeometry.ts","webpack://FYGE/./src/3d/materials/Sprite3dMaterial.ts","webpack://FYGE/./src/3d/lights/index.ts","webpack://FYGE/./src/3d/lights/AmbientLight.ts","webpack://FYGE/./src/3d/lights/DirectionalLight.ts","webpack://FYGE/./src/3d/lights/PointLight.ts","webpack://FYGE/./src/3d/helpers/index.ts","webpack://FYGE/./src/3d/helpers/AxesHelper.ts","webpack://FYGE/./src/3d/helpers/GridHelper.ts","webpack://FYGE/./src/3d/helpers/Box3Helper.ts","webpack://FYGE/./src/3d/D3Renderer.ts","webpack://FYGE/./src/3d/shaders/getCusShader.ts","webpack://FYGE/./src/glCore/shader/index.ts","webpack://FYGE/./src/3d/shaders/ShadowShader.ts","webpack://FYGE/./src/3d/gltf/index.ts","webpack://FYGE/./src/3d/gltf/GLTFLoader.ts","webpack://FYGE/./src/3d/bones/SkinnedMesh3D.ts","webpack://FYGE/./src/3d/animation/index.ts","webpack://FYGE/./src/3d/d3Objects/index.ts","webpack://FYGE/./src/3d/d3Objects/Sprite3D.ts","webpack://FYGE/./src/spine/index.ts","webpack://FYGE/./src/spine/Bone.ts","webpack://FYGE/./src/spine/Slot.ts","webpack://FYGE/./src/spine/Skin.ts","webpack://FYGE/./src/spine/attachment/RegionAttachment.ts","webpack://FYGE/./src/spine/attachment/MeshAttachment.ts","webpack://FYGE/./src/spine/animation/SpineBoneAniTrack.ts","webpack://FYGE/./src/spine/animation/SpineColorAniTrack.ts","webpack://FYGE/./src/spine/animation/SpineDeformAniTrack.ts","webpack://FYGE/./src/spine/animation/AttachmentAniTrack.ts","webpack://FYGE/./src/spine/animation/DrawOrderAniTrack.ts","webpack://FYGE/./src/spine/SpineAniManager.ts","webpack://FYGE/./src/spine/loadSpine.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VERSION","osType","navigator","userAgent","toLocaleLowerCase","test","my","getSystemInfoSync","platform","toLowerCase","PI","Math","HalfPI","PacPI","angle","cos","sin","PI_2","RAD_TO_DEG","DEG_TO_RAD","RENDERER_TYPE","SHAPES","PRECISION","TEXT_GRADIENT","TEXT_ALIGN","VERTICAL_ALIGN","TEXT_lINETYPE","LINE_ALIGNMENT","LINE_CAP","LINE_JOIN","BLEND_MODES","DRAW_MODES","SCALE_MODES","WRAP_MODES","GC_MODES","default","premultiplyBlendMode","mapPremultipliedBlendModes","backupCanvasCtx","nextUid","getBackupCanvasCtx","canvas","createCanvas","width","height","getContext","getRGBA","color","alpha","indexOf","replace","length","parseInt","substr","g","b","points","colors","colorObj","ctx","createLinearGradient","createRadialGradient","addColorStop","image","createPattern","hex","out","toString","string","rgb","DATA_URI","dataUri","dataUriMatch","exec","mediaType","undefined","subType","charset","encoding","data","webglSupported","URL_FILE_EXTENSION","url","extension","tint","R","G","B","TextureCache","BaseTextureCache","TextureSheetCache","destroy","GlobalPro","stageRenderType","dpi","padding","getEnv","contextOptions","stencil","failIfMajorPerformanceCaveat","gl","success","loseContext","e","arr","startIdx","removeCount","len","min","max","buff","bits","enc","Uint8Array","byteLength","offset","charAt","array","TextDecoder","decode","il","String","fromCharCode","decodeURIComponent","escape","Matrix","Point","ObservablePoint","Rectangle","x","y","z","set","this","copy","v","clone","Vector3","add","addScalar","addVectors","a","addScaledVector","sub","subScalar","subVectors","multiplyScalar","scalar","multiplyVectors","divide","divideScalar","cross","crossVectors","ax","ay","az","bx","by","bz","dot","sqrt","lengthSq","normalize","distanceTo","distanceToSquared","dx","dy","dz","clamp","clampScalar","minVal","maxVal","clampLength","applyMatrix4","elements","w","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","index","fromArray","transformDirection","project","camera","worldMatrixInverse","projectionMatrix","unproject","Matrix4","setInverseOf","_worldMatrix","equals","toArray","_instanceId","_instanceType","HashObject","_object_id","SOURCE_KEY_MAP","vertexSrc","fragmentSrc","uniforms","Filter","defaultVertexSrc","defaultFragmentSrc","_blendMode","NORMAL","uniformData","type","glShaders","uid","glShaderKey","resolution","enabled","autoFit","apply","filterManager","input","output","clear","applyFilter","join","GLTexture","GLBuffer","VertexArrayObject","GLFramebuffer","GLShader","createContext","checkMaxIfStatementsInShader","defaultValue","vertices","indices","normals","uvs","_vertByteSize","boundingBox","boundingSphere","doHitFace","_glVaoBuffer","_vertices","_normals","Float32Array","_colors","map","_uvs","_indices","Uint16Array","_attrBuffer","BatchBuffer","computeBoundingBox","Box3","position","setFromArray","makeEmpty","isNaN","console","error","computeBoundingSphere","box","vector","Sphere","center","getCenter","maxRadiusSq","radius","Geometry","target","_pd","stopPropagation","reset","RESIZE","SCROLL_TO_HEAD","SCROLL_STOP","SCROLL_START","SCROLL_TO_END","INIT_STAGE","ADDED_TO_STAGE","REMOVED_FROM_STAGE","ENTER_FRAME","END_FRAME","CALL_FRAME","COMPLETE","PROGRESS","ERROR","ABORT","START","TIMER","TIMER_COMPLETE","Event","baseTexture","frame","orig","trim","rotate","anchor","noFrame","Texture","_frame","valid","_rotate","Number","hasLoaded","source","addEventListener","onBaseTextureUpdated","once","onBaseTextureLoaded","defaultAnchor","_updateID","transform","textureCacheIds","update","dispatchEvent","removeEventListener","removeFromCache","updateUvs","xNotFit","yNotFit","relationship","errorX","errorY","Error","fromUrl","texture","addToCache","fromCanvas","origin","fromData","fromImage","imageUrl","src","from","anything","id","push","warn","textureFromCache","splice","EventDispatcher","removeAllHandlers","tex","EMPTY","whiteSource","path","WHITE","setIdentity","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","matrix","me","concat","other","ai0","ai1","ai2","ai3","multiply","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyVector3","pos","transpose","inv","det","invert","setOrtho","left","right","top","bottom","near","far","rw","rh","rd","ortho","setFrustum","frustum","setPerspective","fovy","aspect","ct","makePerspective","perspective","setScale","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","setTranslate","translate","setRotate","rlen","nc","xy","yz","zx","xs","ys","zs","setLookAt","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","fx","fy","fz","rlf","rls","ux","uy","uz","lookAt","eye","up","abs","dropShadow","plane","light","mat","dropShadowDirectionally","normX","normY","normZ","planeX","planeY","planeZ","lightX","lightY","lightZ","makeRotationFromQuaternion","q","zero","one","compose","quaternion","x2","y2","z2","xx","xz","yy","zz","wx","wy","wz","decompose","determinant","invSX","invSY","invSZ","setFromRotationMatrix","extractRotation","v1","scaleX","scaleY","scaleZ","mouseChildren","children","onChildrenChange","addChild","child","addChildAt","addChildren","forEach","sameParent","parent","removeChild","_parentID","_boundsID","unshift","stage","_onDispatchBubbledEvent","swapChildren","child1","child2","id1","id2","childCount","getChildIndex","temp","setChildIndex","getChildAt","getChildByName","isOnlyOne","isRecursive","rex","RegExp","Container","_getElementsByName","removeChildAt","pop","shift","removeChildren","spliceChildren","removeAllChildren","removeChildrenAt","beginIndex","endIndex","begin","end","range","RangeError","count","removed","updateTransform","j","visible","calculateBounds","_lastBoundsID","_bounds","_calculateBounds","renderable","mask","createFromRects","filterArea","hitTestPoint","globalPoint","isMouseEvent","hitDisplayObject","isUsedToMask","renderWebGL","renderer","_worldAlpha","filters","renderAdvancedWebGL","_renderWebGL","batchManager","flush","_enabledFilters","pushFilter","maskManager","pushMask","popMask","popFilter","renderCanvas","_renderCanvas","getLocalBounds","_width","_height","resultList","DisplayObject","containerUpdateTransform","eventTypes","eventTypes1","getMouseEventCount","item","_MECO","listener","context","useCapture","ee","fn","log","EE","_changeMouseCount","isAdd","_totalMEC","event","_defaultEvent","listeners","hasEventListener","removeAllEventListenerByType","thisObject","removeAllEventListener","defaultVert","defaultFilterMatrix","tempVector3","mouseEnable","castShadow","receiveShadow","_localMatrix","Object3D","DefaultUp","rotation","Euler","Quaternion","onChange","setFromEuler","setFromQuaternion","scene","recursive","q1","m1","updateWorldMatrix","inverse","applyMatrix","applyQuaternion","localToGlobal","globalToLocal","viewWidth","viewHeight","round","viewX","viewY","updateLocalMatrix","updateParents","updateChildren","render","_render","raycast","raycaster","intersects","frameCount","curves","Curve","BEZIER_SIZE","getFrameCount","setLinear","frameIndex","LINEAR","setStepped","STEPPED","getCurveType","BEZIER","setCurve","cx1","cy1","cx2","cy2","tmpx","tmpy","dddfx","dddfy","ddfx","ddfy","dfx","dfy","getCurvePercent","percent","start","prevX","prevY","curve","curveArr","c2","c3","c4","MixBlend","MixDirection","values","step","low","high","current","sourceStart","dest","destStart","numElements","size","oldSize","Array","templeSphere","tempMatrix","tempRay","Ray","tempPoint","geometry","material","updateMorphTargets","_morphTargetInfluences","setObjectRenderer","plugins","morphPositions","_morphPositions","wireframe","matrixWorld","ray","intersectsSphere","intersectsBox","intersection","i1","i2","i3","checkIntersection","distance","morphTargetInfluences","slice","Mesh3D","intersectionPointWorld","pA","pB","pC","point","side","RenderSideType","BackSide","intersectTriangle","DoubleSide","tempDisplayObjectParent","Transform","_alpha","_filters","_localBoundsSelf","_mask","destroyed","isPointIn","_bp","_recursivePostUpdateTransform","_tempDisplayObjectParent","getBounds","skipUpdate","rect","temBounds","transformRef","parentRef","bounds","bp","worldMatrix","transformPointInverse","wp","transformPoint","setParent","container","setTransform","skewX","skewY","anchorX","anchorY","skew","localMatrix","_p1","_p2","_p3","_p4","displayObjectUpdateTransform","displayObjectHitTestPoint","_anchorTexture","_onAnchorUpdate","_texture","_tint","_tintRGB","_cachedTint","_vertexData","_vertexTrimmedData","_transformID","_textureID","_transformTrimmedID","_textureTrimmedID","pluginName","_onTextureUpdate","uvsFloat32","sign","updateLocalBoundsSelf","anchorTexture","calculateVertices","_worldID","wt","tx","ty","vertexData","w0","w1","h0","h1","_x","_y","calculateTrimmedVertices","createFromVertexData","Sprite","fromFrame","frameId","Vector2","applyMatrix3","manhattanLength","atan2","manhattanDistanceTo","setLength","lerp","lerpVectors","v2","contentByCanvas","env","document","createElement","_createOffscreenCanvas","createImage","requestAnimationFrame","cancelAnimationFrame","Image","clientX","clientY","stageX","stageY","localX","localY","currentTarget","identifier","updateAfterEvent","_cp","MOUSE_DOWN","MOUSE_UP","CLICK","MOUSE_MOVE","MOUSE_OVER","MOUSE_OUT","MouseEvent","EnvBlendType","parameters","_color","_colorArr","combine","ENVMAP_BLENDING_MULTIPLY","reflectivity","morphTargets","morphNormals","skinning","useVertexColor","FrontSide","useFog","_lightAffect","hex2rgb","BaseMaterial","setFromPoints","optionalCenter","sphere","empty","containsPoint","distanceToPoint","radiusSum","clampPoint","deltaLengthSq","getBoundingBox","expandByScalar","setValue","time","blend","direction","in","resetValue","BaseTrack","args","CANVAS","rootContext","sprite","graphics","CanvasGraphicsRenderer","mesh","CanvasMeshRenderer","blendModes","mapCanvasBlendModes","_activeBlendMode","_outerBlend","resize","displayObject","renderTexture","renderingToScreen","_canvasRenderTarget","_lastObjectRendered","cacheParent","tempWt","identity","save","globalAlpha","globalCompositeOperation","transparent","clearRect","fillStyle","_backgroundColorString","fillRect","restore","setBlendMode","blendMode","readyForOuterBlend","outerBlend","SRC_IN","SRC_OUT","DST_IN","DST_ATOP","destroyPlugins","SystemRenderer","CanvasRenderer","scaleMode","_touchedId","_isLoading","imageType","premultipliedAlpha","isPowerOfTwo","mipmap","wrapMode","CLAMP","_glTextures","_enabledId","_sourceChange","complete","self","onload","isPow2","dispose","BaseTexture","GlobalLoader","loadImage","res","baseTextureFromCache","tempPolygon","Polygon","_vertexDirty","_vertexId","_localBoundsSelfId","canvasPadding","_uvTransform","_needRefresh","refresh","multiplyUvs","forceUpdate","_refresh","createFromPoints","hitTestPointAccuratly","ind0","ind1","ind2","Mesh","_textAlpha","_textAlign","LEFT","_verticalAlign","UP","_textWidth","_textHeight","_lineSpacing","_lineType","SINGLE","_text","_font","_size","_fillColor","_strokeColor","_stroke","_italic","_bold","_border","realLines","dirty","updateText","_prepContext","font","textAlign","textBaseline","getTextWidth","lineIndex","measureText","_getMeasuredWidth","text","patternCh","patternChB","str","can","hardLines","split","textWidth","lineType","lineW","lineStr","wordW","strLen","trueHeight","maxH","maxW","CENTER","RIGHT","canWidth","canHeight","border","beginPath","strokeStyle","lineWidth","strokeRect","closePath","lineH","MIDDLE","DOWN","stroke","strokeColor","strokeText","fillText","offsetX","offsetY","TextField","setFromUnitVectors","vFrom","vTo","_z","_w","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","x1","y1","z1","dir","sqrSin","tDir","f","onChangeCallback","euler","order","c1","s1","s2","s3","setFromAxisAngle","axis","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","angleTo","acos","rotateTowards","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","intensity","_colorVec3","Light","setFromColor","setFromString","fromString","SpineColor","RED","GREEN","BLUE","MAGENTA","prepend","mtx","a1","tx1","setFrom","k","createBox","u","append","b1","d1","isEqual","m2","ma","mb","mc","md","mx","getRotation","delta","CONTEXT_UID","WEBGL","_backgroundColorRgba","stencilManager","textureManager","initPlugins","WebglRenderer","__plugins","state","_activeShader","_activeVao","_activeRenderTarget","_initContext","isContextLost","getExtension","restoreContext","textureGC","resetToDefault","rootRenderTarget","clearColor","bindRenderTarget","bindRenderTexture","currentRenderer","clearRenderTexture","renderTarget","_glRenderTargets","bindShader","shader","autoProject","createVao","attribState","bindVao","vao","force","unbind","boundTextures","emptyTextures","activate","updateTexture","unbindTexture","setFrame","setMaskStack","stencilMaskStack","screenWidth","screenHeight","handleContextLost","handleContextRestored","removeAll","preventDefault","staticMap","registerPlugin","ctor","onContextChange","stop","GL_TABLE","typeNames","keys","GL_TO_GLSL_TYPES","tn","Int32Array","booleanArray","frameBuffer","defaultFrame","destinationFrame","sourceFrame","stencilBuffer","filterData","filterPoolKey","framebuffer","createRGBA","NEAREST","enableNearestScaling","enableLinearScaling","cc","attachStencilBuffer","enableStencil","calculateProjection","enable","SCISSOR_TEST","scissor","disable","viewport","pm","projectionFrame","Infinity","isEmpty","getSize","minX","minY","minZ","maxX","maxY","maxZ","setFromCenterAndSize","halfSize","expandByPoint","setFromObject","expandByObject","expandByVector","scope","traverse","node","containsBox","closestPoint","getBoundingSphere","intersect","union","fov","zoom","focus","updateProjectionMatrix","projectionMatrixInverse","Camera","PerspectiveCamera","defaultVertexShader3d","defaultFragmentShader3d","vertexShader","fragmentShader","shaders","isShaderMaterial","getShader","instanceId","ShaderMaterial","UniformType","Attachment","VertexAttachment","nextID","worldVerticesLength","deformAttachment","applyDeform","sourceAttachment","computeWorldVerticesOld","slot","worldVertices","skeletonBones","computeWorldVertices","stride","deformArray","deform","bones","skip","vx","vy","weight","bone","cb","RECT","fit","rectangle","pad","paddingX","paddingY","arg","h","wx1","wx2","hy1","hy2","temP","createRectfrom2Point","p1","p2","testRectCross","ra","rb","a_cx","a_cy","b_cx","b_cy","tempMatrices","mul","signum","row","_ux","_uy","_vx","_vy","init","GroupD8","E","SE","S","SW","W","NW","N","NE","MIRROR_VERTICAL","MIRROR_HORIZONTAL","uX","ind","uY","vX","vY","rotationSecond","rotationFirst","rotate180","isVertical","byDirection","matrixAppendRotationInv","htmlElement","_isAdded","style","display","insertBefore","childNodes","body","appendChild","she","getElementById","media","removeHtmlElement","transformOrigin","WebkitTransformOrigin","ws","getStyle","hs","elem","cssName","defaultView","getComputedStyle","getPropertyValue","updateStyle","show","webkitTransform","toFixed","opacity","parentNode","FloatDisplay","graphicsData","shape","lineStyle","fillColor","lineColor","ccw","POLY","moveTo","lineTo","judgeCcw","holes","CIRC","arc","ELIP","ox","oy","xe","ye","xm","ym","bezierCurveTo","RREC","rx","ry","maxRadius","quadraticCurveTo","holePath","fill","closed","sum","_backgroundColor","backgroundColor","UNKNOWN","hex2string","result","createColoredCanvas","magenta","yellow","drawImage","imageData","getImageData","fragTemplate","generateIfTestSrc","maxIfs","createTempContext","tinyCanvas","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","options","ArrayBuffer","float32View","uint32View","Uint32Array","positions","format","uploadData","FLOATING_POINT_AVAILABLE","FLOAT","UNSIGNED_BYTE","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","texImage2D","TEXTURE_2D","texSubImage2D","createTexture","RGBA","upload","newWidth","videoWidth","newHeight","videoHeight","location","activeTexture","TEXTURE0","bindTexture","minFilter","linear","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","magFilter","TEXTURE_MAG_FILTER","enableMipmap","generateMipmap","enableWrapClamp","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enableWrapRepeat","REPEAT","enableWrapMirrorRepeat","MIRRORED_REPEAT","deleteTexture","fromSource","attributeLocations","glVertShader","VERTEX_SHADER","glFragShader","program","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","getShaderInfoLog","attributes","totalAttributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","mapType","mapSize","getAttribLocation","pointer","normalized","vertexAttribPointer","GLSL_TO_SIZE","totalUniforms","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","precision","substring","uniformKeys","fullName","nameTokens","uniformGroup","getUniformGroup","uniform","generateGetter","generateSetter","GLSL_SINGLE_SETTERS","float","uniform1f","vec2","uniform2f","vec3","uniform3f","vec4","uniform4f","int","uniform1i","ivec2","uniform2i","ivec3","uniform3i","ivec4","uniform4i","bool","bvec2","bvec3","bvec4","mat2","uniformMatrix2fv","mat3","uniformMatrix3fv","mat4","uniformMatrix4fv","sampler2D","GLSL_ARRAY_SETTERS","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform2iv","uniform3iv","uniform4iv","cur","strength","quality","kernelSize","vertSrc","fragSrc","_quality","firstRun","passes","getRenderTarget","flip","flop","returnRenderTarget","vertTemplate","template","halfLength","ceil","vertSource","blurLoop","GAUSSIAN_VALUES","5","7","9","11","13","15","kernel","fragSource","maxVaryings","getParameter","MAX_VARYING_VECTORS","tempMat","clampMargin","mapCoord","uClampFrame","uClampOffset","_lastTextureID","clampOffset","x3","y3","texBase","margin","canvasRenderer","GEOBATCH_POOL","fillCommands","batchTint","hitTestByPixel","cacheAsBitmap","_fillStyle","_lineStyle","_matrix","_holeMode","_currentPath","boundsPadding","boundsDirty","cacheDirty","verts","batches","geoBatches","batchDirty","shapeIndex","Graphics","alignment","native","lineTextureStyle","startPoly","drawShape","finishPoly","fromX","fromY","_initCurve","cpX","cpY","toX","toY","xa","ya","GRAPHICS_CURVES","segmentsCount","quadraticCurveLength","cpX2","cpY2","bezierCurveLength","arcTo","a2","b2","mm","dd","tt","k1","k2","j1","j2","cx","cy","px","py","qx","qy","startAngle","endAngle","anticlockwise","sweep","startX","startY","xDiff","yDiff","segs","theta","theta2","cTheta","sTheta","segMinus","remainder","beginFill","string2hex","beginTextureFill","alphaBlock","endFill","endStroke","close","beginHole","endHole","drawRect","drawRoundedRect","RoundedRectangle","drawCircle","Circle","drawEllipse","Ellipse","drawPolygon","isArray","arguments","drawStar","innerRadius","polygon","batch","attribStart","isFastRect","updateBatch","calculateTints","graAlpha","batchPart","geoBatchPart","currentTexture","currentColor","command","build","transformPoints","nextTexture","attribIndex","attribSize","proccessHoles","triangulate","addUvs","attrib","indicesUint16","gI","buffer","_batchRGB","tintRGB","tempMask","tempAlpha","tempChildren","generateCanvasTexture","IDENTITY","_canvasBuffer","hole","uvsStart","nx","adjustUvs","eps","finish","floor","baseRenderTexture","doNotResizeBaseTexture","RenderTexture","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","list","queue","steiner","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hx","hy","tan","tanMin","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q2","Node","an","polygonArea","trianglesArea","dimensions","holeIndex","obj","FillStyle","verticesX","verticesY","total","segmentsX","segmentsY","sizeX","sizeY","calculatePlaneIndices","totalSub","xpos","ypos","value2","value3","value4","Plane","props","pluginData","_target","_useTicks","ignoreGlobalPause","loop","_steps","paused","duration","_prevPos","_prevPosition","_stepPosition","passive","initialize","override","Tween","removeTweens","tween_count","tweens","_tweens","removeTweenSelf","tween","pauseTweens","resumeTweens","tick","timeStamp","_lastTime","$tick","Date","now","_register","_inited","removeAllTweens","useTicks","onChangeObj","_curQueueProps","_initQueueProps","setPosition","NONE","actionsMode","newTime","setPaused","prevPos","stepIndex","_runAction","_updateTargetProps","action","startPos","endPos","includeStart","sPos","ePos","ratio","p0","v0","ignore","_plugins","IGNORE","_cloneProps","_addStep","_appendQueueProps","oldValue","injectProps","_addAction","_set","wait","to","ease","thisObj","params","play","pause","LOOP","REVERSE","vW","vH","maxDistance","isFull","_tweenId","minDis","maskObj","view","lastValue","speed","addSpeed","isStop","maxSpeed","fSpeed","paramXY","stopTimes","isMouseDownState","autoScroll","isSpringBack","setViewRect","onMouseEvent","tarP","currentValue","speedPer","scrollTo","dis","newDis","ScrollPage","getBezierEasing","beziers","float32ArraySupported","A","aA1","aA2","C","calcBezier","aT","getSlope","BezierEasing","_p","_mSampleValues","_precomputed","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","nm","bezEasing","RotationOrders","_order","XYZ","reorder","newOrder","asin","setFromVector3","toVector3","optionalResult","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","intersectSphere","tca","d2","radius2","thc","t0","t1","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","backfaceCulling","diff","edge1","edge2","normal","DdN","DdQxE2","DdE1xQ","QdN","matrix4","_viewId","_viewX","_viewY","_viewWidth","_viewHeight","Raycaster","_parentId","setFog","_fog","removeFog","plugin","lightsConfig","getLightConfig","fog","setViewport","pt","_viewport","con","pointLights","directionalLights","ambientLightColor","viewMatrix","colorVec3","instanceType","decay","setFromCamera","intersectObject","setOrbCtrCfg","cfg","orbitControlConfig","setOrbitControl","enableDamping","dampingFactor","userZoom","userZoomSpeed","userRotate","userRotateSpeed","autoRotate","autoRotateSpeed","minPolarAngle","maxPolarAngle","minDistance","enablePitch","rotateStart","rotateEnd","rotateDelta","phiDelta","thetaDelta","fingles","deltaDis","f1","f2","pow","rotateLeft","getAutoRotationAngle","oneF","twoF","cDelta","zoomOut","zoomIn","phi","getZoomScale","zoomScale","Scene3D","LightMaterial","isTypedArray","isView","DataView","constructor","subarray","forceClone","BYTES_PER_ELEMENT","jsonKeys","times","valuePropertyName","nValues","srcOffset","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","AnimationType3D","animationType","getValue","getValueSize","findPreIndex","quaternionLinearInterpolate","linearInterpolate","lastIndex","AnimationTrack3D","offsetMatrix","identityMatrix","boneInverses","boneMatrices","calculateInverses","pose","boneTexture","Skeleton3D","getBoneByName","Bone3D","tracks","totalTime","_isPlaying","_isFront","lastTime","curTime","_endMark","_totalTime","rectify","isFront","gotoAndPlay","gotoAndStop","startAniRange","beginTime","endTime","loops","startAniRangeFun","loopCount","resetState","AnimationClip","animationClips","getAniClipByName","showAni","clip","currentClip","deltaTime","AnimationManager","SkinType","tempRgb","textures","showBones","boneContainer","Bone","pb","findBone","slots","slotContainer","Slot","drawOrder","skins","skinName","attachments","skinMap","skin","Skin","slotName","slotIndex","findSlotIndex","slotMap","entryName","attachment","readAttachment","addAttachment","defaultSkin","animations","aniName","aboneName","boneAniData","boneAniName","boneTrack","SpineBoneAniTrack","AttachmentAniTrack","SpineColorAniTrack","deformName","deformMap","findSkin","timelineName","timelineMap","getAttachment","deformTrack","SpineDeformAniTrack","frameTimes","drawOrderNode","dat","DrawOrderAniTrack","offsets","slotCount","newArray","unchanged","originalIndex","unchangedIndex","offsetMap","SpineAniClip","animationManager","SpineAniManager","setAttachment","RegionAttachment","spriteName","createSprite","currentSprite","currentSpriteName","MeshAttachment","createMesh","currentMesh","currentMeshName","sortBone","sorted","orderCalculations","findSlot","attachmentName","updateSlots","updateDrawOrder","attColor","sprites","_localID","rgb2hex","meshName","meshes","skeletonData","region","readVertices","regionUVs","hullLength","hull","verticesLength","weights","boneCount","nn","scaledVertices","defName","strip","Spine","setSkin","addSkin","resetSkin","setToSetupPose","name_1","am","createTexturesByAtlas","altaData","reader","AtlasReader","tuple","json","line","readLine","readValue","readTuple","sw","sh","onLoad","onError","imgUrl","Promise","all","tbLoad","loadRawWeb","then","results","lines","colon","lastMatch","comma","updateSkew","_rotation","_cx","_sx","_cy","_sy","_currentLocalID","lt","parentTransform","npm","NORMAL_NPM","ADD_NPM","ADD","SCREEN_NPM","SCREEN","countTrailingZeros","INT_BITS1","INT_MAX","INT_MIN","REVERSE_TABLE","tab","_dCanvas","_dRender","typeInfo","bgColor","toDataURL","maskData","renderGraphicsShape","canvasRenderWorldTransform","cachedTint","tintedTexture","tintId","getTintedTexture","val","_renderTriangles","index0","index1","index2","_renderDrawTriangle","base","textureSource","textureWidth","textureHeight","u0","u1","u2","dist","deltaA","deltaB","deltaC","deltaD","deltaE","deltaF","defaultCanvas","tintMethod","canUseNewCanvasBlendModes","crop","rgbValues","pixelData","pixels","putImageData","stringColor","cacheStepsPerColorChannel","roundColor","cachedTexture","ONE","ONE_MINUS_SRC_ALPHA","DST_ALPHA","MULTIPLY","DST_COLOR","ONE_MINUS_SRC_COLOR","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","SRC_ALPHA","SRC_OVER","ZERO","ONE_MINUS_DST_ALPHA","SRC_ATOP","DST_OVER","DST_OUT","ERASE","SUBTRACT","FUNC_REVERSE_SUBTRACT","FUNC_ADD","caches","loadSheet","pngFile","lastIndexOf","suc","cache","img","loadJson","JSON","parse","loadAB","_req","XMLHttpRequest","alert","open","responseType","send","onreadystatechange","readyState","status","response","onerror","reason","encodeURI","crossOrigin","loadAudio","innerAudioContext","createInnerAudioContext","onCanplay","getTbTempUrl","downloadReadFile","getApp","file","getTempFileURL","fileId","urls","catch","err","tbMy","downloadFile","apFilePath","getFileSystemManager","readFile","filePath","fail","Loader","uvsUint32","baseFrame","tw","th","w2","h2","cX","cY","desWidth","desHeight","divWidth","divHeight","renderType","stageCenter","fixedHeight","renderObj","viewRect","_bgColor","_lastDpList","canvasOffsetTb","_ml","_mp","_mouseDownPoint","_mouseEventTypes","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","touchStart","touchMove","touchEnd","Stage","_stageList","isWebGLSupported","antialias","_dpi","_stageCenter","_scaleMode","_setAlign","setTimeout","getStage","stageName","clientWidth","clientHeight","_initMouseEvent","cp","sp","events","lp","eLen","changedTouches","doc","documentElement","getBoundingClientRect","pageXOffset","clientLeft","pageYOffset","clientTop","pageX","pageY","displayList","reverse","len1","len2","isDiff","overEvent","outEvent","TICK","vertSize","vertByteSize","currentSize","currentIndexSize","aBuffers","iBuffers","currentIndex","groups","vertexBuffers","indexBuffers","vaos","vaoMax","vertexCount","onPreRender","MAX_TEXTURES","MAX_TEXTURE_IMAGE_UNITS","generateMultiTextureShader","attrs","vertexBuffer","createVertexBuffer","STREAM_DRAW","indexBuffer","createIndexBuffer","addIndex","addAttribute","aVertexPosition","aTextureCoord","aColor","aTextureId","element","getIndexBuffer","roundedP2","nextPow2","roundedSizeIndex","log2","roundedSize","getAttributeBuffer","touch","indexCount","groupCount","textureCount","currentGroup","spriteBlendMode","_id","packGeometry","group","groupTextureCount","drawElements","UNSIGNED_SHORT","indicies","textureId","argb","premultiplyTint","TRIANGLES","maxTextures","generateSampleSrc","sampleValues","EMPTY_ARRAY_BUFFER","drawType","deleteBuffer","createBuffer","ARRAY_BUFFER","STATIC_DRAW","dontBind","bufferSubData","bufferData","bindBuffer","ELEMENT_ARRAY_BUFFER","nativeVaoExtension","FORCE_NATIVE","nativeState","nativeVao","createVertexArrayOES","maxAttribs","MAX_VERTEX_ATTRIBS","tempAttribState","bindVertexArrayOES","lastBuffer","attribute","setVertexAttribArrays","removeAttribute","onlyOne","draw","drawArrays","deleteVertexArrayOES","attribs","enableVertexAttribArray","disableVertexAttribArray","createFramebuffer","enableTexture","framebufferTexture2D","FRAMEBUFFER","COLOR_ATTACHMENT0","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","renderbufferStorage","DEPTH_STENCIL","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","bindFramebuffer","deleteFramebuffer","fbo","createFloat32","setPrecision","compileProgram","extractAttributes","extractUniforms","generateUniformAccessObject","useProgram","_nextTextureLocation","_managedTextures","emptyGLTexture","tempObj","forceLocation","glTexture","currentLocation","getTexture","isRenderTexture","destroyTexture","skipRemove","glTextures","glRenderTargets","removeItems","checkCount","maxIdle","checkCountMax","AUTO","MANUAL","run","tm","managedTextures","wasRemoved","unload","activeState","defaultState","mapWebGLBlendModes","setState","setBlend","setDepthTest","setFrontFace","setCullFace","BLEND","blendFunc","blendFuncSeparate","DEPTH_TEST","CULL_FACE","frontFace","resetAttributes","UNPACK_FLIP_Y_WEBGL","resetTo3D","emptyRenderer","objectRenderer","scissorData","scissorRenderTarget","enableScissor","alphaMaskPool","alphaMaskIndex","pushSpriteMask","pushStencilMask","popSpriteMask","popStencilMask","alphaMaskFilter","SpriteMaskFilter","maskSprite","cacheFilterArea","pushStencil","popStencil","pushScissorMask","popScissorMask","extractUniformsFromString","nameSplit","maskRegex","splitLine","match","vertUniforms","fragUniforms","fxaaFrag","noise","seed","random","uNoise","uSeed","maskMatrix","mapSampler","filterMatrix","calculateSpriteMatrix","blurXFilter","blurYFilter","blur","colorMatrix","_loadMatrix","newMatrix","_multiply","_colorMatrix","brightness","greyscale","blackAndWhite","hue","cosR","sinR","sqrW","contrast","amount","saturate","desaturate","negative","sepia","technicolor","polaroid","toBGR","kodachrome","browni","vintage","colorTone","desaturation","toned","lightColor","darkColor","lR","lG","lB","dR","dG","dB","night","predator","lsd","uAlpha","ColorMatrixFilter","grayscale","otherMatrix","maskClamp","blurFrag","_blur","fragment","threshold","bloomScale","kernels","pixelSize","_extractFilter","ExtractBrightnessFilter","_blurFilter","KawaseBlurFilter","brightTarget","bloomTarget","bloomTexture","_resolution","AdvancedBloomFilter","extractBrightnessFrag","fragmentClamp","uOffset","_pixelSize","_clamp","_kernels","uvX","uvY","tmp","_generateKernels","STENCIL_TEST","prevMaskCount","colorMask","stencilFunc","EQUAL","_getBitwiseMask","stencilOp","KEEP","INCR","_useCurrent","STENCIL_BUFFER_BIT","clearStencil","DECR","quad","shaderCache","pool","managedFilters","_screenWidth","_screenHeight","filterState","FilterState","stack","currentState","renderTargetFrame","targetBounds","getPotRenderTarget","lastState","freePotRenderTarget","filter","initVao","syncUniforms","filterClamp","calculateScreenSpaceMatrix","outputMatrix","filterTransforms","calculateNormalizedScreenSpaceMatrix","contextLost","emptyPool","minWidth","minHeight","interleaved","createIndicesForQuads","targetTextureFrame","totalIndices","textureSize","mappedMatrix","translateScaleX","translateScaleY","worldTransform","TEMP_MATRIX","GDispatcher","GraphicsData","r2","normx","normy","xi","yi","xj","yj","graphicsGeometry","holeArray","vertPos","circleData","totalSegs","seg","rectData","getPt","n1","n2","perc","quadraticBezierCurve","xb","yb","rrectData","vecPos","firstPoint","lastPoint","closedShape","closedPath","midPointX","midPointY","indexStart","p1x","p1y","p2x","p2y","p3x","p3y","perpx","perpy","perp2x","perp2y","perp3x","perp3y","r1","denom","buildLine","LineStyle","bezierCurveControlPoint","adaptive","maxLength","minSegments","maxSegments","defaultSegments","ba","t2","t3","nt","nt2","nt3","dt","dt2","dt3","returnBControl","returnAControl","_command","rTL","rTR","rBL","rBR","mTL","mTR","mBR","mBL","cp1X","cp1Y","cp2X","cp2Y","counterclockwise","sColor","_fill","beginGradientFill","getGradientColor","beginBitmapFill","_isBitmapFill","getCanvasBitmapStyle","beginStroke","cap","miter","BUTT","MITER","beginGradientStroke","beginBitmapStroke","_isBitmapStroke","updateShape","leftX","leftY","buttonRightX","buttonRightY","cLen","lastX","lastY","mid1X","mid1Y","mid2X","mid2Y","yuanPointX","yuanPointY","radio","yuanLeftX","yuanLeftY","yuanBRX","yuanBRY","_canvas","_drawShape","com","paramsLen","lx","ly","hitResult","changeColor","infoObj","Shape","indicesNN","leftWidth","topHeight","rightWidth","bottomHeight","_origWidth","_origHeight","_leftWidth","_rightWidth","_topHeight","_bottomHeight","updateHorizontalVertices","updateVerticalVertices","drawSegment","dw","dh","_uvw","_uvh","NineSlicePlane","refreshVertices","nextPoint","perpX","perpY","perpLength","num","autoUpdateVertices","Rope","_prompt","_promptColor","_textColor","remove","textColor","prompt","promptColor","initElement","textHeight","webkitTransformOrigin","outline","borderWidth","borderColor","placeholder","borderStyle","divParent","onblur","behavior","EditableText","inputType","isAutoDownKeyBoard","InputText","_inputTypeList","overflow","initInfo","align","lineHeight","showBorder","fontWeight","bold","ss","fontStyle","italic","getAttribute","setAttribute","convertToTextField","textField","MULTI","bitmapTextSinglePool","_gap","adaptate","BitmapTextSingle","temSum","BitmapText","frames","frameKeys","ro","tUp","tDown","tDisable","_clicked","textureUp","textureDown","textureDisable","initButton","changeTexture","textureStatusEnable","_mouseEvent","Button","texturesAll","showImage","currentFrame","onEnterFrame","frameRate","getCurrentFrame","_frameRate","allTime","isPlay","startTime","resetTexturesAll","FrameAni","getPowIn","getPowOut","getPowInOut","sineIn","sineOut","sineInOut","getBackIn","getBackOut","getBackInOut","circIn","circOut","circInOut","bounceIn","Ease","bounceOut","bounceInOut","getElasticIn","amplitude","period","pi2","getElasticOut","getElasticInOut","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","backIn","backOut","backInOut","elasticIn","elasticOut","elasticInOut","itemClassName","itemWidth","itemHeight","cols","_items","_isInit","downL","_lastFirstId","_updateId","_itemW","_itemH","_itemClass","_itemCount","_cols","_updateViewRect","flushData","updateData","isReset","_itemRow","wh","getWH","sli_id","initData","_disParam","_itemCol","newCount","setLoading","downLoading","ScrollList","playWords","spiltStrs","strs","spiltStr","ori","ShowWord","mv","lockStep","_curFrame","_lastFrame","commonDeltaTime","rawData","videoSize","timeInterval","FPS","startFrame","deltaFrame","images","imgTag","initChildren","ele","imageKey","setImage","imagekey","cs","newTexture","scaleCan","nextFrame","totalFrames","prevFrame","beginFrame","endFrame","updateFrame","isNeedUpdate","getCurFrameWhenLockStep","maskPath","updateMask","frameName","lastDeltaFrame","_transform","currentPoint","_d","segment","firstLetter","deepCopyFrames","cf","MovieClip","op","ip","fr","assets","layers","layer","refId","initState","ks","ad","addTweens","aa","bb","addTween","countTime","rr","objArr","curT","deltaT","getTweenObj","isSet","objArrC","ooo","calculateInterpolation","copyProps","timeOri","tweenArr","curIndex","getLoopInPingpongTween","getLoopInCycleTween","_recursivePostUpdateTransformAA","findChildByInd","layerData","mark","sObj","Lottie","lottieData","totalOp","addFrames","addFrame","fillUp","ti","nextF","fnc","buildBezierProps","buildBezierEaserProps","loopOut","propsClone","isCycle","isPingpong","stepOffset","stepAll","funLoop","front","after","returnEmpty","countFront","startValue","countAfter","endValue","recursiveUpdateTransform","findLayerByInd","transformDatas","createWorldMatrix","createLocalMatrix","fun","stringify","svgaData","videoEntity","findNearest","distanceInLine","bezierDataPoints","preLength","segmentPerc","partialLength","kLen","newValue","pt1","pt2","pt3","pt4","startIndex","limit","bezierData","bezierName","storedData","ptCoord","ptDistance","curveSegments","addedLength","pointOnLine2D","segmentLength","buildBezierData","det1","outV","inV","useH","outX","outY","inX","inY","keyValue","fncts","frameNum","matrixWorldInverse","getWorldDirection","coords","optionalTarget","ascSort","widthSegments","heightSegments","phiStart","phiLength","thetaStart","thetaLength","ix","iy","thetaEnd","grid","vertex","verticesRow","SphereGeometry","depth","depthSegments","numberOfVertices","buildPlane","udir","vdir","gridX","gridY","materialIndex","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","BoxGeometry","width_half","height_half","segment_width","segment_height","PlaneGeometry","segments","uv","CircleGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","CylinderGeometry","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","RingGeometry","tube","tubularSegments","TorusGeometry","vector2","sizeAttenuation","Sprite3dMaterial","AmbientLight","directionalLight","DirectionalLight","pointLight","PointLight","AxesHelper","divisions","color1","color2","colorArr1","colorArr2","GridHelper","Box3Helper","tempVec3","tempMatrix4","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","floatVertexTextures","curShader","pointLightNum","dirLightNum","geo","customShader","cusUniforms","vector3","vector4","maxBones","getMaxBones","getCusShader","uAmbientLightColor","envMap","colorArr","uNormalMatrix","normalMatrix","sMesh","bindMatrix","bindMatrixInverse","skeleton","LN2","boneTextureSize","glVaoBuffer","attrBuffer","morphTargetBuffers","_morphNormals","morphNormalBuffers","_skinWeight","skinWeightBuffer","_skinIndex","skinIndexBuffer","uploadBufferDatas","_glShaderKey","addMorphtargetsAttr","aPosition","aNormal","aSkinWeight","aSkinIndex","LINES","nVertexMatrices","D3Renderer","influencesList","attrChannelHash","morphInfluences","objectInfluences","influences","attrChannel","influence","absNumericalSort","attrLen","targetBuffer","normalBuffer","lights","useVertexTexture","cusShader","glUid","getMaxPrecision","pointLightsNum","dirLightsNum","lightAffect","useMap","useEnvMap","shaderKey","parameterNames","getShaderKey","cacheShaders","usedTimes","CusShader","maxPrecisionCache","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","frontVert","frontFrag","frag","FRAG","shaderReplaceStr","POINT_LIGHTS_NUM","DIR_LIGHTS_NUM","VERT","ShadowShader","BINARY_EXTENSION_CHUNK_TYPES","EXTENSIONS","WEBGL_CONSTANTS","WEBGL_COMPONENT_TYPES","5120","Int8Array","5121","5122","Int16Array","5123","5125","5126","WEBGL_TYPE_SIZES","PATH_PROPERTIES","translation","cloneBufferAttribute","isInterleavedBufferAttribute","itemSize","getX","getY","getZ","getW","BufferAttribute","meshDef","extras","targetNames","morphTargetDictionary","isObjectEqual","getCachedGeometry","newPrimitive","cached","primitive","promise","content","extensions","decodeText","GLTFBinaryExtension","asset","version","parser","GLTFParser","scenes","cameras","GLTFRegistry","primitiveCache","multiplePrimitivesCache","multiPassGeometryCache","loadScene","buildNodeHierachy","nodeId","parentObject","allNodes","nodeDef","nodes","skinEntry","jl","joints","jointId","jointNode","inverseBindMatrices","sceneIndex","sceneDef","getMultiDependencies","dependencies","nodeIds","markDefs","nodeDefs","skinDefs","meshDefs","meshReferences","meshUses","skinIndex","skinLength","isBone","nodeIndex","nodeLength","isSkinnedMesh","getDependency","cacheKey","dependency","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","getDependencies","defs","def","types","pendings","bufferIndex","bufferDef","buffers","uri","resolve","reject","dataUriRegexResult","isBase64","atob","charCodeAt","bufferViewIndex","bufferViewDef","bufferViews","byteOffset","accessorIndex","accessorDef","accessors","bufferView","sparse","pendingBufferViews","bufferAttribute","TypedArray","componentType","elementBytes","itemBytes","byteStride","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","textureDef","textureExtensions","sourceURI","base64","ArrayBufferToBase64","mimeType","assignTexture","materialParams","textureName","materialType","materialDef","materials","materialExtensions","pending","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","metallicRoughness","pbrMetallicRoughness","baseColorFactor","baseColorTexture","doubleSided","loadGeometries","primitives","addPrimitiveAttributes","geometryPromise","geometries","meshIndex","originalMaterials","SkinnedMesh3D","normalizeSkinWeights","useSkinning","useMorphTargets","useMorphNormals","cachedMaterial","cameraIndex","cameraDef","yfov","aspectRatio","znear","zfar","skinDef","accessor","animationIndex","animationDef","channels","channel","sampler","samplers","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","track","arraySlice","instanceNum","reservedRe","primitiveDef","verticesAttribute","normalAttribute","uvAttribute","attributeToArray","skinWeight","targets","hasMorphPosition","hasMorphNormal","POSITION","attributeName","mPostions","positionAttribute","mNormals","addMorphTargets","headerView","header","magic","getUint32","chunkView","chunkIndex","chunkLength","chunkType","contentArray","objects","TypeError","setXY","setXYZ","setXYZW","interleavedBuffer","attr","bindMode","initBones","gbone","rotq","scl","par","vec","Vector4","Sprite3D","TransformType","arotation","ascaleX","ascaleY","ashearX","ashearY","appliedValid","shearX","shearY","debugBone","yDown","lm","wm","pa","pc","pd","onlyTranslation","noRotationOrReflection","prx","la","lb","lc","ld","noScale","noScaleOrReflection","za","zc","zb","zd","spine","dictionary","attachAll","oldSkin","slotAttachment","SpineBoneAniType","shear","readCurve","setShear","setRotation","setup","first","r_1","transRotation","r_2","prevRotation","frameTime","ENTRIES","valueMap","fi","PREV_R","PREV_G","PREV_B","PREV_A","binarySearch","PREV_TIME","weighted","deformLength","frameVertices","verticesValue","arrayCopy","verticesArray","vertexAttachment","vertices_1","setArraySize","setupVertices","lastVertices","vertexAttachment_1","prevVertices","nextVertices","vertexAttachment_2","attachmentName_1","drawOrderToSetupIndex","mix","fromClip","resetFrom","mixTime","mixDuration","applyMixingFrom","imgLen","atlasLen","jsonLen","base64String","atlas"],"mappings":"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ACb0O,KAAMA,EACNif,KAAMlf,EAAYkf,KAClB2tB,SAAUzzC,EAAGi3C,mBAAmB5B,EAASl9C,GACzCU,MAAO,EAAAqP,aAAarB,EAAMD,EAAYkf,OAI9C,OAAOxf,EAnCgBkzE,CAAgBx5E,EAAI,EAAKq1C,SAE5C,EAAK/uC,SAAW,EAAAmzE,4BAA4Bz5E,EAAI,EAAK4G,aAGrD,EAAK2kG,UAAY,E,EAEzB,OA/DwB,OA+DxB,EA/DA,CAAwB,EAAAxjG,UAoGxB,IAqDKkkG,EArDCX,EAA4B,GAW5BF,EAAiB,CACnB,QACA,YACA,iBACA,eACA,eACA,eACA,WACA,WACA,mBACA,cACA,SACA,YACA,UACA,iBACA,WA2BJ,SAAKa,GACD,sCACA,kCAFJ,CAAKA,MAAgB,KAKrB,IAAMG,EAAO,CACT,4BAKA,4BACA,kCACA,6BAGA,yBACA,4BACA,0BACA,SAEA,iBACA,mCACA,iCACA,SAEA,oDACA,6BACA,iCACA,2BACA,kCACA,iCACA,SAEA,oBACA,4BACA,mCACA,SAGA,sBACA,+BACA,sCACA,yBACA,wCACA,sCACA,iDACA,8BACA,0DACA,6DACA,uDACA,uDACA,iCACA,6EACA,6EACA,6EACA,6EACA,+CACA,wBACA,UACA,WACA,iDACA,iDACA,gDACA,wBACA,UACA,YACA,+BACA,gCACA,SAGA,0BACA,iCACA,iCACA,iCACA,iCACA,4BACA,mCACA,mCACA,mCACA,mCACA,mDACA,UACA,mCACA,mCACA,mCACA,mCACA,mDACA,WACA,SAGA,iBACA,+BACA,SAEA,gBAEA,2CAEA,6BACA,kFACA,kFACA,kFACA,kFACA,iCACA,qFACA,qFACA,qFACA,qFACA,eACA,YAEA,yBACA,uDACA,uDACA,uDACA,uDACA,kEACA,oCACA,0DACA,0DACA,0DACA,0DACA,4DACA,YAEA,8EACA,mDAEA,4BACA,yBACA,YAEA,oBACA,uCACA,YAEA,uDACA,6CAEA,gCACA,oFACA,oFACA,oFACA,oFACA,eAEA,4BACA,0CACA,mDACA,mDACA,mDACA,mDACA,wEACA,8EACA,eAEA,yCACA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","file":"build/fyge.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FYGE\"] = factory();\n\telse\n\t\troot[\"FYGE\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 98);\n","\r\n//这里都是一些常量\r\n/**\r\n * 版本号\r\n * @static\r\n * @constant\r\n * @name VERSION\r\n * @type {string}\r\n */\r\nexport const VERSION = \"2.0.21\";\r\n\r\n\r\n/**\r\n * 判读window，标记浏览器环境，到时万一淘宝小程序内也有window，再改,这个貌似没有地方用到,用到了用自己方法取\r\n */\r\n//@ts-ignore\r\n// export const devicePixelRatio: number = window && (window.devicePixelRatio || 1) || my.getSystemInfoSync().pixelRatio;\r\n\r\n\r\n/**\r\n * 获取设备号iOS  Android\r\n * 先判断浏览器环境设备号，没有就是小程序环境\r\n */\r\nexport const osType: \"ios\" | \"android\" | \"pc\" = navigator && navigator.userAgent && (function () {\r\n    let n = navigator.userAgent.toLocaleLowerCase();\r\n    let reg1 = /android/;\r\n    let reg2 = /iphone|ipod|ipad/;\r\n    if (reg1.test(n)) {\r\n        return \"android\";\r\n    } else if (reg2.test(n)) {\r\n        return \"ios\"\r\n    } else {\r\n        return \"pc\";\r\n    }\r\n})()\r\n    //@ts-ignore //以后加了其他环境再改,现在除了web就是淘宝小程序\r\n    || my.getSystemInfoSync().platform.toLowerCase()\r\n\r\n\r\nlet PI: number = Math.PI;\r\nlet HalfPI: number = PI >> 1;\r\nlet PacPI: number = PI + HalfPI;\r\n/**\r\n * @method cos\r\n * @private\r\n * @param {number} angle,弧度制\r\n * @return {number}\r\n */\r\nexport function cos(angle: number): number {\r\n    switch (angle) {\r\n        case HalfPI:\r\n        case -PacPI:\r\n            return 0;\r\n        case PI:\r\n        case -PI:\r\n            return -1;\r\n        case PacPI:\r\n        case -HalfPI:\r\n            return 0;\r\n        default:\r\n            return Math.cos(angle);\r\n    }\r\n}\r\n\r\n/**\r\n * @method sin\r\n * @param {number} angle,弧度制\r\n * @return {number}\r\n */\r\nexport function sin(angle: number): number {\r\n    switch (angle) {\r\n        case HalfPI:\r\n        case -PacPI:\r\n            return 1;\r\n        case PI:\r\n        case -PI:\r\n            return 0;\r\n        case PacPI:\r\n        case -HalfPI:\r\n            return -1;\r\n        default:\r\n            return Math.sin(angle);\r\n    }\r\n}\r\n/**\r\n * Two Pi.\r\n *\r\n * @static\r\n * @constant\r\n * @type {number}\r\n */\r\nexport const PI_2: number = PI * 2;\r\n\r\n/**\r\n * Conversion factor for converting radians to degrees.\r\n * 弧度转角度\r\n * @static\r\n * @constant\r\n * @type {number}\r\n */\r\nexport const RAD_TO_DEG: number = 180 / PI;\r\n\r\n/**\r\n * Conversion factor for converting degrees to radians.\r\n * 角度转弧度\r\n * @static\r\n * @constant\r\n * @type {number}\r\n */\r\nexport const DEG_TO_RAD: number = PI / 180;\r\n\r\n/**\r\n * 渲染方式记录\r\n * @static\r\n * @constant\r\n * @name RENDERER_TYPE\r\n * @type {object}\r\n * @property {number} UNKNOWN - Unknown render type.\r\n * @property {number} WEBGL - WebGL render type.\r\n * @property {number} CANVAS - Canvas render type.\r\n */\r\nexport enum RENDERER_TYPE {\r\n    UNKNOWN = 0,\r\n    WEBGL,\r\n    CANVAS,\r\n};\r\n\r\n/**\r\n * 各种形状\r\n * @static\r\n * @constant\r\n * @name SHAPES\r\n * @type {object}\r\n * @property {number} POLY Polygon  多边形\r\n * @property {number} RECT Rectangle 矩形\r\n * @property {number} CIRC Circle 圆形\r\n * @property {number} ELIP Ellipse 椭圆\r\n * @property {number} RREC Rounded Rectangle 圆角矩形\r\n */\r\nexport enum SHAPES {\r\n    POLY = 0,\r\n    RECT,\r\n    CIRC,\r\n    ELIP,\r\n    RREC,\r\n};\r\n\r\n/**\r\n * 着色器浮点精度\r\n * @static\r\n * @constant\r\n * @name PRECISION\r\n * @type {object}\r\n * @property {string} LOW='lowp'\r\n * @property {string} MEDIUM='mediump'\r\n * @property {string} HIGH='highp'\r\n */\r\nexport enum PRECISION {\r\n    LOW = 'lowp',\r\n    MEDIUM = 'mediump',\r\n    HIGH = 'highp',\r\n};\r\n\r\n/**\r\n * 文本渐变方式，以后用\r\n * @static\r\n * @constant\r\n * @name TEXT_GRADIENT\r\n * @type {object}\r\n * @property {number} LINEAR_VERTICAL 水平渐变\r\n * @property {number} LINEAR_HORIZONTAL 垂直渐变\r\n */\r\nexport enum TEXT_GRADIENT {\r\n    LINEAR_VERTICAL = 0,\r\n    LINEAR_HORIZONTAL,\r\n};\r\n\r\n/**\r\n * 文本对齐方式  水平\r\n */\r\nexport enum TEXT_ALIGN {\r\n    CENTER = \"center\",\r\n    LEFT = \"left\",\r\n    RIGHT = \"right\",\r\n}\r\n\r\nexport enum VERTICAL_ALIGN {\r\n    MIDDLE = \"middle\",\r\n    UP = \"up\",\r\n    DOWN = \"down\",\r\n}\r\n\r\n/**\r\n * 文本类型，单行或多行\r\n */\r\nexport enum TEXT_lINETYPE {\r\n    SINGLE = \"single\",\r\n    MULTI = \"multi\"\r\n}\r\n\r\n/**\r\n * 画线时的对齐方式\r\n */\r\nexport enum LINE_ALIGNMENT {\r\n    middle = 0.5,\r\n    outter = 1,\r\n    inner = 0\r\n}\r\n\r\n/**\r\n * canvas线头\r\n */\r\nexport enum LINE_CAP {\r\n    BUTT = \"butt\",\r\n    ROUND = \"round\",\r\n    SQUARE = \"square\",\r\n}\r\n\r\n/**\r\n * canvas线连接处\r\n */\r\nexport enum LINE_JOIN {\r\n    MITER = \"miter\",\r\n    ROUND = \"round\",\r\n    BEVEL = \"bevel\"\r\n}\r\n\r\n\r\n/**\r\n * 混色模式，暂不支持使用\r\n * @static\r\n * @constant\r\n * @name BLEND_MODES\r\n * @type {object}\r\n * @property {number} NORMAL\r\n * @property {number} ADD\r\n * @property {number} MULTIPLY\r\n * @property {number} SCREEN\r\n * @property {number} OVERLAY\r\n * @property {number} DARKEN\r\n * @property {number} LIGHTEN\r\n * @property {number} COLOR_DODGE\r\n * @property {number} COLOR_BURN\r\n * @property {number} HARD_LIGHT\r\n * @property {number} SOFT_LIGHT\r\n * @property {number} DIFFERENCE\r\n * @property {number} EXCLUSION\r\n * @property {number} HUE\r\n * @property {number} SATURATION\r\n * @property {number} COLOR\r\n * @property {number} LUMINOSITY\r\n */\r\nexport enum BLEND_MODES {\r\n    NORMAL = 0,\r\n    ADD,\r\n    MULTIPLY,\r\n    SCREEN,\r\n    OVERLAY,\r\n    DARKEN,\r\n    LIGHTEN,\r\n    COLOR_DODGE,\r\n    COLOR_BURN,\r\n    HARD_LIGHT,\r\n    SOFT_LIGHT,\r\n    DIFFERENCE,\r\n    EXCLUSION,\r\n    HUE,\r\n    SATURATION,\r\n    COLOR,\r\n    LUMINOSITY,\r\n    NORMAL_NPM,\r\n    ADD_NPM,\r\n    SCREEN_NPM,\r\n\r\n    NONE,\r\n\r\n    SRC_OVER,\r\n\r\n    SRC_IN,\r\n    SRC_OUT,\r\n    SRC_ATOP,\r\n    DST_OVER,\r\n    DST_IN,\r\n    DST_OUT,\r\n    DST_ATOP,\r\n    ERASE,\r\n    SUBTRACT,\r\n};\r\n\r\n/**\r\n * webgl的绘制模式枚举\r\n * @static\r\n * @constant\r\n * @name DRAW_MODES\r\n * @type {object}\r\n * @property {number} POINTS\r\n * @property {number} LINES\r\n * @property {number} LINE_LOOP\r\n * @property {number} LINE_STRIP\r\n * @property {number} TRIANGLES\r\n * @property {number} TRIANGLE_STRIP\r\n * @property {number} TRIANGLE_FAN\r\n */\r\nexport enum DRAW_MODES {\r\n    POINTS = 0,\r\n    LINES,\r\n    LINE_LOOP,\r\n    LINE_STRIP,\r\n    TRIANGLES,\r\n    TRIANGLE_STRIP,\r\n    TRIANGLE_FAN,\r\n};\r\n\r\n/**\r\n * 纹理的缩放模式\r\n * @static\r\n * @constant\r\n * @name SCALE_MODES\r\n * @type {object}\r\n * @property {number} LINEAR 线性插值光滑缩放\r\n * @property {number} NEAREST 使用临近像素缩放\r\n */\r\nexport enum SCALE_MODES {\r\n    LINEAR = 0,\r\n    NEAREST,\r\n};\r\n\r\n/**\r\n * 纹理的wrap mode\r\n * 非2的幂次纹理只能用CLAMP\r\n * 仅用于webgl模式\r\n * @static\r\n * @constant\r\n * @name WRAP_MODES\r\n * @type {object}\r\n * @property {number} CLAMP - The textures uvs are clamped\r\n * @property {number} REPEAT - The texture uvs tile and repeat\r\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\r\n */\r\nexport enum WRAP_MODES {\r\n    CLAMP = 33071,\r\n    REPEAT = 10497,\r\n    MIRRORED_REPEAT = 33648,\r\n};\r\n\r\n/**\r\n * 查看类TextureGarbageCollector\r\n * @static\r\n * @constant\r\n * @name GC_MODES\r\n * @type {object}\r\n * @property {number} AUTO - 周期性自动回收\r\n * @property {number} MANUAL - 手动调用\r\n */\r\nexport enum GC_MODES {\r\n    AUTO = 0,\r\n    MANUAL,\r\n};\r\n\r\n\r\n","/**\r\n * 记录的一些方法和设置\r\n */\r\n\r\nimport { RENDERER_TYPE } from \"../const\";\r\nimport { mapPremultipliedBlendModes } from \"./mapPremultipliedBlendModes\";\r\nimport { createCanvas, getEnv } from \"./tbminiAdapte\";\r\n\r\nexport * from './twiddle';\r\nexport { default as toDisplayDataURL } from \"./toDisplayDataURL\";\r\n\r\nexport * from \"./getTintedTexture\";\r\nexport * from \"./mapWebGLBlendModes\";\r\nexport * from \"./mapCanvasBlendModes\";\r\n\r\n// export * from \"./DrawAllToCanvas\";\r\n\r\nexport * from \"./tbminiAdapte\";\r\n\r\nexport const premultiplyBlendMode = mapPremultipliedBlendModes();\r\n\r\nlet nextUid = 0;\r\n\r\n/**\r\n * 获得唯一id\r\n * @function uid\r\n * @return {number} 唯一的id\r\n */\r\nexport function uid(): number {\r\n    return ++nextUid;\r\n}\r\n\r\nlet backupCanvasCtx: CanvasRenderingContext2D\r\n/**\r\n * 各种使用需要的canvas\r\n * 比如取canvas上下文创建对象，渐变色等\r\n * 像素碰撞检测时\r\n * 淘宝小程序内不要用任何相关的先\r\n */\r\n// export const backupCanvas: HTMLCanvasElement = createCanvas() //= document.createElement(\"canvas\")\r\nexport function getBackupCanvasCtx() {\r\n    if (!backupCanvasCtx) {\r\n        var canvas = createCanvas();\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        backupCanvasCtx = canvas.getContext(\"2d\");\r\n    }\r\n    return backupCanvasCtx\r\n}\r\n/**\r\n * 创建渐变色\r\n * getGradientColor([0, 0, 300, 0], [[0, \"#ff0000\", 1],[0.5, \"#00ff00\", 1],[1, \"#0000ff\", 1]])\r\n * @param points 四个数字表示线性渐变参考createLinearGradient，六个数字表示径向渐变参考createRadialGradient\r\n * @param colors  [系数, #式颜色值, 透明度]的数组，比如[[0, \"#ff0000\", 1],[0.5, \"#00ff00\", 1],[1, \"#0000ff\", 1]]\r\n */\r\nexport function getGradientColor(points: number[], colors: [number, string, number][]): any {\r\n    let colorObj: any;\r\n    let ctx = getBackupCanvasCtx()//backupCanvas.getContext(\"2d\");\r\n    if (points.length == 4) {\r\n        colorObj = ctx.createLinearGradient(points[0], points[1], points[2], points[3]);\r\n    } else {\r\n        colorObj = ctx.createRadialGradient(points[0], points[1], points[2], points[3], points[4], points[5]);\r\n    }\r\n    for (let i = 0, l = colors.length; i < l; i++) {\r\n        colorObj.addColorStop(colors[i][0], getRGBA(colors[i][1], colors[i][2]));\r\n    }\r\n    return colorObj;\r\n}\r\n/**\r\n * 创建重复纹理\r\n * @param image \r\n */\r\nexport function getCanvasBitmapStyle(image: any): any {\r\n    let ctx = getBackupCanvasCtx()//backupCanvas.getContext(\"2d\");\r\n    return ctx.createPattern(image, \"repeat\");\r\n}\r\n/**\r\n * 十六进制颜色转rgb数组\r\n * @function hex2rgb\r\n * @param {number} hex -转换的十六进制颜色\r\n * @param  {number[]} [out=[]] 输出数组，\r\n * @return {number[]} [R, G, B]颜色 每项范围0到1\r\n */\r\nexport function hex2rgb(hex: number, out?: number[] | Float32Array): number[] | Float32Array {\r\n    out = out || [];\r\n    out[0] = ((hex >> 16) & 0xFF) / 255;\r\n    out[1] = ((hex >> 8) & 0xFF) / 255;\r\n    out[2] = (hex & 0xFF) / 255;\r\n    return out;\r\n}\r\n\r\n/**\r\n * 十六进制颜色转字符串\r\n * 0xffffff转\"#ffffff\"\r\n * @function hex2string\r\n * @param {number} hex - 转换的十六进制颜色\r\n * @return {string} 输出的字符串颜色.\r\n */\r\nexport function hex2string(hex: any): string {\r\n    hex = hex.toString(16);\r\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\r\n    return `#${hex}`;\r\n}\r\n\r\n/**\r\n * 字符串颜色转十六进制\r\n * \"#ffffff\"或\"0xffffff\"转0xffffff\r\n * @param {string} string 转换的字符串颜色\r\n * @return {number} 输出的颜色数值\r\n */\r\nexport function string2hex(string: string) {\r\n    if (string.indexOf(\"#\") == 0) {\r\n        string = string.replace(\"#\", \"0x\")\r\n    }\r\n    return parseInt(string)//到时改成+号\r\n}\r\n\r\n/**\r\n * 数组[R, G, B]转换为十六进制数值\r\n * rgb范围时0到1，和着色器中的一致\r\n * @function rgb2hex\r\n * @param {number[]} rgb -数组\r\n * @return {number} 十六进制颜色\r\n */\r\nexport function rgb2hex(rgb: number[]): number {\r\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\r\n}\r\n\r\n/**\r\n * 通过字符串颜色值和一个透明度值生成RGBA值\r\n * 用于canvas的api，\r\n * @method getRGBA\r\n * @param {string} color 字符串的颜色值,如:#33ffee\r\n * @param {number} alpha 0-1区间的一个数据 0完全透明 1完全不透明\r\n * @return {string}\r\n */\r\nexport function getRGBA(color: string, alpha: number): string {\r\n    if (color.indexOf(\"0x\") == 0) {\r\n        color = color.replace(\"0x\", \"#\");\r\n    }\r\n    //暂没考虑#ff这种\r\n    if (color.length < 7) {\r\n        color = \"#000000\";\r\n    }\r\n    if (alpha != 1) {\r\n        let r = parseInt(\"0x\" + color.substr(1, 2));\r\n        let g = parseInt(\"0x\" + color.substr(3, 2));\r\n        let b = parseInt(\"0x\" + color.substr(5, 2));\r\n        color = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\r\n    }\r\n    return color;\r\n}\r\n\r\n/**\r\n * Regexp for data URI.\r\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\r\n *\r\n * @static\r\n * @constant\r\n * @example data:image/png;base64\r\n */\r\nconst DATA_URI: any = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\r\n/**\r\n * Split a data URI into components. Returns undefined if\r\n * parameter `dataUri` is not a valid data URI.\r\n *\r\n * @memberof utils\r\n * @function decomposeDataUri\r\n * @param {string} dataUri - the data URI to check\r\n * @return {utils~DecomposedDataUri|undefined} The decomposed data uri or undefined\r\n */\r\nexport function decomposeDataUri(dataUri) {\r\n    const dataUriMatch = DATA_URI.exec(dataUri);\r\n    if (dataUriMatch) {\r\n        return {\r\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\r\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\r\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\r\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\r\n            data: dataUriMatch[5],\r\n        };\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * Regexp for image type by extension.\r\n *\r\n * @static\r\n * @constant\r\n * @type {RegExp|string}\r\n * @example `image.png`\r\n */\r\nconst URL_FILE_EXTENSION: any = /\\.(\\w{3,4})(?:$|\\?|#)/i;\r\n/**\r\n * 根据图片路径获取图片扩展名\r\n * @memberof utils\r\n * @function getUrlFileExtension\r\n * @param {string} url - the image path\r\n * @return {string|undefined} image extension\r\n */\r\nexport function getUrlFileExtension(url: string): string {\r\n    const extension = URL_FILE_EXTENSION.exec(url);\r\n    if (extension) {\r\n        return extension[1].toLowerCase();\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * 获取正负号标记\r\n * 0 +1 -1\r\n * @memberof utils\r\n * @function sign\r\n * @param {number} n \r\n * @returns {number} \r\n */\r\nexport function sign(n: number): number {\r\n    if (n === 0) return 0;\r\n    return n < 0 ? -1 : 1;\r\n}\r\n\r\n/**\r\n * 预乘十六进制颜色与透明度\r\n * 着色器只需传一个参数\r\n * @param tint \r\n * @param alpha \r\n */\r\nexport function premultiplyTint(tint: number, alpha: number): number {\r\n    if (alpha === 1.0) {\r\n        return (alpha * 255 << 24) + tint;\r\n    }\r\n    if (alpha === 0.0) {\r\n        return 0;\r\n    }\r\n    var R = ((tint >> 16) & 0xFF);\r\n    var G = ((tint >> 8) & 0xFF);\r\n    var B = (tint & 0xFF);\r\n\r\n    R = ((R * alpha) + 0.5) | 0;\r\n    G = ((G * alpha) + 0.5) | 0;\r\n    B = ((B * alpha) + 0.5) | 0;\r\n\r\n    return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\r\n}\r\n/**\r\n * 贴图缓存 \r\n * 对于链接网络图片，直接以url作为key，自动缓存\r\n * 对于图集，直接以小图命名作为key（所以避免重复名字，不是同一张图集里的命名也不能一致，否则覆盖）\r\n * 不自动缓存base64图片\r\n * @private\r\n */\r\nexport const TextureCache = Object.create(null);\r\n\r\n/**\r\n * 基础贴图缓存\r\n * 基本不会直接用，不缓存base64\r\n * @private\r\n */\r\nexport const BaseTextureCache = Object.create(null);\r\n\r\n/**\r\n * 记录TextureSheet，便于帧动画贴图数据查找，暂时不用\r\n */\r\nexport const TextureSheetCache = Object.create(null);\r\n\r\n/**\r\n * 销毁所有缓存的纹理和基础纹理\r\n * @function destroyTextureCache\r\n */\r\nexport function destroyTextureCache() {\r\n    let key;\r\n\r\n    for (key in TextureCache) {\r\n        TextureCache[key].destroy();\r\n    }\r\n    for (key in BaseTextureCache) {\r\n        BaseTextureCache[key].destroy();\r\n    }\r\n}\r\n\r\n/**\r\n * 移除所有缓存的纹理和基础纹理，但不销毁\r\n * @function clearTextureCache\r\n */\r\nexport function clearTextureCache() {\r\n    let key;\r\n\r\n    for (key in TextureCache) {\r\n        delete TextureCache[key];\r\n    }\r\n    for (key in BaseTextureCache) {\r\n        delete BaseTextureCache[key];\r\n    }\r\n}\r\n\r\n/**\r\n * 用于记录引擎全局属性记录，暂时没用到\r\n * 除了引擎内部修改赋值，外部仅供读取\r\n */\r\nexport const GlobalPro = {\r\n    /**\r\n     * 舞台渲染类型，\r\n     */\r\n    stageRenderType: RENDERER_TYPE,\r\n    /**\r\n     * 实际渲染分辨率\r\n     */\r\n    dpi: 1,\r\n    /**\r\n     * 图集间隙\r\n     */\r\n    padding: 2,\r\n}\r\n\r\nlet webglSupported: boolean;\r\n/**\r\n * 判断是否支持webgl\r\n * @function isWebGLSupported\r\n * @return {boolean}\r\n */\r\nexport function isWebGLSupported(): boolean {\r\n    //淘宝环境直接返回true，否则找淘宝小程序解决\r\n    if (getEnv() == \"tb\") return true;\r\n    //已经判断过了，直接返回\r\n    if (webglSupported !== undefined) return webglSupported;\r\n    //进入判断，加上低性能下是否使用webgl标识，pc上因为failIfMajorPerformanceCaveat设为true获取不到webgl一般是驱动问题\r\n    const contextOptions = { stencil: true, failIfMajorPerformanceCaveat: true };\r\n    try {\r\n        if (!window[\"WebGLRenderingContext\"]) {\r\n            return false;\r\n        }\r\n        const canvas = createCanvas()// document.createElement('canvas');\r\n        let gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\r\n        const success = !!(gl && gl[\"getContextAttributes\"]().stencil);\r\n        if (gl) {\r\n            const loseContext = gl[\"getExtension\"]('WEBGL_lose_context');\r\n            if (loseContext) {\r\n                loseContext.loseContext();\r\n            }\r\n        }\r\n        gl = null;\r\n        return webglSupported = success;\r\n    }\r\n    catch (e) {\r\n        return webglSupported = false;\r\n    }\r\n}\r\n\r\n/**\r\n * 从数组中移除元素\r\n * @param arr 原数组\r\n * @param startIdx 开始下标\r\n * @param removeCount 移除数量\r\n */\r\nexport function removeItems(arr: Array<any>, startIdx: number, removeCount: number) {\r\n    var i, length = arr.length\r\n\r\n    if (startIdx >= length || removeCount === 0) {\r\n        return\r\n    }\r\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount)\r\n\r\n    var len = length - removeCount\r\n\r\n    for (i = startIdx; i < len; ++i) {\r\n        arr[i] = arr[i + removeCount]\r\n    }\r\n    arr.length = len\r\n}\r\n\r\n/**\r\n * 取符合范围的值\r\n * @param value \r\n * @param min \r\n * @param max \r\n */\r\nexport function clamp(value: number, min: number, max: number) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\n\r\n/**\r\n * 将二进制数组转成Base64字符串\r\n * @param buff 前端的二进制缓冲区数组\r\n */\r\nexport function ArrayBufferToBase64(buff: ArrayBuffer): string {\r\n    var alph =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\r\n        enc = \"\",\r\n        n,\r\n        p,\r\n        bits,\r\n        d = new Uint8Array(buff);\r\n    var len = buff.byteLength * 8;\r\n    for (var offset = 0; offset < len; offset += 6) {\r\n        n = (offset / 8) | 0;\r\n        p = offset % 8;\r\n        bits = ((d[n] || 0) << p) >> 2;\r\n        if (p > 2) {\r\n            bits |= (d[n + 1] || 0) >> (10 - p);\r\n        }\r\n        enc += alph.charAt(bits & 63);\r\n    }\r\n    enc += p == 4 ? \"=\" : p == 6 ? \"==\" : \"\";\r\n    return enc;\r\n}\r\n\r\n/**\r\n * 解析八进制数组为字符串\r\n * @param array \r\n */\r\nexport function decodeText(array: Uint8Array): string {\r\n    if (typeof TextDecoder !== 'undefined') {\r\n        return new TextDecoder().decode(array);\r\n    }\r\n    // Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n    // throws a \"maximum call stack size exceeded\" error for large arrays.\r\n    var s = '';\r\n    for (var i = 0, il = array.length; i < il; i++) {\r\n        // Implicitly assumes little-endian.\r\n        s += String.fromCharCode(array[i]);\r\n    }\r\n    // Merges multi-byte utf-8 characters.\r\n    return decodeURIComponent(escape(s));\r\n}\r\n","\r\n\r\nexport { Matrix } from './Matrix';\r\nexport { Point } from './Point';\r\nexport { ObservablePoint } from './ObservablePoint';\r\nexport { Rectangle } from './Rectangle';\r\n// export  {default as Transform}  from './Transform';\r\nexport { default as Transform } from './Transform';\r\nexport { default as GroupD8 } from './GroupD8';","import { Matrix4 } from \"./Matrix4\";\r\nimport { Camera } from \"../cameras/Camera\";\r\n\r\n\r\nexport class Vector3 {\r\n    constructor(\r\n        public x: number = 0,\r\n        public y: number = 0,\r\n        public z: number = 0\r\n    ) { }\r\n\r\n    set(x: number, y: number, z: number): this {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this\r\n    }\r\n    copy(v: Vector3): this {\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n        return this\r\n    }\r\n    clone(): Vector3 {\r\n        return new Vector3().copy(this);\r\n    }\r\n    add(v: Vector3) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n\r\n    addScalar(s: number) {\r\n\r\n        this.x += s;\r\n        this.y += s;\r\n        this.z += s;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    addVectors(a: Vector3, b: Vector3) {\r\n        this.x = a.x + b.x;\r\n        this.y = a.y + b.y;\r\n        this.z = a.z + b.z;\r\n        return this;\r\n    }\r\n\r\n    addScaledVector(v: Vector3, s: number) {\r\n        this.x += v.x * s;\r\n        this.y += v.y * s;\r\n        this.z += v.z * s;\r\n        return this;\r\n    }\r\n\r\n    sub(v: Vector3) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        return this;\r\n\r\n    };\r\n    subScalar(s) {\r\n        this.x -= s;\r\n        this.y -= s;\r\n        this.z -= s;\r\n        return this;\r\n    };\r\n    subVectors(a: Vector3, b: Vector3) {\r\n        this.x = a.x - b.x;\r\n        this.y = a.y - b.y;\r\n        this.z = a.z - b.z;\r\n        return this;\r\n    };\r\n\r\n    multiplyScalar(scalar: number) {\r\n\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        this.z *= scalar;\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n    multiplyVectors(a: Vector3, b: Vector3) {\r\n        this.x = a.x * b.x;\r\n        this.y = a.y * b.y;\r\n        this.z = a.z * b.z;\r\n        return this;\r\n    };\r\n\r\n    divide(v: Vector3) {\r\n        this.x /= v.x;\r\n        this.y /= v.y;\r\n        this.z /= v.z;\r\n        return this;\r\n    };\r\n    divideScalar(scalar: number) {\r\n        return this.multiplyScalar(1 / scalar);\r\n    };\r\n\r\n    cross(v: Vector3) {\r\n        return this.crossVectors(this, v);\r\n    };\r\n    crossVectors(a: Vector3, b: Vector3) {\r\n        var ax = a.x, ay = a.y, az = a.z;\r\n        var bx = b.x, by = b.y, bz = b.z;\r\n\r\n        this.x = ay * bz - az * by;\r\n        this.y = az * bx - ax * bz;\r\n        this.z = ax * by - ay * bx;\r\n        return this;\r\n    };\r\n    dot(v: Vector3) {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z;\r\n    }\r\n    /**\r\n     * 长度\r\n     */\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    lengthSq() {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n    /**\r\n     * 标准化，长度为1\r\n     */\r\n    normalize() {\r\n        var scalar = 1 / (this.length() || 1);\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        this.z *= scalar;\r\n        return this;\r\n    }\r\n    distanceTo(v: Vector3) {\r\n        return Math.sqrt(this.distanceToSquared(v));\r\n    };\r\n\r\n    distanceToSquared(v: Vector3) {\r\n        var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n        return dx * dx + dy * dy + dz * dz;\r\n    };\r\n\r\n    min(v: Vector3) {\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        this.z = Math.min(this.z, v.z);\r\n        return this;\r\n    };\r\n\r\n    max(v: Vector3) {\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        this.z = Math.max(this.z, v.z);\r\n        return this;\r\n    };\r\n\r\n    clamp(min: Vector3, max: Vector3) {\r\n        this.x = Math.max(min.x, Math.min(max.x, this.x));\r\n        this.y = Math.max(min.y, Math.min(max.y, this.y));\r\n        this.z = Math.max(min.z, Math.min(max.z, this.z));\r\n        return this;\r\n    };\r\n\r\n    clampScalar(minVal: number, maxVal: number) {\r\n        return this.clamp(new Vector3(minVal, minVal, minVal), new Vector3(maxVal, maxVal, maxVal));\r\n    }\r\n\r\n    clampLength(min: number, max: number) {\r\n        return this.divideScalar(this.length() || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n    };\r\n    /**\r\n     * \r\n     * @param m \r\n     */\r\n    applyMatrix4(m: Matrix4) {\r\n        var x = this.x, y = this.y, z = this.z;\r\n        var e = m.elements;\r\n        var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n        this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\r\n        this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\r\n        this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\r\n        return this;\r\n    };\r\n    /**\r\n     * 从矩阵获得位置\r\n     * @param m \r\n     */\r\n    setFromMatrixPosition(m: Matrix4) {\r\n        var e = m.elements;\r\n        this.x = e[12];\r\n        this.y = e[13];\r\n        this.z = e[14];\r\n        return this;\r\n    };\r\n    /**\r\n     * 从矩阵获得缩放值\r\n     * @param m \r\n     */\r\n    setFromMatrixScale(m: Matrix4) {\r\n        var sx = this.setFromMatrixColumn(m, 0).length();\r\n        var sy = this.setFromMatrixColumn(m, 1).length();\r\n        var sz = this.setFromMatrixColumn(m, 2).length();\r\n        this.x = sx;\r\n        this.y = sy;\r\n        this.z = sz;\r\n        return this;\r\n    }\r\n    setFromMatrixColumn(m: Matrix4, index: number) {\r\n        return this.fromArray(m.elements, index * 4);\r\n    };\r\n\r\n    transformDirection(m: Matrix4) {\r\n        var x = this.x, y = this.y, z = this.z;\r\n        var e = m.elements;\r\n        this.x = e[0] * x + e[4] * y + e[8] * z;\r\n        this.y = e[1] * x + e[5] * y + e[9] * z;\r\n        this.z = e[2] * x + e[6] * y + e[10] * z;\r\n        return this.normalize();\r\n    };\r\n\r\n    /**\r\n     * 转换成屏幕坐标，范围-1到1，可根据stage转换成stage上坐标，或者canvas坐标\r\n     * @param camera \r\n     */\r\n    project(camera: Camera) {\r\n        return this.applyMatrix4(camera.worldMatrixInverse).applyMatrix4(camera.projectionMatrix);\r\n    };\r\n\r\n    unproject(camera:Camera) {\r\n        return this.applyMatrix4(new Matrix4().setInverseOf(camera.projectionMatrix)).applyMatrix4(camera._worldMatrix);\r\n    };\r\n\r\n\r\n\r\n\r\n    equals(v: Vector3) {\r\n        return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\r\n    }\r\n    fromArray(array: number[] | Float32Array, offset: number = 0) {\r\n        this.x = array[offset];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        return this;\r\n    };\r\n    toArray(array = [], offset: number = 0) {\r\n        array[offset] = this.x;\r\n        array[offset + 1] = this.y;\r\n        array[offset + 2] = this.z;\r\n        return array;\r\n    };\r\n}","/**\r\n * 基础对象，用于标记类名及唯一实例id\r\n * 只在引擎内部使用\r\n */\r\nexport abstract class HashObject {\r\n    protected _instanceId: number = 0;\r\n    protected _instanceType: string = \"HashObject\";\r\n    protected static _object_id = 0;\r\n\r\n    constructor() {\r\n        this._instanceId = HashObject._object_id++;\r\n    }\r\n\r\n    /**\r\n     * 每一个对象都会有一个唯一的id码。\r\n     * @property instanceId\r\n     * @public\r\n     * @since 1.0.0\r\n     * @return {number}\r\n     * @readonly\r\n     * @example\r\n     *      //获取 对象唯一码\r\n     *      console.log(this.instanceId);\r\n     */\r\n    public get instanceId(): number {\r\n        return this._instanceId;\r\n    }\r\n\r\n    /**\r\n     * 每一个类都有一个实例类型字符串，通过这个字符串，你能知道这个实例是从哪个类实例而来\r\n     * @property instanceType\r\n     * @since 1.0.0\r\n     * @public\r\n     * @return {string}\r\n     * @readonly\r\n     */\r\n    public get instanceType(): string {\r\n        return this._instanceType;\r\n    }\r\n\r\n    /**\r\n     * 抽象方法，销毁一个对象，子类写\r\n     * @method destroy\r\n     * @since 1.0.0\r\n     * @public\r\n     * @return {void}\r\n     */\r\n    abstract destroy(): void;\r\n}\r\n","import extractUniformsFromSrc from './extractUniformsFromSrc';\nimport { BLEND_MODES } from '../const';\nimport { uid } from '../utils';\nimport RenderTarget from '../renderers/renderTarget/RenderTarget';\n\n\nconst SOURCE_KEY_MAP = {};\n\n/**\n * 基本就是一个着色器，暂时不考虑集成GLShader，还不晓得咋搞\n */\nexport default class Filter {\n    //顶点着色器\n    vertexSrc: string;\n    //片元着色器\n    fragmentSrc: string;\n\n    // state，新的用stat，以后处理\n    private _blendMode: BLEND_MODES;\n    get blendMode(): BLEND_MODES {\n        return this._blendMode;\n    }\n    /**\n     * 别用先\n     */\n    set blendMode(value: BLEND_MODES) {\n        this._blendMode = value;\n    }\n\n    uniformData: any;\n    /**\n     * An object containing the current values of custom uniforms.\n     * @example <caption>Updating the value of a custom uniform</caption>\n     * filter.uniforms.time = performance.now();\n     *\n     * @member {object}\n     */\n    uniforms: any;\n\n    glShaders: any;\n\n    glShaderKey: string;\n    /**\n     * The padding of the filter. Some filters require extra space to breath such as a blur.\n     * Increasing this will add extra width and height to the bounds of the object that the\n     * filter is applied to.\n     *\n     * @member {number}\n     */\n    padding: number;\n    /**\n     * The resolution of the filter. Setting this to be lower will lower the quality but\n     * increase the performance of the filter.\n     *\n     * @member {number}\n     */\n    resolution: number;\n    /**\n     * If enabled is true the filter is applied, if false it will not.\n     *\n     * @member {boolean}\n     */\n    enabled: boolean;\n    /**\n     * If enabled, PixiJS will fit the filter area into boundaries for better performance.\n     * Switch it off if it does not work for specific shader.\n     *\n     * @member {boolean}\n     */\n    autoFit: boolean;\n    /**\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     */\n    constructor(vertexSrc?: string, fragmentSrc?: string, uniforms?: any) {\n\n        this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n\n        this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n\n        this._blendMode = BLEND_MODES.NORMAL;\n\n        this.uniformData = uniforms || extractUniformsFromSrc(this.vertexSrc, this.fragmentSrc);\n\n        this.uniforms = {};\n\n        for (const i in this.uniformData) {\n            this.uniforms[i] = this.uniformData[i].value;\n            if (this.uniformData[i].type) {\n                this.uniformData[i].type = this.uniformData[i].type.toLowerCase();\n            }\n        }\n\n        // this is where we store shader references..\n        // TODO we could cache this!\n        this.glShaders = {};\n\n        // used for cacheing.. sure there is a better way!\n        if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc]) {\n            SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = uid();\n        }\n\n        this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n\n        this.padding = 4;\n\n        this.resolution = 1;\n\n        this.enabled = true;\n\n        this.autoFit = true;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {RenderTarget} input - The input render target.\n     * @param {RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     * @param {object} [currentState] - It's current state of filter.\n     *        There are some useful properties in the currentState :\n     *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n     */\n    apply(filterManager, input: RenderTarget, output: RenderTarget, clear: boolean) {\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @constant\n     */\n    private static get defaultVertexSrc() {\n        return [\n            'attribute vec2 aVertexPosition;',\n            'attribute vec2 aTextureCoord;',\n\n            'uniform mat3 projectionMatrix;',\n            'uniform mat3 filterMatrix;',\n\n            'varying vec2 vTextureCoord;',\n            'varying vec2 vFilterCoord;',\n\n            'void main(void){',\n            '   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);',\n            '   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;',\n            '   vTextureCoord = aTextureCoord ;',\n            '}',\n        ].join('\\n');\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     */\n    private static get defaultFragmentSrc() {\n        return [\n            'varying vec2 vTextureCoord;',\n            'varying vec2 vFilterCoord;',\n\n            'uniform sampler2D uSampler;',\n            'uniform sampler2D filterSampler;',\n\n            'void main(void){',\n            '   vec4 masky = texture2D(filterSampler, vFilterCoord);',\n            '   vec4 sample = texture2D(uSampler, vTextureCoord);',\n            '   vec4 color;',\n            '   if(mod(vFilterCoord.x, 1.0) > 0.5)',\n            '   {',\n            '     color = vec4(1.0, 0.0, 0.0, 1.0);',\n            '   }',\n            '   else',\n            '   {',\n            '     color = vec4(0.0, 1.0, 0.0, 1.0);',\n            '   }',\n            // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n            '   gl_FragColor = mix(sample, masky, 0.5);',\n            '   gl_FragColor *= sample.a;',\n            '}',\n        ].join('\\n');\n    }\n}\n","// export { default as GroupD8 } from './GroupD8';\r\n\r\nexport { GLTexture } from './GLTexture';\r\nexport { GLBuffer } from './GLBuffer';\r\nexport { VertexArrayObject } from './VertexArrayObject';\r\nexport { GLFramebuffer } from \"./GLFramebuffer\";\r\nexport { GLShader } from \"./GLShader\";\r\n// export { BatchBuffer } from \"./BatchBuffer\";\r\nexport { createContext } from \"./createContext\";\r\n// export { TextureUvs } from \"./TextureUvs\";\r\nexport { checkMaxIfStatementsInShader } from \"./checkMaxIfStatementsInShader\";\r\n\r\n//shader文件夹里的都没导出，按需吧\r\nexport { defaultValue } from \"./shader/defaultValue\";\r\n","import { Vector3 } from \"./math/Vector3\";\r\nimport { VertexArrayObject, GLBuffer, GLShader } from \"../glCore\";\r\nimport { HashObject } from \"../2d/HashObject\";\r\nimport { Vector2 } from \"./math/Vector2\";\r\nimport { BatchBuffer } from \"../2d/renderers/webgl/BatchBuffer\";\r\nimport { Box3 } from \"./math/Box3\";\r\nimport { Sphere } from \"./math/Sphere\";\r\nimport { Bone3D } from \"./bones/Bone3D\";\r\n\r\n\r\n\r\n/**\r\n * 考虑需要记录哪些几何数据\r\n * 暂时都在构造中执行一次数据的赋值，如果以后涉及需要动态修改数据的，加标记修改，插件里也需要重新upload数据\r\n * 到时改成对象记录所有attribute。仿three，但是vao还会存在，但是会检查是否更新\r\n * 感觉东西越来越多，迟早得换成three的方式，到时还要考虑数据要修改的情况，否则做游戏蛋疼，现在不改是担心改了后性能出问题，\r\n */\r\nexport class Geometry extends HashObject {\r\n    /**\r\n     * 顶点坐标3，颜色3，uv2，法线3，到时还是搞成three的那种方式，多属性对象，统一放到vao上\r\n     */\r\n    _vertByteSize: number = (3 + 3 + 2 + 3) * 4;\r\n\r\n    _vertices: Float32Array | number[];\r\n    _colors: Float32Array | number[];\r\n    _uvs: Float32Array | number[];\r\n    _normals: Float32Array | number[];\r\n\r\n    _indices: Uint16Array | number[];\r\n\r\n    //这两个是为了骨骼动画，都是vec4\r\n    _skinWeight: Float32Array | number[];\r\n    _skinIndex: Float32Array | number[];\r\n    //可自行bind到Mesh，不一定挂在geo上\r\n    bones: Bone3D[]\r\n\r\n\r\n    boundingBox: Box3 = null;\r\n\r\n    boundingSphere: Sphere = null;\r\n    /**\r\n     * 是否按面检测\r\n     */\r\n    doHitFace: boolean = false;\r\n    /**\r\n     * 为了不同渲染器上下文对应自己的vao，不管program吧，可能不同着色器程序，带的attr可能不一样，\r\n     * 在3d的插件上处理\r\n     * 建vao，添加attr属性\r\n     * 激活绑定vao\r\n     * 绑定buffer，\r\n     * 上传buffer数据\r\n     * 绘制\r\n     * \r\n     */\r\n    // _glVertexArrayObjects: { [key: number]: VertexArrayObject }\r\n    _glVaoBuffer: { [key: number]: VaoBufferInt }\r\n\r\n    /**\r\n     * 记录顶点数据用，包括坐标，颜色，uv，法线\r\n     */\r\n    _attrBuffer: BatchBuffer;\r\n\r\n    /**\r\n     * 顶点变形数据数组\r\n     */\r\n    _morphPositions: Float32Array[] | number[][];\r\n    /**\r\n     * 法线变形数据数组\r\n     */\r\n    _morphNormals: Float32Array[] | number[][];\r\n    /**\r\n     * \r\n     * @param vertices \r\n     * @param indices \r\n     * @param normals \r\n     * @param colors \r\n     * @param uvs \r\n     */\r\n    constructor(\r\n        vertices: Float32Array | number[],\r\n        indices?: Uint16Array | number[],\r\n        normals?: Float32Array | number[],\r\n        colors?: Float32Array | number[],\r\n        uvs?: Float32Array | number[]\r\n    ) {\r\n        super();\r\n        this._instanceType = \"Geometry\";\r\n        this._glVaoBuffer = {};\r\n\r\n        this._vertices = vertices;\r\n        this._normals = normals || new Float32Array(vertices.length);\r\n        this._colors = colors || new Float32Array(vertices.length).map(() => { return 1 });//不传就全是白色\r\n        this._uvs = uvs || new Float32Array(vertices.length / 3 * 2);\r\n        //索引直接用，可能没有\r\n        this._indices = indices ? new Uint16Array(indices) : null;\r\n        //顶点长度先记录\r\n        this._attrBuffer = new BatchBuffer(vertices.length / 3 * this._vertByteSize);\r\n\r\n    }\r\n    computeBoundingBox() {\r\n\r\n        if (!this.boundingBox) this.boundingBox = new Box3();\r\n\r\n        var position = this._vertices;\r\n\r\n        if (position) {\r\n            this.boundingBox.setFromArray(position);\r\n        } else {\r\n            this.boundingBox.makeEmpty();\r\n        }\r\n\r\n        if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) console.error(\"顶点数据有误\")\r\n    };\r\n\r\n    computeBoundingSphere() {\r\n\r\n        var box = new Box3();\r\n        var vector = new Vector3();\r\n\r\n        if (!this.boundingSphere) this.boundingSphere = new Sphere();\r\n\r\n        var position = this._vertices;\r\n\r\n        if (position) {\r\n            var center = this.boundingSphere.center;\r\n            box.setFromArray(position);\r\n            box.getCenter(center);\r\n            // hoping to find a boundingSphere with a radius smaller than the\r\n            // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n            var maxRadiusSq = 0;\r\n            for (var i = 0, il = position.length; i < il; i += 3) {\r\n                vector.x = position[i];\r\n                vector.y = position[i + 1];\r\n                vector.z = position[i + 2];\r\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\r\n            }\r\n            this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\r\n            if (isNaN(this.boundingSphere.radius)) console.error(\"顶点数据有误\")\r\n        }\r\n    };\r\n\r\n    // copy(){\r\n\r\n    // }\r\n    // clone(){}\r\n\r\n\r\n    destroy() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * 根据webglRendererId存一个，vao还需要根据着色器程序缓存\r\n */\r\nexport interface VaoBufferInt {\r\n    /**\r\n     * 索引\r\n     */\r\n    indexBuffer?: GLBuffer,\r\n    /**\r\n     * 顶点相关属性，位置，颜色，uv，法线\r\n     */\r\n    attrBuffer: GLBuffer,\r\n    /**\r\n     * 变形位置数据，数组，最大长度8\r\n     */\r\n    morphTargetBuffers?: GLBuffer[],\r\n    /**\r\n     * 变形法线数据，数组，最大长度4\r\n     */\r\n    morphNormalBuffers?: GLBuffer[],\r\n\r\n    /**\r\n     * 这两个buffer用于骨骼\r\n     */\r\n    skinWeightBuffer?: GLBuffer,\r\n    skinIndexBuffer?: GLBuffer,\r\n    /**\r\n     * 需要根据着色器程序id作为指向，\r\n     * 灯光重置过着色器，基本要重来一次，上面的buffer可以留着，重新addAttr到新的vao\r\n     */\r\n    vaos: { [key: string]: VertexArrayObject }\r\n}\r\n\r\n\r\nvar vertices = new Float32Array([\r\n    2.0, 2.0, 2.0, -2.0, 2.0, 2.0, -2.0, -2.0, 2.0, 2.0, -2.0, 2.0, // v0-v1-v2-v3 front\r\n    2.0, 2.0, 2.0, 2.0, -2.0, 2.0, 2.0, -2.0, -2.0, 2.0, 2.0, -2.0, // v0-v3-v4-v5 right\r\n    2.0, 2.0, 2.0, 2.0, 2.0, -2.0, -2.0, 2.0, -2.0, -2.0, 2.0, 2.0, // v0-v5-v6-v1 up\r\n    -2.0, 2.0, 2.0, -2.0, 2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 2.0, // v1-v6-v7-v2 left\r\n    -2.0, -2.0, -2.0, 2.0, -2.0, -2.0, 2.0, -2.0, 2.0, -2.0, -2.0, 2.0, // v7-v4-v3-v2 down\r\n    2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 2.0, -2.0, 2.0, 2.0, -2.0  // v4-v7-v6-v5 back\r\n]);\r\n\r\nvar colors = new Float32Array([    // Colors\r\n    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,     // v0-v1-v2-v3 front\r\n    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,     // v0-v3-v4-v5 right\r\n    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,     // v0-v5-v6-v1 up\r\n    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,     // v1-v6-v7-v2 left\r\n    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,     // v7-v4-v3-v2 down\r\n    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0　    // v4-v7-v6-v5 back\r\n]);\r\ncolors = colors.map(() => {\r\n    return 1\r\n})\r\n\r\nvar normals = new Float32Array([    // Normal\r\n    0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,  // v0-v1-v2-v3 front\r\n    1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,  // v0-v3-v4-v5 right\r\n    0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,  // v0-v5-v6-v1 up\r\n    -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,  // v1-v6-v7-v2 left\r\n    0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,  // v7-v4-v3-v2 down\r\n    0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0   // v4-v7-v6-v5 back\r\n]);\r\n\r\nvar uvs = new Float32Array([\r\n    1.0, 1.0,\r\n    0.0, 1.0,\r\n    0.0, 0.0,\r\n    1.0, 0.0,\r\n\r\n    1.0, 1.0,\r\n    0.0, 1.0,\r\n    0.0, 0.0,\r\n    1.0, 0.0,\r\n\r\n    1.0, 1.0,\r\n    0.0, 1.0,\r\n    0.0, 0.0,\r\n    1.0, 0.0,\r\n\r\n    1.0, 1.0,\r\n    0.0, 1.0,\r\n    0.0, 0.0,\r\n    1.0, 0.0,\r\n\r\n    1.0, 1.0,\r\n    0.0, 1.0,\r\n    0.0, 0.0,\r\n    1.0, 0.0,\r\n\r\n    1.0, 1.0,\r\n    0.0, 1.0,\r\n    0.0, 0.0,\r\n    1.0, 0.0,\r\n]);\r\n\r\nvar indices = new Uint16Array([       // Indices of the vertices\r\n    0, 1, 2, 0, 2, 3,    // front\r\n    4, 5, 6, 4, 6, 7,    // right\r\n    8, 9, 10, 8, 10, 11,    // up\r\n    12, 13, 14, 12, 14, 15,    // left\r\n    16, 17, 18, 16, 18, 19,    // down\r\n    20, 21, 22, 20, 22, 23     // back\r\n]);\r\n\r\n\r\n// function createNineTextures(imageUrl: string): Promise<FYGE.Texture[]> {\r\n//     return new Promise((resolve, reject) => {\r\n//         let image = new Image();\r\n//         image.onload = function () {\r\n//             var obj = {}\r\n//             //名字。\r\n//             var name = \"lalala\";\r\n//             var w = image.width / 3;\r\n//             var h = image.height / 3;\r\n//             //生成9张图的数据\r\n//             for (var i = 0; i < 9; i++)\r\n//                 obj[name + i] = {\r\n//                     \"x\": i % 3 * w,\r\n//                     \"y\": ~~(i / 3) * h,\r\n//                     w, h, sw: w, sh: h, ox: 0, oy: 0, ro: false\r\n//                 };\r\n//             var textures = FYGE.createTextureSheet(new FYGE.BaseTexture(image), obj);\r\n//             //取TextureCache里的\r\n//             var arr = [];\r\n//             for (var i = 0; i < 9; i++)arr.push(textures[name + i])\r\n//             resolve(arr)\r\n//         }\r\n//         image.onerror = function () {\r\n//             reject()\r\n//         }\r\n//         image.src = imageUrl\r\n//     })\r\n// }\r\n","import { HashObject } from \"../HashObject\";\n/**\n * 事件类,引擎中一切事件的基类\n * @class Event\n * @extends AObject\n * @public\n * @since 1.0.0\n */\nexport class Event extends HashObject {\n\n    // public static IMAGE_LOADED: string = \"onImageLoaded\"\n\n    /**\n     * 舞台尺寸发生变化时触发\n     * @Event\n     * @property RESIZE\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static RESIZE: string = \"onResize\";\n\n    /**\n     * ScrollPage组件滑动到开始位置事件\n     * @property SCROLL_TO_HEAD\n     * @static\n     * @since 1.1.0\n     * @type {string}\n     */\n    public static SCROLL_TO_HEAD: string = \"onScrollToHead\";\n    /**\n     * ScrollPage组件停止滑动事件\n     * @property SCROLL_STOP\n     * @static\n     * @since 1.1.0\n     * @type {string}\n     */\n    public static SCROLL_STOP: string = \"onScrollStop\";\n    /**\n     * ScrollPage组件开始滑动事件\n     * @property SCROLL_START\n     * @static\n     * @since 1.1.0\n     * @type {string}\n     */\n    public static SCROLL_START: string = \"onScrollStart\";\n    /**\n     * ScrollPage组件滑动到结束位置事件\n     * @property ON_SCROLL_TO_END\n     * @static\n     * @since 1.1.0\n     * @type {string}\n     */\n    public static SCROLL_TO_END: string = \"onScrollToEnd\";\n    /**\n     * 舞台初始化完成后会触发的事件\n     * @property INIT_STAGE\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static INIT_STAGE: string = \"onInitStage\";\n    /**\n     * 显示对象加入到舞台事件\n     * @Event\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static ADDED_TO_STAGE: string = \"onAddedToStage\";\n    /**\n     * 显示对象从舞台移出事件\n     * @Event\n     * @property REMOVE_TO_STAGE\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static REMOVED_FROM_STAGE: string = \"onRemovedFromStage\";\n    /**\n     * 显示对象 循环帧事件\n     * @Event\n     * @property ENTER_FRAME\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static ENTER_FRAME: string = \"onEnterFrame\";\n    /**\n     * MovieClip 播放完成事件\n     * @Event\n     * @property END_FRAME\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static END_FRAME: string = \"onEndFrame\";\n    /**\n     * MovieClip 帧标签事件\n     * @Event\n     * @property CALL_FRAME\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static CALL_FRAME: string = \"onCallFrame\";\n    /**\n     * 完成事件\n     * @Event\n     * @property COMPLETE\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static COMPLETE: string = \"onComplete\";\n    /**\n     * 加载过程事件\n     * @Event\n     * @property PROGRESS\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static PROGRESS: string = \"onProgress\";\n    /**\n     * 出错事件\n     * @Event\n     * @property ERROR\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static ERROR: string = \"onError\";\n    /**\n     * 中断事件\n     * @Event\n     * @property ABORT\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static ABORT: string = \"onAbort\";\n    /**\n     * 开始事件\n     * @Event\n     * @property START\n     * @type {string}\n     * @static\n     * @public\n     * @since 1.0.0\n     */\n    public static START: string = \"onStart\";\n    /**\n     * 定时器触发事件\n     * @property TIMER\n     * @static\n     * @since 1.0.9\n     * @public\n     * @type {string}\n     */\n    public static TIMER: string = \"onTimer\";\n    /**\n     * 定时器完成事件\n     * @property TIMER_COMPLETE\n     * @since 1.0.9\n     * @static\n     * @public\n     * @type {string}\n     */\n    public static TIMER_COMPLETE: string = \"onTimerComplete\";\n    /**\n     * 事件类型名\n     * @property type\n     * @type {string}\n     * @public\n     * @since 1.0.0\n     */\n    public type: string = \"\";\n    /**\n     * 触发此事件的对象\n     * @property target\n     * @public\n     * @since 1.0.0\n     * @type {any}\n     */\n    public target: any = null;\n    /**\n     * 随着事件一起附带的信息对象\n     * 所有需要随事件一起发送的信息都可以放在此对象中\n     * @property data\n     * @public\n     * @since 1.0.0\n     * @type {any}\n     * @default null\n     */\n    public data: any = null;\n\n    /**\n     * @method Event\n     * @param {string} type 事件类型\n     * @public\n     * @since 1.0.0\n     */\n    public constructor(type: string) {\n        super();\n        this._instanceType = \"Event\";\n        this.type = type;\n    }\n\n    /**\n     * 防止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。\n     * @method stopPropagation\n     * @public\n     * @since 2.0.0\n     * @return {void}\n     */\n    public stopPropagation(): void {\n        this._pd = true;\n    }\n    /**\n     * 是否阻止事件向下冒泡\n     * @property _pd\n     * @type {boolean}\n     * @private\n     * @since 1.0.0\n     */\n    private _pd: boolean = false;\n\n    public destroy(): void {\n        let s = this;\n        s.target = null;\n        s.data = null;\n    }\n\n    /**\n     * 重围事件到初始状态方便重复利用\n     * @method reset\n     * @param {string} type\n     * @param target\n     * @since 2.0.0\n     * @return {void}\n     * @public\n     */\n    public reset(type: string, target: any): void {\n        let s = this;\n        s.target = target;\n        s._pd = false;\n        s.type = type;\n        s.data = null;//最好加上，不然可能带上原来的数据\n    }\n}\n","import BaseTexture from './BaseTexture';\nimport TextureUvs from './TextureUvs';\nimport { EventDispatcher } from '../events/EventDispatcher';\nimport { Event } from \"../events/Event\";\nimport { Rectangle, Point } from '../math';\nimport { TextureCache } from '../utils';\nimport { SCALE_MODES } from '../const';\nimport TextureMatrix from './TextureMatrix';\n\n/**\n * 一张图片或图集的一部分，如果没有frame。默认整张图片\n *\n * eg\n * let texture = Texture.fromImage('assets/image.png');\n * let sprite1 = new Sprite(texture);\n * let sprite2 = new Sprite(texture);\n * \n * @class\n * @extends EventDispatcher\n */\nexport default class Texture extends EventDispatcher {\n    /**\n     * 标记texture没有frame\n     * 表示不是从图集来的固定frame。需要根据BaseTexture的更新而改变frame\n     */\n    private noFrame: boolean;\n    /**\n     * BaseTexture，必有\n     */\n    baseTexture: BaseTexture;\n    /**\n     * 实际绘制矩形框，对于有trimmed的纹理很重要\n     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n     */\n    _frame: Rectangle;\n    /**\n     * 如果矩形边缘有透明像素被裁减后的缩小的区域\n     * This is the trimmed area of original texture, before it was put in atlas\n     * Please call `updateUvs()` after you change coordinates of `trim` manually.\n     */\n    trim: Rectangle;\n    /**\n     * 贴图是否可用，true为可用\n     */\n    valid: boolean;\n\n    /**\n     * 对应贴图uv\n     * The WebGL UV data cache.\n     */\n    _uvs: TextureUvs;\n    /**\n     * 原始尺寸，放入图集前\n     * This is the area of original texture, before it was put in atlas\n     */\n    orig: Rectangle;\n\n    /**\n     * 贴图旋转及镜像\n     */\n    _rotate: number;\n    /**\n     * 贴图的锚点，默认0，0，左上角，范围0到1\n     * \n     * @default {0,0}\n     */\n    defaultAnchor: Point;\n\n    /**\n     * 更新的id标志\n     */\n    _updateID: number;\n\n    /**\n     * 一般不用，需要时再说\n     * Contains data for uvs. May contain clamp settings and some matrices.\n     * Its a bit heavy, so by default that object is not created.\n     * @member {TextureMatrix}\n     * @default null\n     */\n    transform: TextureMatrix;\n\n    /**\n     * The ids under which this Texture has been added to the texture cache. This is\n     * automatically set as long as Texture.addToCache is used, but may not be set if a\n     * Texture is added directly to the TextureCache array.\n     *\n     * @member {string[]}\n     */\n    textureCacheIds: string[];\n\n    /**\n     * 空纹理\n     */\n    static EMPTY: Texture;\n    /**\n     * 白贴图\n     */\n    static WHITE: Texture;\n    /**\n     * @param {BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {Rectangle} [orig] - The area of original texture\n     * @param {Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link GroupD8}\n     * @param {Point} [anchor] - Default anchor point used for sprite placement / rotation\n     * 暂时不需要rotate\n     */\n    constructor(\n        baseTexture: BaseTexture | Texture,\n        frame?: Rectangle,\n        orig?: Rectangle,\n        trim?: Rectangle,\n        rotate?: number,\n        anchor?: Point\n    ) {\n        super();\n        this._instanceType = \"Texture\";\n        this.noFrame = false;\n        if (!frame) {\n            //标记没有固定的frame\n            this.noFrame = true;\n            //frame初始化个\n            frame = new Rectangle(0, 0, 1, 1);\n        }\n\n        //如果传入的是Texture，取其base\n        if (baseTexture instanceof Texture) baseTexture = baseTexture.baseTexture;\n\n        this.baseTexture = baseTexture;\n\n        this._frame = frame;\n\n        this.trim = trim || null;\n\n        this.valid = false;\n\n        this._uvs = null;\n\n        this.orig = orig || frame;// new Rectangle(0, 0, 1, 1);\n\n        this._rotate = Number(rotate || 0);\n\n        if (baseTexture.hasLoaded || (baseTexture.source && baseTexture.source.getContext)) {//对于canvas形式的判断hasLoaded有问题，导致不能监听update，到时改\n            if (this.noFrame) {\n                frame = new Rectangle(0, 0, baseTexture.width, baseTexture.height);\n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.addEventListener('update', this.onBaseTextureUpdated, this);\n            }\n            this.frame = frame;\n        }\n        else {\n            baseTexture.once('loaded', this.onBaseTextureLoaded, this);\n        }\n\n        this.defaultAnchor = anchor ? new Point(anchor.x, anchor.y) : new Point(0, 0);\n\n        this._updateID = 0;\n\n        this.transform = null;\n\n        this.textureCacheIds = [];\n    }\n\n    /**\n     * 更新方法，直接调用base的，source尺寸有改变，或内容有改变，基本用于Shape和TextField\n     * 在base更新时会触发自己的\n     */\n    update() {\n        this.baseTexture.update();\n    }\n\n\n    // 下面Loaded和Updated两个监听函数基本用于两种情况，不会用于图集中的纹理(除非图集还没加载好)\n    // 1、canvas作为贴图需要监听尺寸变化，Shape里以及TextField里\n    // 2、单张图片（如网络图片临时加载）需要监听尺寸变化，比如奖品图片，尺寸不一且未知\n    /**\n     * \n     * @private\n     * @param {BaseTexture} baseTexture - The base texture.\n     */\n    private onBaseTextureLoaded(e: Event/*,baseTexture: BaseTexture*/) {\n        var baseTexture = e.target;\n        this._updateID++;\n\n        //执行这个函数意味着noFrame为true\n        // TODO this code looks confusing.. boo to abusing getters and setters!\n        if (this.noFrame) {\n            this.frame = new Rectangle(0, 0, baseTexture.width, baseTexture.height);\n            //如果是没传过固定的frame就要监听了\n            this.baseTexture.addEventListener('update', this.onBaseTextureUpdated, this);\n        }\n        else {\n            this.frame = this._frame;\n        }\n        //加载成功的时候有必要触发update吗？\n        this.dispatchEvent(\"update\")\n\n\n        //加一个，监听texture，在BaseTexture加载完成后执行\n        // Texture.from(\"asd.png\").once(\"loaded\",()=>{\n        //     考虑是否有必要传参数，\n        //     回调\n        // })\n        this.dispatchEvent(\"loaded\")\n    }\n\n    /**\n     * \n     * @private\n     * @param {BaseTexture} baseTexture - The base texture.\n     */\n    private onBaseTextureUpdated(e: Event/*,baseTexture*/) {\n        var baseTexture = e.target;\n        //标志纹理已更新\n        this._updateID++;\n        //只有尺寸需要\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n        this.orig.width = this._frame.width;\n        this.orig.height = this._frame.height;\n        this.valid = baseTexture.hasLoaded;\n        this.dispatchEvent(\"update\")\n    }\n\n    /**\n     * 销毁\n     */\n    destroy() {\n        if (this.baseTexture) {\n            //考虑是否销毁baseTexture\n            // if (destroyBase) {\n            //     // delete the texture if it exists in the texture cache..\n            //     // this only needs to be removed if the base texture is actually destroyed too..\n            //     if (TextureCache[this.baseTexture.imageUrl]) {\n            //         Texture.removeFromCache(this.baseTexture.imageUrl);\n            //     }\n            //     this.baseTexture.destroy();\n            // }\n            this.baseTexture.removeEventListener('update', this.onBaseTextureUpdated, this);\n            this.baseTexture.removeEventListener('loaded', this.onBaseTextureLoaded, this);\n            this.baseTexture = null;\n        }\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n        this.valid = false;\n        Texture.removeFromCache(this);\n        this.textureCacheIds = null;\n    }\n\n    /**\n     * 克隆\n     * @return {Texture} The new texture\n     */\n    clone(): Texture {\n        return new Texture(\n            this.baseTexture,\n            this.frame,\n            this.orig,\n            this.trim,\n            this.rotate,\n            this.defaultAnchor\n        );\n    }\n\n    /**\n     * \n     * Updates the internal WebGL UV cache. Use it after you change `frame` or `trim` of the texture.\n     */\n    updateUvs() {\n        if (!this._uvs) this._uvs = new TextureUvs();\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n        this._updateID++;\n    }\n\n    /**\n      * The frame specifies the region of the base texture that this texture uses.\n      * Please call `updateUvs()` after you change coordinates of `frame` manually.\n      *\n      * @member {Rectangle}\n      */\n    get frame() {\n        return this._frame;\n    }\n\n    set frame(frame) {\n        this._frame = frame;\n\n        this.noFrame = false;\n\n        const { x, y, width, height } = frame;\n        const xNotFit = x + width > this.baseTexture.width;\n        const yNotFit = y + height > this.baseTexture.height;\n\n        if (xNotFit || yNotFit) {\n            const relationship = xNotFit && yNotFit ? 'and' : 'or';\n            const errorX = `X: ${x} + ${width} = ${x + width} > ${this.baseTexture.width}`;\n            const errorY = `Y: ${y} + ${height} = ${y + height} > ${this.baseTexture.height}`;\n\n            throw new Error('Texture Error: frame does not fit inside the base Texture dimensions: '\n                + `${errorX} ${relationship} ${errorY}`);\n        }\n\n        //标记是否可用\n        this.valid = width && height && this.baseTexture.source && this.baseTexture.hasLoaded;\n\n        //如果无裁切透明像素，无旋转，orig和frame完全一致\n        if (!this.trim && !this.rotate) this.orig = frame;\n\n        //如果可用，更新uv\n        if (this.valid) this.updateUvs();\n\n    }\n    /**\n     * Indicates whether the texture is rotated inside the atlas\n     * set to 2 to compensate for texture packer rotation\n     * set to 6 to compensate for spine packer rotation\n     * can be used to rotate or mirror sprites\n     * See {@link GroupD8} for explanation\n     *\n     * @member {number}\n     */\n    get rotate(): number {\n        return this._rotate;\n    }\n\n    set rotate(rotate: number) {\n        if (this._rotate != rotate) {\n            this._rotate = rotate;\n            if (this.valid) this.updateUvs();\n        }\n    }\n\n    /**\n     * 宽高都是贴图真实的宽高，不管trim\n     * The width of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get width() {\n        return this.orig.width;\n    }\n\n    /**\n     * The height of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get height() {\n        return this.orig.height;\n    }\n\n    //辅助方法\n    /**\n     * 会缓存\n     * @param {string} url \n     */\n    static fromUrl(url: string) {\n        let texture = TextureCache[url];\n        if (!texture) {\n            texture = new Texture(BaseTexture.fromUrl(url));\n            Texture.addToCache(texture, url);\n        }\n        return texture;\n    }\n\n    static fromCanvas(canvas: HTMLCanvasElement, origin: string = 'canvas') {\n        return new Texture(BaseTexture.fromCanvas(canvas, origin))\n    }\n\n    static fromData(data) {\n        return new Texture(BaseTexture.fromData(data))\n    }\n\n    static fromImage(image: HTMLImageElement) {\n        var imageUrl = image.src;\n        let texture: Texture = TextureCache[imageUrl];\n        if (!texture) {\n            texture = new Texture(BaseTexture.fromImage(image));\n            if (imageUrl && imageUrl.indexOf('data:') !== 0) Texture.addToCache(texture, imageUrl);\n        }\n        return texture;\n    }\n    //不包括data形式\n    static from(anything: string | HTMLCanvasElement | HTMLImageElement) {\n        //路径\n        if (typeof anything === 'string') {\n            return Texture.fromUrl(anything);\n        }\n        //@ts-ignore\n        else if (anything.data) {\n            return Texture.fromData(anything);\n        }\n        //@ts-ignore canvas\n        else if (anything.getContext) {\n            //@ts-ignore\n            return Texture.fromCanvas(anything);\n        } else {\n            //@ts-ignore\n            return Texture.fromImage(anything);\n        }\n    }\n\n    /**\n     * 加入全局缓存，TextureCache[name]调用\n     * @static\n     * @param {Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the Texture will be stored against.\n     */\n    static addToCache(texture: Texture, id: string) {\n        if (id) {\n            if (texture.textureCacheIds.indexOf(id) === -1) {\n                texture.textureCacheIds.push(id);\n            }\n            if (TextureCache[id]) {\n                //覆盖\n                console.warn(`Texture added to the cache with an id [${id}] that already had an entry`);\n            }\n            TextureCache[id] = texture;\n        }\n    }\n\n    /**\n     * 从全局缓存中移除\n     * @static\n     * @param {string|Texture} texture - id of a Texture to be removed, or a Texture instance itself\n     * @return {Texture|null} The Texture that was removed\n     */\n    static removeFromCache(texture: any): Texture {\n        if (typeof texture === 'string') {\n            const textureFromCache = TextureCache[texture];\n\n            if (textureFromCache) {\n                const index = textureFromCache.textureCacheIds.indexOf(texture);\n\n                if (index > -1) {\n                    textureFromCache.textureCacheIds.splice(index, 1);\n                }\n\n                delete TextureCache[texture];\n\n                return textureFromCache;\n            }\n        }\n        else if (texture && texture.textureCacheIds) {\n            for (let i = 0; i < texture.textureCacheIds.length; ++i) {\n                // Check that texture matches the one being passed in before deleting it from the cache.\n                if (TextureCache[texture.textureCacheIds[i]] === texture) {\n                    delete TextureCache[texture.textureCacheIds[i]];\n                }\n            }\n\n            texture.textureCacheIds.length = 0;\n\n            return texture;\n        }\n\n        return null;\n    }\n}\n\n//将事件置空\nfunction removeAllHandlers(tex) {\n    tex.destroy = function _emptyDestroy() { /* empty */ };\n    tex.addEventListener = function _emptyOn() { /* empty */ };\n    tex.once = function _emptyOnce() { /* empty */ };\n    tex.dispatchEvent = function _emptyEmit() { /* empty */ };\n}\n\n/**\n * 空纹理，用于绑定webgl绑定空纹理\n * @static\n * @constant\n */\nTexture.EMPTY = new Texture(new BaseTexture());\nremoveAllHandlers(Texture.EMPTY);\nremoveAllHandlers(Texture.EMPTY.baseTexture);\n\n/**\n * 16*16的数据\n */\nconst whiteSource = {\n    data: (function () {\n        var arr = []\n        for (var i = 0; i < 16 * 16 * 4; i++) {\n            arr.push(255);\n        }\n        return new Uint8Array(arr)\n    })(),\n    width: 16,\n    height: 16,\n    type: null,\n    path: null\n}\n\n/**\n * 白色纹理，几何形状的纹理16*16\n * 仅用于webgl模式的Graphics\n * @static\n * @constant\n */\nTexture.WHITE = new Texture(new BaseTexture(whiteSource));\nremoveAllHandlers(Texture.WHITE);\nremoveAllHandlers(Texture.WHITE.baseTexture);\n","import { Vector3 } from \"./Vector3\";\r\nimport { Quaternion } from \"./Quaternion\";\r\n\r\nexport class Matrix4 {\r\n    elements: Float32Array\r\n    constructor() {\r\n        this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    }\r\n    /**\r\n     * 初始化本矩阵\r\n     */\r\n    setIdentity() {\r\n        var e = this.elements;\r\n        e[0] = 1; e[4] = 0; e[8] = 0; e[12] = 0;\r\n        e[1] = 0; e[5] = 1; e[9] = 0; e[13] = 0;\r\n        e[2] = 0; e[6] = 0; e[10] = 1; e[14] = 0;\r\n        e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        return this;\r\n    };\r\n    set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44): this {\r\n        var te = this.elements;\r\n        te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\r\n        te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\r\n        te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\r\n        te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\r\n        return this;\r\n    };\r\n    copy(src: Matrix4) {\r\n        var i, s, d;\r\n        s = src.elements;\r\n        d = this.elements;\r\n        for (i = 0; i < 16; ++i) d[i] = s[i];\r\n        return this;\r\n    };\r\n    clone() {\r\n        return new Matrix4().fromArray(this.elements);\r\n    };\r\n    equals(matrix) {\r\n\r\n        var te = this.elements;\r\n        var me = matrix.elements;\r\n\r\n        for (var i = 0; i < 16; i++) {\r\n\r\n            if (te[i] !== me[i]) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    };\r\n\r\n    fromArray(array, offset = 0) {\r\n        for (var i = 0; i < 16; i++)  this.elements[i] = array[i + offset];\r\n        return this;\r\n    };\r\n\r\n    toArray(array = [], offset = 0) {\r\n        var te = this.elements;\r\n\r\n        array[offset] = te[0];\r\n        array[offset + 1] = te[1];\r\n        array[offset + 2] = te[2];\r\n        array[offset + 3] = te[3];\r\n\r\n        array[offset + 4] = te[4];\r\n        array[offset + 5] = te[5];\r\n        array[offset + 6] = te[6];\r\n        array[offset + 7] = te[7];\r\n\r\n        array[offset + 8] = te[8];\r\n        array[offset + 9] = te[9];\r\n        array[offset + 10] = te[10];\r\n        array[offset + 11] = te[11];\r\n\r\n        array[offset + 12] = te[12];\r\n        array[offset + 13] = te[13];\r\n        array[offset + 14] = te[14];\r\n        array[offset + 15] = te[15];\r\n\r\n        return array;\r\n\r\n    };\r\n    /**\r\n     * Multiply the matrix from the right.\r\n     * @param other The multiply matrix\r\n     * @return this\r\n     */\r\n    concat(other: Matrix4) {\r\n        var i, e, a, b, ai0, ai1, ai2, ai3;\r\n\r\n        // Calculate e = a * b\r\n        e = this.elements;\r\n        a = this.elements;\r\n        b = other.elements;\r\n\r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < 4; i++) {\r\n            ai0 = a[i]; ai1 = a[i + 4]; ai2 = a[i + 8]; ai3 = a[i + 12];\r\n            e[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\r\n            e[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\r\n            e[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\r\n            e[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n\r\n        return this;\r\n    };\r\n    // multiply = this.concat;\r\n\r\n    multiply(m) {\r\n        return this.multiplyMatrices(this, m);\r\n    };\r\n    premultiply(m) {\r\n        return this.multiplyMatrices(m, this);\r\n    };\r\n    multiplyMatrices(a, b) {\r\n        var ae = a.elements;\r\n        var be = b.elements;\r\n        var te = this.elements;\r\n\r\n        var a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];\r\n        var a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];\r\n        var a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];\r\n        var a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];\r\n\r\n        var b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];\r\n        var b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];\r\n        var b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];\r\n        var b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];\r\n\r\n        te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n        te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n        te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n        te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n        te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n        te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n        te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n        te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n        te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n        te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n        te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n        te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n        te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n        te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n        te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n        te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Multiply the three-dimensional vector.\r\n     * @param pos  The multiply vector\r\n     * @return The result of multiplication(Float32Array)\r\n     */\r\n    multiplyVector3(pos: Vector3): Vector3 {\r\n        var e = this.elements;\r\n        return new Vector3().set(\r\n            pos.x * e[0] + pos.y * e[4] + pos.z * e[8] + e[12],\r\n            pos.x * e[1] + pos.y * e[5] + pos.z * e[9] + e[13],\r\n            pos.x * e[2] + pos.y * e[6] + pos.z * e[10] + e[14]\r\n        )\r\n    };\r\n\r\n    /**\r\n     * Multiply the four-dimensional vector.\r\n     * @param pos  The multiply vector\r\n     * @return The result of multiplication(Float32Array)\r\n     */\r\n    // multiplyVector4(pos) {\r\n    //     var e = this.elements;\r\n    //     var p = pos.elements;\r\n    //     var v = new Vector4();\r\n    //     var result = v.elements;\r\n\r\n    //     result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + p[3] * e[12];\r\n    //     result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + p[3] * e[13];\r\n    //     result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14];\r\n    //     result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15];\r\n\r\n    //     return v;\r\n    // };\r\n\r\n    /**\r\n     * Transpose the matrix.转置\r\n     * @return this\r\n     */\r\n    transpose(): this {\r\n        var e, t;\r\n\r\n        e = this.elements;\r\n\r\n        t = e[1]; e[1] = e[4]; e[4] = t;\r\n        t = e[2]; e[2] = e[8]; e[8] = t;\r\n        t = e[3]; e[3] = e[12]; e[12] = t;\r\n        t = e[6]; e[6] = e[9]; e[9] = t;\r\n        t = e[7]; e[7] = e[13]; e[13] = t;\r\n        t = e[11]; e[11] = e[14]; e[14] = t;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Calculate the inverse matrix of specified matrix, and set to this.将一矩阵的逆赋给自己\r\n     * @param other The source matrix\r\n     * @return this\r\n     */\r\n    setInverseOf(other: Matrix4): this {\r\n        var i, s, d, inv, det;\r\n\r\n        s = other.elements;\r\n        d = this.elements;\r\n        inv = new Float32Array(16);\r\n\r\n        inv[0] = s[5] * s[10] * s[15] - s[5] * s[11] * s[14] - s[9] * s[6] * s[15]\r\n            + s[9] * s[7] * s[14] + s[13] * s[6] * s[11] - s[13] * s[7] * s[10];\r\n        inv[4] = - s[4] * s[10] * s[15] + s[4] * s[11] * s[14] + s[8] * s[6] * s[15]\r\n            - s[8] * s[7] * s[14] - s[12] * s[6] * s[11] + s[12] * s[7] * s[10];\r\n        inv[8] = s[4] * s[9] * s[15] - s[4] * s[11] * s[13] - s[8] * s[5] * s[15]\r\n            + s[8] * s[7] * s[13] + s[12] * s[5] * s[11] - s[12] * s[7] * s[9];\r\n        inv[12] = - s[4] * s[9] * s[14] + s[4] * s[10] * s[13] + s[8] * s[5] * s[14]\r\n            - s[8] * s[6] * s[13] - s[12] * s[5] * s[10] + s[12] * s[6] * s[9];\r\n\r\n        inv[1] = - s[1] * s[10] * s[15] + s[1] * s[11] * s[14] + s[9] * s[2] * s[15]\r\n            - s[9] * s[3] * s[14] - s[13] * s[2] * s[11] + s[13] * s[3] * s[10];\r\n        inv[5] = s[0] * s[10] * s[15] - s[0] * s[11] * s[14] - s[8] * s[2] * s[15]\r\n            + s[8] * s[3] * s[14] + s[12] * s[2] * s[11] - s[12] * s[3] * s[10];\r\n        inv[9] = - s[0] * s[9] * s[15] + s[0] * s[11] * s[13] + s[8] * s[1] * s[15]\r\n            - s[8] * s[3] * s[13] - s[12] * s[1] * s[11] + s[12] * s[3] * s[9];\r\n        inv[13] = s[0] * s[9] * s[14] - s[0] * s[10] * s[13] - s[8] * s[1] * s[14]\r\n            + s[8] * s[2] * s[13] + s[12] * s[1] * s[10] - s[12] * s[2] * s[9];\r\n\r\n        inv[2] = s[1] * s[6] * s[15] - s[1] * s[7] * s[14] - s[5] * s[2] * s[15]\r\n            + s[5] * s[3] * s[14] + s[13] * s[2] * s[7] - s[13] * s[3] * s[6];\r\n        inv[6] = - s[0] * s[6] * s[15] + s[0] * s[7] * s[14] + s[4] * s[2] * s[15]\r\n            - s[4] * s[3] * s[14] - s[12] * s[2] * s[7] + s[12] * s[3] * s[6];\r\n        inv[10] = s[0] * s[5] * s[15] - s[0] * s[7] * s[13] - s[4] * s[1] * s[15]\r\n            + s[4] * s[3] * s[13] + s[12] * s[1] * s[7] - s[12] * s[3] * s[5];\r\n        inv[14] = - s[0] * s[5] * s[14] + s[0] * s[6] * s[13] + s[4] * s[1] * s[14]\r\n            - s[4] * s[2] * s[13] - s[12] * s[1] * s[6] + s[12] * s[2] * s[5];\r\n\r\n        inv[3] = - s[1] * s[6] * s[11] + s[1] * s[7] * s[10] + s[5] * s[2] * s[11]\r\n            - s[5] * s[3] * s[10] - s[9] * s[2] * s[7] + s[9] * s[3] * s[6];\r\n        inv[7] = s[0] * s[6] * s[11] - s[0] * s[7] * s[10] - s[4] * s[2] * s[11]\r\n            + s[4] * s[3] * s[10] + s[8] * s[2] * s[7] - s[8] * s[3] * s[6];\r\n        inv[11] = - s[0] * s[5] * s[11] + s[0] * s[7] * s[9] + s[4] * s[1] * s[11]\r\n            - s[4] * s[3] * s[9] - s[8] * s[1] * s[7] + s[8] * s[3] * s[5];\r\n        inv[15] = s[0] * s[5] * s[10] - s[0] * s[6] * s[9] - s[4] * s[1] * s[10]\r\n            + s[4] * s[2] * s[9] + s[8] * s[1] * s[6] - s[8] * s[2] * s[5];\r\n\r\n        det = s[0] * inv[0] + s[1] * inv[4] + s[2] * inv[8] + s[3] * inv[12];\r\n        if (det === 0) return this;\r\n\r\n\r\n        det = 1 / det;\r\n        for (i = 0; i < 16; i++)  d[i] = inv[i] * det;\r\n\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Calculate the inverse matrix of this, and set to this.\r\n     * @return this\r\n     */\r\n    invert(): this {\r\n        return this.setInverseOf(this);\r\n    };\r\n\r\n    /**\r\n     * 设置为正交投影矩阵\r\n     * @param left The coordinate of the left of clipping plane.\r\n     * @param right The coordinate of the right of clipping plane.\r\n     * @param top The coordinate of the top top clipping plane.\r\n     * @param bottom The coordinate of the bottom of clipping plane.\r\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @return this\r\n     */\r\n    setOrtho(left: number, right: number, top: number, bottom: number, near: number, far: number): this {\r\n        var e, rw, rh, rd;\r\n\r\n        if (left === right || bottom === top || near === far) {\r\n            throw 'null frustum';\r\n        }\r\n\r\n        rw = 1 / (right - left);\r\n        rh = 1 / (top - bottom);\r\n        rd = 1 / (far - near);\r\n\r\n        e = this.elements;\r\n\r\n        e[0] = 2 * rw;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n\r\n        e[4] = 0;\r\n        e[5] = 2 * rh;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n\r\n        e[8] = 0;\r\n        e[9] = 0;\r\n        e[10] = -2 * rd;\r\n        e[11] = 0;\r\n\r\n        e[12] = -(right + left) * rw;\r\n        e[13] = -(top + bottom) * rh;\r\n        e[14] = -(far + near) * rd;\r\n        e[15] = 1;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Multiply the orthographic projection matrix from the right.\r\n     * @param left The coordinate of the left of clipping plane.\r\n     * @param right The coordinate of the right of clipping plane.\r\n     * @param top The coordinate of the top top clipping plane.\r\n     * @param bottom The coordinate of the bottom of clipping plane.\r\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @return this\r\n     */\r\n    ortho(left, right, top, bottom, near, far) {\r\n        return this.concat(new Matrix4().setOrtho(left, right, top, bottom, near, far));\r\n    };\r\n\r\n    /**\r\n     * Set the perspective projection matrix.\r\n     * @param left The coordinate of the left of clipping plane.\r\n     * @param right The coordinate of the right of clipping plane.\r\n     * @param bottom The coordinate of the bottom of clipping plane.\r\n     * @param top The coordinate of the top top clipping plane.\r\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n     * @return this\r\n     */\r\n    setFrustum(left, right, bottom, top, near, far) {\r\n        var e, rw, rh, rd;\r\n\r\n        if (left === right || top === bottom || near === far) {\r\n            throw 'null frustum';\r\n        }\r\n        if (near <= 0) {\r\n            throw 'near <= 0';\r\n        }\r\n        if (far <= 0) {\r\n            throw 'far <= 0';\r\n        }\r\n\r\n        rw = 1 / (right - left);\r\n        rh = 1 / (top - bottom);\r\n        rd = 1 / (far - near);\r\n\r\n        e = this.elements;\r\n\r\n        e[0] = 2 * near * rw;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n\r\n        e[4] = 0;\r\n        e[5] = 2 * near * rh;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n\r\n        e[8] = (right + left) * rw;\r\n        e[9] = (top + bottom) * rh;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Multiply the perspective projection matrix from the right.\r\n     * @param left The coordinate of the left of clipping plane.\r\n     * @param right The coordinate of the right of clipping plane.\r\n     * @param bottom The coordinate of the bottom of clipping plane.\r\n     * @param top The coordinate of the top top clipping plane.\r\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n     * @return this\r\n     */\r\n    frustum(left, right, bottom, top, near, far) {\r\n        return this.concat(new Matrix4().setFrustum(left, right, bottom, top, near, far));\r\n    };\r\n\r\n    /**\r\n     * Set the perspective projection matrix by fovy and aspect.\r\n     * @param fovy The angle between the upper and lower sides of the frustum.\r\n     * @param aspect The aspect ratio of the frustum. (width/height)\r\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n     * @return this\r\n     */\r\n    setPerspective(fovy: number, aspect: number, near: number, far: number): this {\r\n        var e, rd, s, ct;\r\n\r\n        if (near === far || aspect === 0) {\r\n            throw 'null frustum';\r\n        }\r\n        if (near <= 0) {\r\n            throw 'near <= 0';\r\n        }\r\n        if (far <= 0) {\r\n            throw 'far <= 0';\r\n        }\r\n\r\n        fovy = Math.PI * fovy / 180 / 2;\r\n        s = Math.sin(fovy);\r\n        if (s === 0) {\r\n            throw 'null frustum';\r\n        }\r\n\r\n        rd = 1 / (far - near);\r\n        ct = Math.cos(fovy) / s;\r\n\r\n        e = this.elements;\r\n\r\n        e[0] = ct / aspect;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n\r\n        e[4] = 0;\r\n        e[5] = ct;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n\r\n        e[8] = 0;\r\n        e[9] = 0;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    makePerspective(left, right, top, bottom, near, far) {\r\n        // var near = this.near,\r\n        //     top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\r\n        //     height = 2 * top,\r\n        //     width = this.aspect * height,\r\n        //     left = - 0.5 * width,\r\n        var te = this.elements;\r\n        var x = 2 * near / (right - left);\r\n        var y = 2 * near / (top - bottom);\r\n        var a = (right + left) / (right - left);\r\n        var b = (top + bottom) / (top - bottom);\r\n        var c = - (far + near) / (far - near);\r\n        var d = - 2 * far * near / (far - near);\r\n        te[0] = x; te[4] = 0; te[8] = a; te[12] = 0;\r\n        te[1] = 0; te[5] = y; te[9] = b; te[13] = 0;\r\n        te[2] = 0; te[6] = 0; te[10] = c; te[14] = d;\r\n        te[3] = 0; te[7] = 0; te[11] = - 1; te[15] = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Multiply the perspective projection matrix from the right.\r\n     * @param fovy The angle between the upper and lower sides of the frustum.\r\n     * @param aspect The aspect ratio of the frustum. (width/height)\r\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n     * @return this\r\n     */\r\n    perspective(fovy, aspect, near, far) {\r\n        return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\r\n    };\r\n\r\n    /**\r\n     * Set the matrix for scaling.\r\n     * @param x The scale factor along the X axis\r\n     * @param y The scale factor along the Y axis\r\n     * @param z The scale factor along the Z axis\r\n     * @return this\r\n     */\r\n    setScale(x, y, z) {\r\n        var e = this.elements;\r\n        e[0] = x; e[4] = 0; e[8] = 0; e[12] = 0;\r\n        e[1] = 0; e[5] = y; e[9] = 0; e[13] = 0;\r\n        e[2] = 0; e[6] = 0; e[10] = z; e[14] = 0;\r\n        e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Multiply the matrix for scaling from the right.\r\n     * @param x The scale factor along the X axis\r\n     * @param y The scale factor along the Y axis\r\n     * @param z The scale factor along the Z axis\r\n     * @return this\r\n     */\r\n    scale(x, y, z) {\r\n        var e = this.elements;\r\n        e[0] *= x; e[4] *= y; e[8] *= z;\r\n        e[1] *= x; e[5] *= y; e[9] *= z;\r\n        e[2] *= x; e[6] *= y; e[10] *= z;\r\n        e[3] *= x; e[7] *= y; e[11] *= z;\r\n        return this;\r\n    };\r\n\r\n    getMaxScaleOnAxis() {\r\n        var te = this.elements;\r\n        var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n        var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n        var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n        return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n    };\r\n    /**\r\n     * Set the matrix for translation.\r\n     * @param x The X value of a translation.\r\n     * @param y The Y value of a translation.\r\n     * @param z The Z value of a translation.\r\n     * @return this\r\n     */\r\n    setTranslate(x, y, z) {\r\n        var e = this.elements;\r\n        e[0] = 1; e[4] = 0; e[8] = 0; e[12] = x;\r\n        e[1] = 0; e[5] = 1; e[9] = 0; e[13] = y;\r\n        e[2] = 0; e[6] = 0; e[10] = 1; e[14] = z;\r\n        e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Multiply the matrix for translation from the right.\r\n     * @param x The X value of a translation.\r\n     * @param y The Y value of a translation.\r\n     * @param z The Z value of a translation.\r\n     * @return this\r\n     */\r\n    translate(x, y, z) {\r\n        var e = this.elements;\r\n        e[12] += e[0] * x + e[4] * y + e[8] * z;\r\n        e[13] += e[1] * x + e[5] * y + e[9] * z;\r\n        e[14] += e[2] * x + e[6] * y + e[10] * z;\r\n        e[15] += e[3] * x + e[7] * y + e[11] * z;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set the matrix for rotation.\r\n     * The vector of rotation axis may not be normalized.\r\n     * @param angle The angle of rotation (degrees)\r\n     * @param x The X coordinate of vector of rotation axis.\r\n     * @param y The Y coordinate of vector of rotation axis.\r\n     * @param z The Z coordinate of vector of rotation axis.\r\n     * @return this\r\n     */\r\n    setRotate(angle, x, y, z) {\r\n        var e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\r\n\r\n        angle = Math.PI * angle / 180;\r\n        e = this.elements;\r\n\r\n        s = Math.sin(angle);\r\n        c = Math.cos(angle);\r\n\r\n        if (0 !== x && 0 === y && 0 === z) {\r\n            // Rotation around X axis\r\n            if (x < 0) {\r\n                s = -s;\r\n            }\r\n            e[0] = 1; e[4] = 0; e[8] = 0; e[12] = 0;\r\n            e[1] = 0; e[5] = c; e[9] = -s; e[13] = 0;\r\n            e[2] = 0; e[6] = s; e[10] = c; e[14] = 0;\r\n            e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        } else if (0 === x && 0 !== y && 0 === z) {\r\n            // Rotation around Y axis\r\n            if (y < 0) {\r\n                s = -s;\r\n            }\r\n            e[0] = c; e[4] = 0; e[8] = s; e[12] = 0;\r\n            e[1] = 0; e[5] = 1; e[9] = 0; e[13] = 0;\r\n            e[2] = -s; e[6] = 0; e[10] = c; e[14] = 0;\r\n            e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        } else if (0 === x && 0 === y && 0 !== z) {\r\n            // Rotation around Z axis\r\n            if (z < 0) {\r\n                s = -s;\r\n            }\r\n            e[0] = c; e[4] = -s; e[8] = 0; e[12] = 0;\r\n            e[1] = s; e[5] = c; e[9] = 0; e[13] = 0;\r\n            e[2] = 0; e[6] = 0; e[10] = 1; e[14] = 0;\r\n            e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        } else {\r\n            // Rotation around another axis\r\n            len = Math.sqrt(x * x + y * y + z * z);\r\n            if (len !== 1) {\r\n                rlen = 1 / len;\r\n                x *= rlen;\r\n                y *= rlen;\r\n                z *= rlen;\r\n            }\r\n            nc = 1 - c;\r\n            xy = x * y;\r\n            yz = y * z;\r\n            zx = z * x;\r\n            xs = x * s;\r\n            ys = y * s;\r\n            zs = z * s;\r\n\r\n            e[0] = x * x * nc + c;\r\n            e[1] = xy * nc + zs;\r\n            e[2] = zx * nc - ys;\r\n            e[3] = 0;\r\n\r\n            e[4] = xy * nc - zs;\r\n            e[5] = y * y * nc + c;\r\n            e[6] = yz * nc + xs;\r\n            e[7] = 0;\r\n\r\n            e[8] = zx * nc + ys;\r\n            e[9] = yz * nc - xs;\r\n            e[10] = z * z * nc + c;\r\n            e[11] = 0;\r\n\r\n            e[12] = 0;\r\n            e[13] = 0;\r\n            e[14] = 0;\r\n            e[15] = 1;\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Multiply the matrix for rotation from the right.\r\n     * The vector of rotation axis may not be normalized.\r\n     * @param angle The angle of rotation (degrees)\r\n     * @param x The X coordinate of vector of rotation axis.\r\n     * @param y The Y coordinate of vector of rotation axis.\r\n     * @param z The Z coordinate of vector of rotation axis.\r\n     * @return this\r\n     */\r\n    rotate(angle, x, y, z) {\r\n        return this.concat(new Matrix4().setRotate(angle, x, y, z));\r\n    };\r\n\r\n    /**\r\n     * Set the viewing matrix.\r\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n     * @param centerX, centerY, centerZ The position of the reference point.\r\n     * @param upX, upY, upZ The direction of the up vector.\r\n     * @return this\r\n     */\r\n    setLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) {\r\n        var e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\r\n\r\n        fx = centerX - eyeX;\r\n        fy = centerY - eyeY;\r\n        fz = centerZ - eyeZ;\r\n\r\n        // Normalize f.\r\n        rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz);\r\n        fx *= rlf;\r\n        fy *= rlf;\r\n        fz *= rlf;\r\n\r\n        // Calculate cross product of f and up.\r\n        sx = fy * upZ - fz * upY;\r\n        sy = fz * upX - fx * upZ;\r\n        sz = fx * upY - fy * upX;\r\n\r\n        // Normalize s.\r\n        rls = 1 / Math.sqrt(sx * sx + sy * sy + sz * sz);\r\n        sx *= rls;\r\n        sy *= rls;\r\n        sz *= rls;\r\n\r\n        // Calculate cross product of s and f.\r\n        ux = sy * fz - sz * fy;\r\n        uy = sz * fx - sx * fz;\r\n        uz = sx * fy - sy * fx;\r\n\r\n        // Set to this.\r\n        e = this.elements;\r\n        e[0] = sx;\r\n        e[1] = ux;\r\n        e[2] = -fx;\r\n        e[3] = 0;\r\n\r\n        e[4] = sy;\r\n        e[5] = uy;\r\n        e[6] = -fy;\r\n        e[7] = 0;\r\n\r\n        e[8] = sz;\r\n        e[9] = uz;\r\n        e[10] = -fz;\r\n        e[11] = 0;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n\r\n        // Translate.\r\n        return this.translate(-eyeX, -eyeY, -eyeZ);\r\n    };\r\n\r\n\r\n    // lookAt(eye: Vector3, center: Vector3, up: Vector3) {\r\n    //     // return this.concat(new Matrix4().setLookAt(\r\n    //     //     eye.x, eye.y, eye.z,\r\n    //     //     center.x, center.y, center.z,\r\n    //     //     up.x, up.y, up.z));\r\n    //     return this.setLookAt(\r\n    //         eye.x, eye.y, eye.z,\r\n    //         center.x, center.y, center.z,\r\n    //         up.x, up.y, up.z);\r\n    // };\r\n    //three上的，上面的setLookAt后的矩阵就是视图矩阵\r\n    lookAt(eye: Vector3, target: Vector3, up: Vector3) {\r\n        var x = new Vector3();\r\n        var y = new Vector3();\r\n        var z = new Vector3();\r\n        var te = this.elements;\r\n        z.subVectors(eye, target);\r\n        if (z.lengthSq() === 0) {\r\n            // eye and target are in the same position\r\n            z.z = 1;\r\n        }\r\n        z.normalize();\r\n        x.crossVectors(up, z);\r\n        if (x.lengthSq() === 0) {\r\n            // up and z are parallel\r\n            if (Math.abs(up.z) === 1) {\r\n                z.x += 0.0001;\r\n            } else {\r\n                z.z += 0.0001;\r\n            }\r\n            z.normalize();\r\n            x.crossVectors(up, z);\r\n        }\r\n        x.normalize();\r\n        y.crossVectors(z, x);\r\n        te[0] = x.x; te[4] = y.x; te[8] = z.x;\r\n        te[1] = x.y; te[5] = y.y; te[9] = z.y;\r\n        te[2] = x.z; te[6] = y.z; te[10] = z.z;\r\n        return this;\r\n    };\r\n    /**\r\n     * Multiply the matrix for project vertex to plane from the right.\r\n     * @param plane The array[A, B, C, D] of the equation of plane \"Ax + By + Cz + D = 0\".\r\n     * @param light The array which stored coordinates of the light. if light[3]=0, treated as parallel light.\r\n     * @return this\r\n     */\r\n    dropShadow(plane, light) {\r\n        var mat = new Matrix4();\r\n        var e = mat.elements;\r\n\r\n        var dot = plane[0] * light[0] + plane[1] * light[1] + plane[2] * light[2] + plane[3] * light[3];\r\n\r\n        e[0] = dot - light[0] * plane[0];\r\n        e[1] = - light[1] * plane[0];\r\n        e[2] = - light[2] * plane[0];\r\n        e[3] = - light[3] * plane[0];\r\n\r\n        e[4] = - light[0] * plane[1];\r\n        e[5] = dot - light[1] * plane[1];\r\n        e[6] = - light[2] * plane[1];\r\n        e[7] = - light[3] * plane[1];\r\n\r\n        e[8] = - light[0] * plane[2];\r\n        e[9] = - light[1] * plane[2];\r\n        e[10] = dot - light[2] * plane[2];\r\n        e[11] = - light[3] * plane[2];\r\n\r\n        e[12] = - light[0] * plane[3];\r\n        e[13] = - light[1] * plane[3];\r\n        e[14] = - light[2] * plane[3];\r\n        e[15] = dot - light[3] * plane[3];\r\n\r\n        return this.concat(mat);\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix for project vertex to plane from the right.(Projected by parallel light.)\r\n     * @param normX, normY, normZ The normal vector of the plane.(Not necessary to be normalized.)\r\n     * @param planeX, planeY, planeZ The coordinate of arbitrary points on a plane.\r\n     * @param lightX, lightY, lightZ The vector of the direction of light.(Not necessary to be normalized.)\r\n     * @return this\r\n     */\r\n    dropShadowDirectionally(normX, normY, normZ, planeX, planeY, planeZ, lightX, lightY, lightZ) {\r\n        var a = planeX * normX + planeY * normY + planeZ * normZ;\r\n        return this.dropShadow([normX, normY, normZ, -a], [lightX, lightY, lightZ, 0]);\r\n    };\r\n\r\n    makeRotationFromQuaternion(q) {\r\n        var zero = new Vector3(0, 0, 0);\r\n        var one = new Vector3(1, 1, 1);\r\n        return this.compose(zero, q, one);\r\n    };\r\n\r\n    compose(position: Vector3, quaternion: Quaternion, scale: Vector3) {\r\n\r\n        var te = this.elements;\r\n\r\n        var x = quaternion.x, y = quaternion.y, z = quaternion.z, w = quaternion.w;\r\n        var x2 = x + x, y2 = y + y, z2 = z + z;\r\n        var xx = x * x2, xy = x * y2, xz = x * z2;\r\n        var yy = y * y2, yz = y * z2, zz = z * z2;\r\n        var wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n        var sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n        te[0] = (1 - (yy + zz)) * sx;\r\n        te[1] = (xy + wz) * sx;\r\n        te[2] = (xz - wy) * sx;\r\n        te[3] = 0;\r\n\r\n        te[4] = (xy - wz) * sy;\r\n        te[5] = (1 - (xx + zz)) * sy;\r\n        te[6] = (yz + wx) * sy;\r\n        te[7] = 0;\r\n\r\n        te[8] = (xz + wy) * sz;\r\n        te[9] = (yz - wx) * sz;\r\n        te[10] = (1 - (xx + yy)) * sz;\r\n        te[11] = 0;\r\n\r\n        te[12] = position.x;\r\n        te[13] = position.y;\r\n        te[14] = position.z;\r\n        te[15] = 1;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    decompose(position, quaternion, scale) {\r\n        var vector = new Vector3();\r\n        var matrix = new Matrix4();\r\n        var te = this.elements;\r\n        var sx = vector.set(te[0], te[1], te[2]).length();\r\n        var sy = vector.set(te[4], te[5], te[6]).length();\r\n        var sz = vector.set(te[8], te[9], te[10]).length();\r\n\r\n        // if determine is negative, we need to invert one scale\r\n        var det = this.determinant();\r\n        if (det < 0) sx = - sx;\r\n\r\n        position.x = te[12];\r\n        position.y = te[13];\r\n        position.z = te[14];\r\n\r\n        // scale the rotation part\r\n        matrix.copy(this);\r\n\r\n        var invSX = 1 / sx;\r\n        var invSY = 1 / sy;\r\n        var invSZ = 1 / sz;\r\n\r\n        matrix.elements[0] *= invSX;\r\n        matrix.elements[1] *= invSX;\r\n        matrix.elements[2] *= invSX;\r\n\r\n        matrix.elements[4] *= invSY;\r\n        matrix.elements[5] *= invSY;\r\n        matrix.elements[6] *= invSY;\r\n\r\n        matrix.elements[8] *= invSZ;\r\n        matrix.elements[9] *= invSZ;\r\n        matrix.elements[10] *= invSZ;\r\n\r\n        quaternion.setFromRotationMatrix(matrix);\r\n\r\n        scale.x = sx;\r\n        scale.y = sy;\r\n        scale.z = sz;\r\n\r\n        return this;\r\n    }\r\n\r\n    determinant() {\r\n\r\n        var te = this.elements;\r\n\r\n        var n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];\r\n        var n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];\r\n        var n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];\r\n        var n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];\r\n\r\n        //TODO: make this more efficient\r\n        //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n        return (\r\n            n41 * (\r\n                + n14 * n23 * n32\r\n                - n13 * n24 * n32\r\n                - n14 * n22 * n33\r\n                + n12 * n24 * n33\r\n                + n13 * n22 * n34\r\n                - n12 * n23 * n34\r\n            ) +\r\n            n42 * (\r\n                + n11 * n23 * n34\r\n                - n11 * n24 * n33\r\n                + n14 * n21 * n33\r\n                - n13 * n21 * n34\r\n                + n13 * n24 * n31\r\n                - n14 * n23 * n31\r\n            ) +\r\n            n43 * (\r\n                + n11 * n24 * n32\r\n                - n11 * n22 * n34\r\n                - n14 * n21 * n32\r\n                + n12 * n21 * n34\r\n                + n14 * n22 * n31\r\n                - n12 * n24 * n31\r\n            ) +\r\n            n44 * (\r\n                - n13 * n22 * n31\r\n                - n11 * n23 * n32\r\n                + n11 * n22 * n33\r\n                + n13 * n21 * n32\r\n                - n12 * n21 * n33\r\n                + n12 * n23 * n31\r\n            )\r\n\r\n        );\r\n\r\n    };\r\n\r\n    extractRotation(m) {\r\n        var v1 = new Vector3();\r\n        var te = this.elements;\r\n        var me = m.elements;\r\n\r\n        var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\r\n        var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\r\n        var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\r\n\r\n        te[0] = me[0] * scaleX;\r\n        te[1] = me[1] * scaleX;\r\n        te[2] = me[2] * scaleX;\r\n        te[3] = 0;\r\n\r\n        te[4] = me[4] * scaleY;\r\n        te[5] = me[5] * scaleY;\r\n        te[6] = me[6] * scaleY;\r\n        te[7] = 0;\r\n\r\n        te[8] = me[8] * scaleZ;\r\n        te[9] = me[9] * scaleZ;\r\n        te[10] = me[10] * scaleZ;\r\n        te[11] = 0;\r\n\r\n        te[12] = 0;\r\n        te[13] = 0;\r\n        te[14] = 0;\r\n        te[15] = 1;\r\n\r\n        return this;\r\n\r\n    };\r\n}","\r\n\r\nexport { default as Container } from \"./Container\"\r\nexport * from \"./DisplayObject\"\r\nexport * from \"./FloatDisplay\"//淘宝上用不了，考虑怎么加\r\nexport { default as Sprite } from \"./Sprite\"\r\nexport * from \"./Stage\"","\r\nimport { DisplayObject } from './DisplayObject';\r\nimport { Rectangle } from \"../math/Rectangle\";\r\nimport { Point } from '../math';\r\nimport { CanvasRenderer } from '../renderers/CanvasRenderer';\r\nimport { Event } from \"../events/Event\"\r\nimport { WebglRenderer } from '../renderers/WebglRenderer';\r\n/**\r\n * 容器类\r\n * @class\r\n * @extends DisplayObject\r\n */\r\nexport default class Container extends DisplayObject {\r\n\r\n    /**\r\n     * 为false鼠标事件不再向下传递\r\n     */\r\n    mouseChildren: boolean = true;\r\n    /**\r\n     * 儿子们\r\n     * @member {DisplayObject[]}\r\n     * @readonly\r\n     */\r\n    children: DisplayObject[];\r\n\r\n    /**\r\n     * 特殊用处\r\n     * 缓存的Container的updateTransform\r\n     */\r\n    containerUpdateTransform;\r\n\r\n    constructor() {\r\n        super();\r\n        this._instanceType = \"Container\";\r\n        this.children = [];\r\n    }\r\n\r\n    /**\r\n     * children改变时\r\n     * @private\r\n     */\r\n    onChildrenChange(index) {\r\n        /* empty */\r\n        //子类需要时重写\r\n    }\r\n\r\n    /**\r\n     * 添加child\r\n     * @param {DisplayObject} child\r\n     * @return {DisplayObject}\r\n     */\r\n    addChild<T extends DisplayObject>(child: T): T {\r\n        //默认添加在最顶层\r\n        this.addChildAt(child, this.children.length);\r\n        return child;\r\n    }\r\n    /**\r\n     * 批量添加child\r\n     * @param children \r\n     */\r\n    addChildren<T extends DisplayObject>(...children: T[]): T[] {\r\n        children.forEach((child: T) => { this.addChild(child); })\r\n        return children\r\n    }\r\n\r\n    /**\r\n     * 在相应index处添加child\r\n     * @param {DisplayObject} child - The child to add\r\n     * @param {number} index - The index to place the child in\r\n     * @return {DisplayObject} The child that was added.\r\n     */\r\n    addChildAt<T extends DisplayObject>(child: T, index: number): T {\r\n        if (!child) return;\r\n\r\n        let s = this;\r\n        let sameParent = (s == child.parent);\r\n        let len: number;\r\n        if (child.parent) {\r\n            if (!sameParent) {\r\n                child.parent.removeChild(child);\r\n            } else {\r\n                len = s.children.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    if (s.children[i] == child) {\r\n                        s.children.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        child.parent = s;\r\n\r\n        //保证child的transform会被更新\r\n        child.transform._parentID = -1;\r\n\r\n        //确保包围盒重新计算\r\n        this._boundsID++;\r\n\r\n        len = s.children.length;\r\n        if (index >= len) {\r\n            s.children[s.children.length] = child;\r\n            index = len;\r\n        } else if (index == 0 || index < 0) {\r\n            s.children.unshift(child);\r\n            index = 0;\r\n        } else {\r\n            s.children.splice(index, 0, child);\r\n        }\r\n        if (s.stage && !sameParent) {\r\n            // child[\"_cp\"] = true;\r\n            child._onDispatchBubbledEvent(Event.ADDED_TO_STAGE);\r\n        }\r\n\r\n        this.onChildrenChange(index);\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * 只用于交换索引\r\n     * @param {DisplayObject} child - First display object to swap\r\n     * @param {DisplayObject} child2 - Second display object to swap\r\n     */\r\n    swapChildren(child1: DisplayObject, child2: DisplayObject) {\r\n        if (child1 === child2) {\r\n            return;\r\n        }\r\n        let s = this;\r\n        let id1 = -1;\r\n        let id2 = -1;\r\n        let childCount = s.children.length;\r\n        if (typeof (child1) == \"number\") {\r\n            id1 = child1;\r\n        } else {\r\n            id1 = s.getChildIndex(child1);\r\n        }\r\n        if (typeof (child2) == \"number\") {\r\n            id2 = child2;\r\n        } else {\r\n            id2 = s.getChildIndex(child2);\r\n        }\r\n        if (id1 == id2 || id1 < 0 || id1 >= childCount || id2 < 0 || id2 >= childCount) {\r\n            return false;\r\n        } else {\r\n            let temp: any = s.children[id1];\r\n            s.children[id1] = s.children[id2];\r\n            s.children[id2] = temp;\r\n\r\n            this.onChildrenChange(id1 < id2 ? id1 : id2);\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取child的层级索引index\r\n     * @param {DisplayObject} child - The DisplayObject instance to identify\r\n     * @return {number} The index position of the child display object to identify\r\n     */\r\n    getChildIndex(child: DisplayObject): number {\r\n        const index = this.children.indexOf(child);\r\n\r\n        if (index === -1) {\r\n            return null\r\n        }\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * 设置child的层级\r\n     * @param {DisplayObject} child \r\n     * @param {number} index\r\n     */\r\n    setChildIndex(child: DisplayObject, index: number) {\r\n        this.addChildAt(child, index);\r\n    }\r\n\r\n    /**\r\n     * Returns the child at the specified index\r\n     * @param {number} index - The index to get the child at\r\n     * @return {DisplayObject} The child at the given index, if any.\r\n     */\r\n    getChildAt(index: number): DisplayObject {\r\n        if (index < 0 || index >= this.children.length) {\r\n            return null\r\n        }\r\n        return this.children[index];\r\n    }\r\n\r\n    /**\r\n     * 通过名字获取子级\r\n     * @param name \r\n     * @param isOnlyOne \r\n     * @param isRecursive \r\n     */\r\n    public getChildByName(name: string | RegExp, isOnlyOne: boolean = true, isRecursive: boolean = false): any {\r\n        if (!name) return null;\r\n        let s = this;\r\n        let rex: any;\r\n        if (typeof (name) == \"string\") {\r\n            rex = new RegExp(\"^\" + name + \"$\");\r\n        } else {\r\n            rex = name;\r\n        }\r\n        let elements: Array<DisplayObject> = [];\r\n        Container._getElementsByName(rex, s, isOnlyOne, isRecursive, elements);\r\n        let len = elements.length;\r\n        if (len == 0) {\r\n            return null;\r\n        } else if (len == 1) {\r\n            return elements[0];\r\n        } else {\r\n            return elements;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除child\r\n     * @param {DisplayObject} child\r\n     * @return {DisplayObject} \r\n     */\r\n    removeChild(child: DisplayObject): DisplayObject {\r\n\r\n        const index = this.children.indexOf(child);\r\n\r\n        if (index === -1) return null;\r\n\r\n        this.removeChildAt(index);\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * 在index处移除child\r\n     * @param {number} index - The index to get the child from\r\n     * @return {DisplayObject} The child that was removed.\r\n     */\r\n    removeChildAt(index: number): DisplayObject {\r\n        let s = this;\r\n        let child: any;\r\n        let len = s.children.length - 1;\r\n        if (len < 0) return;\r\n        if (index == len) {\r\n            child = s.children.pop();\r\n        } else if (index == 0) {\r\n            child = s.children.shift();\r\n        } else {\r\n            child = s.children.splice(index, 1)[0];\r\n        }\r\n        child._onDispatchBubbledEvent(Event.REMOVED_FROM_STAGE);\r\n\r\n        //保证子级会被更新\r\n        child.parent = null;\r\n        child.transform._parentID = -1;\r\n\r\n        //保证包围盒重新计算\r\n        this._boundsID++;\r\n\r\n        this.onChildrenChange(index);\r\n\r\n        return child;\r\n    }\r\n    /**\r\n     * 批量移除child，\r\n     * @param children 不传参数，表示全部移除\r\n     */\r\n    removeChildren<T extends DisplayObject>(...children: T[]): T[] {\r\n        //待测试，arr.splice(0)会全部删除，arr.splice(0,undefined)不会，所以this.spliceChildren(0)下面执行的是splice(0,undefined)\r\n        if (!children.length) return this.spliceChildren(0, this.children.length);\r\n\r\n        children.forEach((child: T) => { this.removeChild(child); })\r\n        return children\r\n    }\r\n    /**\r\n     * 移除所有子级\r\n     * @returns 返回移除的子级的数组\r\n     */\r\n    removeAllChildren<T extends DisplayObject>(): T[] {\r\n        return this.removeChildren()\r\n    }\r\n    /**\r\n     * 通过索引批量移除child\r\n     * @param {number} [beginIndex=0]\r\n     * @param {number} [endIndex=this.children.length]\r\n     * @returns {DisplayObject[]} List of removed children\r\n     */\r\n    removeChildrenAt(beginIndex: number = 0, endIndex: number = this.children.length): DisplayObject[] {\r\n        const begin = beginIndex;\r\n        const end = typeof endIndex === 'number' ? endIndex : this.children.length;\r\n        const range = end - begin;\r\n\r\n        if (range > 0 && range <= end) {\r\n            return this.spliceChildren(begin, range)\r\n        }\r\n        else if (range === 0 && this.children.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\r\n    }\r\n    /**\r\n     * 类比splice方法\r\n     * @param beginIndex \r\n     * @param count \r\n     */\r\n    spliceChildren<T extends DisplayObject>(beginIndex?: number, count?: number): T[] {\r\n        let removed = this.children.splice(beginIndex, count);\r\n\r\n        if (!removed.length) return [];\r\n\r\n        for (let i = 0; i < removed.length; ++i) {\r\n            removed[i].parent = null;\r\n            if (removed[i].transform) {\r\n                removed[i].transform._parentID = -1;\r\n            }\r\n        }\r\n\r\n        this._boundsID++;\r\n\r\n        this.onChildrenChange(beginIndex);\r\n\r\n        for (let i = 0; i < removed.length; ++i) {\r\n            removed[i]._onDispatchBubbledEvent(Event.REMOVED_FROM_STAGE);\r\n        }\r\n        return removed as T[];\r\n    }\r\n\r\n    /**\r\n     * 更新矩阵\r\n     */\r\n    updateTransform() {\r\n        //自己先算\r\n        super.updateTransform();\r\n        //考虑是否要加，\r\n        //this._boundsID++;\r\n        //children遍历计算\r\n        for (let i = 0, j = this.children.length; i < j; ++i) {\r\n            const child = this.children[i];\r\n            if (child.visible) {\r\n                child.updateTransform();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 父类重写\r\n     * 都是全局的\r\n     */\r\n    calculateBounds() {\r\n        if (this._lastBoundsID == this._boundsID) return\r\n        this._lastBoundsID = this._boundsID\r\n        this._bounds.clear();\r\n        //算自己的\r\n        this._calculateBounds();\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            const child = this.children[i] as Container;\r\n            if (!child.visible || !child.renderable) {\r\n                continue;\r\n            }\r\n            child.calculateBounds();\r\n            if (child.mask) {\r\n                child.mask.calculateBounds();\r\n                //取交集矩形\r\n                if (child._bounds.x < child.mask._bounds.x) {\r\n                    child._bounds.x = child.mask._bounds.x;\r\n                }\r\n                if (child._bounds.y < child.mask._bounds.y) {\r\n                    child._bounds.y = child.mask._bounds.y;\r\n                }\r\n                if (child._bounds.width > child.mask._bounds.width) {\r\n                    child._bounds.width = child.mask._bounds.width;\r\n                }\r\n                if (child._bounds.height > child.mask._bounds.height) {\r\n                    child._bounds.height = child.mask._bounds.height;\r\n                }\r\n                Rectangle.createFromRects(this._bounds, child._bounds);\r\n            }\r\n            //到时处理mask和filterArea\r\n            else if (child.filterArea) {\r\n\r\n            }\r\n            else {\r\n                Rectangle.createFromRects(this._bounds, child._bounds);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 加\"_\"的方法基本是为了自己特殊处理\r\n     */\r\n    protected _calculateBounds() {\r\n        //子类自己重写\r\n    }\r\n\r\n    /**\r\n     * 检测点是否在任何child上\r\n     * 重写父类方法\r\n     */\r\n    hitTestPoint(globalPoint: Point, isMouseEvent: boolean = false) {\r\n        if (!this.visible) return null\r\n        //如果禁止子级的鼠标事件\r\n        if (isMouseEvent && !this.mouseChildren) return null;\r\n        var children = this.children;\r\n        var length = children.length\r\n        let child, hitDisplayObject;\r\n        //后序遍历，后添加的在上层\r\n        for (var i = length - 1; i >= 0; i--) {\r\n            child = children[i];\r\n            //当作遮罩的不作为检测，跳过\r\n            if (child.isUsedToMask) continue;\r\n            //有遮罩，但是不在遮罩内，跳过\r\n            if (child.mask && !child.mask.hitTestPoint(globalPoint, isMouseEvent)) continue;\r\n            //检测\r\n            hitDisplayObject = child.hitTestPoint(globalPoint, isMouseEvent);\r\n            //存在直接返回\r\n            if (hitDisplayObject) return hitDisplayObject;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * webgl渲染\r\n     * @param {WebglRenderer} renderer - The renderer\r\n     */\r\n    renderWebGL(renderer: WebglRenderer) {\r\n        //不可见，全局透明度为0，或者 不渲染，直接return\r\n        if (!this.visible || this._worldAlpha <= 0 || !this.renderable) {\r\n            return;\r\n        }\r\n        //是否有遮罩。到时如果有滤镜，\r\n        if (this.mask || (this.filters && this.filters.length)) {\r\n            this.renderAdvancedWebGL(renderer);\r\n        }\r\n        else {\r\n            //自身先渲染\r\n            this._renderWebGL(renderer);\r\n            //遍历children\r\n            for (let i = 0, j = this.children.length; i < j; ++i) {\r\n                this.children[i].renderWebGL(renderer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 高级渲染方法\r\n     *\r\n     * @private\r\n     * @param {WebGLRenderer} renderer - The renderer\r\n     */\r\n    private renderAdvancedWebGL(renderer: WebglRenderer) {\r\n        //之前的批处理刷掉先\r\n        renderer.batchManager.flush();\r\n\r\n        //有滤镜再说\r\n        const filters = this.filters;\r\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\r\n        if (filters) {\r\n            if (!this._enabledFilters) this._enabledFilters = [];\r\n            //重置\r\n            this._enabledFilters.length = 0;\r\n            //筛选可用的\r\n            for (let i = 0; i < filters.length; i++) {\r\n                if (filters[i].enabled) this._enabledFilters.push(filters[i]);\r\n            }\r\n            if (this._enabledFilters.length) renderer.filterManager.pushFilter(this, this._enabledFilters);\r\n        }\r\n\r\n        const mask = this.mask;\r\n        if (mask) {\r\n            //先画遮罩\r\n            renderer.maskManager.pushMask(this, this.mask);\r\n        }\r\n\r\n        //渲染自身\r\n        this._renderWebGL(renderer);\r\n\r\n        //遍历children\r\n        for (let i = 0, j = this.children.length; i < j; i++) {\r\n            this.children[i].renderWebGL(renderer);\r\n        }\r\n\r\n        //刷掉批处理\r\n        renderer.batchManager.flush();\r\n\r\n        if (mask) {\r\n            //移除遮罩，支持多重遮罩\r\n            renderer.maskManager.popMask(this, this.mask);\r\n        }\r\n\r\n        //移除滤镜\r\n        if (filters && this._enabledFilters && this._enabledFilters.length) renderer.filterManager.popFilter();\r\n\r\n    }\r\n\r\n    /**\r\n     * 自身渲染方式\r\n     * @private\r\n     * @param {WebglRenderer} renderer - The renderer\r\n     */\r\n    protected _renderWebGL(renderer: WebglRenderer) {\r\n        //自身绘制方法\r\n    }\r\n\r\n    /**\r\n     * canvas渲染方式\r\n     * @param {CanvasRenderer} renderer - The renderer\r\n     */\r\n    renderCanvas(renderer: CanvasRenderer) {\r\n        if (!this.visible || this._worldAlpha <= 0 || !this.renderable) {\r\n            return;\r\n        }\r\n\r\n        if (this.mask) {\r\n            renderer.maskManager.pushMask(this.mask);\r\n        }\r\n\r\n        this._renderCanvas(renderer);\r\n        for (let i = 0, j = this.children.length; i < j; ++i) {\r\n            this.children[i].renderCanvas(renderer);\r\n        }\r\n\r\n        if (this.mask) {\r\n            renderer.maskManager.popMask(renderer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 自身渲染方法\r\n     *\r\n     * @private\r\n     * @param {CanvasRenderer} renderer - The renderer\r\n     */\r\n    protected _renderCanvas(renderer: CanvasRenderer) {\r\n        //自身绘制方法\r\n    }\r\n\r\n    /**\r\n     * 更新方法\r\n     */\r\n    update() {\r\n        if (!this.visible) return;\r\n        //更新自己的\r\n        super.update()\r\n        //更新儿子们的\r\n        let len = this.children.length;\r\n        for (let i = len - 1; i >= 0; i--) {\r\n            const child = this.children[i];\r\n            if (child.visible) child.update();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 调用此方法对自己及其child触发一次指定事件\r\n     * @method _onDispatchBubbledEvent\r\n     * @public\r\n     * @param {string} type\r\n     * @since 1.0.0\r\n     */\r\n    public _onDispatchBubbledEvent(type: string): void {\r\n        let s = this;\r\n        let len = s.children.length;\r\n        if (type == Event.REMOVED_FROM_STAGE && !s.stage) return;\r\n        super._onDispatchBubbledEvent(type);\r\n        for (let i = 0; i < len; i++) {\r\n            s.children[i]._onDispatchBubbledEvent(type);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    destroy() {\r\n        let s = this;\r\n        //让子级也destroy\r\n        for (let i = s.children.length - 1; i >= 0; i--) {\r\n            s.children[i].destroy();\r\n        }\r\n        super.destroy();\r\n        this.mouseChildren = false;\r\n    }\r\n\r\n    /**\r\n     * 一般用于获取宽高并设置\r\n     * 包括子级的,容器的尽量少用，子类可重写\r\n     * @member {number}\r\n     */\r\n    get width() {\r\n        return this.scale.x * this.getLocalBounds().width;\r\n    }\r\n\r\n    set width(value) {\r\n        const width = this.getLocalBounds().width;\r\n\r\n        if (width !== 0) {\r\n            this.scale.x = value / width;\r\n        }\r\n        else {\r\n            this.scale.x = 1;\r\n        }\r\n        //子类有用，有_width,才需设置scaleX\r\n        this._width = value\r\n    }\r\n\r\n    /**\r\n     * 高度同width\r\n     * @member {number}\r\n     */\r\n    get height() {\r\n        return this.scale.y * this.getLocalBounds().height;\r\n    }\r\n\r\n    set height(value) {\r\n        const height = this.getLocalBounds().height;\r\n\r\n        if (height !== 0) {\r\n            this.scale.y = value / height;\r\n        }\r\n        else {\r\n            this.scale.y = 1;\r\n        }\r\n\r\n        this._height = value\r\n    }\r\n\r\n    //全局遍历\r\n    /**\r\n     * @method _getElementsByName\r\n     * @param {RegExp} rex\r\n     * @param {Container} root\r\n     * @param {boolean} isOnlyOne\r\n     * @param {boolean} isRecursive\r\n     * @param {Array<DisplayObject>} resultList\r\n     * @private\r\n     * @static\r\n     */\r\n    private static _getElementsByName(rex: RegExp, root: Container, isOnlyOne: boolean, isRecursive: boolean, resultList: Array<DisplayObject>): void {\r\n        let len = root.children.length;\r\n        if (len > 0) {\r\n            let name: string;\r\n            let child: any;\r\n            for (let i = 0; i < len; i++) {\r\n                child = root.children[i];\r\n                name = child.name;\r\n                if (name && name != \"\") {\r\n                    if (rex.test(name)) {\r\n                        resultList[resultList.length] = child;\r\n                        if (isOnlyOne) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                if (isRecursive) {\r\n                    if (child[\"children\"] != null) {\r\n                        Container._getElementsByName(rex, child, isOnlyOne, isRecursive, resultList);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\r\n","\r\nimport { HashObject } from \"../HashObject\";\r\nimport { Event } from \"./Event\";\r\n/**\r\n * 事件触发基类 功能简单，如果需全能的，到时用EventEmitter3，现成库，事件名，事件，once否集合成实例\r\n * @class EventDispatcher\r\n * @extends HashObject\r\n * @public\r\n * @since 1.0.0\r\n */\r\nexport class EventDispatcher extends HashObject {\r\n    /**\r\n     * 捕获阶段事件名\r\n     */\r\n    protected eventTypes: any = {};\r\n    /**\r\n     * 冒泡阶段事件名\r\n     */\r\n    protected eventTypes1: any = {};\r\n\r\n    public constructor() {\r\n        super();\r\n        this._instanceType = \"EventDispatcher\";\r\n    }\r\n\r\n    /**\r\n     * 全局的鼠标事件的监听数对象表，比如{\"onMouseMove\":9,\"onMouseDown\":7}\r\n     * @property _MECO\r\n     * @private\r\n     * @since 1.0.0\r\n     */\r\n    private static _MECO: any = {};\r\n    /**\r\n     * 所有鼠标事件的数量\r\n     */\r\n    public static _totalMEC: number = 0;\r\n\r\n    /**\r\n     * 看看有多少mouse或者touch侦听数\r\n     * @method getMouseEventCount\r\n     * @return {number}\r\n     * @static\r\n     * @private\r\n     * @since 1.0.0\r\n     * @param {string} type 获取事件类型，默认是所有\r\n     */\r\n    public static getMouseEventCount(type: string = \"\"): number {\r\n        let count: number = 0;\r\n        if (type == \"\") {\r\n            //返回所有鼠标事件数\r\n            for (let item in EventDispatcher._MECO) {\r\n                if (item.indexOf(\"onMouse\") == 0) {\r\n                    count += EventDispatcher._MECO[item];\r\n                }\r\n            }\r\n        } else {\r\n            if (EventDispatcher._MECO[type]) {\r\n                count = EventDispatcher._MECO[type];\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * 给对象添加一个侦听\r\n     * @method addEventListener\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {string} type 侦听类形\r\n     * @param {Function}listener 侦听后的回调方法,如果这个方法是类实例的方法\r\n     * @param context thisObject\r\n     * @param {boolean} useCapture true 捕获阶段 false 冒泡阶段 默认 true\r\n     * @example\r\n     *      this.addEventListener(Event.ADD_TO_STAGE,function(e){trace(this);},this);\r\n     */\r\n    public addEventListener(type: string, listener: Function, context?: any, useCapture: boolean = true): this {\r\n        if (!type) {\r\n            throw new Error(\"添加侦听的type值为undefined\");\r\n        }\r\n        if (!listener) {\r\n            throw new Error(\"侦听回调函数不能为null\");\r\n        }\r\n        let s = this;\r\n        let eventTypes = s.eventTypes;\r\n        if (!useCapture) {\r\n            eventTypes = s.eventTypes1;\r\n        }\r\n        if (!eventTypes[type]) {\r\n            eventTypes[type] = [];\r\n        }\r\n        // if (eventTypes[type].indexOf(listener) < 0) {\r\n        //     eventTypes[type].unshift(listener);\r\n        //     if (type.indexOf(\"onMouse\") == 0) {\r\n        //         s._changeMouseCount(type, true);\r\n        //     }\r\n        // }\r\n        //改成EE的\r\n        for (var i = 0, len = eventTypes[type].length; i < len; i++) {\r\n            let ee: EE = eventTypes[type][i]\r\n            if (ee.fn === listener && ee.context === context) {\r\n                console.log(\"已添加过该事件\")\r\n                return s\r\n            }\r\n        }\r\n        eventTypes[type].unshift(new EE(listener, context || s));\r\n        if (type.indexOf(\"onMouse\") == 0) {\r\n            s._changeMouseCount(type, true);\r\n        }\r\n        return s\r\n    }\r\n\r\n    /**\r\n     * 监听一次\r\n     * @param type\r\n     * @param listener\r\n     * @param context\r\n     * @param useCapture\r\n     */\r\n    public once(type: string, listener: Function, context?: any, useCapture: boolean = true): this {\r\n        if (!type) {\r\n            throw new Error(\"添加侦听的type值为undefined\");\r\n        }\r\n        if (!listener) {\r\n            throw new Error(\"侦听回调函数不能为null\");\r\n        }\r\n        let s = this;\r\n        let eventTypes = s.eventTypes;\r\n        if (!useCapture) {\r\n            eventTypes = s.eventTypes1;\r\n        }\r\n        if (!eventTypes[type]) {\r\n            eventTypes[type] = [];\r\n        }\r\n        //考虑是否要检查已添加过该事件\r\n        eventTypes[type].unshift(new EE(listener, context || s, true));\r\n        if (type.indexOf(\"onMouse\") == 0) {\r\n            s._changeMouseCount(type, true);\r\n        }\r\n        return s\r\n    }\r\n\r\n    /**\r\n     * 增加或删除相应mouse或touch侦听记数\r\n     * @method _changeMouseCount\r\n     * @private\r\n     * @since 1.0.0\r\n     * @param {string} type\r\n     * @param {boolean} isAdd\r\n     */\r\n    private _changeMouseCount(type: string, isAdd: boolean): void {\r\n        let count = isAdd ? 1 : -1;\r\n        if (!EventDispatcher._MECO[type]) {\r\n            EventDispatcher._MECO[type] = 0;\r\n        }\r\n        EventDispatcher._MECO[type] += count;\r\n        if (EventDispatcher._MECO[type] < 0) {\r\n            EventDispatcher._MECO[type] = 0;\r\n        }\r\n        EventDispatcher._totalMEC += count;\r\n    }\r\n\r\n    private _defaultEvent: Event;\r\n\r\n    /**\r\n     * 广播侦听\r\n     * @method dispatchEvent\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {Event|string} event 广播所带的事件对象,如果传的是字符串则直接自动生成一个的事件对象,事件类型就是你传入进来的字符串的值\r\n     * @param {Object} data 广播后跟着事件一起传过去的其他任信息,默认值为null，在传参中\r\n     * @param {boolean} useCapture true 捕获阶段 false 冒泡阶段 默认 true\r\n     * @return {boolean} 如果有收听者则返回true\r\n     * @example\r\n     *      var mySprite=new Sprite(),\r\n     *          yourEvent=new Event(\"yourCustomerEvent\");\r\n     *       yourEvent.data='false2x';\r\n     *       mySprite.addEventListener(\"yourCustomerEvent\",function(e){\r\n     *          trace(e.data);\r\n     *        })\r\n     *       mySprite.dispatchEvent(yourEvent);\r\n     */\r\n    public dispatchEvent(event: any, data: any = null, useCapture: boolean = true): boolean {\r\n        let s = this;\r\n        if (typeof (event) == \"string\") {\r\n            if (!s._defaultEvent) {\r\n                s._defaultEvent = new Event(event);\r\n            } else {\r\n                s._defaultEvent.reset(event, s);\r\n            }\r\n            event = s._defaultEvent;\r\n        }\r\n        let listeners: EE[] = s.eventTypes[event.type];\r\n        if (!useCapture) {\r\n            listeners = s.eventTypes1[event.type];\r\n        }\r\n        if (listeners) {\r\n            let len = listeners.length;\r\n            if (event.target == null) {\r\n                event.target = s;\r\n            }\r\n            if (data != null) {\r\n                event.data = data;\r\n            }\r\n            for (let i = len - 1; i >= 0; i--) {\r\n                if (!event[\"_pd\"]) {\r\n                    if (listeners[i]) {\r\n                        let listener = listeners[i];\r\n                        let type = event.type;//防止call事件里触发其他事件导致event被修改；\r\n                        listener.fn.call(listener.context, event)\r\n                        //必须做单独指向，因为有可能出现上面的fn.里执行的就是removeEventListener，导致listeners[i]不存在\r\n                        if (listener.once) {\r\n                            s.removeEventListener(type/*event.type*/, listener.fn, listener.context, useCapture);\r\n                        }\r\n                        // listeners[i](event);\r\n                    } else {\r\n                        //空的直接移除，\r\n                        listeners.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否有添加过此类形的侦听\r\n     * @method hasEventListener\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {string} type 侦听类形\r\n     * @param {boolean} useCapture true 捕获阶段 false 冒泡阶段 默认 true\r\n     * @return {boolean} 如果有则返回true\r\n     */\r\n    public hasEventListener(type: string, useCapture: boolean = true): boolean {\r\n        let s = this;\r\n        if (useCapture) {\r\n            if (s.eventTypes[type] && s.eventTypes[type].length > 0) {\r\n                return true\r\n            }\r\n        } else {\r\n            if (s.eventTypes1[type] && s.eventTypes1[type].length > 0) {\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 清除某一类型的所有事件\r\n     * @param type \r\n     * @param useCapture true 捕获阶段 false 冒泡阶段 默认 true\r\n     * @return 返回自己\r\n     */\r\n    public removeAllEventListenerByType(type: string, useCapture: boolean = true): this {\r\n        let s = this;\r\n        if (useCapture) {\r\n            if (s.eventTypes[type] && s.eventTypes[type].length > 0) {\r\n                if (type.indexOf(\"onMouse\") == 0) {\r\n                    for (let j = 0; j < s.eventTypes[type].length; j++) {\r\n                        s._changeMouseCount(type, false);\r\n                    }\r\n                }\r\n                s.eventTypes[type] = [];\r\n            }\r\n        } else {\r\n            if (s.eventTypes1[type] && s.eventTypes1[type].length > 0) {\r\n                if (type.indexOf(\"onMouse\") == 0) {\r\n                    for (let j = 0; j < s.eventTypes1[type].length; j++) {\r\n                        s._changeMouseCount(type, false);\r\n                    }\r\n                }\r\n                s.eventTypes1[type] = [];\r\n            }\r\n        }\r\n        return s\r\n    }\r\n\r\n    /**\r\n     * 移除对应类型的侦听\r\n     * @method removeEventListener\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {string} type 要移除的侦听类型\r\n     * @param {Function} listener 及侦听时绑定的回调方法\r\n     * @param context listener和context都相等的才移除，默认自身\r\n     * @param {boolean} useCapture true 捕获阶段 false 冒泡阶段 默认 true\r\n     */\r\n    public removeEventListener(type: string, listener: Function, context?: any, useCapture: boolean = true): this {\r\n        let s = this;\r\n        let listeners: EE[] = s.eventTypes[type];\r\n        if (!useCapture) {\r\n            listeners = s.eventTypes1[type];\r\n        }\r\n        if (listeners) {\r\n            let len = listeners.length;\r\n            let thisObject = context || s;\r\n            for (let i = len - 1; i >= 0; i--) {\r\n                if (listeners[i].fn === listener && listeners[i].context === thisObject) {\r\n                    listeners.splice(i, 1);\r\n                    if (type.indexOf(\"onMouse\") == 0) {\r\n                        s._changeMouseCount(type, false);\r\n                    }\r\n                }\r\n                // if (listeners[i] === listener) {\r\n                //     listeners.splice(i, 1);\r\n                //     if (type.indexOf(\"onMouse\") == 0) {\r\n                //         s._changeMouseCount(type, false);\r\n                //     }\r\n                // }\r\n            }\r\n        }\r\n        return s\r\n    }\r\n\r\n    /**\r\n     * 移除对象中所有的侦听\r\n     * @method removeAllEventListener\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public removeAllEventListener() {\r\n        let s = this;\r\n        for (let type in s.eventTypes) {\r\n            if (type.indexOf(\"onMouse\") == 0) {\r\n                for (let j = 0; j < s.eventTypes[type].length; j++) {\r\n                    s._changeMouseCount(type, false);\r\n                }\r\n            }\r\n        }\r\n        for (let type in s.eventTypes1) {\r\n            if (type.indexOf(\"onMouse\") == 0) {\r\n                for (let j = 0; j < s.eventTypes1[type].length; j++) {\r\n                    s._changeMouseCount(type, false);\r\n                }\r\n            }\r\n        }\r\n        s.eventTypes1 = {};\r\n        s.eventTypes = {};\r\n    }\r\n\r\n    destroy(): void {\r\n        let s = this;\r\n        s.removeAllEventListener();\r\n        s.eventTypes = null;\r\n        s.eventTypes1 = null;\r\n    }\r\n}\r\n\r\n/**\r\n * 为了实现带入this和once\r\n * 暂不做回收处理，因为存在引用fn,context.内存销毁可能出问题\r\n * 如果非要作回收，回收时必须将fn,context置null；这样还有必要回收？\r\n */\r\nclass EE {\r\n    fn: Function;\r\n    context: any;\r\n    once: boolean;\r\n    constructor(fn: Function, context: any, once: boolean = false) {\r\n        this.fn = fn;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n}\r\n","\r\n//默认下顶点着色器都用highp float精度，片元着色器用mediump float\r\n\r\nexport const defaultVert =\r\n    \"precision highp float;\" +\r\n    \"attribute vec2 aVertexPosition;\" +\r\n    \"attribute vec2 aTextureCoord;\" +\r\n\r\n    \"uniform mat3 projectionMatrix;\" +\r\n\r\n    \"varying vec2 vTextureCoord;\" +\r\n\r\n    \"void main(void){\" +\r\n    \"gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\" +\r\n    \"vTextureCoord = aTextureCoord;\" +\r\n    \"}\"\r\n\r\nexport const defaultFilterMatrix =\r\n    \"precision highp float;\" +\r\n    \"attribute vec2 aVertexPosition;\" +\r\n    \"attribute vec2 aTextureCoord;\" +\r\n\r\n    \"uniform mat3 projectionMatrix;\" +\r\n    \"uniform mat3 filterMatrix;\" +\r\n\r\n    \"varying vec2 vTextureCoord;\" +\r\n    \"varying vec2 vFilterCoord;\" +\r\n\r\n    \"void main(void){\" +\r\n    \"gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\" +\r\n    \"vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;\" +\r\n    \"vTextureCoord = aTextureCoord;\" +\r\n    \"}\"","export { default as Texture } from \"./Texture\";\r\n\r\nexport { default as BaseTexture } from \"./BaseTexture\";\r\n\r\nexport * from \"./createTextureSheet\";","import { Scene3D } from \"./Scene3D\";\r\nimport { Matrix4 } from \"./math/Matrix4\";\r\nimport { Vector3 } from \"./math/Vector3\";\r\nimport { Quaternion } from \"./math/Quaternion\";\r\nimport { Euler } from \"./math/Euler\";\r\nimport { EventDispatcher, Event } from \"../2d/events\";\r\nimport { RAD_TO_DEG, DEG_TO_RAD } from \"../2d/const\"\r\nimport { Raycaster, IntersectData } from \"./Raycaster\";\r\n\r\nconst tempVector3 = new Vector3();\r\n\r\nexport class Object3D extends EventDispatcher {\r\n    static DefaultUp: Vector3 = new Vector3(0, 1, 0)\r\n    /**\r\n     * 名字\r\n     */\r\n    public name: string = null;\r\n    /**\r\n     * 是否可见\r\n     */\r\n    public visible: boolean = true;\r\n\r\n    public mouseEnable: boolean = true;\r\n\r\n    public mouseChildren: boolean = true;\r\n    /**\r\n     * 是否投射影子，针对光源和物体\r\n     */\r\n    public castShadow: boolean = false;\r\n    /**\r\n     * 是否接收影子，针对物体，考虑包括光感与非光感吗？\r\n     */\r\n    public receiveShadow: boolean = false;\r\n    /**\r\n     * 场景\r\n     */\r\n    public scene: Scene3D;\r\n    /**\r\n     * 子级\r\n     */\r\n    public children: Object3D[] = [];\r\n    /**\r\n     * 父级\r\n     */\r\n    public parent: Object3D = null;\r\n    /**\r\n     * 世界矩阵\r\n     */\r\n    _worldMatrix: Matrix4 = new Matrix4();\r\n    /**\r\n     * 本地矩阵\r\n     */\r\n    _localMatrix: Matrix4 = new Matrix4();\r\n\r\n    public up = Object3D.DefaultUp.clone();\r\n\r\n    position: Vector3 = new Vector3();\r\n    scale: Vector3 = new Vector3(1, 1, 1);\r\n\r\n    rotation: Euler;\r\n    quaternion: Quaternion\r\n\r\n    constructor() {\r\n        super();\r\n        this._instanceType = \"Object3D\";\r\n\r\n        var rotation = new Euler();\r\n        var quaternion = new Quaternion();\r\n\r\n        function onRotationChange() {\r\n            quaternion.setFromEuler(rotation, false);\r\n        }\r\n        function onQuaternionChange() {\r\n            rotation.setFromQuaternion(quaternion, undefined, false);\r\n        }\r\n\r\n        rotation.onChange(onRotationChange);\r\n        quaternion.onChange(onQuaternionChange);\r\n\r\n        this.rotation = rotation;\r\n        this.quaternion = quaternion;\r\n    }\r\n    addChild<T extends Object3D>(object: T): T {\r\n        // //是否已添加，不考虑先后渲染了\r\n        // if (this === object.parent) return object;\r\n        // //从原先父级移除自己\r\n        // if (object.parent) object.parent.removeChild(object);\r\n        // object.parent = this;\r\n        // this.children.push(object);\r\n        // //冒泡\r\n        // if (this.scene) object._onDispatchBubbledEvent(\"onAddedToScene\");\r\n        // return object\r\n\r\n        this.addChildAt(object, this.children.length);\r\n        return object;\r\n    }\r\n    addChildAt<T extends Object3D>(child: T, index: number): T {\r\n        if (!child) return;\r\n        let s = this;\r\n        let sameParent = (s == child.parent);\r\n        let len: number;\r\n        if (child.parent) {\r\n            if (!sameParent) {\r\n                child.parent.removeChild(child);\r\n            } else {\r\n                len = s.children.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    if (s.children[i] == child) {\r\n                        s.children.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        child.parent = s;\r\n        len = s.children.length;\r\n        if (index >= len) {\r\n            s.children[s.children.length] = child;\r\n            index = len;\r\n        } else if (index == 0 || index < 0) {\r\n            s.children.unshift(child);\r\n            index = 0;\r\n        } else {\r\n            s.children.splice(index, 0, child);\r\n        }\r\n        if (s.scene && !sameParent) {\r\n            child._onDispatchBubbledEvent(\"onAddedToScene\");\r\n        }\r\n        return child;\r\n    }\r\n    addChildren<T extends Object3D>(...children: T[]): T[] {\r\n        children.forEach((child: T) => { this.addChild(child); })\r\n        return children;\r\n    }\r\n    removeChild<T extends Object3D>(object: T): T {\r\n        var index = this.children.indexOf(object);\r\n        if (index !== - 1) {\r\n            object.parent = null;\r\n            object._onDispatchBubbledEvent('onRemovedFromScene');\r\n            this.children.splice(index, 1);\r\n        }\r\n        return object\r\n    }\r\n    /**\r\n     * FYGE. Event得加上属性REMOVED_FROM_SCENE，ADDED_TO_SCENE\r\n     * @param type \r\n     */\r\n    private _onDispatchBubbledEvent(type: string): void {\r\n        let s: Object3D = this;\r\n        if (type == \"onRemovedFromScene\" && !s.scene) return;\r\n        if (type == \"onRemovedFromScene\") {\r\n            s.dispatchEvent(type);\r\n            //以防REMOVED_FROM_STAGE事件里用到了scene\r\n            s.scene = null;\r\n        } else if (type == \"onAddedToScene\") {\r\n            s.scene = s.parent.scene;\r\n            s.dispatchEvent(type);\r\n        }\r\n        let len = s.children.length;\r\n        //子级的处理\r\n        for (let i = 0; i < len; i++) {\r\n            s.children[i]._onDispatchBubbledEvent(type);\r\n        }\r\n    }\r\n\r\n\r\n    clone(recursive: boolean = true) {\r\n        return new Object3D().copy(this, recursive);\r\n    };\r\n    copy(source: Object3D, recursive: boolean = true) {\r\n        this.name = source.name;\r\n        this.visible = source.visible;\r\n        this.up.copy(source.up);\r\n\r\n        this.position.copy(source.position);\r\n        this.quaternion.copy(source.quaternion);\r\n        this.scale.copy(source.scale);\r\n\r\n        this._localMatrix.copy(source._localMatrix);\r\n        this._worldMatrix.copy(source._worldMatrix);\r\n\r\n        this.visible = source.visible;\r\n        if (recursive === true) {\r\n            for (var i = 0; i < source.children.length; i++) {\r\n                var child = source.children[i];\r\n                this.addChild(child.clone());\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    lookAt(x: number, y: number, z: number) {\r\n        var q1 = new Quaternion();\r\n        var m1 = new Matrix4();\r\n        var target = new Vector3();\r\n        var position = new Vector3();\r\n\r\n        target.set(x, y, z);\r\n\r\n        var parent = this.parent;\r\n\r\n        this.updateWorldMatrix(true, false);\r\n\r\n        position.setFromMatrixPosition(this._worldMatrix);\r\n\r\n        if (this._instanceType == \"Camera\" || this._instanceType == \"PerspectiveCamera\" || this._instanceType == \"OrthographicCamera\") {\r\n            m1.lookAt(position, target, this.up);\r\n        } else {\r\n            m1.lookAt(target, position, this.up);\r\n        }\r\n        this.quaternion.setFromRotationMatrix(m1);\r\n        if (parent) {\r\n            m1.extractRotation(parent._worldMatrix);\r\n            q1.setFromRotationMatrix(m1);\r\n            this.quaternion.premultiply(q1.inverse());\r\n        }\r\n\r\n    };\r\n\r\n    applyMatrix(matrix: Matrix4) {\r\n        this._localMatrix.multiplyMatrices(matrix, this._localMatrix);\r\n        this._localMatrix.decompose(this.position, this.quaternion, this.scale);\r\n\r\n    }\r\n\r\n    applyQuaternion(q: Quaternion) {\r\n        this.quaternion.premultiply(q);\r\n        return this;\r\n    }\r\n\r\n    localToGlobal(vector: Vector3) {\r\n        return vector.applyMatrix4(this._worldMatrix);\r\n    };\r\n\r\n    globalToLocal(vector: Vector3) {\r\n        if (vector instanceof Vector3) {\r\n            var m1 = new Matrix4();\r\n            return vector.applyMatrix4(m1.setInverseOf(this._worldMatrix));\r\n        }\r\n        return vector\r\n    };\r\n    /**\r\n     * 获取该物体的舞台坐标\r\n     */\r\n    get stagePos(): { x: number, y: number } {\r\n        if (!this.scene) return null;\r\n        const scene = this.scene;\r\n        this.localToGlobal(tempVector3.set(0, 0, 0));\r\n        tempVector3.project(scene.camera);\r\n        var a = scene.viewWidth / 2;\r\n        var b = scene.viewHeight / 2;\r\n        var x = Math.round(tempVector3.x * a + a) + scene.viewX;//标准设备坐标转屏幕坐标\r\n        var y = Math.round(-tempVector3.y * b + b) + scene.viewY;//标准设备坐标转屏幕坐标\r\n        return { x, y };\r\n    }\r\n\r\n    updateLocalMatrix() {\r\n        this._localMatrix.compose(this.position, this.quaternion, this.scale);\r\n        // this.dirty=true\r\n    }\r\n    /**\r\n     * 现在每帧都计算，以后考虑加标记，或手动设置标记更新\r\n     * @param updateParents \r\n     * @param updateChildren \r\n     */\r\n    updateWorldMatrix(updateParents: boolean = false, updateChildren: boolean = true) {\r\n\r\n        var parent = this.parent;\r\n        if (updateParents === true && parent !== null) {\r\n            //先往父级递归计算矩阵，判断一次是否2d的父级\r\n            parent.updateWorldMatrix && parent.updateWorldMatrix(true, false);\r\n        }\r\n\r\n        //更新本地矩阵先，后续优化加标记\r\n        this.updateLocalMatrix();\r\n        //给出父级的世界矩阵\r\n        if (this.parent === null || !(this.parent instanceof Object3D)) {\r\n            this._worldMatrix.copy(this._localMatrix);\r\n        } else {\r\n            this._worldMatrix.multiplyMatrices(this.parent._worldMatrix, this._localMatrix);\r\n        }\r\n        if (updateChildren === true) {\r\n            var children = this.children;\r\n            //往子级递归\r\n            for (var i = 0, l = children.length; i < l; i++)children[i].updateWorldMatrix(false, true);\r\n        }\r\n    }\r\n    /**\r\n     * 统一更新方法，子类可重写，基类用于派发监听事件\r\n     */\r\n    update() {\r\n        if (!this.visible) return;\r\n        //监听的\r\n        if (this.hasEventListener(Event.ENTER_FRAME)) {\r\n            this.dispatchEvent(Event.ENTER_FRAME);\r\n        }\r\n        //自己处理\r\n        let len = this.children.length;\r\n        for (let i = len - 1; i >= 0; i--) {\r\n            const child = this.children[i];\r\n            if (child.visible) child.update();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 通过名字获取子级\r\n     * @param name \r\n     * @param isOnlyOne \r\n     * @param isRecursive \r\n     */\r\n    public getChildByName(name: string | RegExp, isOnlyOne: boolean = true, isRecursive: boolean = false): any {\r\n        if (!name) return null;\r\n        let s = this;\r\n        let rex: any;\r\n        if (typeof (name) == \"string\") {\r\n            rex = new RegExp(\"^\" + name + \"$\");\r\n        } else {\r\n            rex = name;\r\n        }\r\n        let elements: Array<Object3D> = [];\r\n        Object3D._getElementsByName(rex, s, isOnlyOne, isRecursive, elements);\r\n        let len = elements.length;\r\n        if (len == 0) {\r\n            return null;\r\n        } else if (len == 1) {\r\n            return elements[0];\r\n        } else {\r\n            return elements;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param rex \r\n     * @param root \r\n     * @param isOnlyOne \r\n     * @param isRecursive \r\n     * @param resultList \r\n     */\r\n    private static _getElementsByName(rex: RegExp, root: Object3D, isOnlyOne: boolean, isRecursive: boolean, resultList: Array<Object3D>): void {\r\n        let len = root.children.length;\r\n        if (len > 0) {\r\n            let name: string;\r\n            let child: any;\r\n            for (let i = 0; i < len; i++) {\r\n                child = root.children[i];\r\n                name = child.name;\r\n                if (name && name != \"\") {\r\n                    if (rex.test(name)) {\r\n                        resultList[resultList.length] = child;\r\n                        if (isOnlyOne) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                if (isRecursive) {\r\n                    if (child[\"children\"] != null) {\r\n                        Object3D._getElementsByName(rex, child, isOnlyOne, isRecursive, resultList);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 渲染绘制\r\n     */\r\n    render(renderer) {\r\n        //自身的渲染\r\n        this._render(renderer);\r\n        //子级的渲染\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            let child = this.children[i];\r\n            if (child.visible) child.render(renderer)\r\n        }\r\n    }\r\n    /**\r\n     * 子级重写，自身的渲染方式\r\n     */\r\n    protected _render(renderer) {\r\n        //子级重写\r\n        // renderer.batchManager.setObjectRenderer(renderer.plugins[\"three\"]);\r\n        // renderer.plugins[\"three\"].render(this);\r\n    }\r\n\r\n    /**\r\n     * 挂个空的吧，只对自己有效，子级的递归，Raycaster方法里已写\r\n     * @param raycaster \r\n     * @param intersects \r\n     */\r\n    raycast(raycaster: Raycaster, intersects: IntersectData[]) {\r\n\r\n\r\n    };\r\n\r\n    destroy() {\r\n        //子级的destroy\r\n        for (let i = this.children.length - 1; i >= 0; i--)  this.children[i].destroy();\r\n        //移除事件\r\n        this.removeAllEventListener();\r\n        // super.destroy();//不适用继承的，里面的eventTypes置空很麻烦\r\n        //从父级移除自己\r\n        if (this.parent) this.parent.removeChild(this);\r\n        //还有很多自己的属性，再说了\r\n    }\r\n\r\n    ///////////属性get set 方法////////////////////\r\n\r\n    /**\r\n     * 位置信息\r\n     */\r\n    get x(): number {\r\n        return this.position.x;\r\n    }\r\n    set x(value: number) {\r\n        this.position.x = value;\r\n    }\r\n    get y(): number {\r\n        return this.position.y;\r\n    }\r\n    set y(value: number) {\r\n        this.position.y = value;\r\n    }\r\n    get z(): number {\r\n        return this.position.z;\r\n    }\r\n    set z(value: number) {\r\n        this.position.z = value;\r\n    }\r\n    /**\r\n     * 缩放信息\r\n     */\r\n    get scaleX() {\r\n        return this.scale.x;\r\n    }\r\n    set scaleX(value: number) {\r\n        this.scale.x = value;\r\n    }\r\n    get scaleY() {\r\n        return this.scale.y;\r\n    }\r\n    set scaleY(value: number) {\r\n        this.scale.y = value;\r\n    }\r\n    get scaleZ() {\r\n        return this.scale.z;\r\n    }\r\n    set scaleZ(value: number) {\r\n        this.scale.z = value;\r\n    }\r\n\r\n    /**\r\n     * 旋转信息，角度制度\r\n     */\r\n    get rotationX() {\r\n        return this.rotation.x * RAD_TO_DEG;\r\n    }\r\n    /**\r\n     * 角度制\r\n     */\r\n    set rotationX(value: number) {\r\n        this.rotation.x = value * DEG_TO_RAD;\r\n    }\r\n    /**\r\n     * 旋转信息，角度制度\r\n     */\r\n    get rotationY() {\r\n        return this.rotation.y * RAD_TO_DEG;\r\n    }\r\n    /**\r\n     * 角度制\r\n     */\r\n    set rotationY(value: number) {\r\n        this.rotation.y = value * DEG_TO_RAD;\r\n    }\r\n    /**\r\n     * 旋转信息，角度制度\r\n     */\r\n    get rotationZ() {\r\n        return this.rotation.z * RAD_TO_DEG;\r\n    }\r\n    /**\r\n     * 角度制\r\n     */\r\n    set rotationZ(value: number) {\r\n        this.rotation.z = value * DEG_TO_RAD;\r\n    }\r\n}\r\n","import { clamp } from \"../../2d/utils\";\r\n\r\n/**\r\n * 为了方便提前计算贝塞尔的补间\r\n */\r\nexport class Curve {\r\n    static LINEAR = 0;\r\n    static STEPPED = 1;\r\n    static BEZIER = 2;\r\n    static BEZIER_SIZE = 10 * 2 - 1;\r\n\r\n    private curves: Float32Array\r\n\r\n    constructor(frameCount: number) {\r\n        this.curves = new Float32Array((frameCount - 1) * Curve.BEZIER_SIZE);\r\n    }\r\n    /** The number of key frames for this timeline. */\r\n    getFrameCount() {\r\n        return this.curves.length / Curve.BEZIER_SIZE + 1;\r\n    }\r\n\r\n    /** Sets the specified key frame to linear interpolation. */\r\n    setLinear(frameIndex: number) {\r\n        this.curves[frameIndex * Curve.BEZIER_SIZE] = Curve.LINEAR;\r\n    }\r\n\r\n    /** Sets the specified key frame to stepped interpolation. */\r\n    setStepped(frameIndex: number) {\r\n        this.curves[frameIndex * Curve.BEZIER_SIZE] = Curve.STEPPED;\r\n    }\r\n\r\n    /** Returns the interpolation type for the specified key frame.\r\n     * @returns Linear is 0, stepped is 1, Bezier is 2. */\r\n    getCurveType(frameIndex: number): number {\r\n        let index = frameIndex * Curve.BEZIER_SIZE;\r\n        if (index == this.curves.length) return Curve.LINEAR;\r\n        let type = this.curves[index];\r\n        if (type == Curve.LINEAR) return Curve.LINEAR;\r\n        if (type == Curve.STEPPED) return Curve.STEPPED;\r\n        return Curve.BEZIER;\r\n    }\r\n\r\n    /** Sets the specified key frame to Bezier interpolation. `cx1` and `cx2` are from 0 to 1,\r\n     * representing the percent of time between the two key frames. `cy1` and `cy2` are the percent of the\r\n     * difference between the key frame's values. */\r\n    setCurve(frameIndex: number, cx1: number, cy1: number, cx2: number, cy2: number) {\r\n        let tmpx = (-cx1 * 2 + cx2) * 0.03, tmpy = (-cy1 * 2 + cy2) * 0.03;\r\n        let dddfx = ((cx1 - cx2) * 3 + 1) * 0.006, dddfy = ((cy1 - cy2) * 3 + 1) * 0.006;\r\n        let ddfx = tmpx * 2 + dddfx, ddfy = tmpy * 2 + dddfy;\r\n        let dfx = cx1 * 0.3 + tmpx + dddfx * 0.16666667, dfy = cy1 * 0.3 + tmpy + dddfy * 0.16666667;\r\n\r\n        let i = frameIndex * Curve.BEZIER_SIZE;\r\n        let curves = this.curves;\r\n        curves[i++] = Curve.BEZIER;\r\n\r\n        let x = dfx, y = dfy;\r\n        for (let n = i + Curve.BEZIER_SIZE - 1; i < n; i += 2) {\r\n            curves[i] = x;\r\n            curves[i + 1] = y;\r\n            dfx += ddfx;\r\n            dfy += ddfy;\r\n            ddfx += dddfx;\r\n            ddfy += dddfy;\r\n            x += dfx;\r\n            y += dfy;\r\n        }\r\n    }\r\n\r\n    /** Returns the interpolated percentage for the specified key frame and linear percentage. */\r\n    getCurvePercent(frameIndex: number, percent: number) {\r\n        percent = clamp(percent, 0, 1);\r\n        let curves = this.curves;\r\n        let i = frameIndex * Curve.BEZIER_SIZE;\r\n        let type = curves[i];\r\n        if (type == Curve.LINEAR) return percent;\r\n        if (type == Curve.STEPPED) return 0;\r\n        i++;\r\n        let x = 0;\r\n        for (let start = i, n = i + Curve.BEZIER_SIZE - 1; i < n; i += 2) {\r\n            x = curves[i];\r\n            if (x >= percent) {\r\n                let prevX: number, prevY: number;\r\n                if (i == start) {\r\n                    prevX = 0;\r\n                    prevY = 0;\r\n                } else {\r\n                    prevX = curves[i - 2];\r\n                    prevY = curves[i - 1];\r\n                }\r\n                return prevY + (curves[i + 1] - prevY) * (percent - prevX) / (x - prevX);\r\n            }\r\n        }\r\n        let y = curves[i - 1];\r\n        return y + (1 - y) * (percent - x) / (1 - x); // Last point is 1,1.\r\n    }\r\n}\r\n\r\n/**\r\n * 根据map的curve属性，给curve设置缓动方法\r\n * @param map \r\n * @param curve \r\n * @param frameIndex \r\n */\r\nexport function readCurve(map: any, curve: Curve, frameIndex: number) {\r\n    if (!map.hasOwnProperty(\"curve\")) return;\r\n    if (map.curve === \"stepped\")\r\n        curve.setStepped(frameIndex);\r\n    else if (Object.prototype.toString.call(map.curve) === '[object Array]') {\r\n        var curveArr = map.curve;\r\n        curve.setCurve(frameIndex, curveArr[0], curveArr[1], curveArr[2], curveArr[3]);\r\n    } else {//兼容下\r\n        curve.setCurve(frameIndex, map.curve, map.c2 || 0, map.c3 || 1, map.c4 || 1);\r\n    }\r\n}\r\n\r\n\r\nexport enum MixBlend {\r\n    setup = 0,\r\n    first,\r\n    replace,\r\n    add\r\n}\r\n//用于混合，暂时都是in\r\nexport enum MixDirection {\r\n    in = 0,\r\n    out\r\n}\r\n/**\r\n * 这种数组查找会快点，到时也可以缝一下，找最接近的下一个的索引\r\n * @param values \r\n * @param target \r\n */\r\nexport function binarySearch(values: Float32Array | number[], target: number, step: number = 1) {\r\n    var low = 0;\r\n    var high = values.length / step - 2;\r\n    if (high == 0)\r\n        return step;\r\n    var current = high >>> 1;\r\n    while (true) {\r\n        if (values[(current + 1) * step] <= target)\r\n            low = current + 1;\r\n        else\r\n            high = current;\r\n        if (low == high)\r\n            return (low + 1) * step;\r\n        current = (low + high) >>> 1;\r\n    }\r\n};\r\n\r\n\r\nexport function arrayCopy(source, sourceStart, dest, destStart, numElements) {\r\n    for (var i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\r\n        dest[j] = source[i];\r\n    }\r\n};\r\n\r\nexport function setArraySize(array, size, value = 0) {\r\n    var oldSize = array.length;\r\n    if (oldSize == size)\r\n        return array;\r\n    array.length = size;\r\n    if (oldSize < size) {\r\n        for (var i = oldSize; i < size; i++)\r\n            array[i] = value;\r\n    }\r\n    return array;\r\n};\r\n\r\nexport function newArray(size: number, defaultValue: any) {\r\n    var array = new Array(size);\r\n    for (var i = 0; i < size; i++)\r\n        array[i] = defaultValue;\r\n    return array;\r\n}","import { Object3D } from \"./Object3D\";\r\nimport { Geometry } from \"./Geometry\";\r\nimport { BaseMaterial, RenderSideType } from \"./materials/BaseMaterial\";\r\nimport { Matrix4 } from \"./math/Matrix4\";\r\nimport { Ray } from \"./math/Ray\";\r\nimport { Sphere } from \"./math/Sphere\";\r\nimport { Vector3 } from \"./math/Vector3\";\r\nimport { Vector2 } from \"./math/Vector2\";\r\nimport { Raycaster, IntersectData } from \"./Raycaster\";\r\n\r\nconst templeSphere: Sphere = new Sphere();\r\nconst tempMatrix: Matrix4 = new Matrix4();\r\nconst tempRay: Ray = new Ray();\r\nconst tempPoint = new Vector3();\r\n\r\nexport class Mesh3D extends Object3D {\r\n    /**\r\n     * 用于变形权重，只能获取，修改只能内部修改\r\n     */\r\n    private _morphTargetInfluences: number[];\r\n    get morphTargetInfluences() {\r\n        return this._morphTargetInfluences;\r\n    }\r\n    //这个暂时不知道有啥用，到时看three的\r\n    // morphTargetDictionary\r\n    constructor(\r\n        public geometry: Geometry,\r\n        public material: BaseMaterial\r\n    ) {\r\n        super();\r\n        this._instanceType = \"Mesh3D\";\r\n        this.updateMorphTargets();\r\n    }\r\n    _render(renderer) {\r\n        if (!this.visible) return;\r\n        renderer.batchManager.setObjectRenderer(renderer.plugins[\"d3\"]);\r\n        renderer.plugins[\"d3\"].render(this)\r\n    }\r\n\r\n    updateMorphTargets() {\r\n        var morphPositions = this.geometry._morphPositions;\r\n        if (morphPositions) {\r\n            this._morphTargetInfluences = [];\r\n            //根据morphPositions的长度来定权重长度\r\n            for (var i = 0; i < morphPositions.length; i++) this._morphTargetInfluences.push(0);\r\n        }\r\n    }\r\n\r\n    raycast(raycaster: Raycaster, intersects: IntersectData[]) {\r\n        if (!this.visible || !this.geometry || !this.material || this.material.wireframe) return;\r\n        var geometry = this.geometry;\r\n        var matrixWorld = this._worldMatrix;\r\n\r\n        // Checking boundingSphere distance to ray\r\n\r\n        if (!geometry.boundingSphere) geometry.computeBoundingSphere();\r\n\r\n        templeSphere.copy(geometry.boundingSphere);\r\n        templeSphere.applyMatrix4(matrixWorld);\r\n\r\n        if (raycaster.ray.intersectsSphere(templeSphere) === false) return;\r\n\r\n        //\r\n\r\n        tempMatrix.setInverseOf(matrixWorld);\r\n        tempRay.copy(raycaster.ray).applyMatrix4(tempMatrix);\r\n        // Check boundingBox before continuing\r\n        if (geometry.boundingBox !== null && tempRay.intersectsBox(geometry.boundingBox) === false) return;\r\n\r\n        //如果不需要面检测，到此为止了\r\n        if (!geometry.doHitFace) {\r\n            // raycaster.ray.origin.distanceTo(templeSphere.center) - templeSphere.radius,\r\n            intersects.push({//距离简单点\r\n                distance: raycaster.ray.origin.distanceTo(templeSphere.center) - templeSphere.radius,\r\n                object: this\r\n            })\r\n            return;\r\n        }\r\n\r\n        var intersection: IntersectData;\r\n\r\n        var a = new Vector3(), b = new Vector3(), c = new Vector3();\r\n        var index = geometry._indices;\r\n        var position = geometry._vertices;\r\n\r\n        if (index) {\r\n            for (var i = 0; i < index.length; i += 3) {\r\n                var i1 = index[i], i2 = index[i + 1], i3 = index[i + 2];\r\n                a.set(position[i1 * 3], position[i1 * 3 + 1], position[i1 * 3 + 2]);\r\n                b.set(position[i2 * 3], position[i2 * 3 + 1], position[i2 * 3 + 2]);\r\n                c.set(position[i3 * 3], position[i3 * 3 + 1], position[i3 * 3 + 2]);\r\n                intersection = checkIntersection(\r\n                    this,\r\n                    raycaster,\r\n                    tempRay,\r\n                    a,\r\n                    b,\r\n                    c,\r\n                    tempPoint\r\n                );\r\n                if (intersection) {//有一个就出\r\n                    intersects.push(intersection);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else if (position) {\r\n            for (var i = 0; i < position.length; i += 9) {\r\n                a.set(position[i], position[i + 1], position[i + 2]);\r\n                b.set(position[i + 3], position[i + 4], position[i + 5]);\r\n                c.set(position[i + 6], position[i + 7], position[i + 8]);\r\n                intersection = checkIntersection(\r\n                    this,\r\n                    raycaster,\r\n                    tempRay,\r\n                    a,\r\n                    b,\r\n                    c,\r\n                    tempPoint\r\n                );\r\n                if (intersection) {//有一个就出\r\n                    intersects.push(intersection);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    copy(source: Mesh3D, recursive: boolean = true) {\r\n        super.copy(source, recursive);\r\n        if (source.morphTargetInfluences) {//变形的数据\r\n            this._morphTargetInfluences = source.morphTargetInfluences.slice();\r\n        }\r\n        //暂时不用\r\n        // if ( source.morphTargetDictionary !== undefined ) {\r\n        // \tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n        // }\r\n        return this\r\n    }\r\n    /**\r\n     * 克隆方法\r\n     * @param recursive 默认克隆子级\r\n     */\r\n    clone(recursive: boolean = true) {\r\n        return new Mesh3D(this.geometry, this.material).copy(this, recursive);\r\n    }\r\n}\r\n\r\n\r\n\r\nvar intersectionPointWorld = new Vector3();\r\nfunction checkIntersection(\r\n    object: Mesh3D,\r\n    raycaster: Raycaster,\r\n    ray: Ray,\r\n    pA: Vector3,\r\n    pB: Vector3,\r\n    pC: Vector3,\r\n    point: Vector3\r\n): IntersectData {\r\n    var material = object.material\r\n    var intersect: Vector3 | null;\r\n    if (material.side === RenderSideType.BackSide) {\r\n        intersect = ray.intersectTriangle(pC, pB, pA, true, point);\r\n    } else {\r\n        intersect = ray.intersectTriangle(pA, pB, pC, material.side !== RenderSideType.DoubleSide, point);\r\n    }\r\n    if (intersect === null) return null;\r\n\r\n    intersectionPointWorld.copy(point);\r\n    intersectionPointWorld.applyMatrix4(object._worldMatrix);\r\n    var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\r\n    if (distance < raycaster.near || distance > raycaster.far) return null;\r\n    return {\r\n        distance: distance,\r\n        point: intersectionPointWorld.clone(),\r\n        object: object\r\n    };\r\n}\r\n//交付分\r\nvar a = 5\r\n//时间分每天\r\nvar b = 1\r\n//极限时间\r\nvar j = 15\r\n//项目基础时间\r\nvar i = 4\r\n\r\nfunction aaa(t) {\r\n    t -= i\r\n    return a + t * b + (t * t) / j * a / i / i;\r\n}\r\n\r\nfunction bbb(t) {\r\n    //完整项目按4天\r\n    t -= i\r\n    return a + t * b + (t * t) / j * a / i / i;\r\n}","import { EventDispatcher } from '../events/EventDispatcher';\r\n\r\nimport { Rectangle, Transform, Point, ObservablePoint, Matrix } from '../math';\r\nimport { Event } from \"../events/Event\";\r\nimport Graphics from '../graphics/Graphics';\r\nimport { RAD_TO_DEG, DEG_TO_RAD } from '../const';\r\nimport { Filter } from '../filter';\r\nimport { Stage } from './Stage';\r\nimport Container from './Container';\r\n/**\r\n * 基础显示对象抽象类\r\n * @class\r\n * @extends EventDispatcher\r\n */\r\nexport class DisplayObject extends EventDispatcher {\r\n    /**\r\n     * 基础信息\r\n     */\r\n    transform: Transform;\r\n    /**\r\n     * 是否可见\r\n     */\r\n    visible: boolean;\r\n    /**\r\n     * 是否可绘制\r\n     * 自身不绘制，但是参与updateTransform\r\n     * 在有些时候的遮罩处理\r\n     */\r\n    renderable: boolean;\r\n    /**\r\n     * 父级\r\n     * @member {Container}\r\n     * @readonly\r\n     */\r\n    parent: Container;\r\n\r\n    /**\r\n     * 舞台\r\n     */\r\n    stage: Stage\r\n\r\n    /**\r\n     * 名字,预留\r\n     */\r\n    name: string\r\n\r\n    /**\r\n     * 全局透明度\r\n     */\r\n    _worldAlpha: number;\r\n    /**\r\n     * 用于只管局部自己,不包括子级，用于各继承修改自身，hitTest检测自己用\r\n     */\r\n    protected _localBoundsSelf: Rectangle;\r\n\r\n    /**\r\n     * 用于计算世界bounds，包括自身和子级，一般只在获取宽高时使用，变形后的\r\n     */\r\n    protected _bounds: Rectangle\r\n    protected _boundsID: number;\r\n    protected _lastBoundsID: number;\r\n    /**\r\n     * 遮罩\r\n     * @member {Graphics}\r\n     * @private\r\n     */\r\n    private _mask//: Graphics;\r\n\r\n    /**\r\n     * 滤镜区域，暂时别用，用了也没效\r\n     */\r\n    filterArea: Rectangle;\r\n    /**\r\n     * 滤镜数组\r\n     */\r\n    private _filters: Filter[];\r\n    get filters(): Filter[] { return this._filters && this._filters.slice(); }\r\n    set filters(value: Filter[]) { this._filters = value && value.slice(); }\r\n    /**\r\n     * 可用的滤镜数据，_filters筛选过的\r\n     */\r\n    protected _enabledFilters: Filter[];\r\n\r\n    /**\r\n     * 透明度\r\n     * 0到1\r\n     */\r\n    private _alpha: number;\r\n    /**\r\n     * 是否已销毁\r\n     * @member {boolean}\r\n     * @readonly\r\n     */\r\n    destroyed: boolean;\r\n\r\n    /**\r\n     * 是否可响应鼠标事件\r\n     */\r\n    mouseEnable: boolean = true;\r\n\r\n    /**\r\n     * 临时父级,特殊用处\r\n     */\r\n    private tempDisplayObjectParent: DisplayObject;\r\n\r\n    /**\r\n     * 特殊用处\r\n     * 缓存的DisplayObject的updateTransform\r\n     */\r\n    displayObjectUpdateTransform;\r\n\r\n    /**\r\n     * 特殊用处\r\n     * 缓存的DisplayObject的hitTestPoint\r\n     */\r\n    displayObjectHitTestPoint;\r\n\r\n\r\n    protected _width: number;\r\n    protected _height: number;\r\n\r\n    constructor() {\r\n        super();\r\n        this._instanceType = \"DisplayObject\";\r\n\r\n        this.tempDisplayObjectParent = null;\r\n\r\n        this.transform = new Transform();\r\n\r\n        this._alpha = 1;\r\n\r\n        this.visible = true;\r\n\r\n        this.renderable = true;\r\n\r\n        this.parent = null;\r\n\r\n        this._worldAlpha = 1;\r\n\r\n        //滤镜相关，都置null\r\n        this.filterArea = null;\r\n        this._filters = null;\r\n        this._enabledFilters = null;\r\n\r\n        this._localBoundsSelf = new Rectangle();\r\n        this._bounds = new Rectangle();\r\n        this._boundsID = 0;\r\n        this._lastBoundsID = -1;\r\n\r\n        this._mask = null;\r\n\r\n        this.destroyed = false;\r\n    }\r\n    /**\r\n     * @private\r\n     * @member {DisplayObject}\r\n     */\r\n    private get _tempDisplayObjectParent() {\r\n        if (this.tempDisplayObjectParent === null) {\r\n            this.tempDisplayObjectParent = new DisplayObject();\r\n        }\r\n        return this.tempDisplayObjectParent;\r\n    }\r\n\r\n    /**\r\n     * 更新矩阵\r\n     */\r\n    updateTransform() {\r\n        this.transform.updateWorldMatrix(this.parent.transform);\r\n        //更新透明度\r\n        this._worldAlpha = this.alpha * this.parent._worldAlpha;\r\n    }\r\n\r\n    //为了hitTestPoint，localToGlobal，globalToLocal等方法不复新不重复生成新的点对象而节约内存\r\n    public static _bp: Point = new Point();\r\n    public static _p1: Point = new Point();\r\n    public static _p2: Point = new Point();\r\n    public static _p3: Point = new Point();\r\n    public static _p4: Point = new Point();\r\n    //bounds缓存\r\n    public static temBounds = new Rectangle()\r\n    /**\r\n     * 点击碰撞测试,就是舞台上的一个point是否在显示对象内,在则返回该对象，不在则返回null\r\n     * 对于那些不是继承container，而直接继承displayObject的不用重写，如Bitmap\r\n     * @method hitTestPoint\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {Point} point 需要碰到的坐标点\r\n     * @param {boolean} isMouseEvent 是否是鼠标事件调用此方法,一般都为true\r\n     * @return {DisplayObject}\r\n     */\r\n    public hitTestPoint(point: Point, isMouseEvent: boolean = false): DisplayObject {\r\n        let s = this;\r\n        if (!s.visible) return null;\r\n        if (isMouseEvent && !s.mouseEnable) return null;\r\n        if (!isMouseEvent) {\r\n            //如果不是系统调用则不考虑这个点是从全局来的，只认为这个点就是当前要碰撞测试同级别下的坐标点\r\n            if (s._localBoundsSelf.isPointIn(point)) {\r\n                return s;\r\n            }\r\n        } else {\r\n            if (s._localBoundsSelf.isPointIn(s.globalToLocal(point, DisplayObject._bp))) {\r\n                return s;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 递归更新矩阵方法\r\n     */\r\n    private _recursivePostUpdateTransform() {\r\n        if (this.parent) {\r\n            this.parent._recursivePostUpdateTransform();\r\n            this.transform.updateWorldMatrix(this.parent.transform);\r\n        }\r\n        else {\r\n            this.transform.updateWorldMatrix(this._tempDisplayObjectParent.transform);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取全局的bounds，变形后的\r\n     * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\r\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\r\n     *  nice performance boost\r\n     * @param {Rectangle} rect - Optional rectangle to store the result of the bounds calculation\r\n     * @return {Rectangle} the rectangular bounding area\r\n     */\r\n    getBounds(skipUpdate: boolean = false, rect: Rectangle = DisplayObject.temBounds): Rectangle {\r\n        //先把父级的都变换\r\n        if (!skipUpdate) {\r\n            if (!this.parent) {\r\n                this.parent = this._tempDisplayObjectParent as Container;\r\n                this.updateTransform();\r\n                this.parent = null;\r\n            }\r\n            else {\r\n                this._recursivePostUpdateTransform();\r\n                this.updateTransform();\r\n            }\r\n        }\r\n\r\n        //里面计算了_bounds\r\n        this.calculateBounds();\r\n\r\n        return rect.copy(this._bounds);\r\n    }\r\n\r\n    /**\r\n     * 以自身为世界坐标系的本地包围盒\r\n     * @param {Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation\r\n     * @return {Rectangle} the rectangular bounding area\r\n     */\r\n    getLocalBounds(rect: Rectangle = DisplayObject.temBounds): Rectangle {\r\n        const transformRef = this.transform;\r\n        const parentRef = this.parent;\r\n\r\n        this.parent = null;\r\n        this.transform = this._tempDisplayObjectParent.transform;\r\n\r\n        const bounds = this.getBounds(false, rect);\r\n\r\n        this.parent = parentRef;\r\n        this.transform = transformRef;\r\n        //是否考虑算一次回去，因为getBounds里parent为空时会赋值临时父级并执行updateTransform修改了所有子级原来的矩阵\r\n        if (this.parent) this.updateTransform();\r\n\r\n        return bounds;\r\n    }\r\n\r\n    calculateBounds() {\r\n        //重写\r\n        if (this._lastBoundsID == this._boundsID) return\r\n        this._lastBoundsID = this._boundsID\r\n    }\r\n\r\n\r\n    /**\r\n     *将全局坐标转换到本地坐标值\r\n     * @method globalToLocal\r\n     * @since 1.0.0\r\n     * @public\r\n     * @param {Point} point\r\n     * @return {Point}\r\n     */\r\n    public globalToLocal(point: Point, bp: Point = null): Point {\r\n        return this.worldMatrix.transformPointInverse(point.x, point.y, bp || DisplayObject._bp);\r\n    }\r\n\r\n    /**\r\n     *将本地坐标转换到全局坐标值\r\n     * @method localToGlobal\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {Point} point\r\n     * @return {Point}\r\n     */\r\n    public localToGlobal(point: Point, bp: Point = null): Point {\r\n        var wp = this.worldMatrix.transformPoint(point.x, point.y, bp || DisplayObject._bp)\r\n        if (this.stage) {\r\n            //舞台存在时返回舞台上的坐标\r\n            return this.stage.globalToLocal(wp, bp || DisplayObject._bp)\r\n        } else {\r\n            //否则返回画布上的坐标\r\n            return wp\r\n        }\r\n        // return this.worldMatrix.transformPoint(point.x, point.y, bp || DisplayObject._bp);\r\n    }\r\n\r\n    /**\r\n     * 调用些方法会冒泡的将事件向显示列表下方传递，主要用于移除舞台，和添加进舞台事件，修改stage\r\n     * @method _onDispatchBubbledEvent\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {string} type\r\n     * @return {void}\r\n     */\r\n    public _onDispatchBubbledEvent(type: string): void {\r\n        let s: any = this;\r\n        if (type == Event.REMOVED_FROM_STAGE && !s.stage) return;\r\n        if (type == Event.REMOVED_FROM_STAGE) {\r\n            s.dispatchEvent(type);\r\n            //以防REMOVED_FROM_STAGE事件里用到了stage\r\n            s.stage = null;\r\n        } else if (type == Event.ADDED_TO_STAGE) {\r\n            s.stage = s.parent.stage;\r\n            s.dispatchEvent(type);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * webgl渲染\r\n     * @param {WebGLRenderer} renderer - The renderer\r\n     */\r\n    renderWebGL(renderer: any) {\r\n        //子类重写\r\n    }\r\n\r\n    /**\r\n     * canvas渲染\r\n     * @param {CanvasRenderer} renderer - The renderer\r\n     */\r\n    renderCanvas(renderer: any) {\r\n        //子类重写\r\n    }\r\n\r\n    /**\r\n     * 设置父级\r\n     * @param {Container} container - The Container to add this DisplayObject to\r\n     * @return {Container} The Container that this DisplayObject was added to\r\n     */\r\n    setParent(container: any): any {\r\n        if (!container || !container.addChild) {\r\n            throw new Error('setParent: Argument must be a Container');\r\n        }\r\n        container.addChild(this);\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     *根据常规属性 设置矩阵属性，弧度制\r\n     * @param {number} [x=0] - The X position\r\n     * @param {number} [y=0] - The Y position\r\n     * @param {number} [scaleX=1] - The X scale value\r\n     * @param {number} [scaleY=1] - The Y scale value\r\n     * @param {number} [rotation=0] - The rotation\r\n     * @param {number} [skewX=0] - The X skew value\r\n     * @param {number} [skewY=0] - The Y skew value\r\n     * @param {number} [anchorX=0] - The X anchor value\r\n     * @param {number} [anchorY=0] - The Y anchor value\r\n     * @return {DisplayObject} The DisplayObject instance\r\n     */\r\n    setTransform(\r\n        x: number = 0,\r\n        y: number = 0,\r\n        scaleX: number = 1,\r\n        scaleY: number = 1,\r\n        rotation: number = 0,\r\n        skewX: number = 0,\r\n        skewY: number = 0,\r\n        anchorX: number = 0,\r\n        anchorY: number = 0\r\n    ): DisplayObject {\r\n        this.position.x = x;\r\n        this.position.y = y;\r\n        this.scale.x = !scaleX ? 1 : scaleX;\r\n        this.scale.y = !scaleY ? 1 : scaleY;\r\n        this.rotation = rotation;\r\n        this.skew.x = skewX;\r\n        this.skew.y = skewY;\r\n        this.anchor.x = anchorX;\r\n        this.anchor.y = anchorY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 基本销毁方法\r\n     */\r\n    destroy() {\r\n        //移除所有监听\r\n        //如果有父级，从中移除自己\r\n        this.removeAllEventListener();\r\n        // super.destroy();//不适用继承的，里面的eventTypes置空很麻烦\r\n        if (this.parent) {\r\n            this.parent.removeChild(this);\r\n        }\r\n        //矩阵销毁\r\n        this.transform.destroy();\r\n        //对应属性都置null\r\n        this.transform = null;\r\n        this._localBoundsSelf = null;\r\n        this._bounds = null;\r\n        this.tempDisplayObjectParent = null;\r\n        this._mask = null;\r\n\r\n        this.filterArea = null;\r\n        this._filters = null;\r\n        this._enabledFilters = null;\r\n\r\n        this.mouseEnable = false;\r\n        //标记为已销毁\r\n        this.destroyed = true;\r\n\r\n\r\n    }\r\n\r\n    get alpha(): number {\r\n        return this._alpha\r\n    }\r\n    set alpha(value: number) {\r\n        if (this._alpha != value) {\r\n            this._alpha = value\r\n            //是否有必要设置_worldAlpha是否需要更新，一个乘法基本不耗性能\r\n        }\r\n    }\r\n\r\n    get x(): number {\r\n        return this.position.x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this.transform.position.x = value;\r\n    }\r\n\r\n    get y(): number {\r\n        return this.position.y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this.transform.position.y = value;\r\n    }\r\n\r\n    /**\r\n     * 获取世界矩阵\r\n     * 手动修改时，this.transform._worldID++,保证子级的worldMatrix会修改，尽量别那么做\r\n     * @member {Matrix}\r\n     * @readonly\r\n     */\r\n    get worldMatrix(): Matrix {\r\n        return this.transform.worldMatrix;\r\n    }\r\n\r\n    /**\r\n     * 获取本地矩阵\r\n     * 手动修改时this.transform._parentID=-1;保证其worldMatrix会更新\r\n     * @member {Matrix}\r\n     * @readonly\r\n     */\r\n    get localMatrix(): Matrix {\r\n        return this.transform.localMatrix;\r\n    }\r\n\r\n    /**\r\n     * 获取位置对象\r\n     * @member {Point|ObservablePoint}\r\n     */\r\n    get position(): ObservablePoint {\r\n        return this.transform.position;\r\n    }\r\n\r\n    /**\r\n     * 设置位置对象\r\n     */\r\n    set position(value) {\r\n        this.transform.position.copy(value);\r\n    }\r\n\r\n    /**\r\n     * 获取缩放对象\r\n     * @member {Point|ObservablePoint}\r\n     */\r\n    get scale(): ObservablePoint {\r\n        return this.transform.scale;\r\n    }\r\n\r\n    /**\r\n     * 设置缩放对象\r\n     */\r\n    set scale(value) {\r\n        this.transform.scale.copy(value);\r\n    }\r\n\r\n    get scaleX() {\r\n        return this.transform.scale.x;\r\n    }\r\n\r\n    set scaleX(value) {\r\n        this.transform.scale.x = value;\r\n    }\r\n\r\n    get scaleY() {\r\n        return this.transform.scale.y;\r\n    }\r\n\r\n    set scaleY(value) {\r\n        this.transform.scale.y = value;\r\n    }\r\n\r\n    /**\r\n     * 获取锚点对象\r\n     * @member {Point|ObservablePoint}\r\n     */\r\n    get anchor(): ObservablePoint {\r\n        return this.transform.anchor;\r\n    }\r\n\r\n    set anchor(value) {\r\n        this.transform.anchor.copy(value);\r\n    }\r\n\r\n    get anchorX() {\r\n        return this.transform.anchor.x;\r\n    }\r\n\r\n    set anchorX(value) {\r\n        this.transform.anchor.x = value;\r\n    }\r\n\r\n    get anchorY() {\r\n        return this.transform.anchor.y;\r\n    }\r\n\r\n    set anchorY(value) {\r\n        this.transform.anchor.y = value;\r\n    }\r\n\r\n    /**\r\n     * 获取斜切对象\r\n     * @member {ObservablePoint}\r\n     */\r\n    get skew(): ObservablePoint {\r\n        return this.transform.skew;\r\n    }\r\n\r\n    set skew(value) {\r\n        this.transform.skew.copy(value);\r\n    }\r\n\r\n    /**\r\n     * 角度制\r\n     */\r\n    get skewX() {\r\n        return this.transform.skew.x * RAD_TO_DEG;\r\n    }\r\n    /**\r\n     * 角度制\r\n     */\r\n    set skewX(value) {\r\n        this.transform.skew.x = value * DEG_TO_RAD;\r\n    }\r\n    /**\r\n     * 角度制\r\n     */\r\n    get skewY() {\r\n        return this.transform.skew.y * RAD_TO_DEG;\r\n    }\r\n    /**\r\n     * 角度制\r\n     */\r\n    set skewY(value) {\r\n        this.transform.skew.y = value * DEG_TO_RAD;\r\n    }\r\n    /**\r\n     * 获取旋转值,顺时针,角度制\r\n     * @member {number}\r\n     */\r\n    get rotation(): number {\r\n        return this.transform.rotation * RAD_TO_DEG;\r\n    }\r\n\r\n    /**\r\n     * 角度制\r\n     */\r\n    set rotation(value: number) {\r\n        this.transform.rotation = value * DEG_TO_RAD;\r\n    }\r\n\r\n    /**\r\n     * 自身是否可见,检测所有父级的visible\r\n     * @member {boolean}\r\n     * @readonly\r\n     */\r\n    get worldVisible(): boolean {\r\n        let item = this;\r\n        do {\r\n            if (!item.visible) {\r\n                return false;\r\n            }\r\n            //@ts-ignore\r\n            item = item.parent;\r\n        } while (item);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取遮罩\r\n     * @member {Graphics}\r\n     */\r\n    get mask()/*: Graphics*/ {\r\n        return this._mask;\r\n    }\r\n\r\n    set mask(value) {\r\n        //同一个return\r\n        if (this._mask == value) return;\r\n        if (this._mask) {\r\n            //原先有的遮罩,重置属性\r\n            this._mask.renderable = true;\r\n            this._mask.isUsedToMask = false;\r\n            // if (this._mask.parent) {\r\n            //     this._mask.parent.removeChild(this._mask)\r\n            //     //是否销毁\r\n            // }\r\n        }\r\n\r\n        this._mask = value;\r\n\r\n        if (this._mask) {\r\n            this._mask.renderable = false;\r\n            this._mask.isUsedToMask = true;\r\n\r\n            //保证更新包围盒\r\n            this._boundsID++;\r\n            //手动添加吧\r\n            // this.parent.addChild(this._mask)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 子类必重写，\r\n     */\r\n    get width() {\r\n        return this._width\r\n    }\r\n    /**\r\n     * 子类必重写，如果设置过宽高_width有值且不为0，子类在更新texture时需设置scale\r\n     */\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * 更新方法，帧循环的监听事件放在这\r\n     */\r\n    public update() {\r\n\r\n        //监听的\r\n        if (this.hasEventListener(Event.ENTER_FRAME)) {\r\n            this.dispatchEvent(Event.ENTER_FRAME);\r\n        }\r\n    }\r\n}\r\n/**\r\n * 比用call性能好\r\n * 不会被子集覆盖，部分地方使用\r\n */\r\nDisplayObject.prototype.displayObjectUpdateTransform = DisplayObject.prototype.updateTransform;\r\n\r\nDisplayObject.prototype.displayObjectHitTestPoint = DisplayObject.prototype.hitTestPoint;\r\n","import { Point, ObservablePoint, Rectangle } from '../math';\r\nimport { sign, TextureCache, hex2rgb } from '../utils';\r\nimport { BLEND_MODES } from '../const';\r\nimport Texture from '../texture/Texture';\r\nimport Container from './Container';\r\n\r\nimport { DisplayObject } from \"./DisplayObject\";\r\nimport { CanvasRenderer } from '../renderers/CanvasRenderer';\r\nimport { SCALE_MODES } from '../const';\r\nimport { WebglRenderer } from '../renderers/WebglRenderer';\r\n\r\nconst indices = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n/**\r\n * Sprite类，显示图片和容器功能\r\n * @class\r\n * @extends Container\r\n */\r\nexport default class Sprite extends Container {\r\n    /**\r\n     * 混色模式\r\n     * @default BLEND_MODES.NORMAL\r\n     */\r\n    _blendMode: BLEND_MODES = BLEND_MODES.NORMAL;\r\n    //以后修改\r\n    get blendMode(): BLEND_MODES {\r\n        return this._blendMode\r\n    }\r\n    /**\r\n     * 很多效果暂时无效，再查原因，先不能设置吧\r\n     */\r\n    set blendMode(value: BLEND_MODES) {\r\n        // if (value != this._blendMode) this._blendMode = value\r\n    }\r\n    /**\r\n     * 关于贴图的锚点，0到1，默认为texture自己的\r\n     * \r\n     */\r\n    private _anchorTexture: ObservablePoint\r\n    /**\r\n     * 色值调色\r\n     */\r\n    private _tint: number;\r\n    /**\r\n     * RGB形式色值，webgl用\r\n     */\r\n    _tintRGB: number;\r\n    /**\r\n     * 和_tint比较用，用于canvas调色缓存\r\n     */\r\n    _cachedTint: number;\r\n    /**\r\n     * 使用的贴图\r\n     * @member {Texture}\r\n     */\r\n    _texture: Texture;\r\n    /**\r\n     * 初始化为texture的宽度\r\n     */\r\n    _width: number;\r\n    /**\r\n     * 初始化为texture的宽度\r\n     */\r\n    _height: number;\r\n    /**\r\n     * 标记更新transform\r\n     */\r\n    _transformID: number;\r\n    /**\r\n     * 标记更新过texture\r\n     */\r\n    _textureID: number;\r\n    _transformTrimmedID: number;\r\n    _textureTrimmedID: number;\r\n\r\n    /**\r\n     * 指定渲染用的渲染器插件\r\n     */\r\n    pluginName: string;\r\n\r\n    /**\r\n     * 顶点索引，下面几个均为webgl用到\r\n     */\r\n    _indices: Uint16Array;\r\n    // size: number;\r\n    // start: number;\r\n    _uvs: Float32Array;\r\n    /**\r\n     * 顶点数据，长度8\r\n     */\r\n    _vertexData: Float32Array;\r\n    /**\r\n     * Trimmed的顶点数据，用于裁剪掉过透明像素的texture\r\n     */\r\n    _vertexTrimmedData: Float32Array;\r\n\r\n    /**\r\n     * @param {Texture} texture\r\n     */\r\n    constructor(texture?: Texture) {\r\n        super();\r\n        this._instanceType = \"Sprite\";\r\n        this._anchorTexture = new ObservablePoint(\r\n            this._onAnchorUpdate,\r\n            this,\r\n            (texture ? texture.defaultAnchor.x : 0),\r\n            (texture ? texture.defaultAnchor.y : 0)\r\n        );\r\n\r\n        this._texture = null;\r\n        this._width = 0;\r\n        this._height = 0;\r\n\r\n        this._tint = null;\r\n        this._tintRGB = null;\r\n        this.tint = 0xFFFFFF;\r\n        this._cachedTint = 0xFFFFFF;\r\n\r\n\r\n        this._uvs = null;\r\n\r\n        // call texture setter\r\n        this.texture = texture || Texture.EMPTY;\r\n\r\n        this._vertexData = new Float32Array(8);\r\n\r\n        this._vertexTrimmedData = null;\r\n\r\n        this._transformID = -1;\r\n        this._textureID = -1;\r\n\r\n        this._transformTrimmedID = -1;\r\n        this._textureTrimmedID = -1;\r\n\r\n        // 批处理设置\r\n        this._indices = indices;\r\n        // this.size = 4;\r\n        // this.start = 0;\r\n\r\n        this.pluginName = 'sprite';\r\n    }\r\n\r\n    /**\r\n     * texture更新时触发\r\n     * \r\n     * @private\r\n     */\r\n    protected _onTextureUpdate() {\r\n        //保证顶点要更新\r\n        this._textureID = -1;\r\n        this._textureTrimmedID = -1;\r\n        this._cachedTint = 0xFFFFFF;\r\n        //可用才赋值uv\r\n        if (this._texture.valid) this._uvs = this._texture._uvs.uvsFloat32;\r\n        //设置过宽高的话，就需要改变缩放值\r\n        // so if _width is 0 then width was not set..\r\n        if (this._width) {\r\n            this.scale.x = sign(this.scale.x) * this._width / this._texture.orig.width;\r\n        }\r\n\r\n        if (this._height) {\r\n            this.scale.y = sign(this.scale.y) * this._height / this._texture.orig.height;\r\n        }\r\n\r\n        //修改_localBoundsSelf\r\n        this.updateLocalBoundsSelf();\r\n    }\r\n\r\n    /**\r\n     * 当贴图锚点修改时\r\n     * \r\n     * @private\r\n     */\r\n    private _onAnchorUpdate() {\r\n        this._transformID = -1;\r\n        this._transformTrimmedID = -1;\r\n        //贴图锚点修改，也要修改自身盒子，因为鼠标点击有用到\r\n        this.updateLocalBoundsSelf();\r\n    }\r\n\r\n    /**\r\n     * 通过自身贴图修改自身盒子\r\n     * 子类可修改，比如文本不需要padding的话，暂时还没做\r\n     */\r\n    protected updateLocalBoundsSelf() {\r\n        //修改_localBoundsSelf\r\n        const width = this._texture.orig.width;\r\n        const height = this._texture.orig.height;\r\n        this._localBoundsSelf.x = -width * this.anchorTexture.x;\r\n        this._localBoundsSelf.y = -height * this.anchorTexture.y;\r\n        this._localBoundsSelf.width = width;\r\n        this._localBoundsSelf.height = height;\r\n    }\r\n\r\n    /**\r\n     * 01——23\r\n     * |   |\r\n     * 67——45\r\n     * calculates worldTransform * vertices, store it in vertexData\r\n     */\r\n    calculateVertices() {\r\n        if (this._transformID === this.transform._worldID && this._textureID === this._texture._updateID) {\r\n            return;\r\n        }\r\n\r\n        this._transformID = this.transform._worldID;\r\n        this._textureID = this._texture._updateID;\r\n\r\n        // set the vertex data\r\n        const texture = this._texture;\r\n        const wt = this.transform.worldMatrix;\r\n        const a = wt.a;\r\n        const b = wt.b;\r\n        const c = wt.c;\r\n        const d = wt.d;\r\n        const tx = wt.tx;\r\n        const ty = wt.ty;\r\n        const vertexData = this._vertexData;\r\n        const trim = texture.trim;\r\n        const orig = texture.orig;\r\n        const anchor = this._anchorTexture;\r\n\r\n        let w0 = 0;\r\n        let w1 = 0;\r\n        let h0 = 0;\r\n        let h1 = 0;\r\n\r\n        if (trim) {\r\n            // if the sprite is trimmed and is not a tilingsprite then we need to add the extra\r\n            // space before transforming the sprite coords.\r\n            //绘制永远根据frame，所以有trim过的，加个偏移\r\n            w1 = trim.x - (anchor._x * orig.width);\r\n            w0 = w1 + trim.width;\r\n\r\n            h1 = trim.y - (anchor._y * orig.height);\r\n            h0 = h1 + trim.height;\r\n        }\r\n        else {\r\n            w1 = -anchor._x * orig.width;\r\n            w0 = w1 + orig.width;\r\n\r\n            h1 = -anchor._y * orig.height;\r\n            h0 = h1 + orig.height;\r\n        }\r\n\r\n        // xy\r\n        vertexData[0] = (a * w1) + (c * h1) + tx;\r\n        vertexData[1] = (d * h1) + (b * w1) + ty;\r\n\r\n        // xy\r\n        vertexData[2] = (a * w0) + (c * h1) + tx;\r\n        vertexData[3] = (d * h1) + (b * w0) + ty;\r\n\r\n        // xy\r\n        vertexData[4] = (a * w0) + (c * h0) + tx;\r\n        vertexData[5] = (d * h0) + (b * w0) + ty;\r\n\r\n        // xy\r\n        vertexData[6] = (a * w1) + (c * h0) + tx;\r\n        vertexData[7] = (d * h0) + (b * w1) + ty;\r\n    }\r\n\r\n    /**\r\n     * calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\r\n     * This is used to ensure that the true width and height of a trimmed texture is respected\r\n     */\r\n    calculateTrimmedVertices() {\r\n        if (!this._vertexTrimmedData) {\r\n            this._vertexTrimmedData = new Float32Array(8);\r\n        }\r\n        else if (this._transformTrimmedID === this.transform._worldID && this._textureTrimmedID === this._texture._updateID) {\r\n            return;\r\n        }\r\n\r\n        this._transformTrimmedID = this.transform._worldID;\r\n        this._textureTrimmedID = this._texture._updateID;\r\n\r\n        // lets do some special trim code!\r\n        const texture = this._texture;\r\n        const vertexData = this._vertexTrimmedData;\r\n        const orig = texture.orig;\r\n        const anchor = this._anchorTexture;\r\n\r\n        // lets calculate the new untrimmed bounds..\r\n        const wt = this.transform.worldMatrix;\r\n        const a = wt.a;\r\n        const b = wt.b;\r\n        const c = wt.c;\r\n        const d = wt.d;\r\n        const tx = wt.tx;\r\n        const ty = wt.ty;\r\n\r\n        const w1 = -anchor._x * orig.width;\r\n        const w0 = w1 + orig.width;\r\n\r\n        const h1 = -anchor._y * orig.height;\r\n        const h0 = h1 + orig.height;\r\n\r\n        // xy\r\n        vertexData[0] = (a * w1) + (c * h1) + tx;\r\n        vertexData[1] = (d * h1) + (b * w1) + ty;\r\n\r\n        // xy\r\n        vertexData[2] = (a * w0) + (c * h1) + tx;\r\n        vertexData[3] = (d * h1) + (b * w0) + ty;\r\n\r\n        // xy\r\n        vertexData[4] = (a * w0) + (c * h0) + tx;\r\n        vertexData[5] = (d * h0) + (b * w0) + ty;\r\n\r\n        // xy\r\n        vertexData[6] = (a * w1) + (c * h0) + tx;\r\n        vertexData[7] = (d * h0) + (b * w1) + ty;\r\n    }\r\n\r\n    /**\r\n    * 自身webgl绘制方法\r\n    * @private\r\n    * @param {WebglRenderer} renderer\r\n    */\r\n    _renderWebGL(renderer: WebglRenderer) {\r\n        //先计算顶点\r\n        this.calculateVertices();\r\n        renderer.batchManager.setObjectRenderer(renderer.plugins[\"batch\"]);\r\n        renderer.plugins[\"batch\"].render(this);\r\n    }\r\n\r\n    /**\r\n    * 自身canvas绘制方法\r\n    * @private\r\n    * @param {CanvasRenderer} renderer\r\n    */\r\n    _renderCanvas(renderer: CanvasRenderer) {\r\n        renderer.plugins[this.pluginName].render(this);\r\n    }\r\n\r\n    /**\r\n     * 更新自己的bounds，计算全局\r\n     * @private\r\n     */\r\n    _calculateBounds() {\r\n        const trim = this._texture.trim;\r\n        const orig = this._texture.orig;\r\n        //无trim。或者trim的尺寸和orig相等\r\n        if (!trim || (trim.width === orig.width && trim.height === orig.height)) {\r\n            this.calculateVertices();\r\n            Rectangle.createFromVertexData(this._bounds, this._vertexData);\r\n        }\r\n        else {\r\n            //计算trimmed bounds...\r\n            this.calculateTrimmedVertices();\r\n            Rectangle.createFromVertexData(this._bounds, this._vertexTrimmedData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重写父类\r\n     * @param {Rectangle} rect - The output rectangle.\r\n     * @return {Rectangle} The bounds.\r\n     */\r\n    getLocalBounds(rect?: Rectangle): Rectangle {\r\n        //如果没有child，直接\r\n        if (this.children.length === 0) {\r\n            if (!rect) {\r\n                rect = DisplayObject.temBounds;\r\n            }\r\n            //直接用_localBoundsSelf\r\n            rect.copy(this._localBoundsSelf)\r\n            return rect;\r\n        }\r\n\r\n        return super.getLocalBounds.call(this, rect);\r\n    }\r\n\r\n\r\n    /**\r\n     * 重写碰撞检测方法\r\n     * @param globalPoint \r\n     * @param isMouseEvent \r\n     */\r\n    hitTestPoint(globalPoint: Point, isMouseEvent: boolean = false) {\r\n        //不可见，直接返回\r\n        if (!this.visible) return null\r\n        //mouseChildren和mouseEnable在各自继承里判断，container和displayObject里都有\r\n        //如果以后加缓存成位图，另写\r\n        let hitDisplayObject;\r\n        //先检查子级，因为子级层级更高\r\n        hitDisplayObject = super.hitTestPoint(globalPoint, isMouseEvent);\r\n        //子级已有，返回\r\n        if (hitDisplayObject) return hitDisplayObject;\r\n        //检查自己\r\n        hitDisplayObject = this.displayObjectHitTestPoint(globalPoint, isMouseEvent);\r\n        if (hitDisplayObject) return hitDisplayObject;\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        //相应texture移除监听\r\n        this._texture.removeEventListener('update', this._onTextureUpdate, this);\r\n\r\n        this._anchorTexture = null;\r\n        this._texture = null;\r\n        this._indices = null;\r\n        this._uvs = null;\r\n        this._vertexData = null;\r\n        this._vertexTrimmedData = null;\r\n\r\n        //对于canvas可能有调色缓存\r\n        if (this[\"tintedTexture\"]) this[\"tintedTexture\"] = null;\r\n    }\r\n\r\n    /**\r\n     * 重写Container父类\r\n     * texture的宽度和缩放乘积\r\n     * @member {number}\r\n     */\r\n    get width() {\r\n        return Math.abs(this.scale.x) * this._texture.orig.width;\r\n    }\r\n\r\n    set width(value) {\r\n        const s = sign(this.scale.x) || 1;\r\n\r\n        this.scale.x = s * value / this._texture.orig.width;\r\n        this._width = value;\r\n    }\r\n\r\n    /**\r\n     * texture的高度和缩放乘积\r\n     * @member {number}\r\n     */\r\n    get height() {\r\n        return Math.abs(this.scale.y) * this._texture.orig.height;\r\n    }\r\n\r\n    set height(value) {\r\n        const s = sign(this.scale.y) || 1;\r\n        this.scale.y = s * value / this._texture.orig.height;\r\n        this._height = value;\r\n    }\r\n\r\n    /**\r\n     * 0，0标识左上角，0.5，0.5表示中间，1，1表示右下角\r\n     * @member {ObservablePoint}\r\n     */\r\n    get anchorTexture() {\r\n        return this._anchorTexture;\r\n    }\r\n\r\n    set anchorTexture(value: any) {\r\n        this._anchorTexture.copy(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @member {Texture}\r\n     */\r\n    get texture() {\r\n        return this._texture === Texture.EMPTY ? null : this._texture;//考虑是否返回null\r\n    }\r\n\r\n    set texture(value) {\r\n        if (this._texture === value) {\r\n            return;\r\n        }\r\n        //如果存在原贴图，且还没加载好，移除监听_onTextureUpdate；\r\n        if (this._texture != Texture.EMPTY &&\r\n            this._texture != null &&\r\n            !this._texture.baseTexture.hasLoaded) this._texture.removeEventListener('update', this._onTextureUpdate, this);\r\n        //赋值\r\n        this._texture = value || Texture.EMPTY;\r\n\r\n        this._textureID = -1;\r\n        this._textureTrimmedID = -1;\r\n        this._cachedTint = 0xFFFFFF;\r\n\r\n        if (value) {\r\n            if (value.baseTexture.hasLoaded) {\r\n                this._onTextureUpdate();\r\n            }\r\n            else {\r\n                value.once('update', this._onTextureUpdate, this);//只会监听一次\r\n            }\r\n        } else {\r\n            //624修改。如果置空纹理，_localBoundsSelf置空\r\n            this.updateLocalBoundsSelf();\r\n        }\r\n    }\r\n\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n    set tint(value) {\r\n        if (value === this._tint) return;\r\n        this._tint = value;\r\n        this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\r\n    }\r\n\r\n    //一些静态类方法\r\n    /**\r\n     * 网络图片\r\n     * @param url \r\n     */\r\n    static fromUrl(url: string): Sprite {\r\n        return new Sprite(Texture.fromUrl(url));\r\n    }\r\n\r\n    /**\r\n     * TextureCache缓存里取得frameId，通常图集里得名字\r\n     * @static\r\n     * @param {string} frameId - The frame Id of the texture in the cache\r\n     * @return {Sprite} A new Sprite using a texture from the texture cache matching the frameId\r\n     */\r\n    static fromFrame(frameId: string): Sprite {\r\n        const texture = TextureCache[frameId];\r\n        if (!texture) {\r\n            // throw new Error(`The frameId \"${frameId}\" does not exist in the texture cache`);\r\n            console.warn(\"TextureCache中不存在纹理frameId\")\r\n        }\r\n        return new Sprite(texture);\r\n    }\r\n}\r\n","\r\n\r\nexport class Vector2 {\r\n\tconstructor(\r\n\t\tpublic x: number = 0,\r\n\t\tpublic y: number = 0,\r\n\t) { }\r\n\tset(x: number, y: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\treturn this;\r\n\t};\r\n\tcopy(v: Vector2) {\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\treturn this\r\n\t}\r\n\tclone() {\r\n\t\treturn new Vector2(this.x, this.y)\r\n\t}\r\n\r\n\r\n\tadd(v) {\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\treturn this;\r\n\t};\r\n\r\n\taddScalar(s) {\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddVectors(a, b) {\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScaledVector(v, s) {\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(v) {\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubScalar(s) {\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubVectors(a, b) {\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultiply(v) {\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\treturn this;\r\n\t}\r\n\tmultiplyScalar(scalar) {\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdivide(v) {\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdivideScalar(scalar) {\r\n\t\treturn this.multiplyScalar(1 / scalar);\r\n\t}\r\n\r\n\tapplyMatrix3(m) {\r\n\t\tvar x = this.x, y = this.y;\r\n\t\tvar e = m.elements;\r\n\t\tthis.x = e[0] * x + e[3] * y + e[6];\r\n\t\tthis.y = e[1] * x + e[4] * y + e[7];\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(v) {\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\t}\r\n\r\n\tcross(v) {\r\n\t\treturn this.x * v.y - this.y * v.x;\r\n\t}\r\n\r\n\tlengthSq() {\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\t\treturn Math.abs(this.x) + Math.abs(this.y);\r\n\t}\r\n\tnormalize() {\r\n\t\treturn this.divideScalar(this.length() || 1);\r\n\t}\r\n\r\n\tangle() {\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\t\tvar angle = Math.atan2(this.y, this.x);\r\n\t\tif (angle < 0) angle += 2 * Math.PI;\r\n\t\treturn angle;\r\n\t}\r\n\tdistanceTo(v) {\r\n\t\treturn Math.sqrt(this.distanceToSquared(v));\r\n\t}\r\n\r\n\tdistanceToSquared(v) {\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\tmanhattanDistanceTo(v) {\r\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\r\n\t}\r\n\r\n\tsetLength(length) {\r\n\t\treturn this.normalize().multiplyScalar(length);\r\n\t}\r\n\tlerp(v, alpha) {\r\n\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\treturn this;\r\n\t}\r\n\tlerpVectors(v1, v2, alpha) {\r\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\r\n\t}\r\n\tequals(v) {\r\n\t\treturn ((v.x === this.x) && (v.y === this.y));\r\n\t}\r\n\tfromArray(array, offset) {\r\n\t\tif (offset === undefined) offset = 0;\r\n\t\tthis.x = array[offset];\r\n\t\tthis.y = array[offset + 1];\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttoArray(array = [], offset = 0) {\r\n\t\tarray[offset] = this.x;\r\n\t\tarray[offset + 1] = this.y;\r\n\t\treturn array;\r\n\t}\r\n}\r\n\r\n\r\n\r\n","\r\n\r\nlet env: \"tb\" | \"web\" = \"web\";\r\n//如果是浏览器环境，声明个my为null，为了无声明不报错\r\nif (window) window[\"my\"] = null;//在用webview的小程序环境内，只要在小程序的sdk前加js就无所谓，\r\nexport function getEnv(): \"tb\" | \"web\" {\r\n    return env\r\n}\r\n/**\r\n * 创建一个离屏的canvas\r\n */\r\nexport function createCanvas(): HTMLCanvasElement {\r\n    //@ts-ignore\r\n    return document && document.createElement(\"canvas\") || my._createOffscreenCanvas();\r\n}\r\n\r\nlet contentByCanvas: {\r\n    createImage: () => HTMLImageElement,\r\n    requestAnimationFrame: (fun: Function) => number,\r\n    cancelAnimationFrame: (id) => void,\r\n};\r\n/**\r\n * 淘宝小程序项目，拿到canvas先执行这个,,,TODO为啥不直接记录canvas.也许有问题,暂时不改\r\n * @param canvas \r\n */\r\nexport function initedByCanvas(canvas) {\r\n    contentByCanvas = {\r\n        createImage: canvas.createImage.bind(canvas),\r\n        //必须加bind，函数内存在this指向\r\n        requestAnimationFrame: canvas.requestAnimationFrame.bind(canvas),\r\n        cancelAnimationFrame: canvas.cancelAnimationFrame.bind(canvas),\r\n    }\r\n    env = \"tb\";\r\n}\r\nexport function destroyCanvasContent() {\r\n    if (contentByCanvas) {\r\n        contentByCanvas.createImage = null;\r\n        contentByCanvas.requestAnimationFrame = null;\r\n        contentByCanvas.cancelAnimationFrame = null;\r\n        contentByCanvas = null\r\n    }\r\n}\r\n\r\nexport function createImage() {\r\n    return contentByCanvas && contentByCanvas.createImage() || new Image();\r\n}\r\n//下面两个尽量自己外层写循环，不用这里的，因为淘宝小程序不同page用了canvas，最好都用各自的requestAnimationFrame，不相互覆盖\r\nexport function getRequestAnimationFrame() {\r\n    return contentByCanvas && contentByCanvas.requestAnimationFrame || window.requestAnimationFrame.bind(window)\r\n}\r\nexport function getCancelAnimationFrame() {\r\n    return contentByCanvas && contentByCanvas.cancelAnimationFrame || window.cancelAnimationFrame.bind(window)\r\n}\r\n\r\n//TODO上面所有的以后考虑这么些写,待测试\r\n// let env: \"tb\" | \"web\" = \"web\";\r\n// //如果是浏览器环境，声明个my为null，为了无声明不报错\r\n// if (window) window[\"my\"] = null;//在用webview的小程序环境内，只要在小程序的sdk前加js就无所谓，\r\n// export function getEnv(): \"tb\" | \"web\" {\r\n//     return env\r\n// }\r\n// /**\r\n//  * 创建一个离屏的canvas\r\n//  */\r\n// export function createCanvas(): HTMLCanvasElement {\r\n//     //@ts-ignore\r\n//     return getEnv() == \"web\" && document.createElement(\"canvas\") || my._createOffscreenCanvas();\r\n// }\r\n// /**\r\n//  * 临时记录的淘宝小程序的主canvas\r\n//  */\r\n// let tbCanvas;\r\n// /**\r\n//  * 淘宝小程序项目，拿到canvas先执行这个,修改当前环境\r\n//  * @param canvas \r\n//  */\r\n// export function initedByCanvas(canvas) {\r\n//     tbCanvas = canvas;\r\n//     env = \"tb\";\r\n// }\r\n// export function destroyCanvasContent() {\r\n//     tbCanvas = null;\r\n// }\r\n// export function createImage(): HTMLImageElement {\r\n//     return tbCanvas && tbCanvas.createImage() || new Image();\r\n// }\r\n// export function requestAnimationFrame(callback) {\r\n//     return tbCanvas && tbCanvas.requestAnimationFrame(callback) || window.requestAnimationFrame(callback)\r\n// }\r\n// export function cancelAnimationFrame(id: number) {\r\n//     return tbCanvas && tbCanvas.cancelAnimationFrame(id) || window.cancelAnimationFrame(id)\r\n// }\r\n","\r\nexport * from \"./Loader\"","import { Event } from \"./Event\";\nimport { DisplayObject } from \"../display/DisplayObject\";\n/**\n * 鼠标事件类,电脑端鼠标,移动设备端的触摸都使用此事件来监听\n * @class MouseEvent\n * @extends Event\n * @public\n * @since 1.0.0\n */\nexport class MouseEvent extends Event {\n    /**\n     * 鼠标或者手指按下事件\n     * @property MOUSE_DOWN\n     * @static\n     * @public\n     * @since 1.0.0\n     * @type {string}\n     */\n    public static MOUSE_DOWN: string = \"onMouseDown\";\n    /**\n     * 鼠标或者手指抬起事件\n     * @property MOUSE_UP\n     * @static\n     * @public\n     * @since 1.0.0\n     * @type {string}\n     */\n    public static MOUSE_UP: string = \"onMouseUp\";\n    /**\n     * 鼠标或者手指单击\n     * @property CLICK\n     * @static\n     * @public\n     * @since 1.0.0\n     * @type {string}\n     */\n    public static CLICK: string = \"onMouseClick\";\n    /**\n     * 鼠标或者手指移动事件\n     * @property MOUSE_MOVE\n     * @static\n     * @public\n     * @since 1.0.0\n     * @type {string}\n     */\n    public static MOUSE_MOVE: string = \"onMouseMove\";\n    /**\n     * 鼠标或者手指移入到显示对象上里触发的事件\n     * @property MOUSE_OVER\n     * @static\n     * @public\n     * @since 1.0.0\n     * @type {string}\n     */\n    public static MOUSE_OVER: string = \"onMouseOver\";\n    /**\n     * 鼠标或者手指移出显示对象边界触发的事件\n     * @property MOUSE_OUT\n     * @static\n     * @public\n     * @since 1.0.0\n     * @type {string}\n     */\n    public static MOUSE_OUT: string = \"onMouseOut\";\n    /**\n     * mouse或touch事件时rootDiv坐标x点\n     * @property clientX\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     */\n    public clientX: number = 0;\n    /**\n     * mouse或touch事件时rootDiv坐标y点\n     * @property clientY\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     */\n    public clientY: number = 0;\n    /**\n     * mouse或touch事件时全局坐标x点\n     * @property stageX\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     */\n    public stageX: number = 0;\n    /**\n     * mouse或touch事件时全局坐标y点\n     * @property stageY\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     */\n    public stageY: number = 0;\n    /**\n     * mouse或touch事件时本地坐标x点\n     * @property localX\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     */\n    public localX: number = 0;\n    /**\n     * mouse或touch事件时本地坐标y点\n     * @property localY\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     */\n    public localY: number = 0;\n    /**\n     * 触发事件的终点对象\n     * @property currentTarget\n     * @public\n     * @since 1.0.0\n     * @type{DisplayObject}\n     * @default null\n     */\n    public currentTarget: DisplayObject = null;\n    /**\n     * 触摸或者鼠标事件的手指唯一标识\n     * @property identifier\n     * @type {number}\n     * @since 1.1.2\n     * @public\n     */\n    public identifier: any = 0;\n    /**\n     * @method MouseEvent\n     * @public\n     * @since 1.0.0\n     * @param {string} type\n     */\n    public constructor(type: string) {\n        super(type);\n        this._instanceType = \"MouseEvent\";\n    }\n    /**\n     * 事件后立即更新显示列表状态\n     * @method updateAfterEvent\n     * @since 1.0.9\n     * @public\n     */\n    public updateAfterEvent() {\n        this.target.stage._cp = true;\n    }\n    public destroy(): void {\n        //清除相应的数据引用\n        let s = this;\n        s.currentTarget = null;\n        super.destroy();\n    }\n}","\r\nexport * from \"./Event\";\r\nexport * from \"./EventDispatcher\";\r\nexport * from \"./GDispatcher\";\r\nexport * from \"./MouseEvent\";","import { HashObject } from \"../../2d/HashObject\";\r\nimport { Texture } from \"../../2d/texture\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { hex2rgb } from \"../../2d/utils\";\r\n\r\n\r\n/**\r\n * 环境贴图融合方式\r\n */\r\nexport enum EnvBlendType {\r\n    ENVMAP_BLENDING_MULTIPLY = \"ENVMAP_BLENDING_MULTIPLY\",\r\n    ENVMAP_BLENDING_MIX = \"ENVMAP_BLENDING_MIX\",\r\n    ENVMAP_BLENDING_ADD = \"ENVMAP_BLENDING_ADD\"\r\n}\r\n\r\nexport enum RenderSideType {\r\n    /**\r\n     * 正面才渲染，逆时针顶点\r\n     */\r\n    FrontSide = 0,\r\n    /**\r\n     * 反面才渲染，顺时针顶点顺序\r\n     */\r\n    BackSide,\r\n    /**\r\n     * 两面都渲染\r\n     */\r\n    DoubleSide,\r\n}\r\n\r\n/**\r\n * 材质基类，一些基本属性加上\r\n */\r\nexport class BaseMaterial extends HashObject {\r\n\r\n    /**\r\n     * 十六进制 hex2rgb ,转成0到1的数组\r\n     */\r\n    private _color: number = 0xffffff;\r\n    private _colorArr: Float32Array = new Float32Array([1.0, 1.0, 1.0]);\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    set color(value: number) {\r\n        if (this._color === value) return;\r\n        this._color = value;\r\n        var arr = hex2rgb(value)\r\n        this._colorArr[0] = arr[0];\r\n        this._colorArr[1] = arr[1];\r\n        this._colorArr[2] = arr[2];\r\n    }\r\n    //获取\r\n    get colorArr() {\r\n        return this._colorArr;\r\n    }\r\n\r\n    /**\r\n     * 透明度0到1\r\n     */\r\n    alpha: number = 1\r\n    /**\r\n     * 漫反射贴图，一般贴图\r\n     */\r\n    public map: Texture;\r\n    /**\r\n     * 环境贴图\r\n     */\r\n    public envMap: Texture;\r\n    public combine: EnvBlendType = EnvBlendType.ENVMAP_BLENDING_MULTIPLY;//环境贴图融合方式，\r\n    public reflectivity: number = 1;\r\n    // public refractionRatio = 0.98;//先只管反射\r\n    // public envMapIntensity = 1.0\r\n\r\n    morphTargets: boolean = false;\r\n    morphNormals: boolean = false;\r\n    skinning: boolean = false;\r\n    /**\r\n     * 是否使用顶点颜色\r\n     */\r\n    useVertexColor: boolean = false\r\n    /**\r\n     * 是否用线框形式绘制\r\n     */\r\n    wireframe: boolean = false;\r\n    /**\r\n     * 材质渲染面\r\n     */\r\n    side: RenderSideType = RenderSideType.FrontSide;\r\n    /**\r\n     * 场景的雾化是否对材质有效\r\n     */\r\n    useFog: boolean = true;\r\n    /**\r\n     * 是否光照影响\r\n     */\r\n    _lightAffect: boolean = false;\r\n    constructor(parameters?: BaseMaterialParamsInt) {\r\n        super();\r\n        this._instanceType = \"BaseMaterial\";\r\n\r\n        //所有属性\r\n        if (parameters) {\r\n            for (var key in parameters) {\r\n                this[key] = parameters[key];\r\n            }\r\n        }\r\n    }\r\n    copy(material: BaseMaterial) {\r\n        this.color = material.color;\r\n        this.map = material.map;\r\n        this.alpha = material.alpha;\r\n        this.morphTargets = material.morphTargets;\r\n        this.morphNormals = material.morphNormals;\r\n        this.skinning = material.skinning;\r\n        this.wireframe = material.wireframe;\r\n        this.side = material.side;\r\n        this._lightAffect = material._lightAffect;\r\n        return this;\r\n    }\r\n    clone() {\r\n        return new BaseMaterial().copy(this);\r\n    }\r\n    destroy() {\r\n        this._color = null;\r\n    }\r\n}\r\n\r\nexport interface BaseMaterialParamsInt {\r\n    color?: number,\r\n    alpha?: number,\r\n    map?: Texture,\r\n    wireframe?: boolean,\r\n    side?: RenderSideType,\r\n    envMap?: Texture,\r\n    reflectivity?: number,\r\n    // refractionRatio?:number,\r\n    useVertexColor?: boolean,\r\n    morphTargets?: boolean,\r\n    morphNormals?: boolean,\r\n    skinning?: boolean,\r\n}","import { Box3 } from './Box3';\r\nimport { Vector3 } from './Vector3';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport class Sphere {\r\n\tconstructor(\r\n\t\tpublic center = new Vector3(),\r\n\t\tpublic radius: number = 0\r\n\t) { }\r\n\tset(center: Vector3, radius: number) {\r\n\t\tthis.center.copy(center);\r\n\t\tthis.radius = radius;\r\n\t\treturn this;\r\n\t}\r\n\tsetFromPoints(points: Vector3[], optionalCenter?: Vector3) {\r\n\t\tvar box = new Box3();\r\n\t\tvar center = this.center;\r\n\t\tif (optionalCenter !== undefined) {\r\n\t\t\tcenter.copy(optionalCenter);\r\n\t\t} else {\r\n\t\t\tbox.setFromPoints(points).getCenter(center);\r\n\t\t}\r\n\t\tvar maxRadiusSq = 0;\r\n\t\tfor (var i = 0, il = points.length; i < il; i++) {\r\n\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\r\n\t\t}\r\n\t\tthis.radius = Math.sqrt(maxRadiusSq);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new Sphere().copy(this);\r\n\t};\r\n\r\n\tcopy(sphere: Sphere) {\r\n\t\tthis.center.copy(sphere.center);\r\n\t\tthis.radius = sphere.radius;\r\n\t\treturn this;\r\n\t};\r\n\tempty() {\r\n\t\treturn (this.radius <= 0);\r\n\t}\r\n\tcontainsPoint(point: Vector3) {\r\n\t\treturn (point.distanceToSquared(this.center) <= (this.radius * this.radius));\r\n\t}\r\n\r\n\tdistanceToPoint(point: Vector3) {\r\n\t\treturn (point.distanceTo(this.center) - this.radius);\r\n\t}\r\n\r\n\tintersectsSphere(sphere: Sphere) {\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\treturn sphere.center.distanceToSquared(this.center) <= (radiusSum * radiusSum);\r\n\t};\r\n\r\n\tintersectsBox(box: Sphere) {\r\n\t\treturn box.intersectsSphere(this);\r\n\t};\r\n\r\n\tclampPoint(point: Vector3, target: Vector3 = new Vector3()) {\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared(point);\r\n\t\ttarget.copy(point);\r\n\t\tif (deltaLengthSq > (this.radius * this.radius)) {\r\n\t\t\ttarget.sub(this.center).normalize();\r\n\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\tgetBoundingBox(target: Box3 = new Box3()) {\r\n\t\ttarget.set(this.center, this.center);\r\n\t\ttarget.expandByScalar(this.radius);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tapplyMatrix4(matrix: Matrix4) {\r\n\t\tthis.center.applyMatrix4(matrix);\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\treturn this;\r\n\t};\r\n\r\n\ttranslate(offset: Vector3) {\r\n\t\tthis.center.add(offset);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tequals(sphere: Sphere) {\r\n\t\treturn sphere.center.equals(this.center) && (sphere.radius === this.radius);\r\n\t}\r\n}\r\n\r\n","import { HashObject } from \"../../2d/HashObject\";\r\nimport { IAnimationTrack } from \"../../2d/AnimationClip\";\r\nimport { MixBlend,MixDirection } from \"./utils\";\r\n\r\nexport class BaseTrack extends HashObject implements IAnimationTrack {\r\n    //和原版少了lastTime，事件才用到\r\n    setValue(\r\n        time: number,\r\n        alpha: number = 1,\r\n        blend: MixBlend = MixBlend.replace,\r\n        direction: MixDirection = MixDirection.in\r\n    ) {\r\n\r\n    }\r\n    resetValue() {\r\n\r\n    }\r\n    destroy() {\r\n\r\n    }\r\n}","import { HashObject } from \"../HashObject\";\n/**\n * @class Point\n * @extends HashObject\n * @since 1.0.0\n * @public\n */\nexport class Point extends HashObject {\n    public destroy(): void { }\n    /**\n     * 构造函数\n     * @method Point\n     * @public\n     * @since 1.0.0\n     * @param x\n     * @param y\n     */\n    constructor(x: number = 0, y: number = 0) {\n        super();\n        let s = this;\n        s._instanceType = \"Point\";\n        s.x = x;\n        s.y = y;\n    }\n    /**\n     * 水平坐标\n     * @property x\n     * @public\n     * @since 1.0.0\n     * @type{number}\n     */\n    public x: number = 0;\n    /**\n     * 垂直坐标\n     * @property y\n     * @since 1.0.0\n     * @public\n     * @type {number}\n     */\n    public y: number = 0;\n    /**\n     * 求两点之间的距离\n     * @method distance\n     * @param args 可变参数 传两个参数的话就是两个Point类型 传四个参数的话分别是两个点的x y x y\n     * @return {number}\n     * @static\n     */\n    public static distance(...args: any[]): number {\n        let len = args.length;\n        if (len == 4) {\n            return Math.sqrt((args[0] - args[2]) * (args[0] - args[2]) + (args[1] - args[3]) * (args[1] - args[3]));\n        } else if (len == 2) {\n            return Math.sqrt((args[0].x - args[1].x) * (args[0].x - args[1].x) + (args[0].y - args[1].y) * (args[0].y - args[1].y));\n        }\n    }\n\n    set(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}\n","import { EventDispatcher } from \"../events/EventDispatcher\";\nimport { CanvasGraphicsRenderer } from \"./plugins/CanvasGraphicsRenderer\";\nimport { Container, DisplayObject } from \"../display\";\nimport CanvasMaskManager from \"./managers/CanvasMaskManager\";\nimport CanvasSpriteRenderer from \"./plugins/CanvasSpriteRenderer\";\nimport { RENDERER_TYPE, BLEND_MODES } from \"../const\";\nimport RenderTexture from \"../texture/RenderTexture\";\nimport { Matrix } from \"../math\";\nimport { SystemRenderer } from \"./SystemRenderer\";\nimport CanvasRenderTarget from \"./renderTarget/CanvasRenderTarget\";\nimport { mapCanvasBlendModes } from \"../utils\";\nimport { CanvasMeshRenderer } from \"./plugins/CanvasMeshRenderer\";\n\n\n/**\n * 暂时不用，用时再说\n */\nexport class CanvasRenderer extends SystemRenderer {\n  /**\n   * 主屏幕渲染上下文\n   */\n  rootContext: CanvasRenderingContext2D;\n  /**\n   * 当前使用的上下文\n   */\n  context: CanvasRenderingContext2D;\n  /**\n   * 遮罩管理类\n   */\n  maskManager: CanvasMaskManager;\n  /**\n   * 插件，暂时只有图形和图片的\n   */\n  plugins;\n\n  /**\n   * 当前使用的混色模式\n   */\n  _activeBlendMode: BLEND_MODES;\n  /**\n   * 是否影响外部混色\n   */\n  _outerBlend: boolean;\n  /**\n   * 所有对应值\n   */\n  private blendModes: any;\n\n  constructor(context: CanvasRenderingContext2D, width: number, height: number) {\n    super();\n    this.type = RENDERER_TYPE.CANVAS\n    this._instanceType = \"CanvasRenderer\";\n\n    this.rootContext = context;\n\n    this.maskManager = new CanvasMaskManager(this);\n\n    // this.initPlugins();\n    this.plugins = {\n      sprite: null,\n      graphics: null,\n    }\n    this.plugins.sprite = new CanvasSpriteRenderer(this);\n    this.plugins.graphics = new CanvasGraphicsRenderer(this);\n    this.plugins.mesh = new CanvasMeshRenderer(this);\n\n    this.blendModes = mapCanvasBlendModes();\n    this._activeBlendMode = null;\n    this._outerBlend = false;\n\n    //\n    this.resize(width, height)\n  }\n\n  /**\n   * 渲染方法\n   * @param {DisplayObject} displayObject - 渲染对象\n   * @param {RenderTexture} [renderTexture] -离屏渲染纹理\n   * @param {Matrix} [transform] - 矩阵偏移\n   */\n  render(displayObject: DisplayObject, renderTexture?: any/*RenderTexture*/, transform?: Matrix) {\n\n    //渲染开始前触发\n    this.dispatchEvent('onPreRender');\n\n    //是否渲染到主屏幕\n    let renderingToScreen = !renderTexture;\n    if (renderTexture) {\n      renderTexture = renderTexture.baseTexture || renderTexture;\n      if (!renderTexture._canvasRenderTarget) {\n        renderTexture._canvasRenderTarget = new CanvasRenderTarget(\n          renderTexture.width,\n          renderTexture.height,\n        );\n        renderTexture.source = renderTexture._canvasRenderTarget.canvas;\n        renderTexture.valid = true;\n      } else {\n        //已有的话，需要重画\n        renderTexture._canvasRenderTarget.clear();\n        renderTexture._canvasRenderTarget.resize(renderTexture.width, renderTexture.height);\n      }\n      //当前上下文要修改成离屏的\n      this.context = renderTexture._canvasRenderTarget.context;\n    } else {\n      //当前上下文就是根节点的\n      this.context = this.rootContext;\n    }\n\n    const context = this.context;\n\n    if (!renderTexture) {\n      this._lastObjectRendered = displayObject;\n    }\n\n    //update更新属性\n    displayObject.update()\n\n    //存下真实的父级对象\n    const cacheParent = displayObject.parent;\n    const tempWt = this._tempDisplayObjectParent.transform.worldMatrix;\n\n    if (transform) {\n      //有transform则复制\n      tempWt.copy(transform);\n      //标记要更新transform，确保子级会更新全局矩阵，（改成++）TODO待测试，Graphics和截图两个地方用到了transform\n      this._tempDisplayObjectParent.transform._worldID++;\n    }\n    else {\n      //没有就初始化\n      tempWt.identity();\n    }\n\n    displayObject.parent = this._tempDisplayObjectParent;\n\n    displayObject.updateTransform();\n\n    displayObject.parent = cacheParent;\n\n    //初始化上下文状态\n    context.save();\n    context.setTransform(1, 0, 0, 1, 0, 0);\n    context.globalAlpha = 1;\n\n    //默认模式\n    this._activeBlendMode = BLEND_MODES.NORMAL;\n    this._outerBlend = false;\n    context.globalCompositeOperation = this.blendModes[BLEND_MODES.NORMAL];\n\n    // context.clearRect(0, 0, this.width, this.height);\n    if (renderingToScreen) {\n      if (this.transparent) {\n        context.clearRect(0, 0, this.width, this.height);\n      }\n      else {\n        context.fillStyle = this._backgroundColorString;\n        context.fillRect(0, 0, this.width, this.height);\n      }\n    }\n\n    //执行绘制\n    displayObject.renderCanvas(this);\n\n    // context[\"draw\"]();\n\n    context.restore();\n\n    //渲染后触发\n    this.dispatchEvent('onPostRender');\n  }\n\n  /**\n   * 设置混色模式\n   * @param {number} blendMode \n   * @param {boolean} [readyForOuterBlend=false] 部分混色会改变渲染边缘,所以是否要改变得确定传值,默认false,这些混色方式当作normal处理\n   */\n  setBlendMode(blendMode: BLEND_MODES, readyForOuterBlend: boolean = false) {\n    const outerBlend = blendMode === BLEND_MODES.SRC_IN\n      || blendMode === BLEND_MODES.SRC_OUT\n      || blendMode === BLEND_MODES.DST_IN\n      || blendMode === BLEND_MODES.DST_ATOP;\n\n    if (!readyForOuterBlend && outerBlend) {\n      blendMode = BLEND_MODES.NORMAL;\n    }\n\n    if (this._activeBlendMode === blendMode) {\n      return;\n    }\n\n    this._activeBlendMode = blendMode;\n    this._outerBlend = outerBlend;\n    this.context.globalCompositeOperation = this.blendModes[blendMode];\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    this.destroyPlugins();\n\n    super.destroy();\n\n    this.context = null;\n\n    this.maskManager.destroy();\n    this.maskManager = null;\n  }\n\n  destroyPlugins() {\n    this.plugins.sprite.destroy();\n    this.plugins.graphics.destroy();\n  }\n}\n\n","import { EventDispatcher } from '../events/EventDispatcher';\nimport { isPow2, BaseTextureCache, TextureCache, uid } from '../utils';\nimport { SCALE_MODES, WRAP_MODES } from \"../const\"\nimport { GlobalLoader } from '../loader';\n\n/**\n * 每个texture都有一个BaseTexture，多数用于图集，texture可自身设置属性\n * 实际绘制用的都是BaseTexture\n * @class\n * @extends EventDispatcher\n */\nexport default class BaseTexture extends EventDispatcher {\n    /**\n     * 贴图回收时用到，\n     * 标记是否被使用过\n     */\n    _touchedId: number;\n    /**\n     * 批处理时用到的标志位\n     * 被使用着的id\n     */\n    _enabledId: number;\n    /**\n     * 宽度\n     */\n    width: number;\n    /**\n     * 高度\n     */\n    height: number;\n    /**\n     * SCALE_MODES，一般是线性\n     * 用于glTexture\n     */\n    scaleMode: SCALE_MODES;\n    /**\n     * 加载完成会设置为true\n     * 加载失败或没有贴图数据则为false，\n     * 通常用于标记基础纹理是否可用\n     */\n    hasLoaded: boolean;\n    /**\n     * 正在加载\n     */\n    private _isLoading: boolean;\n    /**\n     * image类型 eg. `png`\n     * 暂时不考虑svg\n     * @readonly\n     */\n    imageType: string;\n    /**\n     * rgb预乘alpha，webgl用到，png图片设置必为true，否则色值会出问题\n     * @default true\n     */\n    premultipliedAlpha: boolean;\n    /**\n     * 图片路径\n     * @member {string}\n     */\n    imageUrl: string;\n    /**\n     * 是否尺寸为2的次方，尽可能图集尺寸都为2的次方，gpu处理方便，并且能做mipmap缓存，性能更好\n     */\n    isPowerOfTwo: boolean;\n    /**\n     * 尺寸是2的次方下才能设置true，用于生成mipmap缓存\n     * @default true\n     */\n    mipmap: boolean;\n    /**\n     * 非2的次方时要设置CLAMP\n     * WebGL Texture wrap mode\n     * @default WRAP_MODES.CLAMP\n     */\n    wrapMode: WRAP_MODES;\n    /**\n     * A map of renderer IDs to webgl textures\n     * 不同渲染器对应的记录，暂时应该只需要一个\n     * @member {object<number, WebGLTexture>}\n     */\n    _glTextures: {};\n    /**\n     * The ids under which this BaseTexture has been added to the base texture cache. This is\n     * automatically set as long as BaseTexture.addToCache is used, but may not be set if a\n     * BaseTexture is added directly to the BaseTextureCache array.\n     * @member {string[]}\n     */\n    textureCacheIds: string[];\n\n    /**\n     * \n     * 小程序里用得是imageData，文本多数用这个，改成canvas;\n   * {\n   * data:Uint8Array,\n   * width:number,\n   * height:number,\n   * type:string,\n   * path:string\n   * }\n   * 或者是canvas.createImage()对象，用source.data区分\n   * 加一个离屏的canvas\n     */\n    source;\n\n\n    /**\n     * @param {} [source] - 源数据\n     * @param {number} - possible values\n     */\n    constructor(source = null, scaleMode: SCALE_MODES = SCALE_MODES.LINEAR) {\n        super();\n        this._touchedId = 0;\n        this.width = 100;\n        this.height = 100;\n        this.scaleMode = scaleMode;\n        this.hasLoaded = false;\n        this._isLoading = false;\n        this.source = null;\n        this.imageType = null;\n        this.premultipliedAlpha = true;\n        this.imageUrl = null;\n        this.isPowerOfTwo = false;\n        this.mipmap = true;\n        this.wrapMode = WRAP_MODES.CLAMP;\n        this._glTextures = {};\n        this._enabledId = 0;\n        this.textureCacheIds = [];\n        //有source要加载，构造函数不缓存baseTexture，要缓存用fromUrl\n        if (source) {\n            //是imageData\n            if (source.data) {\n                this._sourceChange(source);\n            }\n            //是canvas\n            else if (source.getContext) {\n                this._sourceChange(source);\n            }\n            else {\n                if (source.complete) {\n                    this._sourceChange(source);\n                    this.dispatchEvent(\"loaded\");\n                } else {\n                    var self = this\n                    source.onload = function () {\n                        self._sourceChange(source);\n                        self.dispatchEvent(\"loaded\");\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 会触发更新事件\n     * @fires BaseTexture#update\n     */\n    update() {\n        //尺寸重置\n        this.width = this.source.width;\n        this.height = this.source.height;\n        //再来判断一次\n        this.hasLoaded = this.width && this.height ? true : false;\n        //判断是否是2的n次方\n        this.isPowerOfTwo = isPow2(this.width) && isPow2(this.height);\n\n        //触发绑定过的更新事件，比如webgl纹理更新\n        this.dispatchEvent(\"update\")\n    }\n\n    /**\n     * \n     */\n    _sourceChange(source) {\n        //赋值\n        this.source = source;\n        //路径，暂时没用，需要时再处理，先找src 再path（基本没有）\n        this.imageUrl = source.src || source.path || null;\n        //更新类型,暂时没用，也没做，需要是处理\n        this.imageType = this.source.type || null;\n        //加载完成\n        this.hasLoaded = true;\n        //更新\n        this.update();\n        //触发事件\n        this.dispatchEvent(\"loaded\");\n    }\n\n    /**\n     * 销毁 base texture\n     * 基本不会销毁纹理\n     */\n    destroy() {\n        if (this.imageUrl) {\n            delete TextureCache[this.imageUrl];\n            this.imageUrl = null;\n        }\n        this.source = null;\n        this.dispose();\n        BaseTexture.removeFromCache(this);\n        this.textureCacheIds = null;\n    }\n\n    /**\n     * 用于释放gpu缓存，并不销毁纹理，需要时可再上传到GPU\n     * @fires BaseTexture#dispose\n     */\n    dispose() {\n        //用于触发TextureManager中监听的\n        this.dispatchEvent(\"dispose\")\n    }\n\n    //辅助静态方法\n    /**\n     * 根据路径\n     * @param {string} url  路径\n     */\n    static fromUrl(url: string) {\n        if (BaseTextureCache[url]) return BaseTextureCache[url];\n        let baseTexture = new BaseTexture();\n        GlobalLoader.loadImage((s, res) => {\n            if (s) {\n                baseTexture._sourceChange(res);\n                //添加进缓存\n                if (url.indexOf('data:') !== 0) BaseTexture.addToCache(baseTexture, url);\n            }\n        }, url)\n        return baseTexture\n    }\n\n    /**\n     * 随便啥形式的，比如data，\n     * @param data \n     */\n    static fromData(data) {\n        return new BaseTexture(data);\n    }\n\n    /**\n     * 从离屏canvas创建的\n     */\n    static fromCanvas(canvas: HTMLCanvasElement, origin: string = 'canvas') {\n        //标记canvasId\n        if (!canvas[\"_canvasId\"]) {\n            canvas[\"_canvasId\"] = `${origin}_${uid()}`;\n        }\n        let baseTexture = BaseTextureCache[canvas[\"_canvasId\"]];\n        if (!baseTexture) {\n            baseTexture = new BaseTexture(canvas);\n            BaseTexture.addToCache(baseTexture, canvas[\"_canvasId\"]);\n        }\n        return baseTexture;\n    }\n    /**\n     * 根据图片\n     * @param image \n     */\n    static fromImage(image: HTMLImageElement) {\n        //图片标签\n        const imageUrl = image.src;\n        let baseTexture = BaseTextureCache[imageUrl];\n        if (!baseTexture) {\n            baseTexture = new BaseTexture(image);\n            //不缓存base64，如需要，设名字，手动缓存\n            if (imageUrl && imageUrl.indexOf('data:') !== 0) BaseTexture.addToCache(baseTexture, imageUrl);\n        }\n        return baseTexture;\n    }\n    //不包括data形式，data用\n    static from(anything: string | HTMLCanvasElement | HTMLImageElement) {\n        //路径\n        if (typeof anything === 'string') {\n            return BaseTexture.fromUrl(anything);\n        }\n        //@ts-ignore\n        else if (anything.data) {\n            return BaseTexture.fromData(anything);\n        }\n        //@ts-ignore canvas\n        else if (anything.getContext) {\n            //@ts-ignore\n            return BaseTexture.fromCanvas(anything);\n        } else {\n            //@ts-ignore\n            return BaseTexture.fromImage(anything);\n        }\n    }\n\n    /**\n     * 加入缓存\n     * @static\n     * @param {BaseTexture} baseTexture\n     * @param {string} id\n     */\n    static addToCache(baseTexture: BaseTexture, id: string) {\n        if (id) {\n            if (baseTexture.textureCacheIds.indexOf(id) === -1) {\n                baseTexture.textureCacheIds.push(id);\n            }\n\n            if (BaseTextureCache[id]) {\n                //覆盖\n                console.warn(`BaseTexture added to the cache with an id [${id}] that already had an entry`);\n            }\n            BaseTextureCache[id] = baseTexture;\n        }\n    }\n\n    /**\n     * 移除缓存\n     * @static\n     * @param {string|BaseTexture} baseTexture id或者BaseTexture\n     * @return {BaseTexture|null} 移除的BaseTexture或null\n     */\n    static removeFromCache(baseTexture: string | BaseTexture): BaseTexture | null {\n        if (typeof baseTexture === 'string') {\n            const baseTextureFromCache = BaseTextureCache[baseTexture];\n            if (baseTextureFromCache) {\n                const index = baseTextureFromCache.textureCacheIds.indexOf(baseTexture);\n                if (index > -1) {\n                    baseTextureFromCache.textureCacheIds.splice(index, 1);\n                }\n                delete BaseTextureCache[baseTexture];\n                return baseTextureFromCache;\n            }\n        }\n        else if (baseTexture && baseTexture.textureCacheIds) {\n            for (let i = 0; i < baseTexture.textureCacheIds.length; ++i) {\n                delete BaseTextureCache[baseTexture.textureCacheIds[i]];\n            }\n            baseTexture.textureCacheIds.length = 0;\n            return baseTexture;\n        }\n        return null;\n    }\n}\n","import { Point, Rectangle } from \"../math\";\r\nimport { Polygon } from \"../graphics/shapes\";\r\nimport Container from \"../display/Container\";\r\nimport Texture from \"../texture/Texture\";\r\nimport { BLEND_MODES } from \"../const\";\r\nimport TextureMatrix from \"../texture/TextureMatrix\";\r\nimport {CanvasRenderer} from \"../renderers/CanvasRenderer\";\r\nimport { WebglRenderer } from \"../renderers/WebglRenderer\";\r\nimport { DisplayObject } from \"../display\";\r\n\r\n\r\nconst tempPoint = new Point();\r\nconst tempPolygon = new Polygon();\r\n\r\n/**\r\n * Mesh网格类，其实最优的是仿pixiV5和threejs用geometry和material\r\n * 简便起见，顶点，索引，uv都干一起吧\r\n * 用batch渲染\r\n */\r\nexport class Mesh extends Container {\r\n    /**\r\n     * 混色模式\r\n     * @default BLEND_MODES.NORMAL\r\n     */\r\n    private _blendMode: BLEND_MODES = BLEND_MODES.NORMAL;\r\n    //以后修改\r\n    get blendMode(): BLEND_MODES {\r\n        return this._blendMode\r\n    }\r\n    /**\r\n     * 很多效果暂时无效，再查原因，先不能设置吧\r\n     */\r\n    set blendMode(value: BLEND_MODES) {\r\n        // if (value != this._blendMode) this._blendMode = value\r\n    }\r\n    /**\r\n     * The texture of the Mesh\r\n     *\r\n     * @member {Texture}\r\n     * @default Texture.EMPTY\r\n     * @private\r\n     */\r\n    private _texture: Texture;\r\n\r\n    /**\r\n     * 原先自身的顶点数据,到时候封装几何全进\r\n     */\r\n    _vertices: Float32Array;\r\n    /**\r\n     * 是否要更新执行_refresh\r\n     */\r\n    protected _needRefresh: boolean;\r\n\r\n    _indices: Uint16Array;\r\n    _uvs: Float32Array;\r\n    /**\r\n     * 要传入批的顶点数据\r\n     */\r\n    _vertexData: Float32Array;\r\n    /**\r\n     * 传入批处理的永远是上面三个，上面三个的计算需要记录dirty\r\n     * 但是每次都需要传Gpu,性能再说吧\r\n     * Version of mesh verticies are dirty or not\r\n     * 原来是dirty，\r\n     * @member {number}\r\n     */\r\n    protected _vertexDirty: number;\r\n\r\n    /**\r\n     * 记录顶点原标记Id，确保与_vertexDirty保持一致\r\n     * 默认-1，保证算一次\r\n     */\r\n    private _vertexId: number;\r\n    /**\r\n     * 记录LocalBoundsSelf的id，确保与_vertexDirty保持一致\r\n     * 默认-1，保证算一次\r\n     */\r\n    private _localBoundsSelfId: number;\r\n    /**\r\n     * 需要与transform._worldID的保持一致\r\n     * 用于标记计算顶点数据\r\n     */\r\n    private _transformID: number\r\n    /**\r\n     * Triangles in canvas mode are automatically antialiased, use this value to force triangles\r\n     * to overlap a bit with each other.\r\n     *\r\n     * @member {number}\r\n     */\r\n    canvasPadding: number;\r\n    /**\r\n     * 色值调色\r\n     * The tint applied to the mesh. This is a [r,g,b] value. A value of [1,1,1] will remove any\r\n     * tint effect.\r\n     */\r\n    private _tint: number;\r\n    /**\r\n     * RGB形式色值，webgl用\r\n     */\r\n    private _tintRGB: number;\r\n    /**\r\n     * transform that is applied to UV to get the texture coords\r\n     * its updated independently from texture uvTransform\r\n     * updates of uvs are tied to that thing\r\n     *\r\n     * @member {TextureMatrix}\r\n     * @private\r\n     */\r\n    private _uvTransform: TextureMatrix;\r\n    /**\r\n     * @param {Texture} texture - The texture to use\r\n     * @param {Float32Array} [vertices] - if you want to specify the vertices\r\n     * @param {Float32Array} [uvs] - if you want to specify the uvs\r\n     * @param {Uint16Array} [indices] - if you want to specify the indices\r\n     */\r\n    constructor(texture?: Texture, vertices?: Float32Array, uvs?: Float32Array, indices?: Uint16Array) {\r\n        super();\r\n\r\n        /**\r\n         * 赋值有问题，再处理\r\n         */\r\n        this._texture = texture || Texture.EMPTY;\r\n\r\n        this._uvs = uvs || new Float32Array([\r\n            0, 0,\r\n            1, 0,\r\n            1, 1,\r\n            0, 1]);\r\n\r\n        this._vertices = vertices || new Float32Array([\r\n            0, 0,\r\n            100, 0,\r\n            100, 100,\r\n            0, 100]);\r\n\r\n        this._indices = indices || new Uint16Array([0, 1, 3, 2]);\r\n\r\n\r\n        this._vertexDirty = 0;\r\n\r\n        //置为-1，确保计算\r\n        this._vertexId = -1;\r\n        this._localBoundsSelfId = -1;\r\n\r\n        this.blendMode = BLEND_MODES.NORMAL;\r\n\r\n        this.canvasPadding = 0;\r\n\r\n        this._tint = null;\r\n        this._tintRGB = null;\r\n        this.tint = 0xFFFFFF;\r\n\r\n        this._uvTransform = new TextureMatrix(this._texture);\r\n\r\n        //标记，至少更新一次\r\n        this._needRefresh = true;\r\n    }\r\n\r\n    /**\r\n     * Renders the object using the WebGL renderer\r\n     *\r\n     * @private\r\n     * @param {WebGLRenderer} renderer - a reference to the WebGL renderer\r\n     */\r\n    _renderWebGL(renderer: WebglRenderer) {\r\n        //刷一次\r\n        this.refresh();\r\n        //计算全局顶点\r\n        this.calculateVertices();\r\n        renderer.batchManager.setObjectRenderer(renderer.plugins[\"batch\"]);\r\n        renderer.plugins[\"batch\"].render(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the object using the Canvas renderer\r\n     *\r\n     * @private\r\n     * @param {CanvasRenderer} renderer - The canvas renderer.\r\n     */\r\n    _renderCanvas(renderer: CanvasRenderer) {\r\n        this.refresh();\r\n        renderer.plugins[\"mesh\"].render(this);\r\n    }\r\n\r\n    /**\r\n     * When the texture is updated, this event will fire to update the scale and frame\r\n     *\r\n     * @private\r\n     */\r\n    private _onTextureUpdate() {\r\n        this._uvTransform.texture = this._texture;\r\n        this._needRefresh = true;\r\n    }\r\n\r\n    /**\r\n     * 重新计算uv，为了图集上的uv和自身uv\r\n     */\r\n    multiplyUvs() {\r\n        this._uvTransform.multiplyUvs(this._uvs);\r\n    }\r\n\r\n    /**\r\n     * Refreshes uvs for generated meshes (rope, plane)\r\n     * sometimes refreshes vertices too\r\n     *\r\n     * @param {boolean} [forceUpdate=false] if true, matrices will be updated any case\r\n     */\r\n    refresh(forceUpdate: boolean = false) {\r\n        //贴图不可用，返回\r\n        if (!this._texture || !this._texture.valid) return;\r\n        if (this._uvTransform.update(forceUpdate) ||\r\n            this._needRefresh ||\r\n            forceUpdate\r\n        ) {\r\n            this._refresh();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 子类重写，用来计算 顶点，uv，索引\r\n     * @protected\r\n     */\r\n    protected _refresh() {\r\n        /* empty */\r\n    }\r\n\r\n    /**\r\n     * 计算一边全局的顶点\r\n     */\r\n    calculateVertices() {\r\n        //顶点没变，坐标没变，就返回\r\n        if (this._vertexId === this._vertexDirty && this._transformID === this.transform._worldID) return;\r\n        this._vertexId = this._vertexDirty\r\n        this._transformID = this.transform._worldID;\r\n\r\n        if (this._vertices.length <= 2) return\r\n        if (!this._vertexData) this._vertexData = new Float32Array(this._vertices.length)\r\n\r\n\r\n\r\n        const wt = this.transform.worldMatrix;\r\n        const a = wt.a;\r\n        const b = wt.b;\r\n        const c = wt.c;\r\n        const d = wt.d;\r\n        const tx = wt.tx;\r\n        const ty = wt.ty;\r\n\r\n        const vertexData = this._vertexData;\r\n\r\n        for (let i = 0; i < vertexData.length / 2; i++) {\r\n            const x = this._vertices[(i * 2)];\r\n            const y = this._vertices[(i * 2) + 1];\r\n            vertexData[(i * 2)] = (a * x) + (c * y) + tx;\r\n            vertexData[(i * 2) + 1] = (b * x) + (d * y) + ty;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\r\n     *\r\n     */\r\n    _calculateBounds() {\r\n        // TODO - we can cache local bounds and use them if they are dirty (like graphics)\r\n        // this._bounds.addVertices(this.transform, this.vertices, 0, this.vertices.length);\r\n        this.updateLocalBoundsSelf();\r\n        const rect = this._localBoundsSelf;\r\n        var matrix = this.transform.worldMatrix;\r\n        matrix.transformPoint(rect.x, rect.y, DisplayObject._p1);\r\n        matrix.transformPoint(rect.x + rect.width, rect.y, DisplayObject._p2);\r\n        matrix.transformPoint(rect.x + rect.width, rect.y + rect.height, DisplayObject._p3);\r\n        matrix.transformPoint(rect.x, rect.y + rect.height, DisplayObject._p4);\r\n        Rectangle.createFromPoints(this._bounds, DisplayObject._p1, DisplayObject._p2, DisplayObject._p3, DisplayObject._p4);\r\n    }\r\n\r\n    /**\r\n     * 更新自身包围盒\r\n     * 通过原先的顶点数据玩，不经过transform\r\n     */\r\n    updateLocalBoundsSelf() {\r\n        if (this._localBoundsSelfId == this._vertexDirty) return;\r\n        this._localBoundsSelfId = this._vertexDirty;\r\n        //如果小于等于1个点清空\r\n        if (this._vertices.length <= 2) this._localBoundsSelf.clear();\r\n        Rectangle.createFromVertexData(this._localBoundsSelf, this._vertices);\r\n    }\r\n    /**\r\n     * \r\n     * @param point 全局点\r\n     * @param isMouseEvent \r\n     */\r\n    hitTestPoint(point: Point, isMouseEvent: boolean = false): DisplayObject {\r\n        //不可见，直接返回\r\n        if (!this.visible) return null;\r\n        let hitDisplayObject;\r\n        //先检查子级，因为子级层级更高\r\n        hitDisplayObject = super.hitTestPoint(point, isMouseEvent);\r\n        //子级已有，返回\r\n        if (hitDisplayObject) return hitDisplayObject;\r\n        //子级没有的话，为了可以不updateLocalBoundsSelf，判断一下\r\n        if (isMouseEvent && !this.mouseEnable) return null;\r\n        //再粗略检查自己，先计算自身盒子\r\n        this.updateLocalBoundsSelf();\r\n        //简单检测\r\n        hitDisplayObject = this.displayObjectHitTestPoint(point, isMouseEvent);\r\n        //如果在LocalBoundsSelf内，再继续查点组成的\r\n        if (hitDisplayObject) return this.hitTestPointAccuratly(point, isMouseEvent)\r\n        return null\r\n    }\r\n    private hitTestPointAccuratly(point: Point, isMouseEvent): DisplayObject {\r\n        if (isMouseEvent) {\r\n            this.globalToLocal(point, tempPoint);\r\n        } else {\r\n            tempPoint.set(point.x, point.y);\r\n        }\r\n        const vertices = this._vertices;\r\n        const points = tempPolygon.points;\r\n        const indices = this._indices;\r\n        const len = this._indices.length;\r\n        for (let i = 0; i + 2 < len; i += 3) {\r\n            const ind0 = indices[i] * 2;\r\n            const ind1 = indices[i + 1] * 2;\r\n            const ind2 = indices[i + 2] * 2;\r\n\r\n            points[0] = vertices[ind0];\r\n            points[1] = vertices[ind0 + 1];\r\n            points[2] = vertices[ind1];\r\n            points[3] = vertices[ind1 + 1];\r\n            points[4] = vertices[ind2];\r\n            points[5] = vertices[ind2 + 1];\r\n\r\n            if (tempPolygon.isPointIn(tempPoint)) return this;\r\n\r\n        }\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * The texture that the mesh uses.\r\n     *\r\n     * @member {Texture}\r\n     */\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    set texture(value) {\r\n        if (this._texture === value) return;\r\n        this._texture = value;\r\n        if (value) {\r\n            // wait for the texture to load\r\n            if (value.baseTexture.hasLoaded) {\r\n                this._onTextureUpdate();\r\n            }\r\n            else {\r\n                value.once('update', this._onTextureUpdate, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n    set tint(value: number) {\r\n        if (value === this._tint) return;\r\n        this._tint = value;\r\n        this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\r\n    }\r\n\r\n    /**\r\n     * Destroys the Mesh object.\r\n     *\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n        //相应texture移除监听\r\n        this._texture.removeEventListener('update', this._onTextureUpdate, this);\r\n\r\n        this._uvs = null;\r\n        this._vertices = null;\r\n        this._indices = null;\r\n        this._vertexData = null\r\n    }\r\n}\r\n\r\n","import { SCALE_MODES, TEXT_ALIGN, TEXT_lINETYPE, VERTICAL_ALIGN, osType } from \"../const\";\r\nimport Texture from \"../texture/Texture\";\r\nimport { getRGBA, createCanvas, getEnv } from \"../utils\";\r\nimport { Rectangle } from \"../math\";\r\nimport Sprite from \"../display/Sprite\";\r\nimport { BaseTexture } from \"../texture\";\r\n\r\n\r\n//文本canvas上xy的偏移量\r\nconst padding = 10;\r\n/**\r\n * 到时有离屏canvas再修改，现在离屏canvasios有问题，且文本模糊\r\n * 继承Sprite，暂时发现，只需要切换bitmap和Sprite,TextField永远都是最新的，到时替换\r\n * 动态文本类,有时需要在canvas里有一个动态文本,能根据我们的显示内容来改变\r\n * @class TextFieldCon\r\n * @extends DisplayObject\r\n * @since 1.0.0\r\n * @public\r\n */\r\nexport class TextField extends Sprite {\r\n    private static shareCanvas: HTMLCanvasElement;\r\n    private static shareContext: CanvasRenderingContext2D;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n    /**\r\n     * 与其他类不同，用了Boolean，再考虑\r\n     */\r\n    dirty: boolean;\r\n\r\n    offsetX: number;\r\n    offsetY: number;\r\n    constructor() {\r\n        super();\r\n        this._instanceType = \"TextField\";\r\n        //ios直接\r\n        // if (osType == \"ios\") {\r\n        var canvas = createCanvas()\r\n        // canvas.width = 3;\r\n        // canvas.height = 3;\r\n        // if (osType == \"ios\") {\r\n        canvas.width = canvas.height = 3;\r\n        // } else {//现在只能用canvas2d渲染，所以不能用imageData了，等修复了安卓canvas尺寸问题再改\r\n        //     canvas.width = 300;\r\n        //     canvas.height = 150;\r\n        // }\r\n        this.texture = Texture.fromCanvas(canvas, \"textCanvas\");\r\n        this.canvas = canvas;\r\n        this.context = canvas.getContext(\"2d\");\r\n        // }\r\n        // //安卓的不能改变离屏canvas的尺寸，所以用750*750的，取imageData\r\n        // else {\r\n        //     if (!TextField.shareCanvas) {\r\n        //         TextField.shareCanvas = createCanvas();\r\n        //         TextField.shareCanvas.width = TextField.shareCanvas.height = 750;\r\n        //         TextField.shareContext = TextField.shareCanvas.getContext(\"2d\");\r\n        //     }\r\n        //     var baseTexture = new BaseTexture({\r\n        //         data: [],\r\n        //         width: 0,\r\n        //         height: 0,\r\n        //         type: \"text\",\r\n        //         path: null\r\n        //     });\r\n        //     this.texture = new Texture(baseTexture);\r\n\r\n        //     this.canvas = TextField.shareCanvas;\r\n        //     this.context = TextField.shareContext;\r\n        // }\r\n        //baseTexture已自动缓存，把texture也缓存，key textCanvas+num  和baseTexture的一致\r\n        Texture.addToCache(this.texture, this.texture.baseTexture.textureCacheIds[0]);\r\n\r\n        this.dirty = true;\r\n    }\r\n\r\n    /**\r\n     * @property textAlpha\r\n     * @since 2.0.0\r\n     * @public\r\n     */\r\n    public set textAlpha(value: number) {\r\n        if (this._textAlpha != value) {\r\n            this._textAlpha = value;\r\n            this.dirty = true;\r\n        }\r\n    }\r\n\r\n    public get textAlpha(): number {\r\n        return this._textAlpha;\r\n    }\r\n    private _textAlpha: number = 1;\r\n\r\n    /**\r\n     * 文本的水平对齐方式 left center right\r\n     * 设置过textHeight才有效，如果是多行的，对排版有作用\r\n     * @property textAlign\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {string}\r\n     * @default left\r\n     */\r\n    public set textAlign(value: TEXT_ALIGN) {\r\n        if (this._textAlign != value) {\r\n            this._textAlign = value;\r\n            this.dirty = true;\r\n        }\r\n    }\r\n\r\n    public get textAlign(): TEXT_ALIGN {\r\n        return this._textAlign;\r\n    }\r\n    private _textAlign: TEXT_ALIGN = TEXT_ALIGN.LEFT;\r\n\r\n    /**\r\n     * 垂直对齐方式 \r\n     * 设置过textHeight才有效\r\n     */\r\n    public set verticalAlign(value: VERTICAL_ALIGN) {\r\n        if (this._verticalAlign != value) {\r\n            this._verticalAlign = value;\r\n            this.dirty = true;\r\n        }\r\n    }\r\n\r\n    public get verticalAlign(): VERTICAL_ALIGN {\r\n        return this._verticalAlign;\r\n    }\r\n    private _verticalAlign: VERTICAL_ALIGN = VERTICAL_ALIGN.UP;\r\n\r\n    /**\r\n     * 文本的宽，\r\n     * @property textWidth\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    public set textWidth(value: number) {\r\n        if (this._textWidth != value) {\r\n            this._textWidth = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n    public get textWidth(): number {\r\n        if (this._textWidth) {\r\n            //有就这个\r\n            return this._textWidth\r\n        } else {\r\n            //没有就计算出的给width，还是\r\n            this.updateText();\r\n            return this.width - padding * 2;\r\n        }\r\n    }\r\n    private _textWidth: number = 0;\r\n\r\n    /**\r\n     * 文本的行高，设置过能进行垂直适配，\r\n     * 文本超出行高会被裁切\r\n     * @property textHeight\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    public set textHeight(value: number) {\r\n        if (this._textHeight != value) {\r\n            this._textHeight = value;\r\n            this.dirty = true;\r\n        }\r\n    }\r\n\r\n    public get textHeight(): number {\r\n        if (this._textHeight) {\r\n            //有就这个\r\n            return this._textHeight\r\n        } else {\r\n            //没有就计算出的给height，还是\r\n            this.updateText();\r\n            return this.height - padding * 2\r\n        }\r\n    }\r\n    private _textHeight: number = 0;\r\n\r\n    /**\r\n     * 行间距\r\n     * @property lineSpacing\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {number} value\r\n     */\r\n    public set lineSpacing(value: number) {\r\n        if (this._lineSpacing != value) {\r\n            this._lineSpacing = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n    public get lineSpacing(): number {\r\n        return this._lineSpacing;\r\n    }\r\n    private _lineSpacing: number = 14;\r\n\r\n    /**\r\n     * 文本类型,单行还是多行 single multi\r\n     * @property lineType\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {string} 两种 single和multi\r\n     * @default single\r\n     */\r\n    public set lineType(value: TEXT_lINETYPE) {\r\n        if (this._lineType != value) {\r\n            this._lineType = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n    public get lineType(): TEXT_lINETYPE {\r\n        return this._lineType;\r\n    }\r\n    private _lineType: TEXT_lINETYPE = TEXT_lINETYPE.SINGLE;\r\n    /**\r\n     * 文本内容\r\n     * @property text\r\n     * @type {string}\r\n     * @public\r\n     * @default \"\"\r\n     * @since 1.0.0\r\n     */\r\n    public set text(value: string) {\r\n        if (this._text != value) {\r\n            this._text = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get text(): string {\r\n        return this._text;\r\n    }\r\n    private _text: string = \"\";\r\n    /**\r\n     * 文本的css字体样式\r\n     * @property font\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {string}\r\n     * @default 12px Arial\r\n     */\r\n    public set font(value: string) {\r\n        if (this._font != value) {\r\n            this._font = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get font(): string {\r\n        return this._font;\r\n    }\r\n    private _font: string = \"Arial\";\r\n    /**\r\n     * 文本的size\r\n     * @property size\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     * @default 12\r\n     */\r\n    public set size(value: number) {\r\n        if (this._size != value) {\r\n            this._size = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get size(): number {\r\n        return this._size;\r\n    }\r\n    private _size: number = 12;\r\n    /**\r\n     * 文本的填充颜色值\r\n     * @property fillColor\r\n     * @type {string}\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default #fff\r\n     */\r\n    public set fillColor(value: string) {\r\n        if (this._fillColor != value) {\r\n            this._fillColor = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get fillColor(): string {\r\n        return this._fillColor;\r\n    }\r\n    private _fillColor: string = \"#ffffff\";\r\n\r\n    /**\r\n     * 文本的描边颜色值\r\n     * @property strokeColor\r\n     * @type {string}\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default #fff\r\n     */\r\n    public set strokeColor(value: string) {\r\n        if (this._strokeColor != value) {\r\n            this._strokeColor = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get strokeColor(): string {\r\n        return this._strokeColor;\r\n    }\r\n    private _strokeColor: string = \"#ffffff\";\r\n    /**\r\n     * 文本描边宽度,为0则不描边\r\n     * @property stroke\r\n     * @public\r\n     * @since\r\n     * @default 0\r\n     * @type {number}\r\n     */\r\n    public set stroke(value: number) {\r\n        if (this._stroke != value) {\r\n            this._stroke = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get stroke(): number {\r\n        return this._stroke;\r\n    }\r\n    private _stroke: number = 0;\r\n\r\n    /**\r\n     * 文本是否倾斜\r\n     * @property italic\r\n     * @public\r\n     * @since\r\n     * @default false\r\n     * @type {boolean}\r\n     */\r\n    public set italic(value: boolean) {\r\n        if (this._italic != value) {\r\n            this._italic = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get italic(): boolean {\r\n        return this._italic;\r\n    }\r\n    private _italic: boolean = false;\r\n    /**\r\n     * 文本是否加粗\r\n     * @property bold\r\n     * @public\r\n     * @since\r\n     * @default false\r\n     * @type {boolean}\r\n     */\r\n    public set bold(value: boolean) {\r\n        if (this._bold != value) {\r\n            this._bold = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n    public get bold(): boolean {\r\n        return this._bold;\r\n    }\r\n    public _bold: boolean = false;\r\n    /**\r\n     * 设置或获取是否有边框\r\n     * @property property\r\n     * @param {boolean} show true或false\r\n     * @public\r\n     * @since 1.0.6\r\n     */\r\n    public set border(value: boolean) {\r\n        if (this._border != value) {\r\n            this._border = value;\r\n            this.dirty = true;\r\n        };\r\n    }\r\n\r\n    public get border(): boolean {\r\n        return this._border;\r\n    }\r\n    private _border: boolean = false;\r\n\r\n    /**\r\n     * 设置文本在canvas里的渲染样式\r\n     * @method _prepContext\r\n     * @param ctx\r\n     * @private\r\n     * @since 1.0.0\r\n     */\r\n    private _prepContext(ctx: any): void {\r\n        let s = this;\r\n        let font: any = s.size || 12;\r\n        font += \"px \";\r\n        font += s.font;\r\n        //font-weight:bold;font-style:italic;\r\n        if (s._bold) {\r\n            font = \"bold \" + font;\r\n        }\r\n        if (s._italic) {\r\n            font = \"italic \" + font;\r\n        }\r\n        ctx.font = font;\r\n        ctx.textAlign = s._textAlign || TEXT_ALIGN.LEFT;\r\n        //暂时没开放\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = getRGBA(s._fillColor, s._textAlpha)\r\n    }\r\n    /**\r\n     * 获取当前文本中单行文字的宽，注意是文字的不是文本框的宽\r\n     * 暂不用，可能有问题\r\n     * @method getTextWidth\r\n     * @param {number} lineIndex 获取的哪一行的高度 默认是第1行\r\n     * @since 2.0.0\r\n     * @public\r\n     * @return {number}\r\n     */\r\n    public getTextWidth(lineIndex: number = 0): number {\r\n        let s = this;\r\n        s.updateText();\r\n        // let can = s.canvas;\r\n        let ctx = s.context;\r\n        let obj: any = ctx.measureText(s.realLines[lineIndex]);\r\n        return obj.width;\r\n    }\r\n    /**\r\n     * @property _lines 获取当前文本行数\r\n     * @type {number}\r\n     * @public\r\n     * @readonly\r\n     * @since 2.0.0\r\n     */\r\n    get lines(): number {\r\n        return this.realLines.length;\r\n    }\r\n    /**\r\n     * 获取文本宽\r\n     * @method _getMeasuredWidth\r\n     * @param text\r\n     * @return {number}\r\n     * @private\r\n     * @since 1.0.0\r\n     */\r\n    private _getMeasuredWidth(text: string): number {\r\n        //如果不是淘宝环境，就用canvas的api measureText\r\n        if (getEnv() == \"web\") return this.context.measureText(text).width\r\n        //暂时没修复，用最简单的量尺寸UuUuAaaA\r\n        //中文\r\n        var patternCh = new RegExp(\"[\\u4E00-\\u9FA5]+\");\r\n        //中文标点，匹配这些中文标点符号 。 ？ ！ ， 、 ； ： “ ” ‘ ' （ ） 《 》 〈 〉 【 】 『 』 「 」 ﹃ ﹄ 〔 〕 … — ～ ﹏ ￥\r\n        var patternChB = /[\\u3002|\\uff1f|\\uff01|\\uff0c|\\u3001|\\uff1b|\\uff1a|\\u201c|\\u201d|\\u2018|\\u2019|\\uff08|\\uff09|\\u300a|\\u300b|\\u3008|\\u3009|\\u3010|\\u3011|\\u300e|\\u300f|\\u300c|\\u300d|\\ufe43|\\ufe44|\\u3014|\\u3015|\\u2026|\\u2014|\\uff5e|\\ufe4f|\\uffe5]/;\r\n        //英文，\r\n        var patternEn = new RegExp(\"[A-Za-z]+\");\r\n        var size = this.size;\r\n        var width = 0;\r\n        for (var i = 0; i < text.length; i++) {\r\n            var str = text[i];\r\n            if (patternCh.test(str) || patternChB.test(str)) {\r\n                width += size;\r\n            } else {\r\n                width += size * 4 / 7;\r\n            }\r\n        }\r\n        return width\r\n    }\r\n    private realLines: any = []; private callback;\r\n    /**\r\n     * 更新文本，主要重画canvas，回调是很有问题的\r\n     */\r\n    public updateText(/*callback?*/): void {\r\n        // if (callback) this.callback = callback;\r\n        // let backupCanvasContext = getBackupCanvasContext();\r\n        // if (!backupCanvasContext) return\r\n        // if (backupCanvasContext[\"isBusy\"]) return;\r\n        let s: TextField = this;\r\n        if (!s.dirty) {\r\n            // this.callback && this.callback();\r\n            // this.callback = null\r\n            return;\r\n        }\r\n        s.dirty = false;\r\n        s._boundsID++;//为了Container里calculateBounds的判断;\r\n        //如果没有文本\r\n        if (!s._text) {\r\n            // if (osType == \"ios\") {\r\n            s.canvas.width = 0;\r\n            s.canvas.height = 0;\r\n            // } else {//暂时不能用sourceData形式，所以和上面效果一样\r\n            //     s.texture.baseTexture.source.width = 0;\r\n            //     s.texture.baseTexture.source.height = 0;\r\n            // }\r\n            s._localBoundsSelf.clear();\r\n            s.anchorTexture = { x: 0, y: 0 };\r\n            s.texture.update()\r\n            return\r\n        }\r\n        s._text += \"\";\r\n        let can = s.canvas;\r\n        let ctx: CanvasRenderingContext2D = /*backupCanvasContext*/s.context;\r\n        // ctx.save();\r\n        let hardLines: any = s._text.toString().split(/(?:\\r\\n|\\r|\\n)/);\r\n        let realLines: any = [];\r\n        s.realLines = realLines;\r\n        s._prepContext(ctx);//因为不用canvas的api量文本宽度，所以这里执行不重要\r\n\r\n        let textWidth = s._textWidth;\r\n        // let lineH = s._lineSpacing + s.size;\r\n        //单行文本时\r\n        if (s._text.indexOf(\"\\n\") < 0 && //没有换行符\r\n            s._text.indexOf(\"\\r\") < 0 && //没有换行符\r\n            s._text.indexOf(\"\\r\\n\") < 0 && //没有换行符\r\n            s.lineType == TEXT_lINETYPE.SINGLE //确定单行\r\n        ) {\r\n            realLines[realLines.length] = hardLines[0];\r\n            let str = hardLines[0];\r\n            let lineW = s._getMeasuredWidth(str);\r\n            //如果没设置过textWidth就取lineW\r\n            textWidth = textWidth || lineW;\r\n            //如果设置过textWidth的。截取文本\r\n            if (lineW > textWidth) {\r\n                let w = s._getMeasuredWidth(str[0]);\r\n                let lineStr = str[0];\r\n                let wordW = 0;\r\n                let strLen = str.length;\r\n                for (let j = 1; j < strLen; j++) {\r\n                    wordW = s._getMeasuredWidth(str[j])//ctx.measureText(str[j]).width;\r\n                    w += wordW;\r\n                    if (w > textWidth) {\r\n                        realLines[0] = lineStr;\r\n                        break;\r\n                    } else {\r\n                        lineStr += str[j];\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            //textWidth取每行最大值，如果没设置过textWidth\r\n            if (!textWidth) {\r\n                for (let i = 0, l = hardLines.length; i < l; i++) {\r\n                    let str = hardLines[i];\r\n                    if (!str) continue;\r\n                    textWidth = Math.max(s._getMeasuredWidth(str), textWidth);\r\n                }\r\n            }\r\n            for (let i = 0, l = hardLines.length; i < l; i++) {\r\n                let str = hardLines[i];\r\n                if (!str) continue;\r\n                let w = s._getMeasuredWidth(str[0]);\r\n                let lineStr = str[0];\r\n                let wordW = 0;\r\n                let strLen = str.length;\r\n                for (let j = 1; j < strLen; j++) {\r\n                    wordW = s._getMeasuredWidth(str[j])//ctx.measureText(str[j]).width;\r\n                    w += wordW;\r\n                    if (w > textWidth) {\r\n                        realLines[realLines.length] = lineStr;\r\n                        lineStr = str[j];\r\n                        w = wordW;\r\n                    } else {\r\n                        lineStr += str[j];\r\n                    }\r\n                }\r\n                realLines[realLines.length] = lineStr;\r\n            }\r\n        }\r\n        // let maxH = lineH * realLines.length;\r\n        var trueHeight: number = s.size * realLines.length + s._lineSpacing * (realLines.length - 1);\r\n        let maxH = s._textHeight || trueHeight;\r\n        let maxW = textWidth;\r\n        let tx = 0;\r\n        if (s._textAlign == TEXT_ALIGN.CENTER) {\r\n            tx = maxW * 0.5;\r\n        } else if (s._textAlign == TEXT_ALIGN.RIGHT) {\r\n            tx = maxW;\r\n        }\r\n        let canWidth = maxW + padding * 2;\r\n        let canHeight = maxH + padding * 2;\r\n        can.width = canWidth\r\n        can.height = canHeight\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);//在不能修改尺寸的时候，否则尺寸改变，上下文会初始化\r\n        ctx.clearRect(0, 0, can.width, can.height);//安卓貌似无效，文案重叠了再处理，或者等修复了尺寸问题就好了\r\n        if (s.border) {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = \"#000\";\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeRect(padding + 0.5, padding + 0.5, maxW, maxH);\r\n            ctx.closePath();\r\n        }\r\n        ctx.setTransform(1, 0, 0, 1, tx + padding, padding/* - 10*/);\r\n        s._prepContext(ctx);\r\n        let lineH = s._lineSpacing + s.size;\r\n        //如果有_textHeight,就需要应用竖直对齐\r\n        var upY: number = 0;\r\n        if (s._textHeight) {\r\n            //跟trueHeight比较\r\n            if (s._verticalAlign == VERTICAL_ALIGN.MIDDLE) {\r\n                upY = (s._textHeight - trueHeight) * 0.5;\r\n            } else if (s._verticalAlign == VERTICAL_ALIGN.DOWN) {\r\n                upY = s._textHeight - trueHeight;\r\n            }\r\n        }\r\n        //\r\n        getEnv() == \"tb\" && (upY -= 4);\r\n        for (let i = 0; i < realLines.length; i++) {\r\n            let ox = 0;\r\n            //@ts-ignore 现在貌似小程序的textAlign有点问题，如果修复了再说\r\n            // if (my) ox = - tx;//移回去，已经修复，注释掉吧\r\n            if (s.stroke) {\r\n                ctx.strokeStyle = s.strokeColor;\r\n                ctx.lineWidth = s.stroke * 2;\r\n                ctx.strokeText(realLines[i], ox, upY + i * lineH/*, maxW*/);\r\n            }\r\n            ctx.fillText(realLines[i], ox, upY + i * lineH/*, maxW*/);//考虑去掉这个maxW\r\n        }\r\n        //offset用_anchorTexture代替\r\n        s.offsetX = -padding;\r\n        s.offsetY = -padding;\r\n        // console.log(can)\r\n        this.anchorTexture = { x: (padding + 0.5) / canWidth, y: padding / canHeight }\r\n        // if (osType == \"ios\") {\r\n        s.texture.update();\r\n        s._onTextureUpdate();\r\n        // } else {\r\n        //     var imgData = ctx.getImageData(0, 0, canWidth, canHeight)\r\n        //     var data = {\r\n        //         data: new Uint8Array(imgData.data),\r\n        //         width: canWidth,\r\n        //         height: canHeight,\r\n        //         type: \"text\",\r\n        //         path: null\r\n        //     }\r\n        //     s.texture.baseTexture._sourceChange(data);\r\n        //     s._onTextureUpdate();\r\n        // }\r\n\r\n    }\r\n    /**\r\n     * 为了计算包围盒，需要计算一边文本，\r\n     * 重写calculateBounds不好，应该只改_calculateBounds，考虑_boundID，以后再说，和shape的一样\r\n     * 暂时只有两个类重写了calculateBounds，Shape和TextField\r\n     */\r\n    calculateBounds() {\r\n        this.updateText();\r\n        super.calculateBounds();\r\n    }\r\n    //暂时没用\r\n    _renderCanvas(renderer) {\r\n        this.updateText();\r\n        super._renderCanvas(renderer);\r\n    }\r\n    _renderWebGL(renderer) {\r\n        this.updateText();\r\n        super._renderWebGL(renderer)\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.canvas = null;\r\n        this.context = null;\r\n        super.destroy();\r\n        //todo\r\n    }\r\n}\r\n","\r\n\r\nimport { Vector3 } from './Vector3';\r\nimport { clamp } from '../../2d/utils';\r\n\r\nexport class Quaternion {\r\n\tprivate _x: number\r\n\tprivate _y: number\r\n\tprivate _z: number\r\n\tprivate _w: number\r\n\tconstructor(x?: number, y?: number, z?: number, w?: number) {\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = (w !== undefined) ? w : 1;\r\n\t}\r\n\r\n\tpublic static slerp(qa, qb, qm, t) {\r\n\t\treturn qm.copy(qa).slerp(qb, t);\r\n\t}\r\n\r\n\tpublic static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\r\n\r\n\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\tvar x0 = src0[srcOffset0 + 0],\r\n\t\t\ty0 = src0[srcOffset0 + 1],\r\n\t\t\tz0 = src0[srcOffset0 + 2],\r\n\t\t\tw0 = src0[srcOffset0 + 3],\r\n\r\n\t\t\tx1 = src1[srcOffset1 + 0],\r\n\t\t\ty1 = src1[srcOffset1 + 1],\r\n\t\t\tz1 = src1[srcOffset1 + 2],\r\n\t\t\tw1 = src1[srcOffset1 + 3];\r\n\r\n\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\r\n\r\n\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\tdir = (cos >= 0 ? 1 : - 1),\r\n\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\tif (sqrSin > /*Number.EPSILON*/0.0000000000000000001) {\r\n\r\n\t\t\t\tvar sin = Math.sqrt(sqrSin),\r\n\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\r\n\r\n\t\t\t\ts = Math.sin(s * len) / sin;\r\n\t\t\t\tt = Math.sin(t * len) / sin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\tif (s === 1 - t) {\r\n\r\n\t\t\t\tvar f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[dstOffset] = x0;\r\n\t\tdst[dstOffset + 1] = y0;\r\n\t\tdst[dstOffset + 2] = z0;\r\n\t\tdst[dstOffset + 3] = w0;\r\n\r\n\t}\r\n\tget x(): number {\r\n\t\treturn this._x\r\n\t}\r\n\tset x(value) {\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\t}\r\n\tget y(): number {\r\n\t\treturn this._y\r\n\t}\r\n\tset y(value) {\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\t}\r\n\tget z(): number {\r\n\t\treturn this._z\r\n\t}\r\n\tset z(value) {\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\t}\r\n\tget w(): number {\r\n\t\treturn this._w\r\n\t}\r\n\tset w(value) {\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\t}\r\n\tset(x, y, z, w) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\t\tthis.onChangeCallback();\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Quaternion(this._x, this._y, this._z, this._w);\r\n\t}\r\n\r\n\tcopy(quaternion) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromEuler(euler, update?) {\r\n\r\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\r\n\r\n\r\n\t\tvar cos = Math.cos;\r\n\t\tvar sin = Math.sin;\r\n\r\n\t\tvar c1 = cos(x / 2);\r\n\t\tvar c2 = cos(y / 2);\r\n\t\tvar c3 = cos(z / 2);\r\n\r\n\t\tvar s1 = sin(x / 2);\r\n\t\tvar s2 = sin(y / 2);\r\n\t\tvar s3 = sin(z / 2);\r\n\r\n\t\tif (order === 'XYZ') {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if (order === 'YXZ') {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if (order === 'ZXY') {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if (order === 'ZYX') {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if (order === 'YZX') {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if (order === 'XZY') {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif (update !== false) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromAxisAngle(axis, angle) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin(halfAngle);\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos(halfAngle);\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix(m) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[0], m12 = te[4], m13 = te[8],\r\n\t\t\tm21 = te[1], m22 = te[5], m23 = te[9],\r\n\t\t\tm31 = te[2], m32 = te[6], m33 = te[10],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif (trace > 0) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = (m32 - m23) * s;\r\n\t\t\tthis._y = (m13 - m31) * s;\r\n\t\t\tthis._z = (m21 - m12) * s;\r\n\r\n\t\t} else if (m11 > m22 && m11 > m33) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\r\n\t\t\tthis._w = (m32 - m23) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = (m12 + m21) / s;\r\n\t\t\tthis._z = (m13 + m31) / s;\r\n\r\n\t\t} else if (m22 > m33) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\r\n\t\t\tthis._w = (m13 - m31) / s;\r\n\t\t\tthis._x = (m12 + m21) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = (m23 + m32) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\r\n\t\t\tthis._w = (m21 - m12) / s;\r\n\t\t\tthis._x = (m13 + m31) / s;\r\n\t\t\tthis._y = (m23 + m32) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromUnitVectors = function () {\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function setFromUnitVectors(vFrom, vTo) {\r\n\r\n\t\t\tif (v1 === undefined) v1 = new Vector3();\r\n\r\n\t\t\tr = vFrom.dot(vTo) + 1;\r\n\r\n\t\t\tif (r < EPS) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\r\n\r\n\t\t\t\t\tv1.set(- vFrom.y, vFrom.x, 0);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set(0, - vFrom.z, vFrom.y);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors(vFrom, vTo);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n\tangleTo(q) {\r\n\r\n\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), - 1, 1)));\r\n\r\n\t}\r\n\r\n\trotateTowards(q, step) {\r\n\r\n\t\tvar angle = this.angleTo(q);\r\n\r\n\t\tif (angle === 0) return this;\r\n\r\n\t\tvar t = Math.min(1, step / angle);\r\n\r\n\t\tthis.slerp(q, t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tinverse() {\r\n\r\n\t\t// quaternion is assumed to have unit length\r\n\r\n\t\treturn this.conjugate();\r\n\r\n\t}\r\n\r\n\tconjugate() {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot(v) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif (l === 0) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply(q, p) {\r\n\r\n\t\tif (p !== undefined) {\r\n\r\n\t\t\tconsole.warn('');\r\n\t\t\treturn this.multiplyQuaternions(q, p);\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions(this, q);\r\n\r\n\t}\r\n\r\n\tpremultiply(q) {\r\n\r\n\t\treturn this.multiplyQuaternions(q, this);\r\n\r\n\t}\r\n\r\n\tmultiplyQuaternions(a, b) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\tthis.onChangeCallback();\r\n\t\treturn this;\r\n\t}\r\n\r\n\tslerp(qb, t) {\r\n\r\n\t\tif (t === 0) return this;\r\n\t\tif (t === 1) return this.copy(qb);\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif (cosHalfTheta < 0) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy(qb);\r\n\r\n\t\t}\r\n\r\n\t\tif (cosHalfTheta >= 1.0) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\tif (sqrSinHalfTheta <= /*Number.EPSILON*/0.0000000000001) {\r\n\r\n\t\t\tvar s = 1 - t;\r\n\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t}\r\n\r\n\t\tvar sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\r\n\t\tvar halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\r\n\t\tvar ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\r\n\r\n\t\tthis._w = (w * ratioA + this._w * ratioB);\r\n\t\tthis._x = (x * ratioA + this._x * ratioB);\r\n\t\tthis._y = (y * ratioA + this._y * ratioB);\r\n\t\tthis._z = (z * ratioA + this._z * ratioB);\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals(quaternion) {\r\n\r\n\t\treturn (quaternion._x === this._x) && (quaternion._y === this._y) && (quaternion._z === this._z) && (quaternion._w === this._w);\r\n\r\n\t}\r\n\r\n\tfromArray(array: number[] | Float32Array, offset: number = 0) {\r\n\t\tthis._x = array[offset];\r\n\t\tthis._y = array[offset + 1];\r\n\t\tthis._z = array[offset + 2];\r\n\t\tthis._w = array[offset + 3];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray(array = [], offset = 0) {\r\n\t\tarray[offset] = this._x;\r\n\t\tarray[offset + 1] = this._y;\r\n\t\tarray[offset + 2] = this._z;\r\n\t\tarray[offset + 3] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tonChange(callback) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprivate onChangeCallback() { }\r\n\r\n}\r\n\r\n","import { Object3D } from \"../Object3D\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { rgb2hex, hex2rgb } from \"../../2d/utils\";\r\n\r\n/**\r\n * 光源基类，只有颜色和光源强度\r\n */\r\nexport class Light extends Object3D {\r\n\r\n    private _color: number = 0xffffff;\r\n    private _colorArr: Float32Array = new Float32Array([1.0, 1.0, 1.0]);\r\n    private _colorVec3: Vector3 = new Vector3(1.0, 1.0, 1.0);\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    set color(value: number) {\r\n        if (this._color === value) return;\r\n        this._color = value;\r\n        var arr = hex2rgb(value)\r\n        this._colorArr[0] = this._colorVec3.x = arr[0];\r\n        this._colorArr[1] = this._colorVec3.y = arr[1];\r\n        this._colorArr[2] = this._colorVec3.z = arr[2];\r\n    }\r\n    //获取\r\n    get colorArr() {\r\n        return this._colorArr;\r\n    }\r\n    get colorVec3() {\r\n        return this._colorVec3;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param color rgb三分量的矢量，每个分量0到1，颜色方面后续优化\r\n     * @param intensity 光照强度 0到1 ,直接影响颜色值，不进uniform\r\n     */\r\n    constructor(\r\n        color: number,\r\n        public intensity: number = 1\r\n    ) {\r\n        super();\r\n        this.color = color;\r\n        this._instanceType = \"Light\"\r\n    }\r\n    copy(light: Light) {\r\n        super.copy(light);\r\n        this.color = light.color;\r\n        this.intensity = light.intensity;\r\n        return this\r\n    }\r\n}","\r\nexport * from \"./BaseMaterial\";\r\n\r\nexport * from \"./LightMaterial\";\r\n\r\nexport * from \"./ShaderMaterial\"\r\n\r\nexport * from \"./Sprite3dMaterial\"\r\n\r\n// export * from \"./SkyBoxMaterial\";//还有问题","export class SpineColor {\r\n    constructor(\r\n        public r: number = 0,\r\n        public g: number = 0,\r\n        public b: number = 0,\r\n        public a: number = 0\r\n    ) { }\r\n    set(r, g, b, a) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n        this.clamp();\r\n        return this;\r\n    }\r\n    setFromColor(c:SpineColor) {\r\n        this.r = c.r;\r\n        this.g = c.g;\r\n        this.b = c.b;\r\n        this.a = c.a;\r\n        return this;\r\n    };\r\n    setFromString(hex: string) {\r\n        hex = hex.charAt(0) == '#' ? hex.substr(1) : hex;\r\n        this.r = parseInt(hex.substr(0, 2), 16) / 255.0;\r\n        this.g = parseInt(hex.substr(2, 2), 16) / 255.0;\r\n        this.b = parseInt(hex.substr(4, 2), 16) / 255.0;\r\n        this.a = (hex.length != 8 ? 255 : parseInt(hex.substr(6, 2), 16)) / 255.0;\r\n        return this;\r\n    };\r\n    add(r, g, b, a) {\r\n        this.r += r;\r\n        this.g += g;\r\n        this.b += b;\r\n        this.a += a;\r\n        this.clamp();\r\n        return this;\r\n    };\r\n    clamp() {\r\n        if (this.r < 0)\r\n            this.r = 0;\r\n        else if (this.r > 1)\r\n            this.r = 1;\r\n        if (this.g < 0)\r\n            this.g = 0;\r\n        else if (this.g > 1)\r\n            this.g = 1;\r\n        if (this.b < 0)\r\n            this.b = 0;\r\n        else if (this.b > 1)\r\n            this.b = 1;\r\n        if (this.a < 0)\r\n            this.a = 0;\r\n        else if (this.a > 1)\r\n            this.a = 1;\r\n        return this;\r\n    };\r\n    static WHITE = new SpineColor(1, 1, 1, 1);\r\n    static RED = new SpineColor(1, 0, 0, 1);\r\n    static GREEN = new SpineColor(0, 1, 0, 1);\r\n    static BLUE = new SpineColor(0, 0, 1, 1);\r\n    static MAGENTA = new SpineColor(1, 0, 1, 1);\r\n\r\n    static fromString(hex: string) {\r\n        return new SpineColor().setFromString(hex)\r\n    }\r\n}\r\n","\nimport { Point } from \"././Point\";\nimport { HashObject } from \"../HashObject\";\nimport { DEG_TO_RAD, cos, sin, RAD_TO_DEG, PI_2 } from \"../const\";\nimport Transform from \"./Transform\";\n\n/**\n * 2维矩阵\n * @class Matrix\n * @extends HashObject\n * @public\n * @since 1.0.0\n */\nexport class Matrix extends HashObject {\n    /**\n     * @property a\n     * @type {number}\n     * @public\n     * @default 1\n     * @since 1.0.0\n     */\n    public a: number = 1;\n    /**\n     * @property b\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     */\n    public b: number = 0;\n    /**\n     * @property c\n     * @type {number}\n     * @public\n     * @since 1.0.0\n     */\n    public c: number = 0;\n    /**\n     * @property d\n     * @type {number}\n     * @public\n     * @since 1.0.0\n     */\n    public d: number = 1;\n    /**\n     * @property tx\n     * @type {number}\n     * @public\n     * @since 1.0.0\n     */\n    public tx: number = 0;\n    /**\n     * @property ty\n     * @type {number}\n     * @since 1.0.0\n     * @public\n     */\n    public ty: number = 0;\n\n    //数组形式\n    public array = null;\n    /**\n     * 构造函数\n     * @method Matrix\n     * @param {number} a\n     * @param {number} b\n     * @param {number} c\n     * @param {number} d\n     * @param {number} tx\n     * @param {number} ty\n     * @public\n     * @since 1.0.0\n     */\n    public constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0) {\n        super();\n        let s = this;\n        s._instanceType = \"Matrix\";\n        s.a = a;\n        s.b = b;\n        s.c = c;\n        s.d = d;\n        s.tx = tx;\n        s.ty = ty;\n    }\n\n    /**\n     * 复制一个矩阵\n     * @method clone\n     * @since 1.0.0\n     * @public\n     * @return {Matrix}\n     */\n    public clone(): Matrix {\n        let s = this;\n        return new Matrix(s.a, s.b, s.c, s.d, s.tx, s.ty);\n    }\n\n    /**\n     * 复制一个矩阵的所有属性\n     * @param matrix \n     */\n    copy(matrix: Matrix | any) {\n        this.a = matrix.a;\n        this.b = matrix.b;\n        this.c = matrix.c;\n        this.d = matrix.d;\n        this.tx = matrix.tx;\n        this.ty = matrix.ty;\n\n        return this;\n    }\n\n\n    /**\n     * 将一个点通过矩阵变换后的点，世界矩阵应用于局部坐标，转化为世界坐标\n     * @method transformPoint\n     * @param {number} x\n     * @param {number} y\n     * @param {Point} 默认为空，如果不为null，则返回的是Point就是此对象，如果为null，则返回来的Point是新建的对象\n     * @return {Point}\n     * @public\n     * @since 1.0.0\n     */\n    public transformPoint(x: number, y: number, bp: Point = null): Point {\n        let s = this;\n        if (!bp) {\n            bp = new Point();\n        }\n        bp.x = x * s.a + y * s.c + s.tx;\n        bp.y = x * s.b + y * s.d + s.ty;\n        return bp\n    };\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     * 用于世界坐标转化为局部坐标\n     * @param {number} x\n     * @param {number} y\n     * @param {Point} 默认为空，如果不为null，则返回的是Point就是此对象，如果为null，则返回来的Point是新建的对象\n     * @return {Point}\n     */\n    public transformPointInverse(x: number, y: number, bp: Point = null): Point {\n        let s = this;\n        if (!bp) {\n            bp = new Point();\n        }\n\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n        bp.x = (this.d * id * x) + (-this.c * id * y) + (((this.ty * this.c) - (this.tx * this.d)) * id);\n        bp.y = (this.a * id * y) + (-this.b * id * x) + (((-this.ty * this.a) + (this.tx * this.b)) * id);\n\n        return bp;\n    }\n\n    /**\n     * 从一个矩阵里赋值给这个矩阵\n     * @method setFrom\n     * @param {Matrix} mtx\n     * @public\n     * @since 1.0.0\n     */\n    public setFrom(mtx: Matrix): void {\n        let s = this;\n        s.a = mtx.a;\n        s.b = mtx.b;\n        s.c = mtx.c;\n        s.d = mtx.d;\n        s.tx = mtx.tx;\n        s.ty = mtx.ty;\n    }\n\n    /**\n     * 将矩阵恢复成原始矩阵\n     * @method identity\n     * @public\n     * @since 1.0.0\n     */\n    public identity(): void {\n        let s = this;\n        s.a = s.d = 1;\n        s.b = s.c = s.tx = s.ty = 0;\n    }\n\n    /**\n     * 反转一个矩阵\n     * @method invert\n     * @return {Matrix}\n     * @since 1.0.0\n     * @public\n     */\n    public invert(): Matrix {\n        let s = this;\n        let a = s.a;\n        let b = s.b;\n        let c = s.c;\n        let d = s.d;\n        let tx = s.tx;\n        let ty = s.ty;\n\n        if (b == 0 && c == 0) {\n            if (a == 0 || d == 0) {\n                s.a = s.d = s.tx = s.ty = 0;\n            }\n            else {\n                a = s.a = 1 / a;\n                d = s.d = 1 / d;\n                s.tx = -a * tx;\n                s.ty = -d * ty;\n            }\n            return s;\n        }\n        let determinant = a * d - b * c;\n        if (determinant == 0) {\n            s.identity();\n            return s;\n        }\n        determinant = 1 / determinant;\n        let k = s.a = d * determinant;\n        b = s.b = -b * determinant;\n        c = s.c = -c * determinant;\n        d = s.d = a * determinant;\n        s.tx = -(k * tx + c * ty);\n        s.ty = -(b * tx + d * ty);\n        return s;\n    }\n\n    /**\n     * 设置一个矩阵通过普通的显示对象的相关九大属性，锚点不影响坐标原点,暂时不用\n     * @method createBox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {number} rotation 角度制\n     * @param {number} skewX 角度制\n     * @param {number} skewY 角度制\n     * @param {number} ax\n     * @param {number} ay\n     * @since 1.0.0\n     * @public\n     */\n    public createBox(x: number, y: number, scaleX: number, scaleY: number, rotation: number, skewX: number, skewY: number, ax: number, ay: number): void {\n        let s = this;\n        if (rotation != 0) {\n            skewX = skewY = rotation % 360;\n        } else {\n            skewX %= 360;\n            skewY %= 360;\n        }\n        if ((skewX == 0) && (skewY == 0)) {\n            s.a = scaleX;\n            s.b = s.c = 0;\n            s.d = scaleY;\n        } else {\n            skewX *= DEG_TO_RAD;\n            skewY *= DEG_TO_RAD;\n            let u = cos(skewX);\n            let v = sin(skewX);\n            if (skewX == skewY) {\n                s.a = u * scaleX;\n                s.b = v * scaleX;\n            }\n            else {\n                s.a = cos(skewY) * scaleX;\n                s.b = sin(skewY) * scaleX;\n            }\n            s.c = -v * scaleY;\n            s.d = u * scaleY;\n        };\n        s.tx = x + ax - (ax * s.a + ay * s.c);\n        s.ty = y + ay - (ax * s.b + ay * s.d);\n    }\n\n    /**\n     * 矩阵相乘\n     * @method prepend\n     * @public\n     * @since 1.0.0\n     * @param {Matrix} mtx\n     */\n    public prepend = function (mtx: Matrix): void {\n        let s = this;\n        let a = mtx.a;\n        let b = mtx.b;\n        let c = mtx.c;\n        let d = mtx.d;\n        let tx = mtx.tx;\n        let ty = mtx.ty;\n        let a1 = s.a;\n        let c1 = s.c;\n        let tx1 = s.tx;\n        s.a = a * a1 + c * s.b;\n        s.b = b * a1 + d * s.b;\n        s.c = a * c1 + c * s.d;\n        s.d = b * c1 + d * s.d;\n        s.tx = a * tx1 + c * s.ty + tx;\n        s.ty = b * tx1 + d * s.ty + ty;\n        return this\n    };\n    /**\n    * Appends the given Matrix to this Matrix.\n    *\n    * @param {Matrix} matrix - The matrix to append.\n    * @return {Matrix} This matrix. Good for chaining method calls.\n    */\n    public append(matrix: Matrix) {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n\n        this.a = (matrix.a * a1) + (matrix.b * c1);\n        this.b = (matrix.a * b1) + (matrix.b * d1);\n        this.c = (matrix.c * a1) + (matrix.d * c1);\n        this.d = (matrix.c * b1) + (matrix.d * d1);\n\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\n        // return this;\n    }\n\n    /**\n     * 判断两个矩阵是否相等\n     * @method isEqual\n     * @static\n     * @public\n     * @since 1.0.0\n     * @param {Matrix} m1\n     * @param {Matrix} m2\n     * @return {boolean}\n     */\n    public static isEqual(m1: Matrix, m2: Matrix): boolean {\n        return m1.tx == m2.tx && m1.ty == m2.ty && m1.a == m2.a && m1.b == m2.b && m1.c == m2.c && m1.d == m2.d;\n    }\n    public concat(mtx: Matrix): void {\n        let s = this;\n        let a = s.a, b = s.b, c = s.c, d = s.d,\n            tx = s.tx, ty = s.ty;\n        let ma = mtx.a, mb = mtx.b, mc = mtx.c, md = mtx.d,\n            mx = mtx.tx, my = mtx.ty;\n        s.a = a * ma + b * mc;\n        s.b = a * mb + b * md;\n        s.c = c * ma + d * mc;\n        s.d = c * mb + d * md;\n        s.tx = tx * ma + ty * mc + mx;\n        s.ty = tx * mb + ty * md + my;\n    }\n    /**\n     * 对矩阵应用旋转转换。\n     * @method rotate\n     * @param angle 弧度制\n     * @since 1.0.3\n     * @public\n     */\n    public rotate(angle: number): void {\n        let s = this;\n        let sin = Math.sin(angle), cos = Math.cos(angle),\n            a = s.a, b = s.b, c = s.c, d = s.d,\n            tx = s.tx, ty = s.ty;\n        s.a = a * cos - b * sin;\n        s.b = a * sin + b * cos;\n        s.c = c * cos - d * sin;\n        s.d = c * sin + d * cos;\n        s.tx = tx * cos - ty * sin;\n        s.ty = tx * sin + ty * cos;\n    }\n\n    /**\n     * 对矩阵应用缩放转换。\n     * @method scale\n     * @param {Number} sx 用于沿 x 轴缩放对象的乘数。\n     * @param {Number} sy 用于沿 y 轴缩放对象的乘数。\n     * @since 1.0.3\n     * @public\n     */\n    public scale(sx: number, sy: number): void {\n        let s = this;\n        s.a *= sx;\n        s.d *= sy;\n        s.c *= sx;\n        s.b *= sy;\n        s.tx *= sx;\n        s.ty *= sy;\n    }\n    /**\n     * 沿 x 和 y 轴平移矩阵，由 dx 和 dy 参数指定。\n     * @method translate\n     * @public\n     * @since 1.0.3\n     * @param {Number} dx 沿 x 轴向右移动的量（以像素为单位\n     * @param {Number} dy 沿 y 轴向右移动的量（以像素为单位\n     */\n    public translate(dx: number, dy: number) {\n        let s = this;\n        s.tx += dx;\n        s.ty += dy;\n    }\n\n\n    public set(a, b, c, d, tx, ty) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    }\n\n    /**\n     * 获得角度,角度制,\n     * 其他的x,y,就是tx,ty\n     * scale就是a,d\n     * skew基本不用\n     */\n    public getRotation() {\n        return Math.round(Math.atan2(this.b, this.a) * RAD_TO_DEG);\n    }\n\n    /**\n     * Creates an array from the current Matrix object.与glsl中的mat3对应,注意行列主序执行transpose;\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */\n    public toArray(transpose = false, out?) {\n        if (!this.array) {\n            this.array = new Float32Array(9);\n        }\n\n        const array = out || this.array;\n\n        if (transpose) {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        } else {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    }\n    /**\n     * 从矩阵数据转成tansform的数据\n     * @param transform \n     */\n    decompose(transform: Transform) {\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n        //取斜切\n        const skewX = -Math.atan2(-c, d);\n        const skewY = Math.atan2(b, a);\n\n        const delta = Math.abs(skewX + skewY);\n        //斜切值和旋转不唯一，所以设定条件只取其一\n        if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001) {\n            transform.rotation = skewY;\n            //考虑是否必要\n            if (a < 0 && d >= 0) {\n                transform.rotation += (transform.rotation <= 0) ? Math.PI : -Math.PI;\n            }\n            transform.skew.x = transform.skew.y = 0;\n        }\n        else {\n            transform.rotation = 0;\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        //取缩放\n        transform.scale.x = Math.sqrt((a * a) + (b * b));\n        transform.scale.y = Math.sqrt((c * c) + (d * d));\n\n        //取位置\n        transform.position.x = this.tx;\n        transform.position.y = this.ty;\n\n        return transform;\n    }\n    /**\n     * A default (identity) matrix\n     *\n     * @static\n     * @const\n     */\n    public static get IDENTITY() {\n        return new Matrix();\n    }\n\n    /**\n     * A temp matrix\n     *\n     * @static\n     * @const\n     */\n    public static get TEMP_MATRIX() {\n        return new Matrix();\n    }\n\n    destroy(): void {\n    }\n}","import { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport BatchRenderer from \"./plugins/BatchRenderer\";\r\n// import { RendererOptions } from \"./RendererOptions\";\r\nimport { SystemRenderer } from \"./SystemRenderer\";\r\nimport { RENDERER_TYPE, BLEND_MODES } from \"../const\";\r\nimport { createContext, GLShader, VertexArrayObject } from \"../../glCore\";\r\nimport ObjectRenderer from \"./webgl/ObjectRenderer\";\r\nimport RenderTarget from \"./renderTarget/RenderTarget\";\r\nimport TextureManager from \"./managers/TextureManager\";\r\nimport TextureGarbageCollector from \"./managers/TextureGarbageCollector\";\r\nimport { SCALE_MODES, /*devicePixelRatio*/ } from \"../const\";\r\n// import RenderTexture from \"../texture/RenderTexture\";\r\nimport { Matrix, Transform } from \"../math\";\r\nimport WebGLState from \"./webgl/WebGLState\";\r\nimport BatchManager from \"./managers/BatchManager\";\r\nimport MaskManager from \"./managers/MaskManager\";\r\nimport StencilManager from \"./managers/StencilManager\";\r\nimport { DisplayObject } from \"../display/DisplayObject\";\r\nimport { hex2string, hex2rgb } from \"../utils\";\r\nimport { Container } from \"../display\";\r\nimport RenderTexture from \"../texture/RenderTexture\";\r\nimport BaseRenderTexture from \"../texture/BaseRenderTexture\";\r\nimport FilterManager from \"./managers/FilterManager\";\r\n\r\nlet CONTEXT_UID = 0;\r\n\r\n\r\nexport class WebglRenderer extends SystemRenderer {\r\n    /**\r\n     * 所有插件列表，目前只有batch\r\n     */\r\n    plugins = {};\r\n    /**\r\n     * webgl上下文\r\n     */\r\n    gl: WebGLRenderingContext\r\n    /**\r\n     * 渲染器位移标识\r\n     */\r\n    CONTEXT_UID: number;\r\n    /**\r\n     * 遮罩管理\r\n     */\r\n    maskManager: MaskManager;\r\n    /**\r\n     * 模板管理\r\n     */\r\n    stencilManager: StencilManager;\r\n    /**\r\n     * 滤镜管理器\r\n     */\r\n    filterManager: FilterManager;\r\n    /**\r\n     * 批处理管理\r\n     */\r\n    batchManager: BatchManager\r\n    /**\r\n     * 纹理管理\r\n     */\r\n    textureManager: TextureManager;\r\n    /**\r\n     * 纹理回收器，对于长期未使用的纹理，从gpu移除\r\n     */\r\n    textureGC: TextureGarbageCollector;\r\n    /**\r\n     * 状态机，暂时不需要切换，以后有3d再说\r\n     */\r\n    state: WebGLState;\r\n    /**\r\n     * 是否渲染到主画布\r\n     */\r\n    renderingToScreen: boolean;\r\n    /**\r\n     * 当前着色器对象\r\n     */\r\n    _activeShader: GLShader;\r\n    /**\r\n     * 当前vao\r\n     */\r\n    _activeVao: VertexArrayObject;\r\n    /**\r\n     * 当前渲染对象，不是帧缓存时就是root\r\n     */\r\n    _activeRenderTarget: RenderTarget;\r\n    /**\r\n     * 主画布\r\n     */\r\n    rootRenderTarget: RenderTarget;\r\n\r\n    /**\r\n     * 直接传入的尺寸\r\n     * @param gl \r\n     * @param width \r\n     * @param height \r\n     */\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        super();\r\n        this._instanceType = \"WebglRenderer\";\r\n\r\n        this.type = RENDERER_TYPE.WEBGL;\r\n\r\n        // this.handleContextLost = this.handleContextLost.bind(this);\r\n        // this.handleContextRestored = this.handleContextRestored.bind(this);\r\n\r\n        // this.htmlElement.addEventListener('webglcontextlost', this.handleContextLost, false);\r\n        // this.htmlElement.addEventListener('webglcontextrestored', this.handleContextRestored, false);\r\n\r\n        //The options passed in to create a new webgl context.\r\n        var contextOptions = {\r\n            alpha: true,\r\n            antialias: false,\r\n            premultipliedAlpha: true,  //一般png图片都不会预乘alpha，所以必为true,除非有些图集工具选择了premultipliedAlpha\r\n            stencil: true,\r\n            preserveDrawingBuffer: false,\r\n            // powerPreference: this.options.powerPreference,\r\n        };\r\n        this._backgroundColorRgba[3] = this.transparent ? 0 : 1;\r\n\r\n        // this.gl = createContext(this.htmlElement, contextOptions);\r\n        this.gl = gl\r\n\r\n        this.CONTEXT_UID = CONTEXT_UID++;\r\n\r\n        this.maskManager = new MaskManager(this);\r\n\r\n        this.stencilManager = new StencilManager(this);\r\n\r\n        this.batchManager = new BatchManager(this)\r\n\r\n        this.textureManager = null;\r\n\r\n        //初始化插件\r\n        this.initPlugins(WebglRenderer.__plugins)\r\n\r\n        this.state = new WebGLState(this.gl);\r\n\r\n        this.renderingToScreen = true;\r\n\r\n        /**\r\n         * Holds the current shader\r\n         *\r\n         * @member {Shader}\r\n         */\r\n        this._activeShader = null;\r\n\r\n        this._activeVao = null;\r\n\r\n        this._activeRenderTarget = null;\r\n\r\n        this._initContext();\r\n\r\n        // this.state.setBlendMode(0);\r\n        this.resize(width, height);\r\n    }\r\n\r\n    _initContext() {\r\n        const gl = this.gl;\r\n        // restore a context if it was previously lost\r\n        if (gl.isContextLost() && gl.getExtension('WEBGL_lose_context')) {\r\n            gl.getExtension('WEBGL_lose_context').restoreContext();\r\n        }\r\n\r\n        this._activeShader = null;\r\n        this._activeVao = null;\r\n        // create a texture manager...\r\n        this.textureManager = new TextureManager(this);\r\n        this.filterManager = new FilterManager(this);\r\n        this.textureGC = new TextureGarbageCollector(this);\r\n        this.state.resetToDefault();\r\n        this.rootRenderTarget = new RenderTarget(gl, 1, 1, SCALE_MODES.LINEAR, true);\r\n        this.rootRenderTarget.clearColor = this._backgroundColorRgba;\r\n\r\n        this.bindRenderTarget(this.rootRenderTarget);\r\n\r\n        this.dispatchEvent('onContextChange');\r\n    }\r\n\r\n    render(displayObject: DisplayObject, renderTexture?: RenderTexture, transform?: Matrix) {\r\n        //触发onPreRender\r\n        this.dispatchEvent('onPreRender');\r\n        //是否渲染到屏幕root\r\n        this.renderingToScreen = !renderTexture;\r\n        //如果上下文丢失\r\n        if (!this.gl || this.gl.isContextLost()) {\r\n            return;\r\n        }\r\n\r\n        if (!renderTexture) {\r\n            this._lastObjectRendered = displayObject;\r\n        }\r\n\r\n        //update更新属性\r\n        displayObject.update()\r\n\r\n        //更新矩阵\r\n        const cacheParent = displayObject.parent;\r\n        displayObject.parent = this._tempDisplayObjectParent;\r\n        displayObject.updateTransform();\r\n        displayObject.parent = cacheParent;\r\n\r\n        //绑定渲染对象，没有则是默认root\r\n        this.bindRenderTexture(renderTexture, transform);\r\n\r\n        //当前插件start\r\n        this.batchManager.currentRenderer.start();\r\n\r\n        //渲染对象清空画布\r\n        this._activeRenderTarget.clear();\r\n\r\n        //开始渲染所有的显示对象\r\n        displayObject.renderWebGL(this);\r\n\r\n        //一次性刷一次\r\n        this.batchManager.currentRenderer.flush();\r\n\r\n        if (renderTexture) {\r\n            //有bug，到时考虑具体更新什么\r\n            // renderTexture.baseTexture.update();\r\n        }\r\n\r\n        //回收纹理,回收长时间不用的纹理,从gpu移除,对于很多场景,很多图片的时候很有用,否则gpu容易崩溃\r\n        // this.textureGC.update();\r\n\r\n        //触发onPostRender\r\n        this.dispatchEvent('onPostRender');\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Erases the active render target and fills the drawing area with a colour\r\n     *\r\n     * @param {number[]} [clearColor] - The colour\r\n     */\r\n    clear(clearColor?: number[]) {\r\n        this._activeRenderTarget.clear(clearColor);\r\n    }\r\n\r\n    /**\r\n     * Sets the transform of the active render target to the given matrix\r\n     *\r\n     * @param {Matrix} matrix - The transformation matrix\r\n     */\r\n    setTransform(matrix: Matrix) {\r\n        this._activeRenderTarget.transform = matrix;\r\n    }\r\n\r\n    /**\r\n     * Erases the render texture and fills the drawing area with a colour\r\n     *\r\n     * @param {RenderTexture} renderTexture - The render texture to clear\r\n     * @param {number} [clearColor] - The colour\r\n     * @return {WebGLRenderer} Returns itself.\r\n     */\r\n    clearRenderTexture(renderTexture: RenderTexture, clearColor: number[]): WebglRenderer {\r\n        const baseTexture: BaseRenderTexture = renderTexture.baseTexture;\r\n        const renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\r\n        if (renderTarget) {\r\n            renderTarget.clear(clearColor);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Changes the current shader to the one given in parameter\r\n     *\r\n     * @param {Shader} shader - the new shader\r\n     * @param {boolean} [autoProject=true] - Whether automatically set the projection matrix\r\n     * @return {WebGLRenderer} Returns itself.\r\n     */\r\n    bindShader(shader: GLShader, autoProject: boolean = true): WebglRenderer {\r\n        // TODO cache\r\n        if (this._activeShader !== shader) {\r\n            this._activeShader = shader;\r\n            shader.bind();\r\n            // `autoProject` normally would be a default parameter set to true\r\n            // but because of how Babel transpiles default parameters\r\n            // it hinders the performance of this method.\r\n            if (autoProject !== false) {\r\n                // automatically set the projection matrix\r\n                shader.uniforms[\"projectionMatrix\"] = this._activeRenderTarget.projectionMatrix.toArray(true);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Creates a new VAO from this renderer's context and state.\r\n     *\r\n     * @return {VertexArrayObject} The new VAO.\r\n     */\r\n    createVao(): VertexArrayObject {\r\n        return new VertexArrayObject(this.gl, this.state.attribState);\r\n    }\r\n\r\n    /**\r\n     * Changes the current Vao to the one given in parameter\r\n     *\r\n     * @param {VertexArrayObject} vao - the new Vao\r\n     * @return {WebGLRenderer} Returns itself.\r\n     */\r\n    bindVao(vao: VertexArrayObject, force: boolean = false): WebglRenderer {\r\n        if (this._activeVao === vao) {\r\n            //计算是同一个也要bind，因为有可能vao里的attr被修改了，但是vao用的同一个，会导致buff不生效\r\n            if (force) vao.bind();//TODO，考虑是否用vao.dirty来确定要不要执行bind（讲道理dirty必须重新bind通道）\r\n            return this;\r\n        }\r\n\r\n        if (vao) {\r\n            vao.bind();\r\n        }\r\n        else if (this._activeVao) {\r\n            // TODO this should always be true i think?\r\n            this._activeVao.unbind();\r\n        }\r\n\r\n        this._activeVao = vao;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Resets the WebGL state so you can render things however you fancy!\r\n     *\r\n     * @return {WebGLRenderer} Returns itself.\r\n     */\r\n    reset(): WebglRenderer {\r\n        this.batchManager.reset();\r\n\r\n        this.bindVao(null);\r\n        this._activeShader = null;\r\n        this._activeRenderTarget = this.rootRenderTarget;\r\n\r\n        for (let i = 0; i < this.textureManager.boundTextures.length; i++) {\r\n            this.textureManager.boundTextures[i] = this.textureManager.emptyTextures[i];\r\n        }\r\n\r\n        // bind the main frame buffer (the screen);\r\n        this.rootRenderTarget.activate();\r\n\r\n        this.state.resetToDefault();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Binds a render texture for rendering\r\n     *\r\n     * @param {RenderTexture} renderTexture - The render texture to render\r\n     * @param {Matrix} transform - The transform to be applied to the render texture\r\n     * @return {WebGLRenderer} Returns itself.\r\n     */\r\n    bindRenderTexture(renderTexture: RenderTexture, transform: Matrix): WebglRenderer {\r\n        let renderTarget;\r\n\r\n        if (renderTexture) {\r\n            const baseTexture = renderTexture.baseTexture;\r\n\r\n            if (!baseTexture._glRenderTargets[this.CONTEXT_UID]) {\r\n                // bind the current texture\r\n                this.textureManager.updateTexture(baseTexture, 0);\r\n            }\r\n            this.textureManager.unbindTexture(baseTexture);\r\n\r\n            renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\r\n            renderTarget.setFrame(renderTexture.frame);\r\n        }\r\n        else {\r\n            renderTarget = this.rootRenderTarget;\r\n        }\r\n\r\n        renderTarget.transform = transform;\r\n        this.bindRenderTarget(renderTarget);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 绑定当前渲染对象\r\n     * @param {RenderTarget} renderTarget - the new render target\r\n     * @return {WebglRenderer} Returns itself.\r\n     */\r\n    bindRenderTarget(renderTarget: RenderTarget): WebglRenderer {\r\n        if (renderTarget !== this._activeRenderTarget) {\r\n            this._activeRenderTarget = renderTarget;\r\n            renderTarget.activate();\r\n            if (this._activeShader && this._activeShader.uniforms.projectionMatrix) {\r\n                this._activeShader.uniforms.projectionMatrix = renderTarget.projectionMatrix.toArray(true);\r\n            }\r\n            this.stencilManager.setMaskStack(renderTarget.stencilMaskStack);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Resizes the webGL view to the specified width and height.\r\n     *\r\n     * @param {number} blendMode - the desired blend mode\r\n     */\r\n    setBlendMode(blendMode: BLEND_MODES) {\r\n        this.state.setBlendMode(blendMode);\r\n    }\r\n\r\n\r\n    /**\r\n     * 传入真实的canvas尺寸\r\n     * @param screenWidth \r\n     * @param screenHeight \r\n     */\r\n    resize(screenWidth: number, screenHeight: number) {\r\n        super.resize(screenWidth, screenHeight);\r\n        this.rootRenderTarget.resize(screenWidth /** devicePixelRatio*/, screenHeight /** devicePixelRatio*/);\r\n        if (this._activeRenderTarget === this.rootRenderTarget) {\r\n            this.rootRenderTarget.activate();\r\n            if (this._activeShader) {\r\n                this._activeShader.uniforms.projectionMatrix = this.rootRenderTarget.projectionMatrix.toArray(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 渲染器销毁方法\r\n     */\r\n    destroy() {\r\n        //插件销毁\r\n        this.destroyPlugins();\r\n        // remove listeners\r\n        // this.htmlElement.removeEventListener('webglcontextlost', this.handleContextLost);\r\n        // this.htmlElement.removeEventListener('webglcontextrestored', this.handleContextRestored);\r\n\r\n        this.textureManager.destroy();\r\n\r\n        // call base destroy\r\n        super.destroy();\r\n\r\n        // destroy the managers\r\n        this.maskManager.destroy();\r\n        this.stencilManager.destroy();\r\n        this.filterManager.destroy();\r\n\r\n        this.maskManager = null;\r\n        this.filterManager = null;\r\n        this.textureManager = null;\r\n\r\n        this.handleContextLost = null;\r\n        this.handleContextRestored = null;\r\n\r\n        //小程序内会有问题，这样执行\r\n        // this.gl.useProgram(null);\r\n\r\n        // if (this.gl.getExtension('WEBGL_lose_context')) {\r\n        //   this.gl.getExtension('WEBGL_lose_context').loseContext();\r\n        // }\r\n\r\n        // this.gl = null;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * webgl上下文恢复时\r\n     * @private\r\n     */\r\n    handleContextRestored() {\r\n        this.textureManager.removeAll();\r\n        this.filterManager.destroy(true);\r\n        this._initContext();\r\n        this.resize(this.width, this.height);//放在这吧,改动最小\r\n    }\r\n\r\n    /**\r\n     * webgl上下文丢失时\r\n     * @private\r\n     * @param {WebGLContextEvent} event - The context lost event.\r\n     */\r\n    handleContextLost(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * 初始化插件\r\n     * @protected\r\n     * @param {object} staticMap - The dictionary of statically saved plugins.\r\n     */\r\n    initPlugins(staticMap) {\r\n        for (const o in staticMap) {\r\n            this.plugins[o] = new (staticMap[o])(this);\r\n        }\r\n    }\r\n\r\n    destroyPlugins() {\r\n        for (const o in this.plugins) {\r\n            this.plugins[o].destroy();\r\n            this.plugins[o] = null;\r\n        }\r\n        this.plugins = null;\r\n    }\r\n\r\n    static __plugins;\r\n    /**\r\n     * Adds a plugin to the renderer.\r\n     *\r\n     * @method\r\n     * @param {string} pluginName - The name of the plugin.\r\n     * @param {Function} ctor - The constructor function or class for the plugin.\r\n     */\r\n    static registerPlugin(pluginName, ctor) {\r\n        WebglRenderer.__plugins = WebglRenderer.__plugins || {};\r\n        WebglRenderer.__plugins[pluginName] = ctor;\r\n    }\r\n}\r\n\r\n//注册所有插件，当前只有batch\r\nWebglRenderer.registerPlugin('batch', BatchRenderer);\r\n\r\n","import { DisplayObject } from \"../../display/DisplayObject\";\nimport { WebglRenderer } from \"../WebglRenderer\";\n\n/**\n * Base for a common object renderer that can be used as a system renderer plugin.\n * 基础渲染插件基类\n */\nexport default class ObjectRenderer {\n    /**\n     * The renderer this manager works for.\n     *\n     * @member {Renderer}\n     */\n    renderer: WebglRenderer\n    constructor(renderer: WebglRenderer) {\n        this.renderer = renderer;\n\n        //监听\n        this.renderer.addEventListener('onContextChange', this.onContextChange, this);\n    }\n\n\n    /**\n     * Generic method called when there is a WebGL context change.\n     *\n     * @param {WebGLRenderingContext} gl new webgl context\n     */\n    onContextChange() {\n        // do some codes init!\n    }\n    /**\n     * Starts the renderer and sets the shader\n     *\n     */\n    start() {\n        // set the shader..\n    }\n\n    /**\n     * Stops the renderer\n     *\n     */\n    stop() {\n        this.flush();\n    }\n\n    /**\n     * Stub method for rendering content and emptying the current batch.\n     *\n     */\n    flush() {\n        // flush!\n    }\n\n    /**\n     * Renders an object\n     *\n     */\n    render(object: any) {\n        // render the object\n    }\n    /**\n     * Generic destroy methods to be overridden by the subclass\n     */\n    destroy() {\n        this.renderer.removeEventListener('onContextChange', this.onContextChange, this);\n        this.renderer = null;\n    }\n}\n","\r\n\r\nexport function mapType(gl, type) {\r\n    if (!GL_TABLE) {\r\n        var typeNames = Object.keys(GL_TO_GLSL_TYPES);\r\n\r\n        GL_TABLE = {};\r\n\r\n        for (var i = 0; i < typeNames.length; ++i) {\r\n            var tn = typeNames[i];\r\n            GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\r\n        }\r\n    }\r\n\r\n    return GL_TABLE[type];\r\n};\r\n\r\nvar GL_TABLE = null;\r\n\r\nvar GL_TO_GLSL_TYPES = {\r\n    'FLOAT': 'float',\r\n    'FLOAT_VEC2': 'vec2',\r\n    'FLOAT_VEC3': 'vec3',\r\n    'FLOAT_VEC4': 'vec4',\r\n\r\n    'INT': 'int',\r\n    'INT_VEC2': 'ivec2',\r\n    'INT_VEC3': 'ivec3',\r\n    'INT_VEC4': 'ivec4',\r\n\r\n    'BOOL': 'bool',\r\n    'BOOL_VEC2': 'bvec2',\r\n    'BOOL_VEC3': 'bvec3',\r\n    'BOOL_VEC4': 'bvec4',\r\n\r\n    'FLOAT_MAT2': 'mat2',\r\n    'FLOAT_MAT3': 'mat3',\r\n    'FLOAT_MAT4': 'mat4',\r\n\r\n    'SAMPLER_2D': 'sampler2D'\r\n};\r\n\r\n","/**\r\n * @class\r\n * @memberof glCore.shader\r\n * @param type {String} Type of value\r\n * @param size {Number}\r\n */\r\nexport function defaultValue(type:string, size:number) {\r\n    switch (type) {\r\n        case 'float':\r\n            return 0;\r\n\r\n        case 'vec2':\r\n            return new Float32Array(2 * size);\r\n\r\n        case 'vec3':\r\n            return new Float32Array(3 * size);\r\n\r\n        case 'vec4':\r\n            return new Float32Array(4 * size);\r\n\r\n        case 'int':\r\n        case 'sampler2D':\r\n            return 0;\r\n\r\n        case 'ivec2':\r\n            return new Int32Array(2 * size);\r\n\r\n        case 'ivec3':\r\n            return new Int32Array(3 * size);\r\n\r\n        case 'ivec4':\r\n            return new Int32Array(4 * size);\r\n\r\n        case 'bool':\r\n            return false;\r\n\r\n        case 'bvec2':\r\n\r\n            return booleanArray(2 * size);\r\n\r\n        case 'bvec3':\r\n            return booleanArray(3 * size);\r\n\r\n        case 'bvec4':\r\n            return booleanArray(4 * size);\r\n\r\n        case 'mat2':\r\n            return new Float32Array([1, 0,\r\n                0, 1]);\r\n\r\n        case 'mat3':\r\n            return new Float32Array([1, 0, 0,\r\n                0, 1, 0,\r\n                0, 0, 1]);\r\n\r\n        case 'mat4':\r\n            return new Float32Array([1, 0, 0, 0,\r\n                0, 1, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1]);\r\n    }\r\n};\r\n\r\nvar booleanArray = function (size) {\r\n    var array = new Array(size);\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        array[i] = false;\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\n\r\n","import { Rectangle, Matrix } from '../../math';\r\nimport { SCALE_MODES } from '../../const';\r\n// import settings from '../../../settings';\r\nimport { GLFramebuffer, GLTexture, GLBuffer } from '../../../glCore';\r\nimport Graphics from '../../graphics/Graphics';\r\n\r\n\r\nexport default class RenderTarget {\r\n    /**\r\n     * The current WebGL drawing context.\r\n     *\r\n     */\r\n    gl: WebGLRenderingContext;\r\n    /**\r\n     * A frame buffer\r\n     */\r\n    frameBuffer: GLFramebuffer;\r\n    /**\r\n     * The texture\r\n     */\r\n    texture: GLTexture;\r\n    /**\r\n     * The background colour of this render target, as an array of [r,g,b,a] values\r\n     *\r\n     */\r\n    clearColor: number[];\r\n    /**\r\n     * The size of the object as a rectangle\r\n     */\r\n    size: Rectangle;\r\n    /**\r\n     * The projection matrix\r\n     */\r\n    projectionMatrix: Matrix;\r\n    /**\r\n     * The object's transform\r\n     */\r\n    transform: Matrix;\r\n    /**\r\n     * The frame.\r\n     *\r\n     */\r\n    frame: Rectangle;\r\n\r\n    defaultFrame: Rectangle;\r\n    destinationFrame: any;\r\n    sourceFrame: any;\r\n    /**\r\n     * The stencil buffer stores masking data for the render target\r\n     *\r\n     */\r\n    stencilBuffer: GLBuffer;\r\n    /**\r\n     * The data structure for the stencil masks\r\n     */\r\n    stencilMaskStack: Graphics[];\r\n    /**\r\n     * The scale mode.\r\n     *\r\n     */\r\n    scaleMode: number;\r\n    /**\r\n     * Whether this object is the root element or not\r\n     */\r\n    root: boolean;\r\n\r\n    /**\r\n     * Stores filter data for the render target\r\n     *\r\n     * @member {object[]}\r\n     */\r\n    filterData: any;\r\n    /**\r\n     * The key for pooled texture of FilterSystem\r\n     * @private\r\n     * @member {string}\r\n     */\r\n    filterPoolKey: string;\r\n    /**\r\n     * @param {WebGLRenderingContext} gl - The current WebGL drawing context\r\n     * @param {number} [width=0] - the horizontal range of the filter\r\n     * @param {number} [height=0] - the vertical range of the filter\r\n     * @param {number} [scaleMode=SCALE_MODES.LINEAR] - See {@link SCALE_MODES} for possible values\r\n     * @param {boolean} [root=false] - Whether this object is the root element or not\r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        width: number = 0,\r\n        height: number = 0,\r\n        scaleMode: number = SCALE_MODES.LINEAR,\r\n        root: boolean = false\r\n    ) {\r\n        this.gl = gl;\r\n\r\n        // next time to create a frame buffer and texture\r\n        this.frameBuffer = null;\r\n\r\n        this.texture = null;\r\n\r\n        this.clearColor = [0, 0, 0, 0];\r\n\r\n        this.size = new Rectangle(0, 0, 1, 1);\r\n\r\n        this.projectionMatrix = new Matrix();\r\n\r\n        this.transform = null;\r\n\r\n        this.frame = null;\r\n\r\n        this.defaultFrame = new Rectangle();\r\n        this.destinationFrame = null;\r\n        this.sourceFrame = null;\r\n\r\n        this.stencilBuffer = null;\r\n\r\n        this.stencilMaskStack = [];\r\n\r\n        this.filterData = null;\r\n\r\n        this.filterPoolKey = '';\r\n\r\n\r\n        this.scaleMode = scaleMode;\r\n\r\n        this.root = root;\r\n\r\n        if (!this.root) {\r\n            this.frameBuffer = GLFramebuffer.createRGBA(gl, 100, 100);\r\n\r\n            if (this.scaleMode === SCALE_MODES.NEAREST) {\r\n                this.frameBuffer.texture.enableNearestScaling();\r\n            }\r\n            else {\r\n                this.frameBuffer.texture.enableLinearScaling();\r\n            }\r\n            /*\r\n                A frame buffer needs a target to render to..\r\n                create a texture and bind it attach it to the framebuffer..\r\n             */\r\n\r\n            // this is used by the base texture\r\n            this.texture = this.frameBuffer.texture;\r\n        }\r\n        else {\r\n            // make it a null framebuffer..\r\n            this.frameBuffer = new GLFramebuffer(gl, 100, 100);\r\n            //帧缓存为空，gltexture也是空\r\n            this.frameBuffer.framebuffer = null;\r\n        }\r\n        this.setFrame();\r\n        this.resize(width, height);\r\n    }\r\n\r\n    /**\r\n     * Clears the filter texture.\r\n     *\r\n     * @param {number[]} [clearColor=this.clearColor] - Array of [r,g,b,a] to clear the framebuffer\r\n     */\r\n    clear(clearColor?: number[]) {\r\n        const cc = clearColor || this.clearColor;\r\n        //帧缓存清空，this.frameBuffer.framebuffer为null时，直接清root\r\n        this.frameBuffer.clear(cc[0], cc[1], cc[2], cc[3]);// r,g,b,a);\r\n    }\r\n\r\n    /**\r\n     * Binds the stencil buffer.\r\n     *\r\n     */\r\n    attachStencilBuffer() {\r\n        // TODO check if stencil is done?\r\n        /**\r\n         * The stencil buffer is used for masking in\r\n         * lets create one and then add attach it to the framebuffer..\r\n         */\r\n        if (!this.root) {\r\n            this.frameBuffer.enableStencil();\r\n        }\r\n        //为什么不需要把源数据赋值到this.stencilMaskStack\r\n    }\r\n\r\n    /**\r\n     * Sets the frame of the render target.\r\n     *\r\n     * @param {Rectangle} destinationFrame - The destination frame.\r\n     * @param {Rectangle} sourceFrame - The source frame.\r\n     */\r\n    setFrame(destinationFrame?: Rectangle, sourceFrame?: Rectangle) {\r\n        this.destinationFrame = destinationFrame || this.destinationFrame || this.defaultFrame;\r\n        this.sourceFrame = sourceFrame || this.sourceFrame || this.destinationFrame;\r\n    }\r\n\r\n    /**\r\n     * Binds the buffers and initialises the viewport.\r\n     *\r\n     */\r\n    activate() {\r\n        // TOOD refactor usage of frame..\r\n        const gl = this.gl;\r\n\r\n        // make sure the texture is unbound!\r\n        this.frameBuffer.bind();\r\n\r\n        this.calculateProjection(this.destinationFrame, this.sourceFrame);\r\n\r\n        if (this.transform) {\r\n            this.projectionMatrix.append(this.transform);\r\n        }\r\n\r\n        // TODO add a check as them may be the same!\r\n        if (this.destinationFrame !== this.sourceFrame) {\r\n            gl.enable(gl.SCISSOR_TEST);\r\n            gl.scissor(\r\n                this.destinationFrame.x | 0,\r\n                this.destinationFrame.y | 0,\r\n                this.destinationFrame.width | 0,\r\n                this.destinationFrame.height | 0\r\n            );\r\n        }\r\n        else {\r\n            gl.disable(gl.SCISSOR_TEST);\r\n        }\r\n\r\n        // TODO - does not need to be updated all the time??\r\n        gl.viewport(\r\n            this.destinationFrame.x | 0,\r\n            this.destinationFrame.y | 0,\r\n            this.destinationFrame.width | 0,\r\n            this.destinationFrame.height | 0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Updates the projection matrix based on a projection frame (which is a rectangle)\r\n     *\r\n     * @param {Rectangle} destinationFrame - The destination frame.\r\n     * @param {Rectangle} sourceFrame - The source frame.\r\n     */\r\n    calculateProjection(destinationFrame: Rectangle, sourceFrame?: Rectangle) {\r\n        const pm = this.projectionMatrix;\r\n        // console.log(destinationFrame)\r\n        sourceFrame = sourceFrame || destinationFrame;\r\n\r\n        pm.identity();\r\n\r\n        // TODO: make dest scale source\r\n        if (!this.root) {\r\n            pm.a = 1 / destinationFrame.width * 2;\r\n            pm.d = 1 / destinationFrame.height * 2;\r\n\r\n            pm.tx = -1 - (sourceFrame.x * pm.a);\r\n            pm.ty = -1 - (sourceFrame.y * pm.d);\r\n        }\r\n        else {\r\n            pm.a = 1 / destinationFrame.width * 2;\r\n            pm.d = -1 / destinationFrame.height * 2;\r\n\r\n            pm.tx = -1 - (sourceFrame.x * pm.a);\r\n            pm.ty = 1 - (sourceFrame.y * pm.d);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Resizes the texture to the specified width and height\r\n     *\r\n     * @param {number} width - the new width of the texture\r\n     * @param {number} height - the new height of the texture\r\n     */\r\n    resize(width: number, height: number) {\r\n        width = width | 0;\r\n        height = height | 0;\r\n\r\n        if (this.size.width === width && this.size.height === height) {\r\n            return;\r\n        }\r\n\r\n        this.size.width = width;\r\n        this.size.height = height;\r\n\r\n        this.defaultFrame.width = width;\r\n        this.defaultFrame.height = height;\r\n\r\n        this.frameBuffer.resize(width, height);\r\n\r\n        const projectionFrame = this.frame || this.size;\r\n\r\n        this.calculateProjection(projectionFrame);\r\n    }\r\n\r\n    /**\r\n     * 销毁方法\r\n     */\r\n    destroy() {\r\n        this.frameBuffer.destroy();\r\n        this.frameBuffer = null;\r\n        this.texture = null;\r\n    }\r\n}\r\n","\r\n\r\nexport { default as Graphics } from \"./Graphics\";\r\n// export * from \"./GraphicsData\";//暂时不导。外部用不到暂时\r\n\r\nexport * from \"./Shape\";\r\n","\r\n\r\nexport * from \"./Ease\"\r\n\r\nexport { default as Tween } from \"./Tween\";","export * from \"./Mesh3D\"\r\nexport * from \"./Geometry\"\r\nexport * from \"./Scene3D\"\r\nexport * from \"./Object3D\"\r\n\r\n// export * from \"./Math\";//与2d的有冲突，单独玩\r\nexport * from \"./math/Euler\";\r\nexport * from \"./math/Matrix4\";\r\nexport * from \"./math/Quaternion\";\r\nexport * from \"./math/Vector2\";\r\nexport * from \"./math/Vector3\";\r\n\r\n//几何\r\nexport * from \"./geometries\"\r\n\r\n//材质\r\nexport * from \"./materials\";\r\n\r\n//灯光\r\nexport * from \"./lights\";\r\n\r\n//辅助类\r\nexport * from \"./helpers\";\r\n\r\n//相机\r\nexport * from \"./cameras/PerspectiveCamera\";\r\n\r\n//渲染插件\r\nexport * from \"./D3Renderer\";\r\n\r\n//gltf\r\nexport * from \"./gltf\";\r\n\r\n//动画\r\nexport * from \"./animation\";\r\n\r\n//其他封装的一些物体\r\nexport * from \"./d3Objects\"\r\n","import { Vector3 } from './Vector3';\r\nimport { Sphere } from './Sphere';\r\nimport { Object3D } from '../Object3D';\r\nimport { Matrix4 } from '../index';\r\n\r\nexport class Box3 {\r\n\tconstructor(\r\n\t\tpublic min: Vector3 = new Vector3(+ Infinity, + Infinity, + Infinity),\r\n\t\tpublic max: Vector3 = new Vector3(- Infinity, - Infinity, - Infinity)\r\n\t) { }\r\n\tset(min: Vector3, max: Vector3) {\r\n\t\tthis.min.copy(min);\r\n\t\tthis.max.copy(max);\r\n\t\treturn this\r\n\t}\r\n\tclone() {\r\n\t\treturn new Box3().copy(this);\r\n\t}\r\n\tcopy(box: Box3) {\r\n\t\tthis.min.copy(box.min);\r\n\t\tthis.max.copy(box.max);\r\n\t\treturn this;\r\n\t};\r\n\tmakeEmpty() {\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\treturn this;\r\n\t}\r\n\tisEmpty() {\r\n\t\treturn (this.max.x < this.min.x) || (this.max.y < this.min.y) || (this.max.z < this.min.z);\r\n\t}\r\n\t/**\r\n\t * 获取中心点\r\n\t * @param out \r\n\t */\r\n\tgetCenter(out: Vector3 = new Vector3()): Vector3 {\r\n\t\treturn this.isEmpty() ? out.set(0, 0, 0) : out.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n\t};\r\n\t/**\r\n\t * 获取对角线向量\r\n\t * @param out \r\n\t */\r\n\tgetSize(out: Vector3 = new Vector3()): Vector3 {\r\n\t\treturn this.isEmpty() ? out.set(0, 0, 0) : out.subVectors(this.max, this.min);\r\n\t};\r\n\t/**\r\n\t * \r\n\t * @param array 一般是顶点一维数组\r\n\t */\r\n\tsetFromArray(array: number[] | Float32Array) {\r\n\r\n\t\tvar minX = + Infinity;\r\n\t\tvar minY = + Infinity;\r\n\t\tvar minZ = + Infinity;\r\n\r\n\t\tvar maxX = - Infinity;\r\n\t\tvar maxY = - Infinity;\r\n\t\tvar maxZ = - Infinity;\r\n\r\n\t\tfor (var i = 0, l = array.length; i < l; i += 3) {\r\n\r\n\t\t\tvar x = array[i];\r\n\t\t\tvar y = array[i + 1];\r\n\t\t\tvar z = array[i + 2];\r\n\r\n\t\t\tif (x < minX) minX = x;\r\n\t\t\tif (y < minY) minY = y;\r\n\t\t\tif (z < minZ) minZ = z;\r\n\r\n\t\t\tif (x > maxX) maxX = x;\r\n\t\t\tif (y > maxY) maxY = y;\r\n\t\t\tif (z > maxZ) maxZ = z;\r\n\r\n\t\t}\r\n\r\n\t\tthis.min.set(minX, minY, minZ);\r\n\t\tthis.max.set(maxX, maxY, maxZ);\r\n\t\treturn this;\r\n\t}\r\n\tsetFromCenterAndSize(center: Vector3, size: Vector3) {\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar halfSize = v1.copy(size).multiplyScalar(0.5);\r\n\t\tthis.min.copy(center).sub(halfSize);\r\n\t\tthis.max.copy(center).add(halfSize);\r\n\t\treturn this;\r\n\t}\r\n\tsetFromPoints(points: Vector3[]) {\r\n\t\tthis.makeEmpty();\r\n\t\tfor (var i = 0, il = points.length; i < il; i++) {\r\n\t\t\tthis.expandByPoint(points[i]);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\tsetFromObject(object: Object3D) {\r\n\t\tthis.makeEmpty();\r\n\t\treturn this.expandByObject(object);\r\n\t};\r\n\t/**\r\n\t * 为了包含该点坐标\r\n\t * @param point \r\n\t */\r\n\texpandByPoint(point: Vector3) {\r\n\t\tthis.min.min(point);\r\n\t\tthis.max.max(point);\r\n\t\treturn this;\r\n\t};\r\n\t/**\r\n\t * 为了xyz分别根据vector进行扩展\r\n\t * @param vector \r\n\t */\r\n\texpandByVector(vector: Vector3) {\r\n\t\tthis.min.sub(vector);\r\n\t\tthis.max.add(vector);\r\n\t\treturn this;\r\n\t};\r\n\r\n\texpandByScalar(scalar: number) {\r\n\t\tthis.min.addScalar(- scalar);\r\n\t\tthis.max.addScalar(scalar);\r\n\t\treturn this;\r\n\t};\r\n\r\n\texpandByObject(object: Object3D) {\r\n\r\n\t\tlet scope = this;\r\n\r\n\t\tvar v1 = new Vector3();\r\n\r\n\t\tobject.updateWorldMatrix();\r\n\r\n\t\ttraverse(object);\r\n\r\n\t\tfunction traverse(node: Object3D) {\r\n\t\t\t//@ts-ignore 自己的先算\r\n\t\t\tvar geometry = node.geometry;\r\n\t\t\tif (geometry !== undefined && geometry._vertices) {\r\n\t\t\t\tvar vertices = geometry._vertices;\r\n\t\t\t\tfor (var i = 0; i < vertices.length; i += 3) {\r\n\t\t\t\t\tv1.set(vertices[i], vertices[i + 1], vertices[i + 2]).applyMatrix4(node._worldMatrix);\r\n\t\t\t\t\tscope.expandByPoint(v1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//子级递归\r\n\t\t\tfor (var j = 0; j < node.children.length; j++) traverse(node.children[j]);\r\n\t\t}\r\n\r\n\t\treturn scope;\r\n\t};\r\n\r\n\tcontainsPoint(point: Vector3) {\r\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\r\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\r\n\t};\r\n\r\n\tcontainsBox(box: Box3) {\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\t};\r\n\tintersectsBox(box: Box3) {\r\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\r\n\t};\r\n\r\n\tintersectsSphere(sphere: Sphere) {\r\n\t\tvar closestPoint = new Vector3();\r\n\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\tthis.clampPoint(sphere.center, closestPoint);\r\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\treturn closestPoint.distanceToSquared(sphere.center) <= (sphere.radius * sphere.radius);\r\n\t};\r\n\r\n\tclampPoint(point: Vector3, out: Vector3 = new Vector3()) {\r\n\t\treturn out.copy(point).clamp(this.min, this.max);\r\n\t};\r\n\r\n\tdistanceToPoint(point: Vector3) {\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar clampedPoint = v1.copy(point).clamp(this.min, this.max);\r\n\t\treturn clampedPoint.sub(point).length();\r\n\t}\r\n\r\n\tgetBoundingSphere(out: Sphere = new Sphere()) {\r\n\t\tvar v1 = new Vector3();\r\n\t\tthis.getCenter(out.center);\r\n\t\tout.radius = this.getSize(v1).length() * 0.5;\r\n\t\treturn out;\r\n\t}\r\n\r\n\tintersect(box: Box3) {\r\n\t\tthis.min.max(box.min);\r\n\t\tthis.max.min(box.max);\r\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\tif (this.isEmpty()) this.makeEmpty();\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion(box: Box3) {\r\n\r\n\t\tthis.min.min(box.min);\r\n\t\tthis.max.max(box.max);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4(matrix: Matrix4) {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew Vector3(),\r\n\t\t\tnew Vector3(),\r\n\t\t\tnew Vector3(),\r\n\t\t\tnew Vector3(),\r\n\t\t\tnew Vector3(),\r\n\t\t\tnew Vector3(),\r\n\t\t\tnew Vector3(),\r\n\t\t\tnew Vector3()\r\n\t\t];\r\n\t\t// transform of empty box is an empty box.\r\n\t\tif (this.isEmpty()) return this;\r\n\r\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\tpoints[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\r\n\t\tpoints[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\r\n\t\tpoints[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\r\n\t\tpoints[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\r\n\t\tpoints[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\r\n\t\tpoints[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\r\n\t\tpoints[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\r\n\t\tpoints[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\r\n\r\n\t\tthis.setFromPoints(points);\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttranslate(offset: Vector3) {\r\n\r\n\t\tthis.min.add(offset);\r\n\t\tthis.max.add(offset);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tequals(box: Box3) {\r\n\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\r\n\t}\r\n}\r\n\r\n\r\n\r\n","import { Camera } from \"./Camera\";\r\n\r\n/**\r\n * \r\n */\r\nexport class PerspectiveCamera extends Camera {\r\n\tzoom: number;\r\n\tfocus: number;\r\n\t/**\r\n\t * \r\n\t * @param fov 张角\r\n\t * @param aspect 长宽比例width/height\r\n\t * @param near 最近近距离\r\n\t * @param far 最远远距离\r\n\t */\r\n\tconstructor(\r\n\t\tpublic fov: number = 50,\r\n\t\tpublic aspect: number = 1,\r\n\t\tpublic near: number = 0.1,\r\n\t\tpublic far: number = 2000\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis._instanceType = 'PerspectiveCamera';\r\n\t\tthis.zoom = 1;\r\n\t\tthis.focus = 10;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\t}\r\n\tset(\r\n\t\tfov: number = 50,\r\n\t\taspect: number = 1,\r\n\t\tnear: number = 0.1,\r\n\t\tfar: number = 2000\r\n\t) {\r\n\t\tthis.fov = fov;\r\n\t\tthis.aspect = aspect;\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t\tthis.zoom = 1;\r\n\t\tthis.focus = 10;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\t}\r\n\r\n\tcopy(source: PerspectiveCamera, recursive: boolean = true) {\r\n\t\tsuper.copy(source, recursive)\r\n\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\tthis.aspect = source.aspect;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 更新\r\n\t */\r\n\tupdateProjectionMatrix() {\r\n\t\tthis.projectionMatrix.setPerspective(this.fov, this.aspect, this.near, this.far);\r\n\t\tthis.projectionMatrixInverse.setInverseOf(this.projectionMatrix);\r\n\t}\r\n}","import { HashObject } from \"../../2d/HashObject\";\r\nimport { WebglRenderer } from \"../../2d/renderers/WebglRenderer\";\r\nimport { GLShader } from \"../../glCore\";\r\n\r\n// precision mediump float;\r\n// precision mediump int;\r\n\r\n//\r\n// uniform mat4 uViewMatrix;\r\n// uniform mat4 uProjectionMatrix;\r\n// uniform mat4 uModelMatrix;\r\n\r\nexport const defaultVertexShader3d =\r\n    `attribute vec3 aPosition;\r\nuniform mat4 uViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uModelMatrix;\r\nvoid main() {\r\n    gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4( aPosition, 1.0 );\r\n}`;\r\nexport const defaultFragmentShader3d =\r\n    `void main() {\r\n    gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\r\n}`\r\n\r\n/**\r\n * 不考虑宏定义，否则自行修改getShader及缓存方式\r\n * 这三个必备，除非自己不需要几何的矩阵信息\r\n * uniform mat4 uViewMatrix;\r\n * uniform mat4 uProjectionMatrix;\r\n * uniform mat4 uModelMatrix;\r\n */\r\nexport class ShaderMaterial extends HashObject {\r\n    /**\r\n     * key就是渲染器唯一id\r\n     */\r\n    protected shaders: { [key: string]: GLShader } = {};\r\n    /**\r\n     * 标记下。\r\n     * 本来想直接用_instanceType判断，但是后续考虑到SpriteMaterial，SkyMaterial都会继承这个，会重写_instanceType\r\n     */\r\n    isShaderMaterial: boolean = true;\r\n    constructor(\r\n        protected vertexShader = defaultVertexShader3d,\r\n        protected fragmentShader = defaultFragmentShader3d,\r\n        public uniforms: { [key: string]: { type: UniformType, value: any } } = {}\r\n    ) {\r\n        super();\r\n        this.vertexShader = vertexShader || defaultVertexShader3d;\r\n        this.fragmentShader = fragmentShader || defaultFragmentShader3d;\r\n        this._instanceType = \"ShaderMaterial\";\r\n    }\r\n    /**\r\n     * 自定义着色器不考虑缓存了，自己注意，\r\n     * 多个完全一样的自定义材质，用同一个就行了\r\n     * @param renderer \r\n     */\r\n    getShader(renderer: WebglRenderer): GLShader {\r\n        const id = renderer.CONTEXT_UID;\r\n        if (!this.shaders[id]) {\r\n            //生成\r\n            this.shaders[id] = new GLShader(\r\n                renderer.gl,\r\n                this.vertexShader,\r\n                this.fragmentShader\r\n            );\r\n            this.shaders[id][\"_glShaderKey\"] = `customShader${\"id\" + id}${\"instanceId\" + this.instanceId}`;\r\n        };\r\n        return this.shaders[id];\r\n    }\r\n\r\n    destroy() {\r\n        for (let id in this.shaders) {\r\n            this.shaders[id].destroy();\r\n            delete this.shaders[id];\r\n        }\r\n        this.shaders = null;\r\n        this.vertexShader = null;\r\n        this.fragmentShader = null\r\n    }\r\n}\r\n\r\nexport enum UniformType {\r\n    float = \"f\",\r\n    /**\r\n     * 纹理对象\r\n     */\r\n    texture = \"t\",\r\n    /**\r\n     * 十六进制数字\r\n     */\r\n    color = \"c\",\r\n    /**\r\n     * v2对象\r\n     */\r\n    vector2 = \"v2\",\r\n    /**\r\n     * v3对象\r\n     */\r\n    vector3 = \"v3\",\r\n    /**\r\n     * v4对象\r\n     */\r\n    vector4 = \"v4\",\r\n    /**\r\n     * m4对象\r\n     */\r\n    matrix4 = \"m4\",\r\n}","import { Slot } from \"../Slot\";\nimport { Bone } from \"../Bone\";\n\n\n//attachment用于记录数据用\nexport abstract class Attachment {\n    constructor(public name: string) {\n    }\n}\n\nexport abstract class VertexAttachment extends Attachment {\n    private static nextID = 0;\n\n    public id = (VertexAttachment.nextID++ & 65535) << 11;\n    //用到的骨骼\n    bones: Array<number>;\n    vertices: ArrayLike<number>;\n    worldVerticesLength = 0;\n    deformAttachment: VertexAttachment = this;\n\n    constructor(name: string) {\n        super(name);\n\n    }\n    applyDeform (sourceAttachment) {\n        return this == sourceAttachment;\n    };\n    computeWorldVerticesOld(slot: Slot, worldVertices: ArrayLike<number>, skeletonBones: Bone[]) {\n        this.computeWorldVertices(slot, 0, this.worldVerticesLength, worldVertices, 0, 2, skeletonBones);\n    }\n\n    /** Transforms local vertices to world coordinates.\n     * @param start The index of the first local vertex value to transform. Each vertex has 2 values, x and y.\n     * @param count The number of world vertex values to output. Must be <= {@link #getWorldVerticesLength()} - start.\n     * @param worldVertices The output world vertices. Must have a length >= offset + count.\n     * @param offset The worldVertices index to begin writing values. */\n    computeWorldVertices(\n        slot: Slot,\n        start: number,\n        count: number,\n        worldVertices: ArrayLike<number>,\n        offset: number,\n        stride: number,\n        skeletonBones: Bone[]//全部的骨骼数组\n    ) {\n        count = offset + (count >> 1) * stride;\n        let deformArray = slot.deform;\n        let vertices = this.vertices;\n        let bones = this.bones;\n        if (bones == null) {\n            if (deformArray.length > 0) vertices = deformArray;\n            let mat = slot.bone.matrix//.worldMatrix;\n            let x = mat.tx;\n            let y = mat.ty;\n            let a = mat.a, b = mat.c, c = mat.b, d = mat.d;\n            for (let v = start, w = offset; w < count; v += 2, w += stride) {\n                let vx = vertices[v], vy = vertices[v + 1];\n                //@ts-ignore\n                worldVertices[w] = vx * a + vy * b + x;\n                //@ts-ignore\n                worldVertices[w + 1] = vx * c + vy * d + y;\n            }\n            return;\n        }\n        let v = 0, skip = 0;\n        for (let i = 0; i < start; i += 2) {\n            let n = bones[v];\n            v += n + 1;\n            skip += n;\n        }\n        if (deformArray.length == 0) {\n            for (let w = offset, b = skip * 3; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3) {\n                    let mat = skeletonBones[bones[v]].matrix//.worldMatrix;\n                    let vx = vertices[b], vy = vertices[b + 1], weight = vertices[b + 2];\n                    wx += (vx * mat.a + vy * mat.c + mat.tx) * weight;\n                    wy += (vx * mat.b + vy * mat.d + mat.ty) * weight;\n                }\n                //@ts-ignore\n                worldVertices[w] = wx;\n                //@ts-ignore\n                worldVertices[w + 1] = wy;\n            }\n        } else {\n            let deform = deformArray;\n            for (let w = offset, b = skip * 3, f = skip << 1; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3, f += 2) {\n                    let mat = skeletonBones[bones[v]].matrix//.worldMatrix;\n                    let vx = vertices[b] + deform[f], vy = vertices[b + 1] + deform[f + 1], weight = vertices[b + 2];\n                    wx += (vx * mat.a + vy * mat.c + mat.tx) * weight;\n                    wy += (vx * mat.b + vy * mat.d + mat.ty) * weight;\n                }\n                //@ts-ignore\n                worldVertices[w] = wx;\n                //@ts-ignore\n                worldVertices[w + 1] = wy;\n            }\n        }\n    }\n}\n","\nimport { Point } from \"../math/Point\";\nimport { HashObject } from \"../HashObject\";\n/**\n * 动态可监控ObservablePoint类\n * @class\n */\nexport class ObservablePoint extends HashObject {\n    _x: number;\n    _y: number;\n    cb: any;\n    scope: any;\n    /**\n     * @param {Function} cb - 值改变时的回调\n     * @param {object} scope - 回调里的上下文this\n     * @param {number} [x=0] - x\n     * @param {number} [y=0] - y\n     */\n    constructor(cb: Function, scope: any, x: number = 0, y: number = 0) {\n        super();\n        let s = this;\n        s._instanceType = \"ObservablePoint\";\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * 设置xy\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     */\n    set(x: number = 0, y: number = x) {\n        const _x = x || 0;\n        const _y = y || 0;\n\n        if (this._x !== _x || this._y !== _y) {\n            this._x = _x;\n            this._y = _y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * 从一个点复制xy\n     *\n     * @param {Point|ObservablePoint} point\n     */\n    copy(point: Point | ObservablePoint) {\n        if (this._x !== point.x || this._y !== point.y) {\n            this._x = point.x;\n            this._y = point.y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(value) {\n        if (this._x !== value) {\n            this._x = value;\n            this.cb.call(this.scope);\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(value) {\n        if (this._y !== value) {\n            this._y = value;\n            this.cb.call(this.scope);\n        }\n    }\n\n    destroy() {\n\n    }\n}\n","import { HashObject } from \"../HashObject\";\r\nimport { Point } from \"./Point\";\r\nimport { SHAPES } from \"../const\";\r\nimport { Matrix } from \"./Matrix\";\r\n/**\r\n *\r\n * @class Rectangle\r\n * @extends HashObject\r\n * @public\r\n * @since 1.0.0\r\n */\r\nexport class Rectangle extends HashObject {\r\n\r\n    /**\r\n     * 类型\r\n     */\r\n    type: number\r\n    /**\r\n     * 构造函数\r\n     * @method Rectangle\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} width\r\n     * @param {number} height\r\n     */\r\n    public constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\r\n        super();\r\n        var s = this;\r\n        s._instanceType = \"Rectangle\";\r\n        s.x = x;\r\n        s.y = y;\r\n        s.height = height;\r\n        s.width = width;\r\n\r\n        this.type = SHAPES.RECT\r\n    }\r\n\r\n    clear() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.width = 0;\r\n        this.height = 0;\r\n    }\r\n\r\n    copy(rect: Rectangle) {\r\n        this.x = rect.x;\r\n        this.y = rect.y;\r\n        this.width = rect.width;\r\n        this.height = rect.height;\r\n\r\n        return this;\r\n    }\r\n\r\n    clone() {\r\n        return new Rectangle(this.x, this.y, this.width, this.height);\r\n    }\r\n\r\n    /**\r\n     * 矩形左上角的 x 坐标\r\n     * @property x\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type{number}\r\n     * @default 0\r\n     */\r\n    public x: number = 0;\r\n    /**\r\n     * 矩形左上角的 y 坐标\r\n     * @property y\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type{number}\r\n     * @default 0\r\n     */\r\n    public y: number = 0;\r\n    /**\r\n     * 矩形的宽度（以像素为单位）\r\n     * @property width\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type{number}\r\n     * @default 0\r\n     */\r\n    public width: number = 0;\r\n    /**\r\n     * 矩形的高度（以像素为单位）\r\n     * @property height\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type{number}\r\n     * @default 0\r\n     */\r\n    public height: number = 0;\r\n\r\n    /**\r\n     * returns the left edge of the rectangle\r\n     */\r\n    get left(): number {\r\n        return this.x;\r\n    }\r\n\r\n    /**\r\n     * returns the right edge of the rectangle\r\n     */\r\n    get right(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    /**\r\n     * returns the top edge of the rectangle\r\n     */\r\n    get top(): number {\r\n        return this.y;\r\n    }\r\n\r\n    /**\r\n     * returns the bottom edge of the rectangle\r\n     */\r\n    get bottom(): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    /**\r\n     * 判断一个点是否在矩形内包括边\r\n     * @method isPointIn\r\n     * @param {Point} point\r\n     * @return {boolean}\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public isPointIn(point: Point): boolean {\r\n        let s = this;\r\n        return point.x >= s.x && point.x <= (s.x + s.width) && point.y >= s.y && point.y <= (s.y + s.height);\r\n    }\r\n\r\n    /**\r\n     * Fits this rectangle around the passed one.\r\n     *\r\n     * @param {Rectangle} rectangle - The rectangle to fit.\r\n     */\r\n    fit(rectangle: Rectangle) {\r\n        var x1 = Math.max(this.x, rectangle.x);\r\n        var x2 = Math.min(this.x + this.width, rectangle.x + rectangle.width);\r\n        var y1 = Math.max(this.y, rectangle.y);\r\n        var y2 = Math.min(this.y + this.height, rectangle.y + rectangle.height);\r\n\r\n        this.x = x1;\r\n        this.width = Math.max(x2 - x1, 0);\r\n        this.y = y1;\r\n        this.height = Math.max(y2 - y1, 0);\r\n    };\r\n    /**\r\n     * Pads the rectangle making it grow in all directions.\r\n     *\r\n     * @param {number} paddingX - The horizontal padding amount.\r\n     * @param {number} [paddingY] - The vertical padding amount.\r\n     */\r\n    pad(paddingX: number, paddingY?: number) {\r\n        paddingX = paddingX || 0;\r\n        paddingY = paddingY || ((paddingY !== 0) ? paddingX : 0);\r\n\r\n        this.x -= paddingX;\r\n        this.y -= paddingY;\r\n\r\n        this.width += paddingX * 2;\r\n        this.height += paddingY * 2;\r\n    }\r\n\r\n    /**\r\n     * 将多个矩形合成为一个矩形,并将结果存到第一个矩形参数，并返回\r\n     * @method createFromRects\r\n     * @param {Rectangle} rect\r\n     * @param {..arg} arg\r\n     * @public\r\n     * @since 1.0.0\r\n     * @static\r\n     */\r\n    public static createFromRects(...arg: Rectangle[]): Rectangle {\r\n        if (arg.length == 0) {\r\n            return null;\r\n        } else if (arg.length == 1) {\r\n            return arg[0];\r\n        } else {\r\n            let rect = arg[0];\r\n            let x = rect.x, y = rect.y, w = rect.width, h = rect.height, wx1: number, wx2: number, hy1: number, hy2: number;\r\n            for (let i: number = 1; i < arg.length; i++) {\r\n                //如果宽高为空，后续考虑是否xy需要占位;\r\n                if (!arg[i].width && !arg[i].height) continue;\r\n                wx1 = x + w;\r\n                hy1 = y + h;\r\n                wx2 = arg[i].x + arg[i].width;\r\n                hy2 = arg[i].y + arg[i].height;\r\n                if (x > arg[i].x /*|| wx1 == 0*/ || (x == 0 && w == 0)) {//先去掉wx1和hy1==0判断,如果x为负的，w为正的，也可能0\r\n                    x = arg[i].x;\r\n                }\r\n                if (y > arg[i].y /*|| hy1 == 0*/ || (y == 0 && h == 0)) {//待检查 TODO\r\n                    y = arg[i].y;\r\n                }\r\n                if (wx1 < wx2) {\r\n                    wx1 = wx2;\r\n                }\r\n                if (hy1 < hy2) {\r\n                    hy1 = hy2;\r\n                }\r\n                rect.x = x;\r\n                rect.y = y;\r\n                rect.width = wx1 - x;\r\n                rect.height = hy1 - y;\r\n            }\r\n            return rect;\r\n        }\r\n    }\r\n    /**\r\n     * 通过一系列点来生成一个矩形\r\n     * 返回包含所有给定的点的最小矩形\r\n     * @method createFromPoints\r\n     * @static\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {Point} p1\r\n     * @param {..arg} ary\r\n     * @return {Rectangle}\r\n     */\r\n    public static createFromPoints(rect: Rectangle, ...arg: Point[]): Rectangle {\r\n        let x = arg[0].x, y = arg[0].y, w = arg[0].x, h = arg[0].y;\r\n        for (let i: number = 1; i < arg.length; i++) {\r\n            if (arg[i] == null) continue;\r\n            if (x > arg[i].x) {\r\n                x = arg[i].x;\r\n            }\r\n            if (y > arg[i].y) {\r\n                y = arg[i].y;\r\n            }\r\n            if (w < arg[i].x) {\r\n                w = arg[i].x;\r\n            }\r\n            if (h < arg[i].y) {\r\n                h = arg[i].y;\r\n            }\r\n        }\r\n        rect.x = x;\r\n        rect.y = y;\r\n        rect.width = w - x;\r\n        rect.height = h - y;\r\n        return rect;\r\n    }\r\n\r\n    /**\r\n     * 通过顶点数据  [0,1,\r\n     *               2,3,\r\n     *               1,3,\r\n     *               1,0]\r\n     * @param rect \r\n     * @param vertexData 一般为8长度\r\n     */\r\n    public static createFromVertexData(rect: Rectangle, vertexData: Float32Array, matrix?: Matrix): Rectangle {\r\n        let temP: Point = new Point()\r\n        let x = vertexData[0], y = vertexData[1], w = vertexData[0], h = vertexData[1];\r\n        if (matrix) {\r\n            matrix.transformPoint(x, y, temP);\r\n            x = w = temP.x;\r\n            y = h = temP.y;\r\n        }\r\n        for (let i: number = 2; i < vertexData.length; i += 2) {\r\n            if (vertexData[i] == null) continue;\r\n            temP.set(vertexData[i], vertexData[i + 1]);\r\n            if (matrix) matrix.transformPoint(temP.x, temP.y, temP);\r\n            if (x > temP.x) x = temP.x;\r\n            if (y > temP.y) y = temP.y;\r\n            if (w < temP.x) w = temP.x;\r\n            if (h < temP.y) h = temP.y;\r\n        }\r\n        rect.x = x;\r\n        rect.y = y;\r\n        rect.width = w - x;\r\n        rect.height = h - y;\r\n        return rect;\r\n    }\r\n\r\n    /**\r\n     * 通过两个点来确定一个矩形\r\n     * @method createRectform2Point\r\n     * @static\r\n     * @param rect\r\n     * @param p1\r\n     * @param p2\r\n     * @return \r\n     */\r\n    public static createRectfrom2Point(rect: Rectangle, p1: Point, p2: Point): Rectangle {\r\n        let x = p1.x, y = p1.y, w = p1.x, h = p1.y;\r\n        if (x > p2.x) {\r\n            x = p2.x;\r\n        }\r\n        if (y > p2.y) {\r\n            y = p2.y;\r\n        }\r\n        if (w < p2.x) {\r\n            w = p2.x;\r\n        }\r\n        if (h < p2.y) {\r\n            h = p2.y;\r\n        }\r\n        rect.x = x, rect.y = y, rect.width = w - x, rect.height = h - y;\r\n        return rect;\r\n    }\r\n    /**\r\n     * 判读两个矩形是否相交\r\n     * @method testRectCross\r\n     * @public\r\n     * @since 1.0.2\r\n     * @param r1\r\n     * @param r2\r\n     * @return {boolean}\r\n     */\r\n    public static testRectCross(ra: Rectangle, rb: Rectangle): boolean {\r\n        let a_cx: number, a_cy: number; /* 第一个中心点*/\r\n        let b_cx: number, b_cy: number; /* 第二个中心点*/\r\n        a_cx = ra.x + (ra.width / 2);\r\n        a_cy = ra.y + (ra.height / 2);\r\n        b_cx = rb.x + (rb.width / 2);\r\n        b_cy = rb.y + (rb.height / 2);\r\n        return ((Math.abs(a_cx - b_cx) <= (ra.width / 2 + rb.width / 2)) && (Math.abs(a_cy - b_cy) <= (ra.height / 2 + rb.height / 2)));\r\n    }\r\n\r\n    public destroy(): void {\r\n    }\r\n}\r\n","/**\n * 二面体群，n=4，用于翻转四边形纹理，包括镜像\n * 暂时用于纹理的旋转90度\n */\nimport { Matrix } from './Matrix';\n\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\nconst tempMatrices = [];\n\nconst mul = [];\n\nfunction signum(x) {\n    if (x < 0) {\n        return -1;\n    }\n    if (x > 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction init() {\n    for (let i = 0; i < 16; i++) {\n        const row = [];\n        mul.push(row);\n        for (let j = 0; j < 16; j++) {\n            const _ux = signum((ux[i] * ux[j]) + (vx[i] * uy[j]));\n            const _uy = signum((uy[i] * ux[j]) + (vy[i] * uy[j]));\n            const _vx = signum((ux[i] * vx[j]) + (vx[i] * vy[j]));\n            const _vy = signum((uy[i] * vx[j]) + (vy[i] * vy[j]));\n            for (let k = 0; k < 16; k++) {\n                if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy) {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        const mat = new Matrix();\n        mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n        tempMatrices.push(mat);\n    }\n}\n\ninit();\n\n/**\n * Implements Dihedral Group D_8, see [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html},\n * D8 is the same but with diagonals. Used for texture rotations.\n *\n * Vector xX(i), xY(i) is U-axis of sprite with rotation i\n * Vector yY(i), yY(i) is V-axis of sprite with rotation i\n * Rotations: 0 grad (0), 90 grad (2), 180 grad (4), 270 grad (6)\n * Mirrors: vertical (8), main diagonal (10), horizontal (12), reverse diagonal (14)\n * This is the small part of gameofbombs.com portal system. It works.\n *\n * @author Ivan @ivanpopelyshev\n * @class\n */\nconst GroupD8 = {\n    E: 0,\n    SE: 1,\n    S: 2,\n    SW: 3,\n    W: 4,\n    NW: 5,\n    N: 6,\n    NE: 7,\n    MIRROR_VERTICAL: 8,\n    MIRROR_HORIZONTAL: 12,\n    uX: (ind) => ux[ind],\n    uY: (ind) => uy[ind],\n    vX: (ind) => vx[ind],\n    vY: (ind) => vy[ind],\n    inv: (rotation) => {\n        if (rotation & 8) {\n            return rotation & 15;\n        }\n\n        return (-rotation) & 7;\n    },\n    add: (rotationSecond, rotationFirst) => mul[rotationSecond][rotationFirst],\n    sub: (rotationSecond, rotationFirst) => mul[rotationSecond][GroupD8.inv(rotationFirst)],\n\n    /**\n     * Adds 180 degrees to rotation. Commutative operation.\n     *\n     * @memberof GroupD8\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} rotated number\n     */\n    rotate180: (rotation) => rotation ^ 4,\n\n    /**\n     * Direction of main vector can be horizontal, vertical or diagonal.\n     * Some objects work with vertical directions different.\n     *\n     * @memberof GroupD8\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     */\n    isVertical: (rotation) => (rotation & 3) === 2,\n\n    /**\n     * @memberof GroupD8\n     * @param {number} dx - TODO\n     * @param {number} dy - TODO\n     *\n     * @return {number} TODO\n     */\n    byDirection: (dx, dy) => {\n        if (Math.abs(dx) * 2 <= Math.abs(dy)) {\n            if (dy >= 0) {\n                return GroupD8.S;\n            }\n\n            return GroupD8.N;\n        }\n        else if (Math.abs(dy) * 2 <= Math.abs(dx)) {\n            if (dx > 0) {\n                return GroupD8.E;\n            }\n\n            return GroupD8.W;\n        }\n        else if (dy > 0) {\n            if (dx > 0) {\n                return GroupD8.SE;\n            }\n\n            return GroupD8.SW;\n        }\n        else if (dx > 0) {\n            return GroupD8.NE;\n        }\n\n        return GroupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @memberof GroupD8\n     * @param {Matrix} matrix - sprite world matrix\n     * @param {number} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: (matrix, rotation, tx = 0, ty = 0) => {\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        const mat = tempMatrices[GroupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    },\n};\n\nexport default GroupD8;\n","import { Event } from \"../events/Event\";\nimport { DisplayObject } from \"./DisplayObject\";\n// import { devicePixelRatio } from \"../const\";\n/**\n * 此类对于需要在canvas上放置html其他类型元素的时候非常有用<br/>\n * 比如有时候我们需要放置一个注册,登录或者其他的内容.这些内容包含了输入框<br/>\n * 或者下拉框什么的,无法在canvas里实现,但这些元素又跟canvas里面的元素<br/>\n * 位置,大小,缩放对应.就相当于是一个显示对象一样。可以随意设置他的<br/>\n * 属性,那么将你的html元素通过此类封装成显示对象再合适不过了\n * 不能用于容器\n * @class FloatDisplay\n * @extends DisplayObject\n * @public\n * @since 1.0.0\n */\nexport class FloatDisplay extends DisplayObject {\n    /**\n     * 需要封装起来的html元素的引用。你可以通过这个引用来调用或设置此元素自身的属性方法和事件,甚至是样式\n     * @property htmlElement\n     * @public\n     * @since 1.0.0\n     * @type{HtmlElement}\n     */\n    public htmlElement: any = null;\n    /**\n     * 是否已经添加了舞台事件\n     * @property _isAdded\n     * @since 1.0.0\n     * @type {boolean}\n     * @private\n     */\n    private _isAdded: boolean = false;\n\n    /**\n     * 记录是否需要修改位置矩阵\n     */\n    private _transformID: number;\n    /**\n     * 构造函数\n     * @method FloatDisplay\n     * @since 1.0.0\n     * @public\n     * @example\n     *      var floatDisplay = new FloatDisplay();\n     *      floatDisplay.init(document.getElementById('aaa'));\n     *      s.addChild(floatDisplay);\n     *\n     * <p><a href=\"\" target=\"_blank\">测试链接</a></p>\n     * \n     * @example\n     *  //创建悬浮的html元素\n     *  var section = document.createElement('section');\n     *   section.id = \"rule\";\n     *   section.style.overflowX = \"hidden\";\n     *   section.style.overflowY = \"auto\";\n     *   section.style.width = w + \"px\";\n     *   section.style.height = h + \"px\";\n     *   section.style.lineHeight = lh + \"px\";\n     *   section.style.fontFamily = '微软雅黑';\n     *   section.style.fontSize = fs + 'px';\n     *   section.style.color = \"#ffffff\";\n     *   //创建Floatview 把我们要悬浮的元素封装进去\n     *   var rule = new FloatDisplay();\n     *   stage.addChild(rule);\n     *   rule.x = ox;\n     *   rule.y = oy;\n     *   rule.init(this.section);\n     *   section.innerHTML = DataManager.ins.getData(\"ajaxElement\").data.rule;\n     *\n     */\n    public constructor() {\n        super();\n        let s = this;\n        s._instanceType = \"FloatDisplay\";\n        s.addEventListener(Event.REMOVED_FROM_STAGE, function (e: Event) {\n            if (s.htmlElement) {\n                s.htmlElement.style.display = \"none\";\n            }\n        });\n        s.addEventListener(Event.ADDED_TO_STAGE, function (e: Event) {\n            if (s.htmlElement) {\n                let style = s.htmlElement.style;\n                if (!s._isAdded) {\n                    s._isAdded = true;\n                    if (s.stage[\"rootDiv\"]) {\n                        s.stage[\"rootDiv\"].insertBefore(s.htmlElement, s.stage[\"rootDiv\"].childNodes[0]);\n                    }\n                    //没有div直接加在body里吧\n                    else {\n                        document.body.appendChild(s.htmlElement)\n                    }\n                } else {\n                    if (s.htmlElement && s.visible) {\n                        style.display = \"block\";//\"inline-block\"\n                    }\n                }\n            }\n        });\n\n        this._transformID = -1;\n    }\n\n    /**\n     * 初始化方法,htmlElement 一定要设置width和height样式,并且一定要用px单位\n     * @method init\n     * @public\n     * @since 1.0.0\n     * @param {HtmlElement} htmlElement 需要封装起来的html元素的引用。你可以通过这个引用来调用或设置此元素自身的属性方法和事件,甚至是样式\n     */\n    public init(htmlElement: any): void {\n        let s = this;\n        let she: any;\n        if (typeof (htmlElement) == \"string\") {\n            she = document.getElementById(htmlElement);\n        } else if (htmlElement._instanceType == \"Video\") {\n            she = htmlElement.media;\n        } else {\n            she = htmlElement;\n        }\n        //原先有的先移除\n        if (s.htmlElement) s.removeHtmlElement();\n        let style = she.style;\n        style.position = \"absolute\";\n        style.display = \"none\";\n        style.transformOrigin = style.WebkitTransformOrigin = \"0 0 0\";\n        let ws = s.getStyle(she, \"width\");\n        let hs = s.getStyle(she, \"height\");\n        let w = 0, h = 0;\n        if (ws.indexOf(\"px\")) {\n            w = parseInt(ws);\n        }\n        if (hs.indexOf(\"px\")) {\n            h = parseInt(hs);\n        }\n        // s._bounds.width = w;\n        // s._bounds.height = h;\n        s._localBoundsSelf.width = w;\n        s._localBoundsSelf.height = h;\n        s.htmlElement = she;\n        //如果原先在舞台上，加入，是否显示下一帧吧\n        if (s.stage) {\n            s._isAdded = true;\n            if (s.stage[\"rootDiv\"]) {\n                s.stage[\"rootDiv\"].insertBefore(s.htmlElement, s.stage[\"rootDiv\"].childNodes[0]);\n            }\n            //没有div直接加在body里吧\n            else {\n                document.body.appendChild(s.htmlElement)\n            }\n        }\n    }\n\n    /**\n     * @method getStyle\n     * @param {HTMLElement} elem\n     * @param cssName\n     * @return {any}\n     */\n    private getStyle(elem: HTMLElement, cssName: any): any {\n        //如果该属性存在于style[]中，则它最近被设置过(且就是当前的)\n        if (elem.style[cssName]) {\n            return elem.style[cssName];\n        }\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            //它使用传统的\"text-Align\"风格的规则书写方式，而不是\"textAlign\"\n            cssName = cssName.replace(/([A-Z])/g, \"-$1\");\n            cssName = cssName.toLowerCase();\n            //获取style对象并取得属性的值(如果存在的话)\n            let s = document.defaultView.getComputedStyle(elem, \"\");\n            return s && s.getPropertyValue(cssName);\n        }\n        return null;\n    }\n\n    /**\n     * @method updateStyle\n     * @public\n     * @since 1.1.4\n     */\n    private updateStyle(): void {\n        let s = this;\n        let o = s.htmlElement;\n        if (o) {\n            let style = o.style;\n            let visible = s.visible;\n            //还得考虑是否在stage里\n            if (!s.stage) {\n                visible = false\n            }\n            if (visible) {\n                let parent = s.parent;\n                while (parent) {\n                    if (!parent.visible) {\n                        visible = false;\n                        break;\n                    }\n                    parent = parent.parent;\n                }\n            }\n\n            let show = visible ? \"block\" : \"none\";\n            if (show != style.display) {\n                style.display = show;\n            }\n            if (visible) {\n                if (this._transformID != this.transform._worldID) {\n                    this._transformID = this.transform._worldID\n                    let mtx = s.transform.worldMatrix;\n                    let d = s.stage[\"_dpi\"] || s.stage[\"dpi\"]//devicePixelRatio;//不用设备的,改成stage的\n                    style.transform = style.webkitTransform = \"matrix(\" + (mtx.a / d).toFixed(4) + \",\" + (mtx.b / d).toFixed(4) + \",\" + (mtx.c / d).toFixed(4) + \",\" + (mtx.d / d).toFixed(4) + \",\" + (mtx.tx / d).toFixed(4) + \",\" + (mtx.ty / d).toFixed(4) + \")\";\n                }\n                style.opacity = s._worldAlpha;\n            }\n        }\n    }\n    /**\n     * 移除htmlElement\n     */\n    private removeHtmlElement(): void {\n        let s = this;\n        let elem = s.htmlElement;\n        if (elem) {\n            elem.style.display = \"none\";\n            if (elem.parentNode) {\n                elem.parentNode.removeChild(elem);\n            }\n            s._isAdded = false;\n            s.htmlElement = null;\n        }\n    }\n\n    public renderCanvas() {\n        this.updateStyle();\n    }\n    public renderWebGL() {\n        this.updateStyle();\n    }\n\n    public destroy(): void {\n        super.destroy();\n        this.removeHtmlElement();\n    }\n}\n","import { CanvasRenderer } from '../CanvasRenderer';\r\nimport { SHAPES } from '../../const';\r\nimport Graphics from '../../graphics/Graphics';\r\nimport GraphicsData from '../../graphics/GraphicsData';\r\n\r\n/**\r\n * Renderer dedicated to drawing and batching graphics objects.\r\n *\r\n * @class\r\n * @private\r\n */\r\nexport class CanvasGraphicsRenderer {\r\n    renderer: CanvasRenderer;\r\n    /**\r\n     * @param {CanvasRenderer} renderer - The current renderer.\r\n     */\r\n    constructor(renderer: CanvasRenderer) {\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    /**\r\n     * Renders a Graphics object to a canvas.\r\n     *\r\n     * @param {Graphics} graphics - the actual graphics object to render\r\n     */\r\n    render(graphics: Graphics) {\r\n        const renderer = this.renderer;\r\n        const context = renderer.context;\r\n        const _worldAlpha = graphics._worldAlpha;\r\n        const transform = graphics.transform.worldMatrix;\r\n\r\n        context.setTransform(\r\n            transform.a,\r\n            transform.b,\r\n            transform.c,\r\n            transform.d,\r\n            transform.tx,\r\n            transform.ty\r\n        );\r\n        //加混色\r\n        renderer.setBlendMode(graphics.blendMode);\r\n        for (let i = 0; i < graphics.graphicsData.length; i++) {\r\n            const data = graphics.graphicsData[i];\r\n            const shape = data.shape;\r\n\r\n            const fillStyle = data.fillStyle;\r\n            const lineStyle = data.lineStyle;\r\n\r\n            const fillColor = fillStyle.color;\r\n            const lineColor = lineStyle.color;\r\n\r\n            context.lineWidth = lineStyle.width;\r\n\r\n            var ccw = true;\r\n\r\n            if (data.type === SHAPES.POLY) {\r\n                //必须每次清空子路径列表，因为每个data视为独立\r\n                context.beginPath();\r\n                var points = shape.points\r\n                context.moveTo(points[0], points[1]);\r\n                for (let m = 1; m < points.length / 2; ++m) {\r\n                    context.lineTo(points[m * 2], points[(m * 2) + 1]);\r\n                }\r\n                ccw = !judgeCcw(points)\r\n            }\r\n            else if (data.type === SHAPES.RECT) {\r\n                if (data.holes.length) {\r\n                    context.beginPath();\r\n                    context.moveTo(shape.x, shape.y);\r\n                    context.lineTo(shape.x + shape.width, shape.y);\r\n                    context.lineTo(shape.x + shape.width, shape.y + shape.height);\r\n                    context.lineTo(shape.x, shape.y + shape.height);\r\n                    context.lineTo(shape.x, shape.y);\r\n                } else {\r\n                    //简单处理，直接下一个\r\n                    if (fillStyle.visible) {\r\n                        context.globalAlpha = fillStyle.alpha * _worldAlpha;\r\n                        context.fillStyle = `#${(`00000${(fillColor | 0).toString(16)}`).substr(-6)}`;\r\n                        context.fillRect(shape[\"x\"], shape[\"y\"], shape[\"width\"], shape[\"height\"]);\r\n                    }\r\n                    if (lineStyle.visible) {\r\n                        context.globalAlpha = lineStyle.alpha * _worldAlpha;\r\n                        context.strokeStyle = `#${(`00000${(lineColor | 0).toString(16)}`).substr(-6)}`;\r\n                        context.strokeRect(shape[\"x\"], shape[\"y\"], shape[\"width\"], shape[\"height\"]);\r\n                    }\r\n                    continue\r\n                }\r\n            }\r\n            else if (data.type === SHAPES.CIRC) {\r\n                //https://www.w3school.com.cn/tags/canvas_arc.asp\r\n                //默认顺时针 counterclockwise= false\r\n                context.beginPath();\r\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI, false);\r\n            }\r\n            else if (data.type === SHAPES.ELIP) {\r\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\r\n\r\n                const w = shape.width * 2;\r\n                const h = shape.height * 2;\r\n\r\n                const x = shape.x - (w / 2);\r\n                const y = shape.y - (h / 2);\r\n\r\n                context.beginPath();\r\n\r\n                const kappa = 0.5522848;\r\n                const ox = (w / 2) * kappa; // control point offset horizontal\r\n                const oy = (h / 2) * kappa; // control point offset vertical\r\n                const xe = x + w;           // x-end\r\n                const ye = y + h;           // y-end\r\n                const xm = x + (w / 2);       // x-middle\r\n                const ym = y + (h / 2);       // y-middle\r\n\r\n                context.moveTo(x, ym);\r\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\r\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\r\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\r\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\r\n            }\r\n            else if (data.type === SHAPES.RREC) {\r\n                const rx = shape.x;\r\n                const ry = shape.y;\r\n                const width = shape.width;\r\n                const height = shape.height;\r\n                let radius = shape.radius;\r\n\r\n                const maxRadius = Math.min(width, height) / 2 | 0;\r\n\r\n                radius = radius > maxRadius ? maxRadius : radius;\r\n\r\n                context.beginPath();\r\n                context.moveTo(rx, ry + radius);\r\n                context.quadraticCurveTo(rx, ry, rx + radius, ry);\r\n                context.lineTo(rx + width - radius, ry);\r\n                context.quadraticCurveTo(rx + width, ry, rx + width, ry + radius);\r\n                context.lineTo(rx + width, ry + height - radius);\r\n                context.quadraticCurveTo(rx + width, ry + height, rx + width - radius, ry + height);\r\n                context.lineTo(rx + radius, ry + height);\r\n                context.quadraticCurveTo(rx, ry + height, rx, ry + height - radius);\r\n                context.lineTo(rx, ry + radius);\r\n\r\n            }\r\n\r\n            //有洞的话，洞的路径需反向,必须闭合，上面一般图形都是顺时针\r\n            for (let j = 0; j < data.holes.length; j++) {\r\n                holePath(data.holes[j], context, ccw)\r\n            }\r\n\r\n            if (fillStyle.visible) {\r\n                //fill会闭合路径\r\n                context.globalAlpha = fillStyle.alpha * _worldAlpha;\r\n                context.fillStyle = `#${(`00000${(fillColor | 0).toString(16)}`).substr(-6)}`;\r\n                context.fill();\r\n            }\r\n\r\n            if (lineStyle.visible) {\r\n                if (shape.closed) context.closePath();\r\n                context.globalAlpha = lineStyle.alpha * _worldAlpha;\r\n                context.strokeStyle = `#${(`00000${(lineColor | 0).toString(16)}`).substr(-6)}`;\r\n                context.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * destroy graphics object\r\n     *\r\n     */\r\n    destroy() {\r\n        this.renderer = null;\r\n    }\r\n}\r\n\r\n/**\r\n * 画洞\r\n * @param graphicsData \r\n * @param context \r\n * @param ccw 逆时针 \r\n */\r\nexport function holePath(graphicsData: GraphicsData, context: CanvasRenderingContext2D, ccw: boolean = true) {\r\n    var type = graphicsData.type;\r\n    var shape = graphicsData.shape;\r\n    switch (type) {\r\n        case SHAPES.POLY:\r\n            var points = shape.points;\r\n            var hCcw = judgeCcw(points)\r\n            if (ccw == hCcw) {\r\n                context.moveTo(points[0], points[1]);\r\n                for (let m = 1; m < points.length / 2; ++m) {\r\n                    context.lineTo(points[m * 2], points[(m * 2) + 1]);\r\n                }\r\n            } else {\r\n                //反序\r\n                context.moveTo(points[points.length - 2], points[points.length - 1]);\r\n                for (let m = points.length / 2 - 2; m >= 0; --m) {\r\n                    context.lineTo(points[m * 2], points[(m * 2) + 1]);\r\n                }\r\n            }\r\n\r\n            if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\r\n                // context.closePath();\r\n            } else {\r\n                context.closePath();\r\n            }\r\n            break;\r\n        case SHAPES.RECT:\r\n            context.moveTo(shape.x, shape.y);\r\n            if (ccw) {\r\n                context.lineTo(shape.x, shape.y + shape.height);\r\n                context.lineTo(shape.x + shape.width, shape.y + shape.height);\r\n                context.lineTo(shape.x + shape.width, shape.y);\r\n                context.lineTo(shape.x, shape.y);\r\n            } else {\r\n                context.lineTo(shape.x + shape.width, shape.y);\r\n                context.lineTo(shape.x + shape.width, shape.y + shape.height);\r\n                context.lineTo(shape.x, shape.y + shape.height);\r\n                context.lineTo(shape.x, shape.y);\r\n            }\r\n            break;\r\n        case SHAPES.CIRC:\r\n            context.moveTo(shape.x + shape.radius, shape.y);//得先加这个\r\n            context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI, ccw);\r\n            break;\r\n        case SHAPES.ELIP:\r\n            const w = shape.width * 2;\r\n            const h = shape.height * 2;\r\n\r\n            const x = shape.x - (w / 2);\r\n            const y = shape.y - (h / 2);\r\n\r\n            const kappa = 0.5522848;\r\n            const ox = (w / 2) * kappa; // control point offset horizontal\r\n            const oy = (h / 2) * kappa; // control point offset vertical\r\n            const xe = x + w;           // x-end\r\n            const ye = y + h;           // y-end\r\n            const xm = x + (w / 2);       // x-middle\r\n            const ym = y + (h / 2);       // y-middle\r\n\r\n            context.moveTo(x, ym);\r\n            if (ccw) {\r\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, xm, ye);\r\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xe, ym);\r\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xm, y);\r\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, x, ym);\r\n            } else {\r\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\r\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\r\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\r\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\r\n            }\r\n            break;\r\n        case SHAPES.RREC:\r\n            const rx = shape.x;\r\n            const ry = shape.y;\r\n            const width = shape.width;\r\n            const height = shape.height;\r\n            let radius = shape.radius;\r\n            const maxRadius = Math.min(width, height) / 2 | 0;\r\n            radius = radius > maxRadius ? maxRadius : radius;\r\n\r\n            context.moveTo(rx, ry + radius);\r\n            if (ccw) {\r\n                context.lineTo(rx, ry + height - radius);\r\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\r\n                context.lineTo(rx + width - radius, ry + height);\r\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\r\n                context.lineTo(rx + width, ry + radius);\r\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\r\n                context.lineTo(rx + radius, ry);\r\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\r\n            } else {\r\n                context.quadraticCurveTo(rx, ry, rx + radius, ry);\r\n                context.lineTo(rx + width - radius, ry);\r\n                context.quadraticCurveTo(rx + width, ry, rx + width, ry + radius);\r\n                context.lineTo(rx + width, ry + height - radius);\r\n                context.quadraticCurveTo(rx + width, ry + height, rx + width - radius, ry + height);\r\n                context.lineTo(rx + radius, ry + height);\r\n                context.quadraticCurveTo(rx, ry + height, rx, ry + height - radius);\r\n                context.lineTo(rx, ry + radius);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\n/**\r\n * 判断一组点逆时针还是顺时针\r\n * @param points 点的一维序列 \r\n * @returns 返回true说明是逆时针ccw，返回false就是顺时针\r\n */\r\nexport function judgeCcw(points: number[]): boolean {\r\n    var vector = [];\r\n    if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\r\n        // context.closePath();\r\n    }\r\n    for (var i = 0; i < points.length - 2; i += 2) {\r\n        vector.push(points[i + 2] - points[i], points[i + 3] - points[i + 1])\r\n    }\r\n    if (!(points[0] === points[points.length - 2]) || !(points[1] === points[points.length - 1])) {\r\n        //首尾连接\r\n        vector.push(points[0] - points[points.length - 2], points[1] - points[points.length - 1])\r\n    }\r\n\r\n    var sum = 0;\r\n    for (var i = 0; i < vector.length - 2; i += 2) {\r\n        //\"x1*y2-y1*x2\"\r\n        sum = sum + vector[i] * vector[i + 3] - vector[i + 1] * vector[i + 2]\r\n    }\r\n    sum = sum + vector[vector.length - 2] * vector[1] - vector[vector.length - 1] * vector[0];\r\n    //坑爹啊，2D的以左上角为原点，左x正，下y正，取个反\r\n    return !(sum > 0)\r\n}","import { hex2string, hex2rgb } from '../utils';\nimport { RENDERER_TYPE/*, devicePixelRatio*/ } from '../const';\nimport Container from '../display/Container';\nimport { EventDispatcher } from '../events/EventDispatcher';\nimport { DisplayObject } from \"../display/DisplayObject\";\n\n\n/**\n * 渲染器抽象类，用于canvas和webgl\n */\nexport class SystemRenderer extends EventDispatcher {\n    /**\n     * 渲染类型\n     *\n     * @member {number}\n     * @default RENDERER_TYPE.UNKNOWN\n     * @see RENDERER_TYPE\n     */\n    type: RENDERER_TYPE;\n\n    width: number;\n    height: number;\n    /**\n     * 是否透明\n     */\n    transparent: boolean;\n    /**\n     * 背景色，十六进制数值\n     * @member {number}\n     */\n    protected _backgroundColor: number;\n    /**\n     * 背景色，rgba值\n     * @member {number[]}\n     */\n    protected _backgroundColorRgba: number[];\n    /**\n     * 背景色，字符串\n     */\n    protected _backgroundColorString: string;\n    /**\n     * 临时父级对象，用于更新updateTransform\n     */\n    protected _tempDisplayObjectParent: Container;\n    /**\n     * 上一个被渲染的根显示对象\n     */\n    _lastObjectRendered: DisplayObject;\n\n    constructor() {\n        super();\n\n        this.transparent = true;\n\n        this._backgroundColor = 0x000000;\n\n        this._backgroundColorRgba = [0, 0, 0, 0];\n\n        this._backgroundColorString = '#000000';\n\n        this.backgroundColor = this._backgroundColor; // run bg color setter\n\n        this._tempDisplayObjectParent = new Container();\n\n        this._lastObjectRendered = this._tempDisplayObjectParent;\n    }\n\n    /**\n     * 尺寸重置，暂时根据屏幕分辨率\n     * @param {number} screenWidth\n     * @param {number} screenHeight\n     */\n    resize(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n        //下面的不适用了\n        // this.htmlElement.width = width * devicePixelRatio;\n        // this.htmlElement.height = height * devicePixelRatio;\n        // this.htmlElement.style.width = `${width}px`;\n        // this.htmlElement.style.height = `${height}px`;\n    }\n\n    /**\n     * 核心渲染方法，子级重写\n     */\n    render(displayObject, renderTexture?, transform?) {\n\n    }\n\n    /**\n     * 销毁方法\n     */\n    destroy() {\n        this.type = RENDERER_TYPE.UNKNOWN;\n\n        this.transparent = false;\n\n        this._backgroundColor = 0;\n        this._backgroundColorRgba = null;\n        this._backgroundColorString = null;\n\n        this._tempDisplayObjectParent = null;\n        this._lastObjectRendered = null;\n    }\n\n    /**\n     * 背景色，十六进制颜色\n     * @member {number}\n     */\n    get backgroundColor(): number {\n        return this._backgroundColor;\n    }\n\n    /**\n     * 背景色，十六进制颜色\n     */\n    set backgroundColor(value: number) {\n        if (this._backgroundColor === value) return\n        this._backgroundColor = value;\n        this._backgroundColorString = hex2string(value);\n        hex2rgb(value, this._backgroundColorRgba);\n    }\n}\n","import { createCanvas } from \"./tbminiAdapte\";\n\n\nlet result: boolean = null;\n/**\n * 创建带颜色的canvas\n * @ignore\n * @param {string} color - The color to make the canvas\n * @return {canvas} a small canvas element\n */\nfunction createColoredCanvas(color: string): HTMLCanvasElement {\n    const canvas = createCanvas()//document.createElement('canvas');\n    canvas.width = 6;\n    canvas.height = 1;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, 6, 1);\n    return canvas;\n}\n\n/**\n * 检查当前浏览器的canvas是否可用blendMode\n * @return {boolean} 为true表示可用\n */\nexport function canUseNewCanvasBlendModes(): boolean {\n    //检查过了\n    if (result != null) return result;\n    //document都没有\n    if (typeof document === 'undefined') {\n        result = false;\n        return result;\n    }\n\n    const magenta = createColoredCanvas('#ff00ff');\n    const yellow = createColoredCanvas('#ffff00');\n\n    const canvas = createCanvas()//document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    const context = canvas.getContext('2d');\n\n    context.globalCompositeOperation = 'multiply';\n    context.drawImage(magenta, 0, 0);\n    context.drawImage(yellow, 2, 0);\n\n    const imageData = context.getImageData(2, 0, 1, 1);\n\n    if (!imageData) {\n        result = false;\n        return result;\n    }\n\n    const data = imageData.data;\n    result = (data[0] === 255 && data[1] === 0 && data[2] === 0)\n    return result;\n}\n","import { createContext } from './createContext';\r\nimport { createCanvas } from '../2d/utils';\r\n\r\n\r\nconst fragTemplate = [\r\n    'precision mediump float;',\r\n    'void main(void){',\r\n    'float test = 0.1;',\r\n    '%forloop%',\r\n    'gl_FragColor = vec4(0.0);',\r\n    '}',\r\n].join('\\n');\r\n\r\n/**\r\n * 检查最大纹理数是否合法\r\n * @param maxIfs \r\n * @param gl \r\n */\r\nexport function checkMaxIfStatementsInShader(maxIfs:number, gl:WebGLRenderingContext) {\r\n    const createTempContext = !gl;\r\n\r\n    // @if DEBUG\r\n    if (maxIfs === 0) {\r\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\r\n    }\r\n    // @endif\r\n\r\n    if (createTempContext) {\r\n        const tinyCanvas = createCanvas()//document.createElement('canvas');\r\n\r\n        tinyCanvas.width = 1;\r\n        tinyCanvas.height = 1;\r\n\r\n        gl = createContext(tinyCanvas);\r\n    }\r\n\r\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n\r\n    while (true) // eslint-disable-line no-constant-condition\r\n    {\r\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\r\n\r\n        gl.shaderSource(shader, fragmentSrc);\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            maxIfs = (maxIfs / 2) | 0;\r\n        }\r\n        else {\r\n            // valid!\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (createTempContext) {\r\n        // get rid of context\r\n        if (gl.getExtension('WEBGL_lose_context')) {\r\n            gl.getExtension('WEBGL_lose_context').loseContext();\r\n        }\r\n    }\r\n\r\n    return maxIfs;\r\n}\r\n\r\nfunction generateIfTestSrc(maxIfs) {\r\n    let src = '';\r\n\r\n    for (let i = 0; i < maxIfs; ++i) {\r\n        if (i > 0) {\r\n            src += '\\nelse ';\r\n        }\r\n\r\n        if (i < maxIfs - 1) {\r\n            src += `if(test == ${i}.0){}`;\r\n        }\r\n    }\r\n\r\n    return src;\r\n}\r\n","\r\n/**\r\n * Helper class to create a webGL Context\r\n * 创建webgl上下文\r\n * @param canvas {HTMLCanvasElement} the canvas element that we will get the context from\r\n * @param options {Object} An options object that gets passed in to the canvas element containing the context attributes,\r\n *                         see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext for the options available\r\n * @return {WebGLRenderingContext} the WebGL context\r\n */\r\nexport function createContext(canvas: HTMLCanvasElement, options?: any): WebGLRenderingContext {\r\n    var gl = canvas.getContext('webgl', options) ||\r\n        canvas.getContext('experimental-webgl', options);\r\n\r\n    if (!gl) {\r\n        // fail, not able to get a context\r\n        throw new Error('This browser does not support webGL. Try using the canvas renderer');\r\n    }\r\n    //@ts-ignore\r\n    return gl;\r\n};","\r\n/**\r\n * 批处理用buffer数据\r\n */\r\nexport class BatchBuffer {\r\n    /**\r\n     * 顶点数据,类型化数组\r\n     * https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\r\n     */\r\n    vertices: ArrayBuffer;\r\n    /**\r\n     * 顶点的位置信息视图，浮点数\r\n     * View on the vertices as a Float32Array for positions\r\n     */\r\n    float32View: Float32Array;\r\n    /**\r\n     * uv及颜色值的信息视图，整数\r\n     * View on the vertices as a Uint32Array for uvs\r\n     */\r\n    uint32View: Uint32Array;\r\n\r\n    /**\r\n     * positions,uvs,colors暂时不用做单独记录\r\n     */\r\n    positions: any;\r\n    uvs: any;\r\n    colors: any;\r\n    /**\r\n     * @param {number} size - The size of the buffer in bytes.\r\n     */\r\n    constructor(size: number) {\r\n        this.vertices = new ArrayBuffer(size);\r\n\r\n        this.float32View = new Float32Array(this.vertices);\r\n\r\n        this.uint32View = new Uint32Array(this.vertices);\r\n    }\r\n\r\n    /**\r\n     * Destroys the buffer.\r\n     *\r\n     */\r\n    public destroy() {\r\n        this.vertices = null;\r\n        this.positions = null;\r\n        this.uvs = null;\r\n        this.colors = null;\r\n    }\r\n}\r\n","\r\n/**\r\n * Helper class to create a WebGL Texture\r\n * 用于创建WebGL Texture\r\n * @class\r\n * @memberof glCore\r\n * @param gl {WebGLRenderingContext} The current WebGL context\r\n * @param width {number} the width of the texture\r\n * @param height {number} the height of the texture\r\n * @param format {number} the pixel format of the texture. defaults to gl.RGBA\r\n * @param type {number} the gl type of the texture. defaults to gl.UNSIGNED_BYTE\r\n */\r\nexport class GLTexture {\r\n\t/**\r\n\t * 当前上下文\r\n\t * The current WebGL rendering context\r\n\t */\r\n\tgl: WebGLRenderingContext;\r\n\ttexture: WebGLTexture;\r\n\t/**\r\n\t * If mipmapping was used for this texture, enable and disable with enableMipmap()\r\n\t * 是否对纹理进行存储缩小的各种尺寸纹理，比如原图1024*1024，存储512*512，256*256，128*128等一直到1*1;为了纹理的缩放时处理，是取相邻或线性插值\r\n\t */\r\n\tmipmap: boolean;\r\n\t/**\r\n\t * Set to true to enable pre-multiplied alpha\r\n\t * 设置纹理预乘透明值，为true，https://blog.csdn.net/mydreamremindme/article/details/50817294\r\n\t */\r\n\tpremultiplyAlpha;\r\n\t/**\r\n\t * 纹理宽度\r\n\t */\r\n\twidth: number;\r\n\t/**\r\n\t * 纹理高度\r\n\t */\r\n\theight: number;\r\n\t/**\r\n\t * {number} the pixel format of the texture. defaults to gl.RGBA\r\n\t * 纹理格式，默认gl.RGBA  还有gl.RGB\r\n\t */\r\n\tformat: any;\r\n\t/**\r\n\t * {number} the gl type of the texture. defaults to gl.UNSIGNED_BYTE\r\n\t * 纹理类型，默认gl.UNSIGNED_BYTE   //https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/texImage2D\r\n\t */\r\n\ttype: any;\r\n\tconstructor(gl: WebGLRenderingContext, width?: number, height?: number, format?, type?) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.texture = gl.createTexture();\r\n\r\n\t\t// some settings..\r\n\t\tthis.mipmap = false;\r\n\r\n\t\tthis.premultiplyAlpha = false;\r\n\r\n\t\tthis.width = width || -1;\r\n\r\n\t\tthis.height = height || -1;\r\n\r\n\t\t/**\r\n\t\t * The pixel format of the texture. defaults to gl.RGBA\r\n\t\t *\r\n\t\t * @member {Number}\r\n\t\t */\r\n\t\tthis.format = format || gl.RGBA;\r\n\r\n\t\t/**\r\n\t\t * The gl type of the texture. defaults to gl.UNSIGNED_BYTE\r\n\t\t *\r\n\t\t * @member {Number}\r\n\t\t */\r\n\t\tthis.type = type || gl.UNSIGNED_BYTE;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Uploads this texture to the GPU\r\n\t * GPU存储纹理数据\r\n\t * @param source {HTMLImageElement|ImageData|HTMLVideoElement} the source image of the texture\r\n\t */\r\n\tpublic upload(source) {\r\n\r\n\t\tthis.bind();\r\n\r\n\t\tvar gl = this.gl;\r\n\r\n\t\t//设置是否对纹理进行预乘透明通道\r\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\r\n\r\n\t\tvar newWidth = source.videoWidth || source.width;\r\n\t\tvar newHeight = source.videoHeight || source.height;\r\n\r\n\t\tif (newHeight !== this.height || newWidth !== this.width) {\r\n\t\t\t//https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/texImage2D\r\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.format, this.type, source);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D\r\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.format, this.type, source);\r\n\t\t}\r\n\r\n\t\t// if the source is a video, we need to use the videoWidth / videoHeight properties as width / height will be incorrect.\r\n\t\tthis.width = newWidth;\r\n\t\tthis.height = newHeight;\r\n\t};\r\n\r\n\t/**\r\n\t * Use a data source and uploads this texture to the GPU\r\n\t * 数据类型的纹理\r\n\t * @param data {TypedArray} the data to upload to the texture\r\n\t * @param width {number} the new width of the texture\r\n\t * @param height {number} the new height of the texture\r\n\t */\r\n\tpublic uploadData = function (data, width, height) {\r\n\t\tthis.bind();\r\n\r\n\t\tvar gl = this.gl;\r\n\r\n\r\n\t\tif (data instanceof Float32Array) {\r\n\t\t\tif (!FLOATING_POINT_AVAILABLE) {\r\n\t\t\t\tvar ext = gl.getExtension(\"OES_texture_float\");\r\n\r\n\t\t\t\tif (ext) {\r\n\t\t\t\t\tFLOATING_POINT_AVAILABLE = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error('floating point textures not available');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.type = gl.FLOAT;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// TODO support for other types\r\n\t\t\tthis.type = this.type || gl.UNSIGNED_BYTE;\r\n\t\t}\r\n\r\n\t\t// what type of data?\r\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\r\n\r\n\r\n\t\tif (width !== this.width || height !== this.height) {\r\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.format, width, height, 0, this.format, this.type, data || null);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, this.format, this.type, data || null);\r\n\t\t}\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\r\n\t\t//\ttexSubImage2D\r\n\t};\r\n\r\n\t/**\r\n\t * Binds the texture\r\n\t * 绑定纹理，不传location表示不激活额外纹理，绑定的纹理位置与原状态相同\r\n\t * @param  location\r\n\t */\r\n\tpublic bind(location?: number) {\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tif (location !== undefined) {\r\n\t\t\tgl.activeTexture(gl.TEXTURE0 + location);\r\n\t\t}\r\n\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\t};\r\n\r\n\t/**\r\n\t * Unbinds the texture\r\n\t * 解除纹理绑定，解除位置与原状态相同\r\n\t */\r\n\tpublic unbind() {\r\n\t\tvar gl = this.gl;\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\r\n\t};\r\n\r\n\t/**\r\n\t * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\r\n\t * 缩小的纹理像素 按线性插值，还是按钮邻近原则\r\n\t */\r\n\tpublic minFilter(linear: boolean) {\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tthis.bind();\r\n\r\n\t\tif (this.mipmap) {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR_MIPMAP_LINEAR : gl.NEAREST_MIPMAP_NEAREST);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR : gl.NEAREST);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\r\n\t * 放大的纹理像素 按线性插值，还是按钮邻近原则\r\n\t */\r\n\tpublic magFilter(linear: boolean) {\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tthis.bind();\r\n\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linear ? gl.LINEAR : gl.NEAREST);\r\n\t};\r\n\r\n\t/**\r\n\t * Enables mipmapping\r\n\t * 生成缩小的纹理集，只能在图片宽高满足2的指数时使用\r\n\t */\r\n\tpublic enableMipmap() {\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tthis.bind();\r\n\r\n\t\tthis.mipmap = true;\r\n\r\n\t\tgl.generateMipmap(gl.TEXTURE_2D);\r\n\t};\r\n\r\n\t/**\r\n\t * Enables linear filtering\r\n\t * 设置线性\r\n\t */\r\n\tpublic enableLinearScaling() {\r\n\t\tthis.minFilter(true);\r\n\t\tthis.magFilter(true);\r\n\t};\r\n\r\n\t/**\r\n\t * Enables nearest neighbour interpolation\r\n\t * 设置邻近\r\n\t */\r\n\tpublic enableNearestScaling() {\r\n\t\tthis.minFilter(false);\r\n\t\tthis.magFilter(false);\r\n\t};\r\n\r\n\t/**\r\n\t * Enables clamping on the texture so WebGL will not repeat it\r\n\t * 如果纹理不满足2的指数时必设，以边缘像素延申\r\n\t */\r\n\tpublic enableWrapClamp() {\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tthis.bind();\r\n\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t};\r\n\r\n\t/**\r\n\t * Enable tiling on the texture\r\n\t * 允许纹理重复，地砖模式\r\n\t */\r\n\tpublic enableWrapRepeat() {\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tthis.bind();\r\n\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n\t};\r\n\t/**\r\n\t * 镜像形式重复\r\n\t */\r\n\tpublic enableWrapMirrorRepeat() {\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tthis.bind();\r\n\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.MIRRORED_REPEAT);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.MIRRORED_REPEAT);\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Destroys this texture\r\n\t */\r\n\tpublic destroy() {\r\n\t\tvar gl = this.gl;\r\n\t\t//TODO\r\n\t\tgl.deleteTexture(this.texture);\r\n\t};\r\n\r\n\t/**\r\n\t * 从图片数据创建纹理\r\n     * @static\r\n     * @param gl {WebGLRenderingContext} The current WebGL context\r\n     * @param source {HTMLImageElement|ImageData} the source image of the texture\r\n     * @param premultiplyAlpha {Boolean} If we want to use pre-multiplied alpha\r\n     */\r\n\tpublic static fromSource(gl: WebGLRenderingContext, source: HTMLImageElement | ImageData, premultiplyAlpha?: boolean) {\r\n\t\tvar texture: GLTexture = new GLTexture(gl);\r\n\t\ttexture.premultiplyAlpha = premultiplyAlpha || false;\r\n\t\ttexture.upload(source);\r\n\t\treturn texture;\r\n\t};\r\n\r\n\t/**\r\n\t * @static\r\n\t * @param gl {WebGLRenderingContext} The current WebGL context\r\n\t * @param data {TypedArray} the data to upload to the texture\r\n\t * @param width {number} the new width of the texture\r\n\t * @param height {number} the new height of the texture\r\n\t */\r\n\tpublic static fromData(gl, data, width, height) {\r\n\t\t//console.log(data, width, height);\r\n\t\tvar texture = new GLTexture(gl);\r\n\t\ttexture.uploadData(data, width, height);\r\n\r\n\t\treturn texture;\r\n\t};\r\n\r\n}\r\n\r\n\r\n\r\nvar FLOATING_POINT_AVAILABLE = false;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n/**\r\n * 编译着色器程序\r\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\r\n * @param vertexSrc  The vertex shader source as an array of strings.顶点着色器\r\n * @param fragmentSrc  The fragment shader source as an array of strings.片元着色器\r\n * @param attributeLocations {Object} An attribute location map that lets you manually set the attribute locations\r\n * @return {WebGLProgram} the shader program 返回着色器程序\r\n */\r\nexport function compileProgram(gl:WebGLRenderingContext, vertexSrc:string, fragmentSrc:string, attributeLocations?:any):WebGLProgram {\r\n    var glVertShader = compileShader(gl, gl.VERTEX_SHADER, vertexSrc);\r\n    var glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\r\n\r\n    var program = gl.createProgram();\r\n\r\n    gl.attachShader(program, glVertShader);\r\n    gl.attachShader(program, glFragShader);\r\n\r\n    // optionally, set the attributes manually for the program rather than letting WebGL decide..\r\n    if (attributeLocations) {\r\n        for (var i in attributeLocations) {\r\n            gl.bindAttribLocation(program, attributeLocations[i], i);\r\n        }\r\n    }\r\n\r\n\r\n    gl.linkProgram(program);\r\n\r\n    // if linking fails, then log and cleanup\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        console.error('Error: Could not initialize shader.');\r\n        console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\r\n        console.error('gl.getError()', gl.getError());\r\n\r\n        // if there is a program info log, log it\r\n        if (gl.getProgramInfoLog(program) !== '') {\r\n            console.warn('Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\r\n        }\r\n\r\n        gl.deleteProgram(program);\r\n        program = null;\r\n    }\r\n\r\n    // clean up some shaders\r\n    gl.deleteShader(glVertShader);\r\n    gl.deleteShader(glFragShader);\r\n\r\n    return program;\r\n};\r\n\r\n/**\r\n * 创建shader\r\n * @private\r\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\r\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\r\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\r\n * @return {WebGLShader} the shader\r\n */\r\nvar compileShader = function (gl:WebGLRenderingContext, type:number, src:string):WebGLShader {\r\n    var shader = gl.createShader(type);\r\n\r\n    gl.shaderSource(shader, src);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n};\r\n","\r\nimport { mapType } from './mapType';\r\nimport { mapSize } from './mapSize';\r\n\r\n/**\r\n * Extracts the attributes获取attributes属性\r\n * @class\r\n * @memberof glCore.shader\r\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n * @param program {WebGLProgram} The shader program to get the attributes from\r\n * @return attributes {Object}\r\n */\r\nexport function extractAttributes(gl: WebGLRenderingContext, program: WebGLProgram) {\r\n    var attributes = {};\r\n\r\n    //所有激活的ATTRIBUTES\r\n    var totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n\r\n    for (var i = 0; i < totalAttributes; i++) {\r\n        var attribData = gl.getActiveAttrib(program, i);\r\n        var type = mapType(gl, attribData.type);\r\n\r\n        attributes[attribData.name] = {\r\n            type: type,\r\n            size: mapSize(type),\r\n            location: gl.getAttribLocation(program, attribData.name),\r\n            //TODO - make an attribute object\r\n            pointer: function (type = gl.FLOAT, normalized = false, stride = 0, start = 0) {\r\n                // console.log(this.location)\r\n                gl.vertexAttribPointer(this.location, this.size, type, normalized, stride, start);\r\n            }\r\n        };\r\n    }\r\n\r\n    return attributes;\r\n};\r\n","/**\r\n * @class\r\n * @memberof glCore.shader\r\n * @param type {String}\r\n * @return {Number}\r\n */\r\nexport function mapSize(type: string): number {\r\n    return GLSL_TO_SIZE[type];\r\n};\r\n\r\n\r\nvar GLSL_TO_SIZE = {\r\n    'float': 1,\r\n    'vec2': 2,\r\n    'vec3': 3,\r\n    'vec4': 4,\r\n\r\n    'int': 1,\r\n    'ivec2': 2,\r\n    'ivec3': 3,\r\n    'ivec4': 4,\r\n\r\n    'bool': 1,\r\n    'bvec2': 2,\r\n    'bvec3': 3,\r\n    'bvec4': 4,\r\n\r\n    'mat2': 4,\r\n    'mat3': 9,\r\n    'mat4': 16,\r\n\r\n    'sampler2D': 1\r\n};","import { mapType } from './mapType';\r\nimport { defaultValue } from './defaultValue';\r\n/**\r\n * Extracts the uniforms 获取uniforms属性\r\n * @class\r\n * @memberof glCore.shader\r\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n * @param program {WebGLProgram} The shader program to get the uniforms from\r\n * @return uniforms {Object} ，所有uniform的集合\r\n * 每个uniform的格式\r\n * {\r\n *  type: uniform的类型，'float','vec2'等等\r\n *\tsize: uniformData.size,决定uniform赋值用什么方法\r\n *\tlocation: WebGLUniformLocation,uniform变量的存储地址\r\n *\tvalue: 默认值\r\n * }\r\n */\r\nexport function extractUniforms(gl: WebGLRenderingContext, program: WebGLProgram) {\r\n\tvar uniforms = {};\r\n\r\n\tvar totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n\tfor (var i = 0; i < totalUniforms; i++) {\r\n\t\tvar uniformData:WebGLActiveInfo = gl.getActiveUniform(program, i);\r\n\t\tvar name = uniformData.name.replace(/\\[.*?\\]/, \"\");\r\n\t\tvar type = mapType(gl, uniformData.type);\r\n\r\n\t\tuniforms[name] = {\r\n\t\t\ttype: type,\r\n\t\t\tsize: uniformData.size,\r\n\t\t\tlocation: gl.getUniformLocation(program, name),\r\n\t\t\tvalue: defaultValue(type, uniformData.size)\r\n\t\t};\r\n\t}\r\n\r\n\treturn uniforms;\r\n};\r\n\r\n","/**\r\n * 给shader source设置precision\r\n * Sets the float precision on the shader. If the precision is already present this function will do nothing\r\n * @param {string} src       the shader source\r\n * @param {string} precision The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\r\n *\r\n * @return {string} modified shader source\r\n */\r\nexport function setPrecision(src: string, precision: string): string {\r\n    if (src.substring(0, 9) !== 'precision') {\r\n        return 'precision ' + precision + ' float;\\n' + src;\r\n    }\r\n\r\n    return src;\r\n};","/**\r\n * 使uniform能通过赋值直接和着色器程序通信\r\n * @class\r\n * @memberof glCore.shader\r\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n * @param uniforms {Array} @mat ?\r\n * @return attributes {Object}\r\n */\r\nexport function generateUniformAccessObject(gl:WebGLRenderingContext, uniformData) {\r\n    // this is the object we will be sending back.\r\n    // an object hierachy will be created for structs\r\n    var uniforms = { data: {} };\r\n\r\n    uniforms[\"gl\"] = gl;\r\n\r\n    var uniformKeys = Object.keys(uniformData);\r\n\r\n    for (var i = 0; i < uniformKeys.length; i++) {\r\n        var fullName = uniformKeys[i];\r\n\r\n        var nameTokens = fullName.split('.');\r\n        var name = nameTokens[nameTokens.length - 1];\r\n\r\n\r\n        var uniformGroup = getUniformGroup(nameTokens, uniforms);\r\n\r\n        var uniform = uniformData[fullName];\r\n        uniformGroup.data[name] = uniform;\r\n\r\n        uniformGroup.gl = gl;\r\n\r\n        Object.defineProperty(uniformGroup, name, {\r\n            get: generateGetter(name),\r\n            set: generateSetter(name, uniform)\r\n        });\r\n    }\r\n\r\n    return uniforms;\r\n};\r\n\r\nvar generateGetter = function (name) {\r\n    return function () {\r\n        return this.data[name].value;\r\n    };\r\n};\r\n\r\nvar GLSL_SINGLE_SETTERS = {\r\n    float: function setSingleFloat(gl, location, value) { gl.uniform1f(location, value); },\r\n    vec2: function setSingleVec2(gl, location, value) { gl.uniform2f(location, value[0], value[1]); },\r\n    vec3: function setSingleVec3(gl, location, value) { gl.uniform3f(location, value[0], value[1], value[2]); },\r\n    vec4: function setSingleVec4(gl, location, value) { gl.uniform4f(location, value[0], value[1], value[2], value[3]); },\r\n\r\n    int: function setSingleInt(gl, location, value) { gl.uniform1i(location, value); },\r\n    ivec2: function setSingleIvec2(gl, location, value) { gl.uniform2i(location, value[0], value[1]); },\r\n    ivec3: function setSingleIvec3(gl, location, value) { gl.uniform3i(location, value[0], value[1], value[2]); },\r\n    ivec4: function setSingleIvec4(gl, location, value) { gl.uniform4i(location, value[0], value[1], value[2], value[3]); },\r\n\r\n    bool: function setSingleBool(gl, location, value) { gl.uniform1i(location, value); },\r\n    bvec2: function setSingleBvec2(gl, location, value) { gl.uniform2i(location, value[0], value[1]); },\r\n    bvec3: function setSingleBvec3(gl, location, value) { gl.uniform3i(location, value[0], value[1], value[2]); },\r\n    bvec4: function setSingleBvec4(gl, location, value) { gl.uniform4i(location, value[0], value[1], value[2], value[3]); },\r\n\r\n    mat2: function setSingleMat2(gl, location, value) { gl.uniformMatrix2fv(location, false, value); },\r\n    mat3: function setSingleMat3(gl, location, value) { gl.uniformMatrix3fv(location, false, value); },\r\n    mat4: function setSingleMat4(gl, location, value) { gl.uniformMatrix4fv(location, false, value); },\r\n\r\n    sampler2D: function setSingleSampler2D(gl, location, value) { gl.uniform1i(location, value); },\r\n};\r\n\r\nvar GLSL_ARRAY_SETTERS = {\r\n    float: function setFloatArray(gl, location, value) { gl.uniform1fv(location, value); },\r\n    vec2: function setVec2Array(gl, location, value) { gl.uniform2fv(location, value); },\r\n    vec3: function setVec3Array(gl, location, value) { gl.uniform3fv(location, value); },\r\n    vec4: function setVec4Array(gl, location, value) { gl.uniform4fv(location, value); },\r\n    int: function setIntArray(gl, location, value) { gl.uniform1iv(location, value); },\r\n    ivec2: function setIvec2Array(gl, location, value) { gl.uniform2iv(location, value); },\r\n    ivec3: function setIvec3Array(gl, location, value) { gl.uniform3iv(location, value); },\r\n    ivec4: function setIvec4Array(gl, location, value) { gl.uniform4iv(location, value); },\r\n    bool: function setBoolArray(gl, location, value) { gl.uniform1iv(location, value); },\r\n    bvec2: function setBvec2Array(gl, location, value) { gl.uniform2iv(location, value); },\r\n    bvec3: function setBvec3Array(gl, location, value) { gl.uniform3iv(location, value); },\r\n    bvec4: function setBvec4Array(gl, location, value) { gl.uniform4iv(location, value); },\r\n    sampler2D: function setSampler2DArray(gl, location, value) { gl.uniform1iv(location, value); },\r\n//添加矩阵数组\r\n    mat4: function setMat4Array(gl, location, value) { gl.uniformMatrix4fv(location, false, value); },\r\n};\r\n\r\nfunction generateSetter(name, uniform) {\r\n    return function (value) {\r\n        this.data[name].value = value;\r\n        var location = this.data[name].location;\r\n        if (uniform.size === 1) {\r\n            GLSL_SINGLE_SETTERS[uniform.type](this.gl, location, value);\r\n        }\r\n        else {\r\n            // glslSetArray(gl, location, type, value) {\r\n            GLSL_ARRAY_SETTERS[uniform.type](this.gl, location, value);\r\n        }\r\n    };\r\n}\r\n\r\nfunction getUniformGroup(nameTokens, uniform) {\r\n    var cur = uniform;\r\n\r\n    for (var i = 0; i < nameTokens.length - 1; i++) {\r\n        var o = cur[nameTokens[i]] || { data: {} };\r\n        cur[nameTokens[i]] = o;\r\n        cur = o;\r\n    }\r\n\r\n    return cur;\r\n}\r\n\r\n\r\n\r\n","/**\n * \n * {@link http://pixijs.io/pixi-filters/tools/demo/}\n * This namespace contains WebGL-only display filters that can be applied\n * to DisplayObjects using the {@link DisplayObject#filters filters} property.\n * @example\n\n * // Draw a green rectangle\n * const rect = new Graphics()\n *     .beginFill(0x00ff00)\n *     .drawRect(40, 40, 200, 200);\n *\n * // Add a blur filter\n * rect.filters = [new filters.BlurFilter()];\n *\n * 耗性能得很，毕竟要建帧缓存和增加着色器计算负担\n * 1、避免滤镜嵌套\n * 2、修改屏幕分辨率，为了减小画布\n * 3、滤镜范围越大越卡（滤镜宿主需渲染的大小，像素透明度不为0的范围大小）\n * 4、sprite遮罩性能比Graphics差（能用Graphics就用Graphics），暂时只有刮刮卡需要\n * 5、暂时发现BlurFilter性能很差，着色器多次运行处理帧缓存，建议使用新的BlurFilterNew\n * 6、noise在移动端还有点问题，无效果，且变暗\n * 7\n */\nexport { default as Filter } from './Filter';\nexport { default as FXAAFilter } from './fxaa/FXAAFilter';\nexport { default as NoiseFilter } from './noise/NoiseFilter';\nexport { default as DisplacementFilter } from './displacement/DisplacementFilter';\nexport { default as BlurFilter } from './blur/BlurFilter';\nexport { default as BlurXFilter } from './blur/BlurXFilter';\nexport { default as BlurYFilter } from './blur/BlurYFilter';\nexport { default as ColorMatrixFilter } from './colormatrix/ColorMatrixFilter';\nexport { default as AlphaFilter } from './alpha/AlphaFilter';\nexport { default as SpriteMaskFilter } from './spriteMask/SpriteMaskFilter';\n\nexport { default as BlurFilterNew } from './blur/BlurFilterNew';\n\nexport * from './advanced-bloom/AdvancedBloomFilter';\n","import generateBlurVertSource from './generateBlurVertSource';\nimport generateBlurFragSource from './generateBlurFragSource';\nimport getMaxBlurKernelSize from './getMaxBlurKernelSize';\nimport Filter from '../Filter';\n\n/**\n * The BlurXFilter applies a horizontal Gaussian blur to an object.\n *\n * @class\n * @extends Filter\n * @memberof filters\n */\nexport default class BlurXFilter extends Filter {\n    strength: number\n    /**\n     * Sets the strength of both the blur.\n     *\n     * @member {number}\n     * @default 16\n     */\n    get blur() {\n        return this.strength;\n    }\n\n    set blur(value) {\n        this.padding = Math.abs(value) * 2;\n        this.strength = value;\n    }\n\n    private _quality: number\n    private passes: number\n    /**\n    * Sets the quality of the blur by modifying the number of passes. More passes means higher\n    * quaility bluring but the lower the performance.\n    *\n    * @member {number}\n    * @default 4\n    */\n    get quality() {\n        return this._quality;\n    }\n\n    set quality(value) {\n        this._quality = value;\n        this.passes = value;\n    }\n\n    private firstRun:boolean\n    /**\n     * @param {number} strength - The strength of the blur filter.\n     * @param {number} quality - The quality of the blur filter.\n     * @param {number} resolution - The resolution of the blur filter.\n     * @param {number} [kernelSize=5] - The kernelSize of the blur filter.Options: 5, 7, 9, 11, 13, 15.\n     */\n    constructor(strength?: number, quality?: number, resolution?: number, kernelSize?: number) {\n        kernelSize = kernelSize || 5;\n        const vertSrc = generateBlurVertSource(kernelSize, true);\n        const fragSrc = generateBlurFragSource(kernelSize);\n\n        super(\n            // vertex shader\n            vertSrc,\n            // fragment shader\n            fragSrc\n        );\n\n        this.resolution = resolution || 1;\n\n        this._quality = 0;\n\n        this.quality = quality || 4;\n        this.strength = strength || 8;\n\n        this.firstRun = true;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {FilterManager} filterManager - The manager.\n     * @param {RenderTarget} input - The input target.\n     * @param {RenderTarget} output - The output target.\n     * @param {boolean} clear - Should the output be cleared before rendering?\n     */\n    apply(filterManager, input, output, clear) {\n        if (this.firstRun) {\n            const gl = filterManager.renderer.gl;\n            const kernelSize = getMaxBlurKernelSize(gl);\n\n            this.vertexSrc = generateBlurVertSource(kernelSize, true);\n            this.fragmentSrc = generateBlurFragSource(kernelSize);\n\n            this.firstRun = false;\n        }\n\n        this.uniforms.strength = (1 / output.size.width) * (output.size.width / input.size.width);\n\n        // screen space!\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes;// / this.passes//Math.pow(1, this.passes);\n\n        if (this.passes === 1) {\n            filterManager.applyFilter(this, input, output, clear);\n        }\n        else {\n            const renderTarget = filterManager.getRenderTarget(true);\n            let flip = input;\n            let flop = renderTarget;\n\n            for (let i = 0; i < this.passes - 1; i++) {\n                filterManager.applyFilter(this, flip, flop, true);\n\n                const temp = flop;\n\n                flop = flip;\n                flip = temp;\n            }\n\n            filterManager.applyFilter(this, flip, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    }\n\n}\n","const vertTemplate = [\n    'attribute vec2 aVertexPosition;',\n    'attribute vec2 aTextureCoord;',\n\n    'uniform float strength;',\n    'uniform mat3 projectionMatrix;',\n\n    'varying vec2 vBlurTexCoords[%size%];',\n\n    'void main(void)',\n    '{',\n    'gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);',\n    '%blur%',\n    '}',\n].join('\\n');\n\nexport default function generateVertBlurSource(kernelSize, x) {\n    const halfLength = Math.ceil(kernelSize / 2);\n\n    let vertSource = vertTemplate;\n\n    let blurLoop = '';\n    let template;\n    // let value;\n\n    if (x) {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(%sampleIndex% * strength, 0.0);';\n    }\n    else {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(0.0, %sampleIndex% * strength);';\n    }\n\n    for (let i = 0; i < kernelSize; i++) {\n        let blur = template.replace('%index%', i);\n\n        // value = i;\n\n        // if(i >= halfLength)\n        // {\n        //     value = kernelSize - i - 1;\n        // }\n\n        blur = blur.replace('%sampleIndex%', `${i - (halfLength - 1)}.0`);\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    vertSource = vertSource.replace('%blur%', blurLoop);\n    vertSource = vertSource.replace('%size%', kernelSize);\n\n    return vertSource;\n}\n","const GAUSSIAN_VALUES = {\n    5: [0.153388, 0.221461, 0.250301],\n    7: [0.071303, 0.131514, 0.189879, 0.214607],\n    9: [0.028532, 0.067234, 0.124009, 0.179044, 0.20236],\n    11: [0.0093, 0.028002, 0.065984, 0.121703, 0.175713, 0.198596],\n    13: [0.002406, 0.009255, 0.027867, 0.065666, 0.121117, 0.174868, 0.197641],\n    15: [0.000489, 0.002403, 0.009246, 0.02784, 0.065602, 0.120999, 0.174697, 0.197448],\n};\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'varying vec2 vBlurTexCoords[%size%];',\n    'uniform sampler2D uSampler;',\n\n    'void main(void)',\n    '{',\n    '    gl_FragColor = vec4(0.0);',\n    '    %blur%',\n    '}',\n\n].join('\\n');\n\nexport default function generateFragBlurSource(kernelSize) {\n    const kernel = GAUSSIAN_VALUES[kernelSize];\n    const halfLength = kernel.length;\n\n    let fragSource = fragTemplate;\n\n    let blurLoop = '';\n    const template = 'gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;';\n    let value;\n\n    for (let i = 0; i < kernelSize; i++) {\n        let blur = template.replace('%index%', i + \"\");\n\n        value = i;\n\n        if (i >= halfLength) {\n            value = kernelSize - i - 1;\n        }\n\n        blur = blur.replace('%value%', kernel[value]);\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    fragSource = fragSource.replace('%blur%', blurLoop);\n    fragSource = fragSource.replace('%size%', kernelSize);\n\n    return fragSource;\n}\n","export default function getMaxBlurKernelSize(gl) {\n    const maxVaryings = (gl.getParameter(gl.MAX_VARYING_VECTORS));\n    let kernelSize = 15;\n\n    while (kernelSize > maxVaryings) {\n        kernelSize -= 2;\n    }\n\n    return kernelSize;\n}\n","\nimport generateBlurVertSource from './generateBlurVertSource';\nimport generateBlurFragSource from './generateBlurFragSource';\nimport getMaxBlurKernelSize from './getMaxBlurKernelSize';\nimport Filter from '../Filter';\nimport FilterManager from '../../renderers/managers/FilterManager';\n\n/**\n * The BlurYFilter applies a horizontal Gaussian blur to an object.\n *\n * @class\n * @extends Filter\n * @memberof filters\n */\nexport default class BlurYFilter extends Filter {\n    strength: number;\n    /**\n     * Sets the strength of both the blur.\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this.strength;\n    }\n\n    set blur(value) {\n        this.padding = Math.abs(value) * 2;\n        this.strength = value;\n    }\n\n    private _quality: number;\n    private passes: number;\n    /**\n     * Sets the quality of the blur by modifying the number of passes. More passes means higher\n     * quaility bluring but the lower the performance.\n     *\n     * @member {number}\n     * @default 4\n     */\n    get quality() {\n        return this._quality;\n    }\n\n    set quality(value) {\n        this._quality = value;\n        this.passes = value;\n    }\n\n    private firstRun: boolean\n    /**\n     * @param {number} strength - The strength of the blur filter.\n     * @param {number} quality - The quality of the blur filter.\n     * @param {number} resolution - The resolution of the blur filter.\n     * @param {number} [kernelSize=5] - The kernelSize of the blur filter.Options: 5, 7, 9, 11, 13, 15.\n     */\n    constructor(strength?, quality?, resolution?, kernelSize?) {\n        kernelSize = kernelSize || 5;\n        const vertSrc = generateBlurVertSource(kernelSize, false);\n        const fragSrc = generateBlurFragSource(kernelSize);\n\n        super(\n            // vertex shader\n            vertSrc,\n            // fragment shader\n            fragSrc\n        );\n\n        this.resolution = resolution || 1;\n\n        this._quality = 0;\n\n        this.quality = quality || 4;\n        this.strength = strength || 8;\n\n        this.firstRun = true;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {FilterManager} filterManager - The manager.\n     * @param {RenderTarget} input - The input target.\n     * @param {RenderTarget} output - The output target.\n     * @param {boolean} clear - Should the output be cleared before rendering?\n     */\n    apply(filterManager: FilterManager, input, output, clear) {\n        if (this.firstRun) {\n            const gl = filterManager.renderer.gl;\n            const kernelSize = getMaxBlurKernelSize(gl);\n\n            this.vertexSrc = generateBlurVertSource(kernelSize, false);\n            this.fragmentSrc = generateBlurFragSource(kernelSize);\n\n            this.firstRun = false;\n        }\n\n        this.uniforms.strength = (1 / output.size.height) * (output.size.height / input.size.height);\n\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes;\n\n        if (this.passes === 1) {\n            filterManager.applyFilter(this, input, output, clear);\n        }\n        else {\n            const renderTarget = filterManager.getRenderTarget(true);\n            let flip = input;\n            let flop = renderTarget;\n\n            for (let i = 0; i < this.passes - 1; i++) {\n                filterManager.applyFilter(this, flip, flop, true);\n\n                const temp = flop;\n\n                flop = flip;\n                flip = temp;\n            }\n\n            filterManager.applyFilter(this, flip, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    }\n}\n","import { Matrix } from \"../math\";\nimport Texture from \"./Texture\";\n\nconst tempMat = new Matrix();\n\n/**\n * Class controls uv transform and frame clamp for texture\n * Can be used in Texture \"transform\" field, or separately, you can use different clamp settings on the same texture.\n * If you want to add support for texture region of certain feature or filter, that's what you're looking for.\n *\n * @see Texture\n * @see mesh.Mesh\n * @see extras.TilingSprite\n * @class\n */\nexport default class TextureMatrix {\n    _texture: Texture;\n    mapCoord: Matrix;\n    uClampFrame: Float32Array;\n    uClampOffset: Float32Array;\n    _lastTextureID: number;\n    /**\n     * Changes frame clamping\n     * Works with TilingSprite and Mesh\n     * Change to 1.5 if you texture has repeated right and bottom lines, that leads to smoother borders\n     *\n     * @default 0\n     * @member {number}\n     */\n    clampOffset: number;\n    /**\n     * Changes frame clamping\n     * Works with TilingSprite and Mesh\n     * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n     *\n     * @default 0.5\n     * @member {number}\n     */\n    clampMargin: number;\n    /**\n     *\n     * @param {Texture} texture observed texture\n     * @param {number} [clampMargin] Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n     * @constructor\n     */\n    constructor(texture: Texture, clampMargin: number = 0.5) {\n        this._texture = texture;\n\n        this.mapCoord = new Matrix();\n\n        this.uClampFrame = new Float32Array(4);\n\n        this.uClampOffset = new Float32Array(2);\n\n        this._lastTextureID = -1;\n\n        this.clampOffset = 0;\n\n        this.clampMargin = clampMargin;\n    }\n\n    /**\n     * texture property\n     * @member {Texture}\n     */\n    get texture() {\n        return this._texture;\n    }\n\n    set texture(value) {\n        this._texture = value;\n        this._lastTextureID = -1;\n    }\n\n    /**\n     * Multiplies uvs array to transform\n     * @param {Float32Array} uvs mesh uvs\n     * @param {Float32Array} [out=uvs] output\n     * @returns {Float32Array} output\n     */\n    multiplyUvs(uvs, out?) {\n        if (out === undefined) {\n            out = uvs;\n        }\n\n        const mat = this.mapCoord;\n\n        for (let i = 0; i < uvs.length; i += 2) {\n            const x = uvs[i];\n            const y = uvs[i + 1];\n\n            out[i] = (x * mat.a) + (y * mat.c) + mat.tx;\n            out[i + 1] = (x * mat.b) + (y * mat.d) + mat.ty;\n        }\n\n        return out;\n    }\n\n    /**\n     * updates matrices if texture was changed\n     * @param {boolean} forceUpdate if true, matrices will be updated any case\n     * @returns {boolean} whether or not it was updated\n     */\n    update(forceUpdate?: boolean) {\n        const tex = this._texture;\n\n        if (!tex || !tex.valid) {\n            return false;\n        }\n\n        if (!forceUpdate\n            && this._lastTextureID === tex._updateID) {\n            return false;\n        }\n\n        this._lastTextureID = tex._updateID;\n\n        const uvs = tex._uvs;\n\n        this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n\n        const orig = tex.orig;\n        const trim = tex.trim;\n\n        if (trim) {\n            tempMat.set(orig.width / trim.width, 0, 0, orig.height / trim.height,\n                -trim.x / trim.width, -trim.y / trim.height);\n            this.mapCoord.append(tempMat);\n        }\n\n        const texBase = tex.baseTexture;\n        const frame = this.uClampFrame;\n        const margin = this.clampMargin;\n        const offset = this.clampOffset;\n\n        frame[0] = (tex._frame.x + margin + offset) / texBase.width;\n        frame[1] = (tex._frame.y + margin + offset) / texBase.height;\n        frame[2] = (tex._frame.x + tex._frame.width - margin + offset) / texBase.width;\n        frame[3] = (tex._frame.y + tex._frame.height - margin + offset) / texBase.height;\n        this.uClampOffset[0] = offset / texBase.width;\n        this.uClampOffset[1] = offset / texBase.height;\n\n        return true;\n    }\n}\n","\r\n\r\nimport GraphicsData from './GraphicsData';\r\nimport RenderTexture from \"../texture/RenderTexture\";\r\nimport { Matrix, Point, Rectangle } from '../math';\r\nimport { RoundedRectangle, Ellipse, Polygon, Circle } from \"./shapes\"\r\nimport { sign, string2hex, hex2rgb } from '../utils';\r\nimport { SHAPES, PI_2, SCALE_MODES, WRAP_MODES, BLEND_MODES } from '../const';\r\nimport { DisplayObject } from '../display/DisplayObject';\r\nimport Texture from '../texture/Texture';\r\nimport { CanvasRenderer } from '../renderers/CanvasRenderer';\r\nimport { Event } from \"../events/Event\"\r\nimport { WebglRenderer } from '../renderers/WebglRenderer';\r\nimport buildPoly from './geomBuild/buildPoly';\r\nimport buildCircle from './geomBuild/buildCircle';\r\nimport buildRectangle from './geomBuild/buildRectangle';\r\nimport buildRoundedRectangle from './geomBuild/buildRoundedRectangle';\r\nimport buildLine from './geomBuild/buildLine';\r\nimport FillStyle from './styles/FillStyle';\r\nimport LineStyle from './styles/LineStyle';\r\nimport { GRAPHICS_CURVES, quadraticCurveLength, bezierCurveLength, bezierCurveTo } from './utils';\r\nimport Container from '../display/Container';\r\nlet canvasRenderer: CanvasRenderer;\r\nconst tempMatrix = new Matrix();\r\nconst tempPoint = new Point();\r\nconst tempColor1 = new Float32Array(4);\r\nconst tempColor2 = new Float32Array(4);\r\n\r\n//公用颜色rgb\r\nconst temp = new Float32Array(3);\r\n//geoBatchPart对象池\r\nconst GEOBATCH_POOL: geoBatchPart[] = [];\r\n\r\n//分割三角指令托管\r\nconst fillCommands = {};\r\nfillCommands[SHAPES.POLY] = buildPoly;\r\nfillCommands[SHAPES.CIRC] = buildCircle;\r\nfillCommands[SHAPES.ELIP] = buildCircle;\r\nfillCommands[SHAPES.RECT] = buildRectangle;\r\nfillCommands[SHAPES.RREC] = buildRoundedRectangle;\r\n\r\n/**\r\n * @class Graphics\r\n * 不继承container，不然缓存时太麻烦了\r\n * 自身matrix无效，暂时不用\r\n * style的纹理matrix无效，暂时不用\r\n */\r\nexport default class Graphics extends Container {\r\n    /**\r\n     * 混色模式\r\n     * @default BLEND_MODES.NORMAL\r\n     */\r\n    _blendMode: BLEND_MODES = BLEND_MODES.NORMAL;\r\n    //以后修改，估计需要标记，用来修改batch，否则可能无效\r\n    get blendMode(): BLEND_MODES {\r\n        return this._blendMode\r\n    }\r\n    /**\r\n     * 很多效果暂时无效，再查原因，先不能设置吧\r\n     */\r\n    set blendMode(value: BLEND_MODES) {\r\n        // if (value != this._blendMode) this._blendMode = value\r\n    }\r\n    /**\r\n     * 当前的填充样式\r\n     * @member {FillStyle}\r\n     */\r\n    private _fillStyle: FillStyle;\r\n    /**\r\n     * 当前的画线样式\r\n     * @member {LineStyle}\r\n     */\r\n    private _lineStyle: LineStyle;\r\n    /**\r\n     * @member {FillStyle}\r\n     * @readonly\r\n     */\r\n    get fill() {\r\n        return this._fillStyle;\r\n    }\r\n\r\n    /**\r\n     * @member {LineStyle}\r\n     * @readonly\r\n     */\r\n    get line() {\r\n        return this._lineStyle;\r\n    }\r\n    /**\r\n     * 图形默认色调\r\n     * 默认白色，不会有任何影响\r\n     * @member {number}\r\n     * @default 0xFFFFFF\r\n     */\r\n    private _tint: number\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n    set tint(value) {\r\n        this._tint = value;\r\n    }\r\n    /**\r\n     * 判断是否更新色值\r\n     */\r\n    private batchTint = -1;\r\n\r\n    /**\r\n     * 当前图形应用的矩阵，一般用不着\r\n     *\r\n     * @member {Matrix}\r\n     */\r\n    private _matrix;\r\n    get matrix() {\r\n        return this._matrix;\r\n    }\r\n    set matrix(matrix: Matrix) {\r\n        //暂时不用\r\n        // this._matrix = matrix;\r\n    }\r\n\r\n    public hitTestByPixel: boolean = true;\r\n    /**\r\n     * 当前是否是画洞\r\n     * @member {boolean}\r\n     * @default false\r\n     * @protected\r\n     */\r\n    private _holeMode: boolean;\r\n\r\n    /**\r\n     * Current path\r\n     * 只用于画多边形时用\r\n     * @member {Polygon}\r\n     */\r\n    private _currentPath: Polygon;\r\n\r\n    /**\r\n     * 图形数据，为了一个Graphics里能绘制多个\r\n     * @member {GraphicsData[]}\r\n     */\r\n    graphicsData: GraphicsData[];\r\n\r\n    /**\r\n     * 是否用作mask\r\n     * @member {boolean}\r\n     */\r\n    isUsedToMask: boolean;\r\n    /**\r\n     * The bounds' padding used for bounds calculation.\r\n     * @member {number}\r\n     */\r\n    boundsPadding: number;\r\n    /**\r\n     * Used to detect if the graphics object has changed. If this is set to true then the graphics\r\n     * object will be recalculated.\r\n     * 通过比对确定是否该刷新\r\n     * @member {boolean}\r\n     * @private\r\n     */\r\n    private dirty: number;\r\n    /**\r\n     * 与dirty对比是否重算bounds\r\n     * Used to detect if we we need to recalculate local bounds\r\n     * @type {Number}\r\n     */\r\n    private boundsDirty: number;\r\n\r\n    /**\r\n     * canvas必用缓存\r\n     * renderCanvas默认用缓存,也就canvas上使用，如果经常需要重绘，设置为false\r\n     * webgl上用贴图占用GPU空间太大，用其他方法实现,贴图是白图就一张，用几何方法实现\r\n     * @name cacheAsBitmap\r\n     * @member {boolean}\r\n     * @memberof Graphics#\r\n     * @default false\r\n     */\r\n    cacheAsBitmap: boolean = true;\r\n    /**\r\n     * 需与dirty一致\r\n     */\r\n    private cacheDirty: number;\r\n    private _canvasBuffer: RenderTexture;\r\n    //缓存的贴图\r\n    _texture: Texture;\r\n    //如果用缓存绘图，必须考虑偏移量；\r\n    offsetX: number;\r\n    offsetY: number;\r\n\r\n    //webgl专用数据\r\n    verts;\r\n    indices;\r\n    private batches;\r\n    private geoBatches: geoBatchPart[];\r\n    private batchDirty;\r\n    private uvs;\r\n    private vertexData;\r\n    private shapeIndex;//为了在不clear情况下继续画，不用重复计算前面的batch\r\n    private _transformID;\r\n    constructor() {\r\n        super();\r\n        this._instanceType = \"Graphics\"\r\n        this._fillStyle = new FillStyle();\r\n        this._lineStyle = new LineStyle();\r\n        this.tint = 0xFFFFFF;\r\n        this.batchTint = -1;\r\n        this._matrix = null;\r\n        this._holeMode = false;\r\n        this._currentPath = null;\r\n\r\n        this.graphicsData = [];\r\n        this.isUsedToMask = false;\r\n        this.boundsPadding = 0;\r\n        this.dirty = 0;\r\n        this.boundsDirty = -1;\r\n        this.cacheDirty = -1;\r\n\r\n\r\n        this.verts = [];\r\n        this.indices = []\r\n        this.batches = [];\r\n        this.geoBatches = [];\r\n        this.uvs = [];\r\n        this.batchDirty = -1;\r\n        this.shapeIndex = 0;\r\n\r\n        this.vertexData = null;\r\n        this._transformID = -1;\r\n    }\r\n\r\n    /**\r\n     * 克隆该Graphics的几何绘制，不包括它自身的transform\r\n     * @return {Graphics} A clone of the graphics object\r\n     */\r\n    clone(): Graphics {\r\n        const clone = new Graphics();\r\n\r\n        clone.renderable = this.renderable;\r\n        clone._fillStyle = this._fillStyle;\r\n        clone._lineStyle = this._lineStyle;\r\n\r\n        clone.isUsedToMask = this.isUsedToMask;\r\n        clone.boundsPadding = this.boundsPadding;\r\n        clone.dirty = 0;\r\n\r\n        // copy graphics data\r\n        for (let i = 0; i < this.graphicsData.length; ++i) {\r\n            clone.graphicsData.push(this.graphicsData[i].clone());\r\n        }\r\n\r\n        //考虑当前路径是否置空\r\n        clone._currentPath = null;\r\n        // clone._currentPath = clone.graphicsData[clone.graphicsData.length - 1];\r\n\r\n        clone.updateLocalBoundsSelf();\r\n\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * line属于附属属性，暂不写beginStroke，只要没调用过beginFill就是纯stroke\r\n     * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\r\n     * method or the drawCircle() method.\r\n     * @param {number} [lineWidth=0] - width of the line to draw, will update the objects stored style\r\n     * @param {number} [color=0] - color of the line to draw, will update the objects stored style\r\n     * @param {number} [alpha=1] - alpha of the line to draw, will update the objects stored style\r\n     * @param {number} [alignment=0.5] - alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    lineStyle(\r\n        lineWidth: number = 0,\r\n        color: number = 0,\r\n        alpha: number = 1,\r\n        alignment: number = 0.5,\r\n        native: boolean = false\r\n    ): Graphics {\r\n\r\n        this.lineTextureStyle(lineWidth, Texture.WHITE, color, alpha, null, alignment, native);\r\n\r\n        return this;\r\n    }\r\n    lineTextureStyle(\r\n        width = 0,\r\n        texture = Texture.WHITE,\r\n        color = 0xFFFFFF,\r\n        alpha = 1,\r\n        matrix = null,\r\n        alignment = 0.5,\r\n        native = false\r\n    ) {\r\n        if (this._currentPath) this.startPoly();\r\n\r\n        const visible = width > 0 && alpha > 0;\r\n\r\n        if (!visible) {\r\n            this._lineStyle.reset();\r\n        }\r\n        else {\r\n            if (matrix) {\r\n                matrix = matrix.clone();\r\n                matrix.invert();\r\n            }\r\n            this._lineStyle.color = color;\r\n            this._lineStyle.width = width;\r\n            this._lineStyle.alpha = alpha;\r\n            this._lineStyle.matrix = matrix;\r\n            this._lineStyle.texture = texture;\r\n            this._lineStyle.alignment = alignment;\r\n            this._lineStyle.native = native;\r\n            this._lineStyle.visible = visible;\r\n            // Object.assign(this._lineStyle, {\r\n            //     color,\r\n            //     width,\r\n            //     alpha,\r\n            //     matrix,\r\n            //     texture,\r\n            //     alignment,\r\n            //     native,\r\n            //     visible,\r\n            // });\r\n        }\r\n        return this;\r\n    }\r\n    private startPoly() {\r\n        if (this._currentPath) {\r\n            const points = this._currentPath.points;\r\n            const len = this._currentPath.points.length;\r\n            if (len > 2) {\r\n                this.drawShape(this._currentPath);\r\n                this._currentPath = new Polygon();\r\n                this._currentPath.closed = false;\r\n                this._currentPath.points.push(points[len - 2], points[len - 1]);\r\n            }\r\n        }\r\n        else {\r\n            this._currentPath = new Polygon();\r\n            this._currentPath.closed = false;\r\n        }\r\n    }\r\n    private finishPoly() {\r\n        if (this._currentPath) {\r\n            if (this._currentPath.points.length > 2) {\r\n                this.drawShape(this._currentPath);\r\n                this._currentPath = null;\r\n            }\r\n            else {\r\n                this._currentPath.points.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    moveTo(x: number, y: number): Graphics {\r\n        this.startPoly();\r\n        this._currentPath.points[0] = x;\r\n        this._currentPath.points[1] = y;\r\n        return this;\r\n    }\r\n\r\n\r\n    lineTo(x: number, y: number): Graphics {\r\n        if (!this._currentPath) this.moveTo(0, 0);\r\n\r\n        // remove duplicates..\r\n        const points = this._currentPath.points;\r\n        const fromX = points[points.length - 2];\r\n        const fromY = points[points.length - 1];\r\n\r\n        if (fromX !== x || fromY !== y) {\r\n            points.push(x, y);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * 初始化曲线\r\n     * @param x \r\n     * @param y \r\n     */\r\n    private _initCurve(x = 0, y = 0) {\r\n        if (this._currentPath) {\r\n            if (this._currentPath.points.length === 0) {\r\n                this._currentPath.points = [x, y];\r\n            }\r\n        }\r\n        else {\r\n            this.moveTo(x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculate the points for a quadratic bezier curve and then draws it.\r\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\r\n     *\r\n     * @param {number} cpX - Control point x\r\n     * @param {number} cpY - Control point y\r\n     * @param {number} toX - Destination point x\r\n     * @param {number} toY - Destination point y\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    quadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): Graphics {\r\n        this._initCurve();\r\n\r\n        const points = this._currentPath.points;\r\n\r\n        if (points.length === 0) {\r\n            this.moveTo(0, 0);\r\n        }\r\n        let xa = 0;\r\n        let ya = 0;\r\n\r\n        const fromX = points[points.length - 2];\r\n        const fromY = points[points.length - 1];\r\n        const n = GRAPHICS_CURVES.segmentsCount(quadraticCurveLength(fromX, fromY, cpX, cpY, toX, toY))\r\n\r\n\r\n        for (let i = 1; i <= n; ++i) {\r\n            const j = i / n;\r\n\r\n            xa = fromX + ((cpX - fromX) * j);\r\n            ya = fromY + ((cpY - fromY) * j);\r\n\r\n            points.push(xa + (((cpX + ((toX - cpX) * j)) - xa) * j),\r\n                ya + (((cpY + ((toY - cpY) * j)) - ya) * j));\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculate the points for a bezier curve and then draws it.\r\n     *\r\n     * @param {number} cpX - Control point x\r\n     * @param {number} cpY - Control point y\r\n     * @param {number} cpX2 - Second Control point x\r\n     * @param {number} cpY2 - Second Control point y\r\n     * @param {number} toX - Destination point x\r\n     * @param {number} toY - Destination point y\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    bezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): Graphics {\r\n        this._initCurve();\r\n\r\n        const points = this._currentPath.points;\r\n\r\n        const fromX = points[points.length - 2];\r\n        const fromY = points[points.length - 1];\r\n\r\n        points.length -= 2;\r\n\r\n        const n = GRAPHICS_CURVES.segmentsCount(bezierCurveLength(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY))\r\n\r\n\r\n        bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, n, points);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\r\n     *\r\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\r\n     *\r\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\r\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\r\n     * @param {number} x2 - The x-coordinate of the end of the arc\r\n     * @param {number} y2 - The y-coordinate of the end of the arc\r\n     * @param {number} radius - The radius of the arc\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): Graphics {\r\n        this._initCurve(x1, y1);\r\n\r\n        const points = this._currentPath.points\r\n        const fromX = points[points.length - 2];\r\n        const fromY = points[points.length - 1];\r\n        const a1 = fromY - y1;\r\n        const b1 = fromX - x1;\r\n        const a2 = y2 - y1;\r\n        const b2 = x2 - x1;\r\n        const mm = Math.abs((a1 * b2) - (b1 * a2));\r\n\r\n        if (mm < 1.0e-8 || radius === 0) {\r\n            if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\r\n                points.push(x1, y1);\r\n            }\r\n        }\r\n        else {\r\n            const dd = (a1 * a1) + (b1 * b1);\r\n            const cc = (a2 * a2) + (b2 * b2);\r\n            const tt = (a1 * a2) + (b1 * b2);\r\n            const k1 = radius * Math.sqrt(dd) / mm;\r\n            const k2 = radius * Math.sqrt(cc) / mm;\r\n            const j1 = k1 * tt / dd;\r\n            const j2 = k2 * tt / cc;\r\n            const cx = (k1 * b2) + (k2 * b1);\r\n            const cy = (k1 * a2) + (k2 * a1);\r\n            const px = b1 * (k2 + j1);\r\n            const py = a1 * (k2 + j1);\r\n            const qx = b2 * (k1 + j2);\r\n            const qy = a2 * (k1 + j2);\r\n            const startAngle = Math.atan2(py - cy, px - cx);\r\n            const endAngle = Math.atan2(qy - cy, qx - cx);\r\n\r\n            this.arc(cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\r\n     *\r\n     * @param {number} cx - The x-coordinate of the center of the circle\r\n     * @param {number} cy - The y-coordinate of the center of the circle\r\n     * @param {number} radius - The radius of the circle\r\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\r\n     *  of the arc's circle)\r\n     * @param {number} endAngle - The ending angle, in radians\r\n     * @param {boolean} [anticlockwise=false] - Specifies whether the drawing should be\r\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\r\n     *  indicates counter-clockwise.\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    arc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): Graphics {\r\n        if (startAngle === endAngle) {\r\n            return this;\r\n        }\r\n\r\n        if (!anticlockwise && endAngle <= startAngle) {\r\n            endAngle += PI_2;\r\n        }\r\n        else if (anticlockwise && startAngle <= endAngle) {\r\n            startAngle += PI_2;\r\n        }\r\n\r\n        const sweep = endAngle - startAngle;\r\n\r\n        if (sweep === 0) {\r\n            return this;\r\n        }\r\n\r\n        const startX = cx + (Math.cos(startAngle) * radius);\r\n        const startY = cy + (Math.sin(startAngle) * radius);\r\n\r\n        // If the _currentPath exists, take its points. Otherwise call `moveTo` to start a path.\r\n        let points = this._currentPath ? this._currentPath.points : null;\r\n\r\n        if (points) {\r\n            // We check how far our start is from the last existing point\r\n            const xDiff = Math.abs(points[points.length - 2] - startX);\r\n            const yDiff = Math.abs(points[points.length - 1] - startY);\r\n\r\n            if (xDiff < 0.001 && yDiff < 0.001) {\r\n                // If the point is very close, we don't add it, since this would lead to artifacts\r\n                // during tesselation due to floating point imprecision.\r\n            }\r\n            else {\r\n                points.push(startX, startY);\r\n            }\r\n        }\r\n        else {\r\n            this.moveTo(startX, startY);\r\n            points = this._currentPath.points;\r\n        }\r\n\r\n        const segs = GRAPHICS_CURVES.segmentsCount(\r\n            Math.abs(sweep) * radius,\r\n            Math.ceil(Math.abs(sweep) / PI_2) * 40\r\n        );\r\n\r\n\r\n        const theta = sweep / (segs * 2);\r\n        const theta2 = theta * 2;\r\n\r\n        const cTheta = Math.cos(theta);\r\n        const sTheta = Math.sin(theta);\r\n\r\n        const segMinus = segs - 1;\r\n\r\n        const remainder = (segMinus % 1) / segMinus;\r\n\r\n        for (let i = 0; i <= segMinus; ++i) {\r\n            const real = i + (remainder * i);\r\n\r\n            const angle = ((theta) + startAngle + (theta2 * real));\r\n\r\n            const c = Math.cos(angle);\r\n            const s = -Math.sin(angle);\r\n\r\n            points.push(\r\n                (((cTheta * c) + (sTheta * s)) * radius) + cx,\r\n                (((cTheta * -s) + (sTheta * c)) * radius) + cy\r\n            );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies a simple one-color fill that subsequent calls to other Graphics methods\r\n     * (such as lineTo() or drawCircle()) use when drawing.\r\n     *\r\n     * @param {number | string} [color=0] - the color of the fill 十六进制颜色0xffffff\r\n     * @param {number} [alpha=1] - the alpha of the fill\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    beginFill(color: number | string = 0, alpha: number = 1): Graphics {\r\n        //颜色做个兼容吧\r\n        if (typeof (color) == \"string\") color = string2hex(color)\r\n\r\n        return this.beginTextureFill(Texture.WHITE, color, alpha);\r\n    }\r\n\r\n    beginTextureFill(texture = Texture.WHITE, color = 0xFFFFFF, alpha = 1, matrix: Matrix = null) {\r\n        if (this._currentPath) this.startPoly();\r\n\r\n        const visible = alpha > 0;\r\n        if (!visible) {\r\n            this._fillStyle.reset();\r\n            //需要额外加参数\r\n            this._fillStyle.alphaBlock = true;\r\n        }\r\n        else {\r\n            if (matrix) {\r\n                //暂时不用\r\n                // matrix = matrix.clone();\r\n                // matrix.invert();\r\n            }\r\n            this._fillStyle.color = color;\r\n            this._fillStyle.alpha = alpha;\r\n            this._fillStyle.texture = texture;\r\n            this._fillStyle.matrix = matrix;\r\n            this._fillStyle.visible = visible;\r\n            // Object.assign(this._fillStyle, {\r\n            //     color,\r\n            //     alpha,\r\n            //     texture,\r\n            //     matrix,\r\n            //     visible,\r\n            // });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\r\n     *\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    endFill(): Graphics {\r\n        this.finishPoly();\r\n        this._fillStyle.reset();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 先加上吧\r\n     */\r\n    endStroke(): Graphics {\r\n        this.finishPoly();\r\n        this._lineStyle.reset();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Closes the current path.\r\n     * 只用在多边形的路径里\r\n     * @return {Graphics} Returns itself.\r\n     */\r\n    closePath(): Graphics {\r\n        //如果下个可能要画洞，先闭合之前的路径\r\n        const _currentPath = this._currentPath;\r\n        if (this._currentPath) _currentPath.close();\r\n        return this;\r\n    }\r\n    /**\r\n     * 开始画洞\r\n     */\r\n    beginHole() {\r\n        this.finishPoly();\r\n        this._holeMode = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * 结束画洞\r\n     */\r\n    endHole() {\r\n        this.finishPoly();\r\n        this._holeMode = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 画矩形\r\n     * @param {number} x - The X coord of the top-left of the rectangle\r\n     * @param {number} y - The Y coord of the top-left of the rectangle\r\n     * @param {number} width - The width of the rectangle\r\n     * @param {number} height - The height of the rectangle\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    drawRect(x: number, y: number, width: number, height: number): Graphics {\r\n        return this.drawShape(new Rectangle(x, y, width, height));\r\n    }\r\n\r\n    /**\r\n     * 画圆角矩形\r\n     * @param {number} x - The X coord of the top-left of the rectangle\r\n     * @param {number} y - The Y coord of the top-left of the rectangle\r\n     * @param {number} width - The width of the rectangle\r\n     * @param {number} height - The height of the rectangle\r\n     * @param {number} radius - Radius of the rectangle corners\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    drawRoundedRect(x: number, y: number, width: number, height: number, radius: number): Graphics {\r\n        return this.drawShape(new RoundedRectangle(x, y, width, height, radius));\r\n    }\r\n\r\n    /**\r\n     * 画圆形\r\n     * @param {number} x - The X coordinate of the center of the circle\r\n     * @param {number} y - The Y coordinate of the center of the circle\r\n     * @param {number} radius - The radius of the circle\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    drawCircle(x: number, y: number, radius: number): Graphics {\r\n        return this.drawShape(new Circle(x, y, radius));\r\n    }\r\n\r\n    /**\r\n     * 画椭圆\r\n     * @param {number} x - The X coordinate of the center of the ellipse\r\n     * @param {number} y - The Y coordinate of the center of the ellipse\r\n     * @param {number} width - The half width of the ellipse\r\n     * @param {number} height - The half height of the ellipse\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    drawEllipse(x: number, y: number, width: number, height: number): Graphics {\r\n        return this.drawShape(new Ellipse(x, y, width, height));\r\n    }\r\n\r\n    /**\r\n     * 画多边形\r\n     * @param {number[]|Point[]|Polygon} path - The path data used to construct the polygon.\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    drawPolygon(path: number[] | Point[] | Polygon): Graphics {\r\n        // prevents an argument assignment deopt\r\n        // see section 3.1: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\r\n        let points = path;\r\n\r\n        let closed = true;\r\n\r\n        if (points instanceof Polygon) {\r\n            closed = points.closed;\r\n            points = points.points;\r\n        }\r\n\r\n        if (!Array.isArray(points)) {\r\n            // prevents an argument leak deopt\r\n            // see section 3.2: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\r\n            points = new Array(arguments.length);\r\n\r\n            for (let i = 0; i < points.length; ++i) {\r\n                points[i] = arguments[i]; // eslint-disable-line prefer-rest-params\r\n            }\r\n        }\r\n\r\n        const shape = new Polygon(points);\r\n\r\n        shape.closed = closed;\r\n\r\n        this.drawShape(shape);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 画任意多角形。points为数量\r\n     * @param {number} x - Center X position of the star\r\n     * @param {number} y - Center Y position of the star\r\n     * @param {number} points - The number of points of the star, must be > 1\r\n     * @param {number} radius - The outer radius of the star\r\n     * @param {number} [innerRadius] - The inner radius between points, default half `radius`\r\n     * @param {number} [rotation=0] - The rotation of the star in radians, where 0 is vertical\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    drawStar(\r\n        x: number,\r\n        y: number,\r\n        points: number,\r\n        radius: number,\r\n        innerRadius: number,\r\n        rotation: number = 0\r\n    ): Graphics {\r\n        innerRadius = innerRadius || radius / 2;\r\n\r\n        const startAngle = (-1 * Math.PI / 2) + rotation;\r\n        const len = points * 2;\r\n        const delta = PI_2 / len;\r\n        const polygon = [];\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            const r = i % 2 ? innerRadius : radius;\r\n            const angle = (i * delta) + startAngle;\r\n\r\n            polygon.push(\r\n                x + (r * Math.cos(angle)),\r\n                y + (r * Math.sin(angle))\r\n            );\r\n        }\r\n\r\n        return this.drawPolygon(polygon);\r\n    }\r\n\r\n    /**\r\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\r\n     *\r\n     * @param {Circle|Ellipse|Polygon|Rectangle|RoundedRectangle} shape - The shape object to draw.\r\n     * @return {Graphics} \r\n     */\r\n    private drawShape(shape: Circle | Ellipse | Polygon | Rectangle | RoundedRectangle): Graphics {\r\n        if (!this._holeMode) {\r\n            const data = new GraphicsData(\r\n                shape,\r\n                this._fillStyle.clone(),\r\n                this._lineStyle.clone(),\r\n                this._matrix\r\n            );\r\n            this.graphicsData.push(data);\r\n            this.dirty++;\r\n        }\r\n        else {\r\n            if (!this.graphicsData.length) return this;\r\n            const data = new GraphicsData(shape, null, null, this._matrix);\r\n            const lastShape = this.graphicsData[this.graphicsData.length - 1];\r\n            lastShape.holes.push(data);\r\n            this.dirty++;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\r\n     *\r\n     * @return {Graphics} This Graphics object. Good for chaining method calls\r\n     */\r\n    clear(): Graphics {\r\n        if (this.graphicsData.length > 0) {\r\n            this.boundsDirty = -1;\r\n            this.dirty++;\r\n            this.graphicsData.length = 0;\r\n\r\n            this.verts.length = 0;\r\n            this.uvs.length = 0;\r\n            this.indices.length = 0;\r\n            this.shapeIndex = 0;\r\n            for (let i = 0; i < this.geoBatches.length; i++) {\r\n                const batch = this.geoBatches[i];\r\n                batch.start = 0;\r\n                batch.attribStart = 0;\r\n                batch.style = null;\r\n                GEOBATCH_POOL.push(batch);\r\n            }\r\n            this.geoBatches.length = 0;\r\n\r\n            //清空\r\n            this.batches.length = 0;\r\n        }\r\n\r\n        this._currentPath = null;\r\n        this._matrix = null;\r\n        this._holeMode = false;\r\n        this._currentPath = null;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 暂时不用\r\n     * @returns {boolean} True if only 1 rect.\r\n     */\r\n    isFastRect(): boolean {\r\n        // return this.graphicsData.length === 1\r\n        //     && this.graphicsData[0].shape.type === SHAPES.RECT\r\n        //     && !this.graphicsData[0].lineWidth;\r\n        return false\r\n    }\r\n\r\n    _renderWebGL(renderer: WebglRenderer) {\r\n        //以防没有end，\r\n        this.finishPoly();\r\n        //更新批\r\n        this.updateBatch()\r\n        renderer.batchManager.setObjectRenderer(renderer.plugins[\"batch\"]);\r\n        //有才计算\r\n        if (this.batches.length) {\r\n            this.calculateVertices();\r\n            this.calculateTints();\r\n            for (let i = 0; i < this.batches.length; i++) {\r\n                const batch = this.batches[i];\r\n                //_worldAlpha可能会变\r\n                batch._worldAlpha = this._worldAlpha * batch.graAlpha;\r\n                renderer.plugins[\"batch\"].render(batch);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据GraphicsData分出batch，主要根据透明度和颜色\r\n     * _texture  里面有.BaseTexture\r\n     * _vertexData  \r\n     * _indices \r\n     * graAlpha 图形透明度自身计算需要\r\n     * _worldAlpha \r\n     * _batchRGB  图形颜色自身计算需要\r\n     * _tintRGB\r\n     * _uvs\r\n     */\r\n    private updateBatch() {\r\n        if (this.batchDirty === this.dirty) return\r\n        if (this.graphicsData.length === 0) return;\r\n        this.batchDirty = this.dirty;\r\n\r\n        const uvs = this.uvs;\r\n        //取最后一个\r\n        let batchPart: geoBatchPart;\r\n        batchPart = this.geoBatches.pop();\r\n        if (!batchPart) {\r\n            batchPart = GEOBATCH_POOL.pop() || new geoBatchPart();\r\n            batchPart.style = batchPart.style ||\r\n                this.graphicsData[0].fillStyle ||\r\n                this.graphicsData[0].lineStyle;\r\n        }\r\n        let currentTexture = batchPart.style.texture.baseTexture;\r\n        let currentColor = batchPart.style.color + batchPart.style.alpha;\r\n        this.geoBatches.push(batchPart);\r\n        //先更新geoBatches\r\n        //基本可能只有一个，多个时加\r\n        for (var i = this.shapeIndex; i < this.graphicsData.length; i++) {\r\n            this.shapeIndex++\r\n            const data = this.graphicsData[i];\r\n            const command = fillCommands[data.type];\r\n\r\n            const fillStyle = data.fillStyle;\r\n            const lineStyle = data.lineStyle;\r\n            //初始化 data里的points,fill和stroke一样的\r\n            command.build(data);\r\n            //有矩阵先转换点\r\n            if (data.matrix) this.transformPoints(data.points, data.matrix);\r\n\r\n            for (let j = 0; j < 2; j++) {\r\n                const style = (j === 0) ? fillStyle : lineStyle;\r\n                if (!style.visible) continue;\r\n                const nextTexture = style.texture.baseTexture;\r\n\r\n                if (currentTexture !== nextTexture || (style.color + style.alpha) !== currentColor) {\r\n                    nextTexture.wrapMode = WRAP_MODES.REPEAT;\r\n                    currentTexture = nextTexture;\r\n                    currentColor = style.color + style.alpha;\r\n\r\n                    const index = this.indices.length;\r\n                    const attribIndex = this.verts.length / 2;\r\n                    batchPart.size = index - batchPart.start;\r\n                    batchPart.attribSize = attribIndex - batchPart.attribStart;\r\n\r\n                    if (batchPart.size > 0) {\r\n                        batchPart = GEOBATCH_POOL.pop() || new geoBatchPart();\r\n                        this.geoBatches.push(batchPart);\r\n                    }\r\n                    batchPart.style = style;\r\n                    batchPart.start = index;\r\n                    batchPart.attribStart = attribIndex;\r\n                }\r\n                const start = this.verts.length / 2;\r\n                if (j === 0) {\r\n                    //处理verts和indices\r\n                    if (data.holes.length) {\r\n                        this.proccessHoles(data.holes);\r\n                        buildPoly.triangulate(data, this);\r\n                    }\r\n                    else {\r\n                        command.triangulate(data, this);\r\n                    }\r\n                } else {\r\n                    buildLine(data, this);\r\n                }\r\n\r\n                const size = (this.verts.length / 2) - start;\r\n                this.addUvs(this.verts, uvs, style.texture, start, size, style.matrix);\r\n            }\r\n        }\r\n        const index = this.indices.length;\r\n        const attrib = this.verts.length / 2;\r\n\r\n        batchPart.size = index - batchPart.start;\r\n        batchPart.attribSize = attrib - batchPart.attribStart;\r\n        let indicesUint16 = new Uint16Array(this.indices);\r\n        let uvsFloat32 = new Float32Array(this.uvs);\r\n        // offset the indices so that it works with the batcher...\r\n        for (let i = 0; i < this.geoBatches.length; i++) {\r\n            const batch = this.geoBatches[i];\r\n            for (let j = 0; j < batch.size; j++) {\r\n                const index = batch.start + j;\r\n                indicesUint16[index] = indicesUint16[index] - batch.attribStart;\r\n            }\r\n        }\r\n\r\n        //设置_transformID，确保计算顶点数据\r\n        this._transformID = -1;\r\n        //确保颜色值要更新\r\n        this.batchTint = -1;\r\n        //更新batches\r\n        this.batches = [];\r\n        this.vertexData = new Float32Array(this.verts);\r\n\r\n        const blendMode = this.blendMode;\r\n\r\n        for (let i = 0; i < this.geoBatches.length; i++) {\r\n            const gI = this.geoBatches[i];\r\n            const color = gI.style.color;\r\n            const vertexData = new Float32Array(this.vertexData.buffer,\r\n                gI.attribStart * 4 * 2,\r\n                gI.attribSize * 2);\r\n            const uvs = new Float32Array(uvsFloat32.buffer,\r\n                gI.attribStart * 4 * 2,\r\n                gI.attribSize * 2);\r\n            const indices = new Uint16Array(indicesUint16.buffer,\r\n                gI.start * 2,\r\n                gI.size);\r\n\r\n            const batch = {\r\n                _vertexData: vertexData,\r\n                _indices: indices,\r\n                _uvs: uvs,\r\n                _tintRGB: color,//还未计算\r\n                _texture: gI.style.texture,\r\n                _worldAlpha: 1, //还未计算\r\n                _blendMode: blendMode,\r\n                graAlpha: gI.style.alpha,//用于计算透明度\r\n                _batchRGB: hex2rgb(color),//用于计算_tintRGB\r\n            };\r\n            this.batches[i] = batch;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对每个batch计算颜色\r\n     * @protected\r\n     */\r\n    private calculateTints() {\r\n        if (this.batchTint !== this.tint) {\r\n            this.batchTint = this.tint;\r\n            const tintRGB = hex2rgb(this.tint, temp);\r\n            for (let i = 0; i < this.batches.length; i++) {\r\n                const batch = this.batches[i];\r\n                const batchTint = batch._batchRGB;\r\n                const r = (tintRGB[0] * batchTint[0]) * 255;\r\n                const g = (tintRGB[1] * batchTint[1]) * 255;\r\n                const b = (tintRGB[2] * batchTint[2]) * 255;\r\n                // TODO Ivan, can this be done in one go?\r\n                const color = (r << 16) + (g << 8) + (b | 0);\r\n\r\n                batch._tintRGB = (color >> 16)\r\n                    + (color & 0xff00)\r\n                    + ((color & 0xff) << 16);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * If there's a transform update or a change to the shape of the\r\n     * geometry, recaculate the vertices.\r\n     * @protected\r\n     */\r\n    private calculateVertices() {\r\n        if (this._transformID === this.transform._worldID) {\r\n            return;\r\n        }\r\n\r\n        this._transformID = this.transform._worldID;\r\n\r\n        const wt = this.transform.worldMatrix;\r\n        const a = wt.a;\r\n        const b = wt.b;\r\n        const c = wt.c;\r\n        const d = wt.d;\r\n        const tx = wt.tx;\r\n        const ty = wt.ty;\r\n\r\n        const data = this.verts;// batch.vertexDataOriginal;\r\n        const vertexData = this.vertexData;\r\n\r\n        let count = 0;\r\n\r\n        for (let i = 0; i < data.length; i += 2) {\r\n            const x = data[i];\r\n            const y = data[i + 1];\r\n            vertexData[count++] = (a * x) + (c * y) + tx;\r\n            vertexData[count++] = (d * y) + (b * x) + ty;\r\n        }\r\n    }\r\n\r\n    private transformPoints(points, matrix) {\r\n        for (let i = 0; i < points.length / 2; i++) {\r\n            const x = points[(i * 2)];\r\n            const y = points[(i * 2) + 1];\r\n\r\n            points[(i * 2)] = (matrix.a * x) + (matrix.c * y) + matrix.tx;\r\n            points[(i * 2) + 1] = (matrix.b * x) + (matrix.d * y) + matrix.ty;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * canvas渲染\r\n     * @private\r\n     * @param {CanvasRenderer} renderer - The renderer\r\n     */\r\n    _renderCanvas(renderer/*: CanvasRenderer*/) {\r\n        //以防没有end，\r\n        this.finishPoly();\r\n        if (this.cacheAsBitmap) {\r\n            if (this.cacheDirty != this.dirty) {\r\n                this.cacheDirty = this.dirty;\r\n                //如果在生成贴图时需要去掉遮罩和缓存属性\r\n                var tempMask = this.mask;\r\n                this.mask = null;\r\n                this.cacheAsBitmap = false;\r\n                var tempAlpha = this.alpha;\r\n                this.alpha = 1;\r\n                var tempChildren = this.children //待测试，预存子级\r\n                this.children = [];//置空子级，防止离屏canvas绘制\r\n                this.generateCanvasTexture();\r\n                //恢复\r\n                this.mask = tempMask;\r\n                this.alpha = tempAlpha;\r\n                this.cacheAsBitmap = true;\r\n                this.children = tempChildren;//待测试，还原原先子级\r\n                // if (this.parent) {\r\n                //generateCanvasTexture里用canvasRenderer渲染会修改世界矩阵，保证自己能根据父级矩阵更新回来\r\n                this.transform._parentID = -1;\r\n                //     this.updateTransform();\r\n                // }\r\n            }\r\n            //普通画图的渲染，提供图片和图形的插件，先判断_anchorTexture，offsetX,0\r\n            renderer.plugins.sprite.render(this);\r\n        } else {\r\n            renderer.plugins.graphics.render(this);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * _boundsId不知道怎么改，暂时不管，少用\r\n     * 计算全局bounds，_localBoundsSelf做个全局转换就行\r\n     * @private\r\n     */\r\n    _calculateBounds() {\r\n        this.updateLocalBoundsSelf();\r\n        const rect = this._localBoundsSelf;\r\n        var matrix = this.transform.worldMatrix;\r\n        matrix.transformPoint(rect.x, rect.y, DisplayObject._p1);\r\n        matrix.transformPoint(rect.x + rect.width, rect.y, DisplayObject._p2);\r\n        matrix.transformPoint(rect.x + rect.width, rect.y + rect.height, DisplayObject._p3);\r\n        matrix.transformPoint(rect.x, rect.y + rect.height, DisplayObject._p4);\r\n        Rectangle.createFromPoints(this._bounds, DisplayObject._p1, DisplayObject._p2, DisplayObject._p3, DisplayObject._p4);\r\n    }\r\n\r\n    /**\r\n     * 碰撞检测方法重写\r\n     * @param {Point} point - the point to test\r\n     */\r\n    hitTestPoint(point: Point, isMouseEvent: boolean = false): DisplayObject {\r\n        //不可见，直接返回\r\n        if (!this.visible) return null;\r\n        let hitDisplayObject;\r\n        //先检查子级，因为子级层级更高\r\n        hitDisplayObject = super.hitTestPoint(point, isMouseEvent);\r\n        //子级已有，返回\r\n        if (hitDisplayObject) return hitDisplayObject;\r\n        //子级没有的话，为了可以不updateLocalBoundsSelf，判断一下\r\n        if (isMouseEvent && !this.mouseEnable) return null;\r\n        //再粗略检查自己，先计算自身盒子\r\n        this.updateLocalBoundsSelf();\r\n        hitDisplayObject = this.displayObjectHitTestPoint(point, isMouseEvent);\r\n        //如果\r\n        if (hitDisplayObject) {\r\n            //不需要像素级检测直接返回\r\n            if (!this.hitTestByPixel) return hitDisplayObject;\r\n            //精确检测\r\n            return this.hitTestPointAccuratly(point, isMouseEvent)\r\n        }\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * 精确检测\r\n     * 用几何方法\r\n     * 不像shape里用的像素值\r\n     * @param point \r\n     */\r\n    private hitTestPointAccuratly(point: Point, isMouseEvent) {\r\n        let s = this;\r\n        if (isMouseEvent) {\r\n            this.worldMatrix.transformPointInverse(point.x, point.y, tempPoint);\r\n        } else {\r\n            tempPoint.set(point.x, point.y);\r\n        }\r\n        const graphicsData = this.graphicsData;\r\n        for (let i = 0; i < graphicsData.length; ++i) {\r\n            const data = graphicsData[i];\r\n            if (!data.fillStyle.visible && !data.fillStyle.alphaBlock) continue;\r\n            // only deal with fills..\r\n            if (data.shape) {\r\n                if (data.shape.isPointIn(tempPoint)) {\r\n                    if (data.holes) {\r\n                        for (let i = 0; i < data.holes.length; i++) {\r\n                            const hole = data.holes[i].shape;\r\n                            if (hole.isPointIn(tempPoint)) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                    }\r\n                    return s;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 更新自身包围盒\r\n     */\r\n    updateLocalBoundsSelf() {\r\n        if (this.boundsDirty == this.dirty) return;\r\n        this.boundsDirty = this.dirty;\r\n        let minX = Infinity;\r\n        let maxX = -Infinity;\r\n\r\n        let minY = Infinity;\r\n        let maxY = -Infinity;\r\n\r\n        if (this.graphicsData.length) {\r\n            let shape;\r\n            let x = 0;\r\n            let y = 0;\r\n            let w = 0;\r\n            let h = 0;\r\n\r\n            for (let i = 0; i < this.graphicsData.length; i++) {\r\n                const data = this.graphicsData[i];\r\n                const type = data.type;\r\n                const lineStyle = data.lineStyle;\r\n                //矩阵的应该暂时没写，暂时不用\r\n                const nextMatrix = data.matrix || Matrix.IDENTITY;\r\n                let lineWidth = 0.0;\r\n                if (lineStyle && lineStyle.visible) {\r\n                    const alignment = lineStyle.alignment;\r\n                    lineWidth = lineStyle.width;\r\n                    if (type === SHAPES.POLY) {\r\n                        lineWidth = lineWidth * (0.5 + Math.abs(0.5 - alignment));\r\n                    }\r\n                    else {\r\n                        lineWidth = lineWidth * Math.max(0, alignment);\r\n                    }\r\n                }\r\n\r\n                shape = data.shape;\r\n\r\n                if (type === SHAPES.RECT || type === SHAPES.RREC) {\r\n                    x = shape.x - (lineWidth / 2);\r\n                    y = shape.y - (lineWidth / 2);\r\n                    w = shape.width + lineWidth;\r\n                    h = shape.height + lineWidth;\r\n\r\n                    minX = x < minX ? x : minX;\r\n                    maxX = x + w > maxX ? x + w : maxX;\r\n\r\n                    minY = y < minY ? y : minY;\r\n                    maxY = y + h > maxY ? y + h : maxY;\r\n                }\r\n                else if (type === SHAPES.CIRC) {\r\n                    x = shape.x;\r\n                    y = shape.y;\r\n                    w = shape.radius + (lineWidth / 2);\r\n                    h = shape.radius + (lineWidth / 2);\r\n\r\n                    minX = x - w < minX ? x - w : minX;\r\n                    maxX = x + w > maxX ? x + w : maxX;\r\n\r\n                    minY = y - h < minY ? y - h : minY;\r\n                    maxY = y + h > maxY ? y + h : maxY;\r\n                }\r\n                else if (type === SHAPES.ELIP) {\r\n                    x = shape.x;\r\n                    y = shape.y;\r\n                    w = shape.width + (lineWidth / 2);\r\n                    h = shape.height + (lineWidth / 2);\r\n\r\n                    minX = x - w < minX ? x - w : minX;\r\n                    maxX = x + w > maxX ? x + w : maxX;\r\n\r\n                    minY = y - h < minY ? y - h : minY;\r\n                    maxY = y + h > maxY ? y + h : maxY;\r\n                }\r\n                else {\r\n                    // POLY\r\n                    const points = shape.points;\r\n                    let x2 = 0;\r\n                    let y2 = 0;\r\n                    let dx = 0;\r\n                    let dy = 0;\r\n                    let rw = 0;\r\n                    let rh = 0;\r\n                    let cx = 0;\r\n                    let cy = 0;\r\n\r\n                    for (let j = 0; j + 2 < points.length; j += 2) {\r\n                        x = points[j];\r\n                        y = points[j + 1];\r\n                        x2 = points[j + 2];\r\n                        y2 = points[j + 3];\r\n                        dx = Math.abs(x2 - x);\r\n                        dy = Math.abs(y2 - y);\r\n                        h = lineWidth;\r\n                        w = Math.sqrt((dx * dx) + (dy * dy));\r\n\r\n                        if (w < 1e-9) {\r\n                            continue;\r\n                        }\r\n\r\n                        rw = ((h / w * dy) + dx) / 2;\r\n                        rh = ((h / w * dx) + dy) / 2;\r\n                        cx = (x2 + x) / 2;\r\n                        cy = (y2 + y) / 2;\r\n\r\n                        minX = cx - rw < minX ? cx - rw : minX;\r\n                        maxX = cx + rw > maxX ? cx + rw : maxX;\r\n\r\n                        minY = cy - rh < minY ? cy - rh : minY;\r\n                        maxY = cy + rh > maxY ? cy + rh : maxY;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            minX = 0;\r\n            maxX = 0;\r\n            minY = 0;\r\n            maxY = 0;\r\n        }\r\n\r\n        const padding = this.boundsPadding;\r\n\r\n        this._localBoundsSelf.x = minX - padding;\r\n        this._localBoundsSelf.y = minY - padding;\r\n        this._localBoundsSelf.width = maxX - minX + padding * 2;\r\n        this._localBoundsSelf.height = maxY - minY + padding * 2;\r\n    }\r\n\r\n    /**\r\n     * Generates a canvas texture.\r\n     * 不包括变形的，只根据图形数据产生的原生贴图，经过变形的，考虑，是否新建方法，这个暂时只为canvas缓存\r\n     * 也不考虑遮罩\r\n     * @param {number} scaleMode - The scale mode of the texture.\r\n     * @param {number} resolution - The resolution of the texture.\r\n     * @return {Texture} The new texture.\r\n     */\r\n    private generateCanvasTexture(scaleMode: number = SCALE_MODES.LINEAR): Texture {\r\n        this.updateLocalBoundsSelf();\r\n\r\n        const bounds = this._localBoundsSelf;\r\n        if (!this._canvasBuffer) {\r\n            this._canvasBuffer = RenderTexture.create(bounds.width, bounds.height, scaleMode);\r\n        } else {\r\n            this._canvasBuffer.resize(bounds.width, bounds.height)\r\n        }\r\n        if (!canvasRenderer) {\r\n            canvasRenderer = new CanvasRenderer(null, 0, 0);\r\n        }\r\n\r\n        this.transform.updateLocalMatrix();\r\n        tempMatrix.copy(this.transform.localMatrix);\r\n\r\n        tempMatrix.invert();\r\n        tempMatrix.tx -= bounds.x;\r\n        tempMatrix.ty -= bounds.y;\r\n\r\n        canvasRenderer.render(this, this._canvasBuffer, tempMatrix);\r\n        // document.body.appendChild(this._canvasBuffer.baseTexture[\"_canvasRenderTarget\"].canvas)\r\n        if (!this._texture) {\r\n            this._texture = Texture.fromCanvas(this._canvasBuffer.baseTexture[\"_canvasRenderTarget\"].canvas, 'graphics');\r\n            this._texture.baseTexture.update();\r\n        } else {\r\n            this._texture.baseTexture.update();\r\n        }\r\n        //可能需要更改_texture，this._texture.baseTexture尺寸\r\n\r\n        this.offsetX = bounds.x;\r\n        this.offsetY = bounds.y;\r\n        return this._texture;\r\n        // return\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        // destroy each of the GraphicsData objects\r\n        for (let i = 0; i < this.graphicsData.length; ++i) {\r\n            this.graphicsData[i].destroy();\r\n        }\r\n        this._matrix = null;\r\n        this._currentPath = null;\r\n        this._lineStyle.destroy();\r\n        this._lineStyle = null;\r\n        this._fillStyle.destroy();\r\n        this._fillStyle = null;\r\n        this.vertexData = null;\r\n        this.geoBatches.length = 0;\r\n        this.geoBatches = null;\r\n        this.batches.length = 0;\r\n        this.batches = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\r\n     * @member {number}\r\n     */\r\n    get width() {\r\n        this.updateLocalBoundsSelf()\r\n        return Math.abs(this.scale.x) * this._localBoundsSelf.width;\r\n    }\r\n\r\n    set width(value) {\r\n        this.updateLocalBoundsSelf();\r\n        const width = this._localBoundsSelf.width;\r\n        if (width !== 0) {\r\n            const s = sign(this.scale.x) || 1;\r\n            this.scale.x = s * value / width;\r\n        } else {\r\n            this.scale.x = 1;\r\n        }\r\n        this._width = value;\r\n    }\r\n\r\n    /**\r\n     * The height of the sprite, setting this will actually modify the scale to achieve the value set\r\n     *\r\n     * @member {number}\r\n     */\r\n    get height() {\r\n        this.updateLocalBoundsSelf()\r\n        return Math.abs(this.scale.y) * this._localBoundsSelf.height;\r\n    }\r\n\r\n    set height(value) {\r\n        this.updateLocalBoundsSelf()\r\n        const height = this._localBoundsSelf.height;\r\n        if (height !== 0) {\r\n            const s = sign(this.scale.y) || 1;\r\n            this.scale.y = s * value / height;\r\n        } else {\r\n            this.scale.y = 1;\r\n        }\r\n        this._height = value;\r\n    }\r\n\r\n    /**\r\n     * Process the holes data.\r\n     *\r\n     * @param {GraphicsData[]} holes - Holes to render\r\n     * @protected\r\n     */\r\n    private proccessHoles(holes: GraphicsData[]) {\r\n        for (let i = 0; i < holes.length; i++) {\r\n            const hole = holes[i];\r\n            const command = fillCommands[hole.type];\r\n            command.build(hole);\r\n            if (hole.matrix) this.transformPoints(hole.points, hole.matrix);\r\n\r\n        }\r\n    }\r\n    /**\r\n     * Generates the UVs for a shape.\r\n     * 不支持纹理填充，所以uv都时0\r\n     * @protected\r\n     * @param {number[]} verts - Vertices\r\n     * @param {number[]} uvs - UVs\r\n     * @param {Texture} texture - Reference to Texture\r\n     * @param {number} start - Index buffer start index.\r\n     * @param {number} size - The size/length for index buffer.\r\n     * @param {Matrix} [matrix] - Optional transform for all points.\r\n     */\r\n    private addUvs(verts, uvs, texture, start, size, matrix?) {\r\n        let index = 0;\r\n        const uvsStart = uvs.length;\r\n        const frame = texture.frame;\r\n        while (index < size) {\r\n            let x = verts[(start + index) * 2];\r\n            let y = verts[((start + index) * 2) + 1];\r\n            //矩阵应用还有问题\r\n            if (matrix) {\r\n                const nx = (matrix.a * x) + (matrix.c * y) + matrix.tx;\r\n                y = (matrix.b * x) + (matrix.d * y) + matrix.ty;\r\n                x = nx;\r\n            }\r\n            index++;\r\n            const frame = texture.frame;\r\n            uvs.push(x / frame.width, y / frame.height);\r\n            //uvs.push(0, 0);\r\n        }\r\n\r\n        const baseTexture = texture.baseTexture;\r\n\r\n        if (frame.width < baseTexture.width\r\n            || frame.height < baseTexture.height) {\r\n            this.adjustUvs(uvs, texture, uvsStart, size);\r\n        }\r\n    }\r\n    /**\r\n     * Modify uvs array according to position of texture region\r\n     * Does not work with rotated or trimmed textures\r\n     * @param {number[]} uvs array\r\n     * @param {Texture} texture region\r\n     * @param {number} start starting index for uvs\r\n     * @param {number} size how many points to adjust\r\n     */\r\n    private adjustUvs(uvs, texture, start, size) {\r\n        const baseTexture = texture.baseTexture;\r\n        const eps = 1e-6;\r\n        const finish = start + (size * 2);\r\n        const frame = texture.frame;\r\n        const scaleX = frame.width / baseTexture.width;\r\n        const scaleY = frame.height / baseTexture.height;\r\n        let offsetX = frame.x / frame.width;\r\n        let offsetY = frame.y / frame.height;\r\n        let minX = Math.floor(uvs[start] + eps);\r\n        let minY = Math.floor(uvs[start + 1] + eps);\r\n\r\n        for (let i = start + 2; i < finish; i += 2) {\r\n            minX = Math.min(minX, Math.floor(uvs[i] + eps));\r\n            minY = Math.min(minY, Math.floor(uvs[i + 1] + eps));\r\n        }\r\n        offsetX -= minX;\r\n        offsetY -= minY;\r\n        for (let i = start; i < finish; i += 2) {\r\n            uvs[i] = (uvs[i] + offsetX) * scaleX;\r\n            uvs[i + 1] = (uvs[i + 1] + offsetY) * scaleY;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A little internal structure to hold interim batch objects.\r\n *\r\n * @private\r\n */\r\nclass geoBatchPart {\r\n    style: FillStyle | LineStyle\r\n    size: number;\r\n    start: number;\r\n    attribStart: number;\r\n    attribSize: number;\r\n    constructor() {\r\n        this.style = null\r\n        this.size = 0;\r\n        this.start = 0;\r\n        this.attribStart = 0;\r\n        this.attribSize = 0;\r\n    }\r\n}","import BaseRenderTexture from './BaseRenderTexture';\nimport Texture from './Texture';\nimport { Rectangle } from '../math';\nimport { SCALE_MODES } from '../const';\n\n/**\n * A RenderTexture is a special texture that allows any display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. For example:\n *\n * ```js\n * let renderer = autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let renderTexture = RenderTexture.create(800, 600);\n * let sprite = Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchorTexture.x = 0.5;\n * sprite.anchorTexture.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let renderTexture = new RenderTexture.create(100, 100);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends Texture\n */\nexport default class RenderTexture extends Texture {\n    baseTexture: BaseRenderTexture\n    /**\n     * @param {BaseRenderTexture} baseRenderTexture - The renderer used for this RenderTexture\n     * @param {Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    constructor(baseRenderTexture: BaseRenderTexture, frame?: Rectangle) {\n\n        super(\n            baseRenderTexture,\n            frame\n        );\n\n        this.valid = true;\n\n        this.updateUvs();\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} doNotResizeBaseTexture - Should the baseTexture.width and height values be resized as well?\n     */\n    resize(width: number, height: number, doNotResizeBaseTexture: boolean = false) {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        // TODO - could be not required..\n        this.valid = (width > 0 && height > 0);\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (!doNotResizeBaseTexture) {\n            this.baseTexture[\"resize\"](width, height);\n        }\n\n        this.updateUvs();\n    }\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {number} [width=100] - The width of the render texture\n     * @param {number} [height=100] - The height of the render texture\n     * @param {number} [scaleMode=settings.SCALE_MODE] - See {@link SCALE_MODES} for possible values\n     * @return {RenderTexture} The new render texture\n     */\n    static create(width: number, height: number, scaleMode: number = SCALE_MODES.LINEAR): RenderTexture {\n        return new RenderTexture(new BaseRenderTexture(width, height, scaleMode));\n    }\n}\n","import BaseTexture from './BaseTexture';\nimport { SCALE_MODES } from '../const';\n\n/**\n * 将显示对象画在上面的贴图\n * A BaseRenderTexture is a special texture that allows any display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a BaseRenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A BaseRenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let baseRenderTexture = new BaseRenderTexture(800, 600);\n * let sprite = Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchorTexture.x = 0.5;\n * sprite.anchorTexture.y = 0.5;\n *\n * renderer.render(sprite,baseRenderTexture);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let baseRenderTexture = new BaseRenderTexture(100, 100);\n * let renderTexture = new RenderTexture(baseRenderTexture);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends BaseTexture\n */\nexport default class BaseRenderTexture extends BaseTexture {\n    /**\n     * A map of renderer IDs to webgl renderTargets\n     * 画在他的帧缓存中\n     * @private\n     * @member {object<number, WebGLTexture>}\n     */\n    _glRenderTargets: {};\n    /**\n     * A reference to the canvas render target (we only need one as this can be shared across renderers)\n     * 画在他的上下文中canvas中\n     * @private\n     * @member {object<number, WebGLTexture>}\n     */\n    _canvasRenderTarget: any;\n    /**\n     * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n     */\n    valid: boolean;\n    /**\n     * @param {number} [width=100] - The width of the base render texture\n     * @param {number} [height=100] - The height of the base render texture\n     * @param {number} [scaleMode=SCALE_MODES.LINEAR] - See {@link SCALE_MODES} for possible values\n     */\n    constructor(width: number = 100, height: number = 100, scaleMode: number = SCALE_MODES.LINEAR) {\n        super(null, scaleMode);\n\n        this.width = Math.ceil(width);\n        this.height = Math.ceil(height);\n\n        this.scaleMode = scaleMode;\n        this.hasLoaded = true;\n\n\n        this._glRenderTargets = {};\n\n\n        this._canvasRenderTarget = null;\n\n\n        this.valid = false;\n    }\n\n    /**\n     * Resizes the BaseRenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     */\n    resize(width: number, height: number) {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        if (width === this.width && height === this.height) {\n            return;\n        }\n\n        this.valid = (width > 0 && height > 0);\n\n        this.width = width;\n        this.height = height;\n\n        if (!this.valid) {\n            return;\n        }\n\n        this.dispatchEvent('update');\n    }\n\n    /**\n     * Destroys this texture\n     *\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n","\r\nexport {default as Circle} from './Circle';\r\n\r\nexport {default as Ellipse} from './Ellipse';\r\nexport {default as Polygon} from './Polygon';\r\nexport {default as RoundedRectangle} from './RoundedRectangle';","\n\nexport function earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end?) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass?) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut[\"deviation\"] = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut[\"flatten\"] = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","import Texture from \"../../texture/Texture\";\nimport { Matrix } from \"../../math\";\n\n/**\n * 图形的填充形式\n * @class\n */\nexport default class FillStyle {\n    /**\n     * 十六进制颜色\n     * 默认0xFFFFFF 白色\n     */\n    color: number;\n    /**\n     * 透明度0到1\n     * 默认1\n     */\n    alpha: number;\n    /**\n     * 纹理，\n     * 默认Texture.WHITE\n     */\n    texture: Texture;\n    /**\n     * 纹理应用的矩阵\n     * 默认null\n     */\n    matrix: Matrix;\n    /**\n     * 是否绘制\n     * 默认false\n     */\n    visible: boolean;\n    /**\n     * 用于设置alpha为0做点击触发用\n     */\n    alphaBlock: boolean;\n    constructor() {\n        this.reset();\n    }\n\n    clone(): FillStyle {\n        const obj: FillStyle = new FillStyle();\n        obj.color = this.color;\n        obj.alpha = this.alpha;\n        obj.texture = this.texture;\n        obj.matrix = this.matrix;\n        obj.visible = this.visible;\n        obj.alphaBlock = this.alphaBlock;\n        return obj;\n    }\n\n    /**\n     * 重置\n     */\n    reset() {\n        this.color = 0xFFFFFF;\n        this.alpha = 1;\n        this.texture = Texture.WHITE;\n        this.matrix = null;\n        this.visible = false;\n\n        //\n        this.alphaBlock = false;\n    }\n\n    /**\n     * 销毁\n     */\n    destroy() {\n        this.texture = null;\n        this.matrix = null;\n    }\n}\n","\r\n\r\nexport * from \"./Mesh\"\r\nexport * from \"./NineSlicePlane\"\r\nexport * from \"./Plane\"\r\nexport * from \"./Rope\"","import { Mesh } from './Mesh';\nimport { Texture } from '../texture';\n\n/**\n * The Plane allows you to draw a texture across several points and them manipulate these points\n *\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new Point(i * 50, 0));\n * };\n * let Plane = new Plane(Texture.fromImage(\"snake.png\"), points);\n *  ```\n *\n * @class\n * @extends Mesh\n *\n */\nexport class Plane extends Mesh {\n    verticesX: number;\n    verticesY: number;\n    /**\n     * @param {Texture} texture - The texture to use on the Plane.\n     * @param {number} [verticesX=10] - The number of vertices in the x-axis\n     * @param {number} [verticesY=10] - The number of vertices in the y-axis\n     */\n    constructor(texture: Texture, verticesX: number = 10, verticesY: number = 10) {\n        super(texture);\n        this.verticesX = verticesX || 10;\n        this.verticesY = verticesY || 10;\n        this.refresh();\n    }\n\n    /**\n     * Refreshes plane coordinates\n     *\n     */\n    _refresh() {\n        const texture = this.texture;\n        const total = this.verticesX * this.verticesY;\n        const verts = [];\n        const uvs = [];\n        const indices = [];\n\n        const segmentsX = this.verticesX - 1;\n        const segmentsY = this.verticesY - 1;\n\n        const sizeX = texture.width / segmentsX;\n        const sizeY = texture.height / segmentsY;\n\n        for (let i = 0; i < total; i++) {\n            const x = (i % this.verticesX);\n            const y = ((i / this.verticesX) | 0);\n\n            verts.push(x * sizeX, y * sizeY);\n\n            uvs.push(x / segmentsX, y / segmentsY);\n        }\n\n\n\n        // console.log(indices)\n        this._vertices = new Float32Array(verts);\n        this._uvs = new Float32Array(uvs);\n        this._indices = calculatePlaneIndices(this.verticesX,this.verticesY);\n\n        this._vertexDirty++;\n\n        this.multiplyUvs();\n    }\n}\n\n/**\n * 计算平面的索引\n * @param verticesX x轴上的顶点数量，最小2\n * @param verticesY y轴上的顶点数量，最小2\n */\nexport function calculatePlaneIndices(verticesX: number, verticesY: number): Uint16Array {\n    const segmentsX = verticesX - 1;\n    const segmentsY = verticesY - 1;\n    const totalSub = segmentsX * segmentsY;\n    const indices = [];\n    for (let i = 0; i < totalSub; i++) {\n        const xpos = i % segmentsX;\n        const ypos = (i / segmentsX) | 0;\n\n        const value = (ypos * verticesX) + xpos;\n        const value2 = (ypos * verticesX) + xpos + 1;\n        const value3 = ((ypos + 1) * verticesX) + xpos;\n        const value4 = ((ypos + 1) * verticesX) + xpos + 1;\n\n        indices.push(value, value2, value3);\n        indices.push(value2, value4, value3);\n    }\n    return new Uint16Array(indices);\n}\n","export default class Tween {\r\n    /**\r\n     * 不做特殊处理\r\n     * @constant {number} Tween.NONE\r\n     * @private\r\n     */\r\n    private static NONE = 0;\r\n    /**\r\n     * 循环\r\n     * @constant {number} Tween.LOOP\r\n     * @private\r\n     */\r\n    private static LOOP = 1;\r\n    /**\r\n     * 倒序\r\n     * @constant {number} Tween.REVERSE\r\n     * @private\r\n     */\r\n    private static REVERSE = 2;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _tweens: Tween[] = [];\r\n    /**\r\n     * @private\r\n     */\r\n    private static IGNORE = {};\r\n    /**\r\n     * @private\r\n     */\r\n    private static _plugins = {};\r\n    /**\r\n     * @private\r\n     */\r\n    private static _inited = false;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _target: any = null;\r\n    /**\r\n     * @private\r\n     */\r\n    private _useTicks: boolean = false;\r\n    /**\r\n     * @private\r\n     */\r\n    private ignoreGlobalPause: boolean = false;\r\n    /**\r\n     * @private\r\n     */\r\n    private loop: boolean = false;\r\n    /**\r\n     * @private\r\n     */\r\n    private pluginData = null;\r\n    /**\r\n     * @private\r\n     */\r\n    private _curQueueProps;\r\n    /**\r\n     * @private\r\n     */\r\n    private _initQueueProps;\r\n    /**\r\n     * @private\r\n     */\r\n    private _steps: any[] = null;\r\n    /**\r\n     * @private\r\n     */\r\n    private paused: boolean = false;\r\n    /**\r\n     * @private\r\n     */\r\n    private duration: number = 0;\r\n    /**\r\n     * @private\r\n     */\r\n    private _prevPos: number = -1;\r\n    /**\r\n     * @private\r\n     */\r\n    private position: number = null;\r\n    /**\r\n     * @private\r\n     */\r\n    private _prevPosition: number = 0;\r\n    /**\r\n     * @private\r\n     */\r\n    private _stepPosition: number = 0;\r\n    /**\r\n     * @private\r\n     */\r\n    private passive: boolean = false;\r\n\r\n    /**\r\n     * Activate an object and add a Tween animation to the object\r\n     * @param target {any} The object to be activated\r\n     * @param props {any} Parameters, support loop onChange onChangeObj\r\n     * @param pluginData {any} Write realized\r\n     * @param override {boolean} Whether to remove the object before adding a tween, the default value false\r\n     * Not recommended, you can use Tween.removeTweens(target) instead.\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 激活一个对象，对其添加 Tween 动画\r\n     * @param target {any} 要激活 Tween 的对象\r\n     * @param props {any} 参数，支持loop(循环播放) onChange(变化函数) onChangeObj(变化函数作用域)\r\n     * @param pluginData {any} 暂未实现\r\n     * @param override {boolean} 是否移除对象之前添加的tween，默认值false。\r\n     * 不建议使用，可使用 Tween.removeTweens(target) 代替。\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public static get(target: any, props?: { loop?: boolean, onChange?: Function, onChangeObj?: any }, pluginData: any = null, override: boolean = false): Tween {\r\n        if (override) {\r\n            Tween.removeTweens(target);\r\n        }\r\n        return new Tween(target, props, pluginData);\r\n    }\r\n\r\n    /**\r\n     * Delete all Tween animations from an object\r\n     * @param target The object whose Tween to be deleted\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 删除一个对象上的全部 Tween 动画\r\n     * @param target  需要移除 Tween 的对象\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public static removeTweens(target: any): void {\r\n        if (!target.tween_count) {\r\n            return;\r\n        }\r\n        let tweens: Tween[] = Tween._tweens;\r\n        for (let i = tweens.length - 1; i >= 0; i--) {\r\n            if (tweens[i]._target == target) {\r\n                tweens[i].paused = true;\r\n                tweens.splice(i, 1);\r\n            }\r\n        }\r\n        target.tween_count = 0;\r\n    }\r\n\r\n    /**\r\n     * 移除tween\r\n     * @param tween get返回的Tween实例\r\n     */\r\n    public static removeTweenSelf(tween: Tween): void {\r\n        if (!tween || !tween._target || !tween._target.tween_count) return;\r\n        tween.paused = true;\r\n        let tweens: Tween[] = Tween._tweens;\r\n        let index = tweens.indexOf(tween);\r\n        if (index > -1) tweens.splice(index, 1);\r\n        tween._target.tween_count--;\r\n    }\r\n\r\n    /**\r\n     * Pause all Tween animations of a certain object\r\n     * @param target The object whose Tween to be paused\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 暂停某个对象的所有 Tween\r\n     * @param target 要暂停 Tween 的对象\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public static pauseTweens(target: any): void {\r\n\r\n        if (!target.tween_count) {\r\n            return;\r\n        }\r\n        let tweens: Tween[] = Tween._tweens;\r\n        for (let i = tweens.length - 1; i >= 0; i--) {\r\n            if (tweens[i]._target == target) {\r\n                tweens[i].paused = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resume playing all easing of a certain object\r\n     * @param target The object whose Tween to be resumed\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 继续播放某个对象的所有缓动\r\n     * @param target 要继续播放 Tween 的对象\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public static resumeTweens(target: any): void {\r\n        if (!target.tween_count) {\r\n            return;\r\n        }\r\n        let tweens: Tween[] = Tween._tweens;\r\n        for (let i = tweens.length - 1; i >= 0; i--) {\r\n            if (tweens[i]._target == target) {\r\n                tweens[i].paused = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param delta\r\n     * @param paused\r\n     */\r\n    private static tick(timeStamp: number, paused = false): boolean {\r\n        let delta = timeStamp - Tween._lastTime;\r\n        Tween._lastTime = timeStamp;\r\n        let tweens: Tween[] = Tween._tweens.concat();\r\n\r\n        for (let i = tweens.length - 1; i >= 0; i--) {\r\n\r\n            let tween: Tween = tweens[i];\r\n            if ((paused && !tween.ignoreGlobalPause) || tween.paused) {\r\n                continue;\r\n            }\r\n            tween.$tick(tween._useTicks ? 1 : delta);\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n    /**\r\n     * flush方法，为了能加入总循环\r\n     * 默认是锁步的\r\n     * @param delta\r\n     * @param paused ,暂时不用，全局禁止\r\n     */\r\n    public static flush(/*paused = false*/): void {\r\n        let timeStamp = Date.now()\r\n        let delta = Tween._lastTime ? (timeStamp - Tween._lastTime) : 16.67;;\r\n        Tween._lastTime = timeStamp;\r\n        let tweens: Tween[] = Tween._tweens.concat();\r\n        for (let i = tweens.length - 1; i >= 0; i--) {\r\n            let tween: Tween = tweens[i];\r\n            if (/*(paused && !tween.ignoreGlobalPause) ||*/ tween.paused) {\r\n                continue;\r\n            }\r\n            tween.$tick(tween._useTicks ? 1 : delta);\r\n        }\r\n    }\r\n\r\n    private static _lastTime: number = 0;\r\n    /**\r\n     * @private\r\n     *\r\n     * @param tween\r\n     * @param value\r\n     */\r\n    private static _register(tween: Tween, value: boolean): void {\r\n        let target: any = tween._target;\r\n        let tweens: Tween[] = Tween._tweens;\r\n        if (value) {\r\n            if (target) {\r\n                target.tween_count = target.tween_count > 0 ? target.tween_count + 1 : 1;\r\n            }\r\n            tweens.push(tween);\r\n            if (!Tween._inited) {\r\n                // Tween._lastTime = Date.now();\r\n                //开始加入循环暂时从简,最后实际使用，最好加入Stage总循环中\r\n                // let aaa = () => {\r\n                //     Tween.tick(Date.now())\r\n                //     requestAnimationFrame(aaa)\r\n                // }\r\n                //必须做延时\r\n                // setTimeout(aaa, 16.7)\r\n                // aaa();\r\n                // ticker.$startTick(Tween.tick, null);\r\n                Tween._inited = true;\r\n            }\r\n        } else {\r\n            if (target) {\r\n                target.tween_count--;\r\n            }\r\n            let i = tweens.length;\r\n\r\n            while (i--) {\r\n                if (tweens[i] == tween) {\r\n                    tweens.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete all Tween\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 删除所有 Tween\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public static removeAllTweens(): void {\r\n        let tweens: Tween[] = Tween._tweens;\r\n        for (let i = 0, l = tweens.length; i < l; i++) {\r\n            let tween: Tween = tweens[i];\r\n            tween.paused = true;\r\n            tween._target.tween_count = 0;\r\n        }\r\n        tweens.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 Tween 对象\r\n     * @private\r\n     * @version\r\n     * @platform Web,Native\r\n     */\r\n    constructor(target: any, props: any, pluginData: any) {\r\n        // super();\r\n        this.initialize(target, props, pluginData);\r\n    }\r\n    onChange: Function\r\n    /**\r\n     * @private\r\n     *\r\n     * @param target\r\n     * @param props\r\n     * @param pluginData\r\n     */\r\n    private initialize(target: any, props: any, pluginData: any): void {\r\n        this._target = target;\r\n        if (props) {\r\n            this._useTicks = props.useTicks;\r\n            this.ignoreGlobalPause = props.ignoreGlobalPause;\r\n            this.loop = props.loop;\r\n            if (props.onChange) {\r\n                this.onChange = props.onChange.bind(props.onChangeObj)\r\n            } else {\r\n                this.onChange = null\r\n            }\r\n            // && this.addEventListener(\"change\", props.onChange.bind(props.onChangeObj));\r\n            if (props.override) {\r\n                Tween.removeTweens(target);\r\n            }\r\n        }\r\n\r\n        this.pluginData = pluginData || {};\r\n        this._curQueueProps = {};\r\n        this._initQueueProps = {};\r\n        this._steps = [];\r\n        if (props && props.paused) {\r\n            this.paused = true;\r\n        }\r\n        else {\r\n            Tween._register(this, true);\r\n        }\r\n        if (props && props.position != null) {\r\n            this.setPosition(props.position, Tween.NONE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param value\r\n     * @param actionsMode\r\n     * @returns\r\n     */\r\n    public setPosition(value: number, actionsMode: number = 1): boolean {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        //正常化位置\r\n        let t: number = value;\r\n        let end: boolean = false;\r\n        if (t >= this.duration) {\r\n            if (this.loop) {\r\n                var newTime = t % this.duration;\r\n                if (t > 0 && newTime === 0) {\r\n                    t = this.duration;\r\n                } else {\r\n                    t = newTime;\r\n                }\r\n            }\r\n            else {\r\n                t = this.duration;\r\n                end = true;\r\n            }\r\n        }\r\n        if (t == this._prevPos) {\r\n            return end;\r\n        }\r\n\r\n        if (end) {\r\n            this.setPaused(true);\r\n        }\r\n\r\n        let prevPos = this._prevPos;\r\n        this.position = this._prevPos = t;\r\n        this._prevPosition = value;\r\n\r\n        if (this._target) {\r\n            if (this._steps.length > 0) {\r\n                // 找到新的tween\r\n                let l = this._steps.length;\r\n                let stepIndex = -1;\r\n                for (let i = 0; i < l; i++) {\r\n                    if (this._steps[i].type == \"step\") {\r\n                        stepIndex = i;\r\n                        if (this._steps[i].t <= t && this._steps[i].t + this._steps[i].d >= t) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < l; i++) {\r\n                    if (this._steps[i].type == \"action\") {\r\n                        //执行actions\r\n                        if (actionsMode != 0) {\r\n                            if (this._useTicks) {\r\n                                this._runAction(this._steps[i], t, t);\r\n                            }\r\n                            else if (actionsMode == 1 && t < prevPos) {\r\n                                if (prevPos != this.duration) {\r\n                                    this._runAction(this._steps[i], prevPos, this.duration);\r\n                                }\r\n                                this._runAction(this._steps[i], 0, t, true);\r\n                            }\r\n                            else {\r\n                                this._runAction(this._steps[i], prevPos, t);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (this._steps[i].type == \"step\") {\r\n                        if (stepIndex == i) {\r\n                            let step = this._steps[stepIndex];\r\n                            this._updateTargetProps(step, Math.min((this._stepPosition = t - step.t) / step.d, 1));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.onChange && this.onChange()\r\n        // this.dispatchEvent(\"change\");\r\n        return end;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param startPos\r\n     * @param endPos\r\n     * @param includeStart\r\n     */\r\n    private _runAction(action: any, startPos: number, endPos: number, includeStart: boolean = false) {\r\n        let sPos: number = startPos;\r\n        let ePos: number = endPos;\r\n        if (startPos > endPos) {\r\n            //把所有的倒置\r\n            sPos = endPos;\r\n            ePos = startPos;\r\n        }\r\n        let pos = action.t;\r\n        if (pos == ePos || (pos > sPos && pos < ePos) || (includeStart && pos == startPos)) {\r\n            action.f.apply(action.o, action.p);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param step\r\n     * @param ratio\r\n     */\r\n    private _updateTargetProps(step: any, ratio: number) {\r\n        let p0, p1, v, v0, v1, arr;\r\n        if (!step && ratio == 1) {\r\n            this.passive = false;\r\n            p0 = p1 = this._curQueueProps;\r\n        } else {\r\n            this.passive = !!step.v;\r\n            //不更新props.\r\n            if (this.passive) {\r\n                return;\r\n            }\r\n            //使用ease\r\n            if (step.e) {\r\n                ratio = step.e(ratio, 0, 1, 1);\r\n            }\r\n            p0 = step.p0;\r\n            p1 = step.p1;\r\n        }\r\n\r\n        for (let n in this._initQueueProps) {\r\n            if ((v0 = p0[n]) == null) {\r\n                p0[n] = v0 = this._initQueueProps[n];\r\n            }\r\n            if ((v1 = p1[n]) == null) {\r\n                p1[n] = v1 = v0;\r\n            }\r\n            if (v0 == v1 || ratio == 0 || ratio == 1 || (typeof (v0) != \"number\")) {\r\n                v = ratio == 1 ? v1 : v0;\r\n            } else {\r\n                v = v0 + (v1 - v0) * ratio;\r\n            }\r\n\r\n            let ignore = false;\r\n            if (arr = Tween._plugins[n]) {\r\n                for (let i = 0, l = arr.length; i < l; i++) {\r\n                    let v2 = arr[i].tween(this, n, v, p0, p1, ratio, !!step && p0 == p1, !step);\r\n                    if (v2 == Tween.IGNORE) {\r\n                        ignore = true;\r\n                    }\r\n                    else {\r\n                        v = v2;\r\n                    }\r\n                }\r\n            }\r\n            if (!ignore) {\r\n                this._target[n] = v;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Whether setting is paused\r\n     * @param value {boolean} Whether to pause\r\n     * @returns Tween object itself\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 设置是否暂停\r\n     * @param value {boolean} 是否暂停\r\n     * @returns Tween对象本身\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public setPaused(value: boolean): Tween {\r\n        if (this.paused == value) {\r\n            return this;\r\n        }\r\n        this.paused = value;\r\n        Tween._register(this, !value);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param props\r\n     * @returns\r\n     */\r\n    private _cloneProps(props: any): any {\r\n        let o = {};\r\n        for (let n in props) {\r\n            o[n] = props[n];\r\n        }\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param o\r\n     * @returns\r\n     */\r\n    private _addStep(o): Tween {\r\n        if (o.d > 0) {\r\n            o.type = \"step\";\r\n            this._steps.push(o);\r\n            o.t = this.duration;\r\n            this.duration += o.d;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param o\r\n     * @returns\r\n     */\r\n    private _appendQueueProps(o): any {\r\n        let arr, oldValue, i, l, injectProps;\r\n        for (let n in o) {\r\n            if (this._initQueueProps[n] === undefined) {\r\n                oldValue = this._target[n];\r\n                //设置plugins\r\n                if (arr = Tween._plugins[n]) {\r\n                    for (i = 0, l = arr.length; i < l; i++) {\r\n                        oldValue = arr[i].init(this, n, oldValue);\r\n                    }\r\n                }\r\n                this._initQueueProps[n] = this._curQueueProps[n] = (oldValue === undefined) ? null : oldValue;\r\n            } else {\r\n                oldValue = this._curQueueProps[n];\r\n            }\r\n        }\r\n\r\n        for (let n in o) {\r\n            oldValue = this._curQueueProps[n];\r\n            if (arr = Tween._plugins[n]) {\r\n                injectProps = injectProps || {};\r\n                for (i = 0, l = arr.length; i < l; i++) {\r\n                    if (arr[i].step) {\r\n                        arr[i].step(this, n, oldValue, o[n], injectProps);\r\n                    }\r\n                }\r\n            }\r\n            this._curQueueProps[n] = o[n];\r\n        }\r\n        if (injectProps) {\r\n            this._appendQueueProps(injectProps);\r\n        }\r\n        return this._curQueueProps;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param o\r\n     * @returns\r\n     */\r\n    private _addAction(o): Tween {\r\n        o.t = this.duration;\r\n        o.type = \"action\";\r\n        this._steps.push(o);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param props\r\n     * @param o\r\n     */\r\n    private _set(props: any, o): void {\r\n        for (let n in props) {\r\n            o[n] = props[n];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait the specified milliseconds before the execution of the next animation\r\n     * @param duration {number} Waiting time, in milliseconds\r\n     * @param passive {boolean} Whether properties are updated during the waiting time\r\n     * @returns Tween object itself\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 等待指定毫秒后执行下一个动画\r\n     * @param duration {number} 要等待的时间，以毫秒为单位\r\n     * @param passive {boolean} 等待期间属性是否会更新\r\n     * @returns Tween对象本身\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public wait(duration: number, passive?: boolean): Tween {\r\n        if (duration == null || duration <= 0) {\r\n            return this;\r\n        }\r\n        let o = this._cloneProps(this._curQueueProps);\r\n        return this._addStep({ d: duration, p0: o, p1: o, v: passive });\r\n    }\r\n\r\n    /**\r\n     * Modify the property of the specified object to a specified value\r\n     * @param props {Object} Property set of an object\r\n     * @param duration {number} Duration\r\n     * @param ease {Ease} Easing algorithm\r\n     * @returns {Tween} Tween object itself\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 将指定对象的属性修改为指定值\r\n     * @param props {Object} 对象的属性集合\r\n     * @param duration {number} 持续时间\r\n     * @param ease {Ease} 缓动算法\r\n     * @returns {Tween} Tween对象本身\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public to(props: any, duration?: number, ease: Function = undefined) {\r\n        if (isNaN(duration) || duration < 0) {\r\n            duration = 0;\r\n        }\r\n        this._addStep({ d: duration || 0, p0: this._cloneProps(this._curQueueProps), e: ease, p1: this._cloneProps(this._appendQueueProps(props)) });\r\n        //加入一步set，防止游戏极其卡顿时候，to后面的call取到的属性值不对\r\n        return this.set(props);\r\n    }\r\n\r\n    /**\r\n     * by\r\n     * @param props\r\n     * @param duration\r\n     * @param ease\r\n     */\r\n    public by(props: any, duration: number = 0, ease: Function = undefined) {\r\n        for (let k in props) {\r\n            props[k] += this._curQueueProps[k] || this._target[k];\r\n        }\r\n        return this.to(props, duration, ease);\r\n    }\r\n\r\n    /**\r\n     * Execute callback function\r\n     * @param callback {Function} Callback method\r\n     * @param thisObj {any} this action scope of the callback method\r\n     * @param params {any[]} Parameter of the callback method\r\n     * @returns {Tween} Tween object itself\r\n     * @version\r\n     * @platform Web,Native\r\n     * @example\r\n     * <pre>\r\n     *  Tween.get(display).call(function (a:number, b:string) {\r\n     *      console.log(\"a: \" + a); // the first parameter passed 233\r\n     *      console.log(\"b: \" + b); // the second parameter passed “hello”\r\n     *  }, this, [233, \"hello\"]);\r\n     * </pre>\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 执行回调函数\r\n     * @param callback {Function} 回调方法\r\n     * @param thisObj {any} 回调方法this作用域\r\n     * @param params {any[]} 回调方法参数\r\n     * @returns {Tween} Tween对象本身\r\n     * @version\r\n     * @platform Web,Native\r\n     * @example\r\n     * <pre>\r\n     *  Tween.get(display).call(function (a:number, b:string) {\r\n     *      console.log(\"a: \" + a); //对应传入的第一个参数 233\r\n     *      console.log(\"b: \" + b); //对应传入的第二个参数 “hello”\r\n     *  }, this, [233, \"hello\"]);\r\n     * </pre>\r\n     * @language zh_CN\r\n     */\r\n    public call(callback: Function, thisObj: any = undefined, params: any[] = undefined): Tween {\r\n        return this._addAction({ f: callback, p: params ? params : [], o: thisObj ? thisObj : this._target });\r\n    }\r\n\r\n    /**\r\n     * Now modify the properties of the specified object to the specified value\r\n     * @param props {Object} Property set of an object\r\n     * @param target The object whose Tween to be resumed\r\n     * @returns {Tween} Tween object itself\r\n     * @version\r\n     * @platform Web,Native\r\n     */\r\n    /**\r\n     * 立即将指定对象的属性修改为指定值\r\n     * @param props {Object} 对象的属性集合\r\n     * @param target 要继续播放 Tween 的对象\r\n     * @returns {Tween} Tween对象本身\r\n     * @version\r\n     * @platform Web,Native\r\n     */\r\n    public set(props: any, target = null): Tween {\r\n        //更新当前数据，保证缓动流畅性\r\n        this._appendQueueProps(props);\r\n        // console.log(this._target.x)\r\n        return this._addAction({ f: this._set, o: this, p: [props, target ? target : this._target] });\r\n    }\r\n\r\n    /**\r\n     * Execute\r\n     * @param tween {Tween} The Tween object to be operated. Default: this\r\n     * @returns {Tween} Tween object itself\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 执行\r\n     * @param tween {Tween} 需要操作的 Tween 对象，默认this\r\n     * @returns {Tween} Tween对象本身\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public play(tween?: Tween): Tween {\r\n        if (!tween) {\r\n            tween = this;\r\n        }\r\n        return this.call(tween.setPaused, tween, [false]);\r\n    }\r\n\r\n    /**\r\n     * Pause\r\n     * @param tween {Tween} The Tween object to be operated. Default: this\r\n     * @returns {Tween} Tween object itself\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language en_US\r\n     */\r\n    /**\r\n     * 暂停\r\n     * @param tween {Tween} 需要操作的 Tween 对象，默认this\r\n     * @returns {Tween} Tween对象本身\r\n     * @version\r\n     * @platform Web,Native\r\n     * @language zh_CN\r\n     */\r\n    public pause(tween?: Tween): Tween {\r\n        if (!tween) {\r\n            tween = this;\r\n        }\r\n        return this.call(tween.setPaused, tween, [true]);\r\n    }\r\n\r\n    /**\r\n     * @method Tween#tick\r\n     * @param delta {number}\r\n     * @private\r\n     * @version\r\n     * @platform Web,Native\r\n     */\r\n    public $tick(delta: number): void {\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n\r\n        this.setPosition(this._prevPosition + delta);\r\n    }\r\n}\r\n\r\n","import Container from \"../display/Container\";\r\nimport Graphics from \"../graphics/Graphics\";\r\nimport { MouseEvent } from \"../events/MouseEvent\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Tween } from \"../../tween\";\r\n// import  Tween  from \"../../tweenSimple/Tween\";\r\n\r\n/**\r\n * 滚动视图\r\n * @class ScrollPage\r\n * @public\r\n * @extends Container\r\n * @since 1.0.0\r\n */\r\nexport class ScrollPage extends Container {\r\n    /**\r\n     * 横向还是纵向 默认为纵向\r\n     * @property isVertical\r\n     * @type {boolean}\r\n     * @private\r\n     * @since 1.0.0\r\n     * @default true\r\n     */\r\n    protected isVertical: boolean = true;\r\n    /**\r\n     * 可见区域的宽\r\n     * @property viewWidth\r\n     * @type {number}\r\n     * @private\r\n     * @since 1.0.0\r\n     * @default 0\r\n     */\r\n    private viewWidth: number = 0;\r\n    /**\r\n     * 可见区域的高\r\n     * @property viewHeight\r\n     * @type {number}\r\n     * @private\r\n     * @since 1.0.0\r\n     * @default 0\r\n     */\r\n    private viewHeight: number = 0;\r\n    private _tweenId: any = 0;\r\n    /**\r\n     * 整个滚动的最大距离值\r\n     * @property maxDistance\r\n     * @type {number}\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default 1040\r\n     */\r\n    public maxDistance: number = 1040;\r\n    /**\r\n     * @property 滚动距离\r\n     * @type {number}\r\n     * @protected\r\n     * @default 0\r\n     * @since 1.0.0\r\n     */\r\n    protected distance: number = 0;\r\n    /**\r\n     * 最小鼠标滑动距离\r\n     * @type {number}\r\n     */\r\n    private minDis: number = 2;\r\n    /**\r\n     * 遮罩对象\r\n     * @property maskObj\r\n     * @since 1.0.0\r\n     * @private\r\n     * @type {Graphics}\r\n     */\r\n    private maskObj: Graphics = new Graphics();\r\n    /**\r\n     * 真正的容器对象，所有滚动的内容都应该是添加到这个容器中\r\n     * @property view\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {Container}\r\n     */\r\n    public view: Container = new Container();\r\n    /**\r\n     * 最后鼠标经过的坐标值\r\n     * @property lastValue\r\n     * @private\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     */\r\n    private lastValue: number = 0;\r\n    /**\r\n     * 速度\r\n     * @property speed\r\n     * @protected\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     */\r\n    protected speed: number = 0;\r\n    /**\r\n     * 加速度\r\n     * @property addSpeed\r\n     * @private\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     */\r\n    private addSpeed: number = 0;\r\n    /**\r\n     * 是否是停止滚动状态\r\n     * @property isStop\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {boolean}\r\n     * @default true\r\n     */\r\n    public isStop: boolean = true;\r\n    /**\r\n     * 滚动的最大速度，直接影响一次滑动之后最长可以滚多远\r\n     * @property maxSpeed\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default 100\r\n     * @type {number}\r\n     */\r\n    public maxSpeed: number = 100;\r\n    /**\r\n     * 摩擦力,值越大，减速越快\r\n     * @property fSpeed\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default 20\r\n     * @type {number}\r\n     */\r\n    public fSpeed: number = 20;\r\n    protected paramXY: string = \"y\";\r\n    private stopTimes: number = -1;\r\n    private isMouseDownState: number = 0;\r\n    /**\r\n     * 是否是通过scrollTo方法在滑动中\r\n     * @property autoScroll\r\n     * @since 1.0.2\r\n     * @type {boolean}\r\n     * @private\r\n     * @default false\r\n     */\r\n    private autoScroll: boolean = false;\r\n\r\n    public isSpringBack: boolean = true;\r\n    /**\r\n     * 构造函数\r\n     * @method  ScrollPage\r\n     * @param {number} vW 可视区域宽\r\n     * @param {number} vH 可视区域高\r\n     * @param {number} maxDistance 最大滚动的长度\r\n     * @param {boolean} isVertical 是纵向还是横向，也就是说是滚x还是滚y,默认值为沿y方向滚动\r\n     * @example\r\n     *      var sPage=new ScrollPage(640,s.stage.viewRect.height,4943);\r\n     *      sPage.isSpringBack = false;//是否回弹\r\n     *      stage.addChild(sPage);\r\n     *      sPage.view.addChild(view);\r\n     *      sPage.y=stage.viewRect.y;\r\n     * \r\n     */\r\n    constructor(vW: number, vH: number, maxDistance: number, isVertical: boolean = true, isFull = false) {\r\n        super();\r\n        let s: ScrollPage = this;\r\n        s._instanceType = \"ScrollPage\";\r\n        s.addChild(s.maskObj);\r\n        s.addChild(s.view);\r\n        if (!isFull) {\r\n            //不全屏才设置mask\r\n            s.view.mask = s.maskObj;\r\n            //为了能接收鼠标事件设置isUsedToMask\r\n            s.maskObj.isUsedToMask = false;\r\n        }\r\n        s.maskObj.alpha = 0;\r\n        s.maxDistance = maxDistance;\r\n        s.setViewRect(vW, vH, isVertical);\r\n        //添加到舞台，需要注意local坐标替换成stage坐标\r\n        s.addEventListener(Event.ADDED_TO_STAGE, function (e: Event) {\r\n            s.stage.addEventListener(MouseEvent.MOUSE_MOVE, s.onMouseEvent, s);\r\n            s.stage.addEventListener(MouseEvent.MOUSE_UP, s.onMouseEvent, s);\r\n        });\r\n        s.addEventListener(Event.REMOVED_FROM_STAGE, function (e: Event) {\r\n            s.stage.removeEventListener(MouseEvent.MOUSE_MOVE, s.onMouseEvent, s);\r\n            s.stage.removeEventListener(MouseEvent.MOUSE_UP, s.onMouseEvent, s);\r\n        });\r\n        s.addEventListener(MouseEvent.MOUSE_DOWN, s.onMouseEvent, s, false);\r\n        // s.addEventListener(MouseEvent.MOUSE_MOVE, s.onMouseEvent, s);\r\n        // s.addEventListener(MouseEvent.MOUSE_UP, s.onMouseEvent, s);\r\n        // s.addEventListener(MouseEvent.MOUSE_OUT, s.onMouseEvent, s);\r\n        s.addEventListener(Event.ENTER_FRAME, function () {\r\n            let view: any = s.view;\r\n            if (s.autoScroll) return;\r\n            if (!s.isSpringBack) {\r\n                if (view[s.paramXY] > 0) {\r\n                    s.addSpeed = 0;\r\n                    s.speed = 0;\r\n                    s.isStop = true;\r\n                    view[s.paramXY] = 0;\r\n                    return;\r\n                }\r\n                else if (view[s.paramXY] < s.distance - s.maxDistance) {\r\n                    s.addSpeed = 0;\r\n                    s.speed = 0;\r\n                    s.isStop = true;\r\n                    view[s.paramXY] = s.distance - s.maxDistance;\r\n                    if (s.distance > s.maxDistance) view[s.paramXY] = 0;\r\n                    return;\r\n                }\r\n            }\r\n            if (!s.isStop) {\r\n                if (Math.abs(s.speed) > 0) {\r\n                    view[s.paramXY] += s.speed;\r\n                    //是否超过了边界,如果超过了,则加快加速度,让其停止\r\n                    if (view[s.paramXY] > 0 || view[s.paramXY] < s.distance - s.maxDistance) {\r\n                        s.speed += s.addSpeed * s.fSpeed;\r\n                    } else {\r\n                        s.speed += s.addSpeed;\r\n                    }\r\n                    //说明超过了界线,准备回弹\r\n                    if (s.speed * s.addSpeed > 0) {\r\n                        s.dispatchEvent(Event.SCROLL_STOP);\r\n                        s.speed = 0;\r\n                    }\r\n                } else {\r\n                    //检测是否超出了边界,如果超出了边界则回弹\r\n                    if (s.addSpeed != 0) {\r\n                        if (view[s.paramXY] > 0 || view[s.paramXY] < s.distance - s.maxDistance) {\r\n                            let tarP: number = 0;\r\n                            // if (s.addSpeed > 0) {\r\n                            //     if (s.distance < s.maxDistance) {\r\n                            //         tarP = s.distance - s.maxDistance;\r\n                            //     }\r\n                            // }\r\n                            if (view[s.paramXY] < s.distance - s.maxDistance) {\r\n                                if (s.distance < s.maxDistance) {\r\n                                    tarP = s.distance - s.maxDistance;\r\n                                }\r\n                            }\r\n                            view[s.paramXY] += 0.4 * (tarP - view[s.paramXY]);\r\n                            if (Math.abs(tarP - view[s.paramXY]) < 0.1) {\r\n                                s.isStop = true;\r\n                                if (s.addSpeed > 0) {\r\n                                    s.dispatchEvent(Event.SCROLL_TO_END);\r\n                                } else {\r\n                                    s.dispatchEvent(Event.SCROLL_TO_HEAD);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        s.isStop = true;\r\n                    }\r\n                }\r\n            } else {\r\n                if (s.stopTimes >= 0) {\r\n                    s.stopTimes++;\r\n                    if (s.stopTimes >= 15) {\r\n                        s.speed = 0;\r\n                        if (view[s.paramXY] > 0 || view[s.paramXY] < s.distance - s.maxDistance) {\r\n                            s.isStop = false;\r\n                            s.stopTimes = -1;\r\n                            //加一个\r\n                            s.isMouseDownState = 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * 设置可见区域，可见区域的坐标始终在本地坐标中0,0点位置\r\n     * @method setViewRect\r\n     * @param {number}w 设置可见区域的宽\r\n     * @param {number}h 设置可见区域的高\r\n     * @param {boolean} isVertical 方向\r\n     * @public\r\n     * @since 1.1.1\r\n     */\r\n    public setViewRect(w: number, h: number, isVertical: boolean): void {\r\n        let s: ScrollPage = this;\r\n        s.maskObj.clear();\r\n        s.maskObj.beginFill(\"#000000\");\r\n        s.maskObj.drawRect(0, 0, w, h);\r\n        s.viewWidth = w;\r\n        s.viewHeight = h;\r\n        s.maskObj.endFill();\r\n        s.isVertical = isVertical;\r\n        if (isVertical) {\r\n            s.distance = s.viewHeight;\r\n            s.paramXY = \"y\";\r\n        } else {\r\n            s.distance = s.viewWidth;\r\n            s.paramXY = \"x\";\r\n        }\r\n        s.isVertical = isVertical;\r\n    }\r\n\r\n    private onMouseEvent(e: MouseEvent): void {\r\n        let s = this;\r\n        let view: any = s.view;\r\n        // if (s.distance < s.maxDistance) {\r\n        if (e.type == MouseEvent.MOUSE_DOWN) {\r\n            e.stopPropagation()\r\n            if (!s.isStop) {\r\n                s.isStop = true;\r\n            }\r\n            if (s.autoScroll) {\r\n                s.autoScroll = false;\r\n                // Tween.kill(s._tweenId);\r\n                // cancelAnimationFrame(s._tweenId)\r\n                Tween.removeTweens(s.view)\r\n            }\r\n            if (s.isVertical) {\r\n                s.lastValue = e.stageY//e.localY;//move事件添加到舞台的，需要用stageY\r\n            } else {\r\n                s.lastValue = e.stageX//e.localX;\r\n            }\r\n            s.speed = 0;\r\n            s.isMouseDownState = 1;\r\n        }\r\n        else if (e.type == MouseEvent.MOUSE_MOVE) {\r\n            if (s.isMouseDownState == 0) return;\r\n            if (s.isMouseDownState == 1) {\r\n                s.dispatchEvent(Event.SCROLL_START);\r\n            }\r\n            s.isMouseDownState = 2;\r\n            let currentValue: number;\r\n            if (s.isVertical) {\r\n                currentValue = e.stageY//e.localY;\r\n            } else {\r\n                currentValue = e.stageX//e.localX;\r\n            }\r\n            s.speed = currentValue - s.lastValue;\r\n            if (s.speed > s.minDis) {\r\n                s.addSpeed = -2;\r\n                if (s.speed > s.maxSpeed) {\r\n                    s.speed = s.maxSpeed;\r\n                }\r\n            } else if (s.speed < -s.minDis) {\r\n                if (s.speed < -s.maxSpeed) {\r\n                    s.speed = -s.maxSpeed;\r\n                }\r\n                s.addSpeed = 2;\r\n            } else {\r\n                s.speed = 0;\r\n            }\r\n            if (s.speed != 0) {\r\n                let speedPer: number = 1;\r\n                if (view[s.paramXY] > 0 || view[s.paramXY] < s.distance - s.maxDistance) {\r\n                    speedPer = 0.2;\r\n                }\r\n                view[s.paramXY] += (currentValue - s.lastValue) * speedPer;\r\n            }\r\n            s.lastValue = currentValue;\r\n            s.stopTimes = 0;\r\n        } else {\r\n            s.isStop = false;\r\n            s.stopTimes = -1;\r\n            if (s.speed == 0 && s.isMouseDownState == 2) {\r\n                s.dispatchEvent(Event.SCROLL_STOP);\r\n            }\r\n            s.isMouseDownState = 0;\r\n        }\r\n        // }\r\n    }\r\n    /**\r\n     * 滚到指定的坐标位置\r\n     * @method scrollTo\r\n     * @param {number} dis 需要去到的位置,初始位置0,最大为maxDistance- s.viewWidth : s.viewHeight\r\n     * @param {number} time 滚动需要的时间 默认为0 即没有动画效果直接跳到指定页，毫秒\r\n     * @since 1.1.1\r\n     * @public\r\n     */\r\n    public scrollTo(dis: number, time: number = 0): void {\r\n        let s: ScrollPage = this;\r\n        let newDis = s.paramXY == \"x\" ? s.viewWidth : s.viewHeight;\r\n        if (dis < 0) {\r\n            dis = 0;\r\n        } else if (dis > s.maxDistance - newDis) {\r\n            dis = s.maxDistance - newDis;\r\n        }\r\n        if (Math.abs(s.view[s.paramXY] + dis) > 2) {\r\n            //tweenSimple版\r\n            // s.autoScroll = true;\r\n            // s.isStop = true;\r\n            // s.isMouseDownState = 0;\r\n            // let obj: any = {};\r\n            // obj.onComplete = function () {\r\n            //     s.autoScroll = false;\r\n            // };\r\n            // obj[s.paramXY] = -dis;\r\n            // s._tweenId = Tween.to(s.view, time, obj);\r\n            // if (s.speed == 0) {\r\n            //     s.dispatchEvent(Event.SCROLL_START);\r\n            // }\r\n\r\n            //用Tween版\r\n            s.autoScroll = true;\r\n            s.isStop = true;\r\n            s.isMouseDownState = 0;\r\n            Tween.get(s.view)\r\n                .to({ [s.paramXY]: -dis }, time)\r\n                .call(() => {\r\n                    s.view[s.paramXY] = -dis;\r\n                    s.autoScroll = false;\r\n                })\r\n            if (s.speed == 0) s.dispatchEvent(Event.SCROLL_START);\r\n\r\n\r\n            //无缓动版\r\n            // s.isStop = true;\r\n            // s.isMouseDownState = 0;\r\n            // s.view[s.paramXY] = -dis;\r\n\r\n            //用计时器版\r\n            // s.isStop = true;\r\n            // s.isMouseDownState = 0;\r\n            // if (time) {\r\n            //     s.autoScroll = true;\r\n            //     let cdis = s.view[s.paramXY];\r\n            //     cancelAnimationFrame(s._tweenId)\r\n            //     let last = Date.now();\r\n            //     let fun = () => {\r\n            //         var deltaTime = Date.now() - last;\r\n            //         if (deltaTime > time) {\r\n            //             s.view[s.paramXY] = -dis;\r\n            //             s.autoScroll = false;\r\n            //             cancelAnimationFrame(s._tweenId)\r\n            //         } else {\r\n            //             s.view[s.paramXY] = (-dis - cdis) * (deltaTime / time) + cdis;\r\n            //             s._tweenId = requestAnimationFrame(fun)\r\n            //         }\r\n            //     }\r\n            //     s._tweenId = requestAnimationFrame(fun)\r\n            //     if (s.speed == 0) s.dispatchEvent(Event.SCROLL_START);\r\n            // } else {\r\n            //     //直接赋值\r\n            //     s.view[s.paramXY] = -dis;\r\n            // }\r\n\r\n        }\r\n    }\r\n    public destroy(): void {\r\n        //Tween去掉\r\n        Tween.removeTweens(this.view);\r\n        let s = this;\r\n        s.maskObj.destroy();\r\n        s.view.destroy();\r\n        s.maskObj = null;\r\n        s.view = null;\r\n        super.destroy();\r\n    }\r\n}\r\n","export const getBezierEasing = (function () {\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a, b, c, d, nm?) {\r\n        var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\r\n        if (beziers[str]) {\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a, b, c, d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n    // These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C(aA1) { return 3.0 * aA1; }\r\n\r\n    // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier(aT, aA1, aA2) {\r\n        return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\r\n    }\r\n\r\n    // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope(aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing(points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return getBezierEasing;\r\n\r\n}());","import { Quaternion } from './Quaternion';\r\nimport { Vector3 } from './Vector3';\r\nimport { Matrix4 } from './Matrix4';\r\nimport { clamp } from '../../2d/utils';\r\n\r\nexport enum RotationOrders {\r\n\tXYZ = \"XYZ\",\r\n\tYZX = 'YZX',\r\n\tZXY = 'ZXY',\r\n\tXZY = 'XZY',\r\n\tYXZ = 'YXZ',\r\n\tZYX = 'ZYX'\r\n}\r\n\r\n\r\nexport class Euler {\r\n\r\n\tconstructor(\r\n\t\tprivate _x: number = 0,\r\n\t\tprivate _y: number = 0,\r\n\t\tprivate _z: number = 0,\r\n\t\tprivate _order: RotationOrders = RotationOrders.XYZ\r\n\t) { }\r\n\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(value) {\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(value) {\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\t}\r\n\r\n\tget z() {\r\n\t\treturn this._z;\r\n\t}\r\n\tset z(value) {\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this._order;\r\n\t}\r\n\tset order(value) {\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\t}\r\n\r\n\tset(x, y, z, order) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new Euler(this._x, this._y, this._z, this._order);\r\n\t}\r\n\r\n\tcopy(euler: Euler) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix(m: Matrix4, order: RotationOrders, update) {\r\n\t\t// var clamp = _Math.clamp;\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[0], m12 = te[4], m13 = te[8];\r\n\t\tvar m21 = te[1], m22 = te[5], m23 = te[9];\r\n\t\tvar m31 = te[2], m32 = te[6], m33 = te[10];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif (order === 'XYZ') {\r\n\r\n\t\t\tthis._y = Math.asin(clamp(m13, - 1, 1));\r\n\r\n\t\t\tif (Math.abs(m13) < 0.99999) {\r\n\r\n\t\t\t\tthis._x = Math.atan2(- m23, m33);\r\n\t\t\t\tthis._z = Math.atan2(- m12, m11);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2(m32, m22);\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if (order === 'YXZ') {\r\n\r\n\t\t\tthis._x = Math.asin(- clamp(m23, - 1, 1));\r\n\r\n\t\t\tif (Math.abs(m23) < 0.99999) {\r\n\r\n\t\t\t\tthis._y = Math.atan2(m13, m33);\r\n\t\t\t\tthis._z = Math.atan2(m21, m22);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2(- m31, m11);\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if (order === 'ZXY') {\r\n\r\n\t\t\tthis._x = Math.asin(clamp(m32, - 1, 1));\r\n\r\n\t\t\tif (Math.abs(m32) < 0.99999) {\r\n\r\n\t\t\t\tthis._y = Math.atan2(- m31, m33);\r\n\t\t\t\tthis._z = Math.atan2(- m12, m22);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2(m21, m11);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if (order === 'ZYX') {\r\n\r\n\t\t\tthis._y = Math.asin(- clamp(m31, - 1, 1));\r\n\r\n\t\t\tif (Math.abs(m31) < 0.99999) {\r\n\r\n\t\t\t\tthis._x = Math.atan2(m32, m33);\r\n\t\t\t\tthis._z = Math.atan2(m21, m11);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2(- m12, m22);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if (order === 'YZX') {\r\n\r\n\t\t\tthis._z = Math.asin(clamp(m21, - 1, 1));\r\n\r\n\t\t\tif (Math.abs(m21) < 0.99999) {\r\n\r\n\t\t\t\tthis._x = Math.atan2(- m23, m22);\r\n\t\t\t\tthis._y = Math.atan2(- m31, m11);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2(m13, m33);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if (order === 'XZY') {\r\n\r\n\t\t\tthis._z = Math.asin(- clamp(m12, - 1, 1));\r\n\r\n\t\t\tif (Math.abs(m12) < 0.99999) {\r\n\r\n\t\t\t\tthis._x = Math.atan2(m32, m22);\r\n\t\t\t\tthis._y = Math.atan2(m13, m11);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2(- m23, m33);\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn('Euler: .setFromRotationMatrix() given unsupported order: ' + order);\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif (update !== false) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromQuaternion = function () {\r\n\r\n\t\tvar matrix = new Matrix4();\r\n\r\n\t\treturn function setFromQuaternion(q:Quaternion, order, update) {\r\n\r\n\t\t\tmatrix.makeRotationFromQuaternion(q);\r\n\r\n\t\t\treturn this.setFromRotationMatrix(matrix, order, update);\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n\tsetFromVector3(v, order: RotationOrders) {\r\n\t\treturn this.set(v.x, v.y, v.z, order || this._order);\r\n\t}\r\n\r\n\treorder = function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new Quaternion();\r\n\r\n\t\treturn function reorder(newOrder) {\r\n\r\n\t\t\tq.setFromEuler(this);\r\n\r\n\t\t\treturn this.setFromQuaternion(q, newOrder);\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n\tequals(euler) {\r\n\r\n\t\treturn (euler._x === this._x) && (euler._y === this._y) && (euler._z === this._z) && (euler._order === this._order);\r\n\r\n\t}\r\n\r\n\tfromArray(array) {\r\n\r\n\t\tthis._x = array[0];\r\n\t\tthis._y = array[1];\r\n\t\tthis._z = array[2];\r\n\t\tif (array[3] !== undefined) this._order = array[3];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray(array, offset) {\r\n\r\n\t\tif (array === undefined) array = [];\r\n\t\tif (offset === undefined) offset = 0;\r\n\r\n\t\tarray[offset] = this._x;\r\n\t\tarray[offset + 1] = this._y;\r\n\t\tarray[offset + 2] = this._z;\r\n\t\tarray[offset + 3] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\ttoVector3(optionalResult) {\r\n\r\n\t\tif (optionalResult) {\r\n\r\n\t\t\treturn optionalResult.set(this._x, this._y, this._z);\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new Vector3(this._x, this._y, this._z);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonChange(callback) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tonChangeCallback() {\r\n\r\n\t}\r\n}","import { Vector3 } from './Vector3';\r\nimport { Sphere } from './Sphere';\r\nimport { Box3 } from './Box3';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport class Ray {\r\n\tconstructor(\r\n\t\tpublic origin: Vector3 = new Vector3(),\r\n\t\tpublic direction: Vector3 = new Vector3()\r\n\t) { }\r\n\tset(origin: Vector3, direction: Vector3) {\r\n\t\tthis.origin.copy(origin);\r\n\t\tthis.direction.copy(direction);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new Ray().copy(this);\r\n\t}\r\n\tcopy(ray: Ray) {\r\n\t\tthis.origin.copy(ray.origin);\r\n\t\tthis.direction.copy(ray.direction);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tat(t: number, target: Vector3) {\r\n\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\r\n\t}\r\n\tlookAt(v: Vector3) {\r\n\t\tthis.direction.copy(v).sub(this.origin).normalize();\r\n\t\treturn this;\r\n\t}\r\n\trecast(t: number) {\r\n\t\tvar v1 = new Vector3();\r\n\t\tthis.origin.copy(this.at(t, v1));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclosestPointToPoint(point: Vector3, out: Vector3 = new Vector3()) {\r\n\r\n\t\tout.subVectors(point, this.origin);\r\n\r\n\t\tvar directionDistance = out.dot(this.direction);\r\n\r\n\t\tif (directionDistance < 0) return out.copy(this.origin);\r\n\r\n\t\treturn out.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n\t}\r\n\r\n\tdistanceToPoint(point: Vector3) {\r\n\t\treturn Math.sqrt(this.distanceSqToPoint(point));\r\n\t}\r\n\r\n\tdistanceSqToPoint(point: Vector3) {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\r\n\t\tvar directionDistance = v1.subVectors(point, this.origin).dot(this.direction);\r\n\r\n\t\t// point behind the ray\r\n\r\n\t\tif (directionDistance < 0) {\r\n\r\n\t\t\treturn this.origin.distanceToSquared(point);\r\n\r\n\t\t}\r\n\r\n\t\tv1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n\r\n\t\treturn v1.distanceToSquared(point);\r\n\r\n\t};\r\n\r\n\tintersectSphere(sphere: Sphere, out: Vector3) {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tv1.subVectors(sphere.center, this.origin);\r\n\t\tvar tca = v1.dot(this.direction);\r\n\t\tvar d2 = v1.dot(v1) - tca * tca;\r\n\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\tif (d2 > radius2) return null;\r\n\r\n\t\tvar thc = Math.sqrt(radius2 - d2);\r\n\r\n\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\tvar t0 = tca - thc;\r\n\r\n\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\tvar t1 = tca + thc;\r\n\r\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\tif (t0 < 0 && t1 < 0) return null;\r\n\r\n\t\t// test to see if t0 is behind the ray:\r\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\tif (t0 < 0) return this.at(t1, out);\r\n\r\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\treturn this.at(t0, out);\r\n\t};\r\n\r\n\tintersectsSphere(sphere: Sphere) {\r\n\t\treturn this.distanceSqToPoint(sphere.center) <= (sphere.radius * sphere.radius);\r\n\t}\r\n\r\n\tintersectBox(box: Box3, out: Vector3) {\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif (invdirx >= 0) {\r\n\r\n\t\t\ttmin = (box.min.x - origin.x) * invdirx;\r\n\t\t\ttmax = (box.max.x - origin.x) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = (box.max.x - origin.x) * invdirx;\r\n\t\t\ttmax = (box.min.x - origin.x) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif (invdiry >= 0) {\r\n\r\n\t\t\ttymin = (box.min.y - origin.y) * invdiry;\r\n\t\t\ttymax = (box.max.y - origin.y) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = (box.max.y - origin.y) * invdiry;\r\n\t\t\ttymax = (box.min.y - origin.y) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ((tmin > tymax) || (tymin > tmax)) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\r\n\r\n\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\r\n\r\n\t\tif (invdirz >= 0) {\r\n\r\n\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\r\n\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\r\n\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ((tmin > tzmax) || (tzmin > tmax)) return null;\r\n\r\n\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\r\n\r\n\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif (tmax < 0) return null;\r\n\r\n\t\treturn this.at(tmin >= 0 ? tmin : tmax, out);\r\n\r\n\t}\r\n\r\n\tintersectsBox(box: Box3) {\r\n\t\treturn this.intersectBox(box, new Vector3()) !== null;\r\n\t};\r\n\r\n\tintersectTriangle(\r\n\t\ta:Vector3,\r\n\t\tb:Vector3,\r\n\t\tc:Vector3,\r\n\t\tbackfaceCulling:boolean,\r\n\t\tout:Vector3\r\n\t) {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new Vector3();\r\n\t\tvar edge1 = new Vector3();\r\n\t\tvar edge2 = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\r\n\r\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\tedge1.subVectors(b, a);\r\n\t\tedge2.subVectors(c, a);\r\n\t\tnormal.crossVectors(edge1, edge2);\r\n\r\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\tvar DdN = this.direction.dot(normal);\r\n\t\tvar sign;\r\n\r\n\t\tif (DdN > 0) {\r\n\r\n\t\t\tif (backfaceCulling) return null;\r\n\t\t\tsign = 1;\r\n\r\n\t\t} else if (DdN < 0) {\r\n\r\n\t\t\tsign = - 1;\r\n\t\t\tDdN = - DdN;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tdiff.subVectors(this.origin, a);\r\n\t\tvar DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2));\r\n\r\n\t\t// b1 < 0, no intersection\r\n\t\tif (DdQxE2 < 0) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar DdE1xQ = sign * this.direction.dot(edge1.cross(diff));\r\n\r\n\t\t// b2 < 0, no intersection\r\n\t\tif (DdE1xQ < 0) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// b1+b2 > 1, no intersection\r\n\t\tif (DdQxE2 + DdE1xQ > DdN) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Line intersects triangle, check if ray does.\r\n\t\tvar QdN = - sign * diff.dot(normal);\r\n\r\n\t\t// t < 0, no intersection\r\n\t\tif (QdN < 0) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Ray intersects triangle.\r\n\t\treturn this.at(QdN / DdN, out);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tapplyMatrix4(matrix4: Matrix4) {\r\n\t\tthis.origin.applyMatrix4(matrix4);\r\n\t\tthis.direction.transformDirection(matrix4);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tequals(ray: Ray) {\r\n\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\r\n\t}\r\n}\r\n\r\n\r\n// function vec3Cross(v1, v2) {\r\n//     v1 = v1.elements;\r\n//     v2 = v2.elements;\r\n//     return new Vector3([\r\n//         v1[1] * v2[2] - v1[2] * v2[1],\r\n//         v1[2] * v2[0] - v1[0] * v2[2],\r\n//         v1[0] * v2[1] - v1[1] * v2[0],\r\n//     ])\r\n// }\r\n\r\n// function vec3Sub(v1, v2) {\r\n//     v1 = v1.elements;\r\n//     v2 = v2.elements\r\n//     return new Vector3([v1[0] - v2[0], v1[1] - v2[1], v1[2] - v2[2]]);\r\n// }\r\n\r\n// function vec3Dot(v1, v2) {\r\n//     v1 = v1.elements;\r\n//     v2 = v2.elements\r\n//     return v1[0] * v2[0] + v1[1] + v2[1] + v1[2] + v2[2];\r\n// }\r\n\r\n// // Determine whether a ray intersect with a triangle\r\n// // Parameters\r\n// // orig: origin of the ray\r\n// // dir: direction of the ray\r\n// // v0, v1, v2: vertices of triangle\r\n// // t(out): weight of the intersection for the ray\r\n// // u(out), v(out): barycentric coordinate of intersection\r\n\r\n// function intersectTriangle(orig, dir, v0, v1, v2) {\r\n//     let t, u, v;\r\n\r\n//     // E1\r\n//     const E1 = vec3Sub(v1, v0);\r\n\r\n//     // E2\r\n//     const E2 = vec3Sub(v2, v0);\r\n\r\n//     // P\r\n//     const P = vec3Cross(dir, E2);\r\n\r\n//     // determinant\r\n//     let det = vec3Dot(E1, P);\r\n\r\n//     // keep det > 0, modify T accordingly\r\n//     let T;\r\n//     if (det > 0) {\r\n//         T = vec3Sub(orig, v0);\r\n//     } else {\r\n//         T = vec3Sub(v0, orig);\r\n//         det = -det;\r\n//     }\r\n\r\n//     // If determinant is near zero, ray lies in plane of triangle\r\n//     if (det < 0.0001) return false;\r\n\r\n//     // Calculate u and make sure u <= 1\r\n//     u = vec3Dot(T, P);\r\n//     if (u < 0.0 || u > det) return false;\r\n\r\n//     // Q\r\n//     const Q = vec3Cross(T, E1);\r\n\r\n//     // Calculate v and make sure u + v <= 1\r\n//     v = vec3Dot(dir, Q);\r\n//     if (v < 0.0 || u + v > det) return false;\r\n\r\n//     // Calculate t, scale parameters, ray intersects triangle\r\n//     t = vec3Dot(E2, Q);\r\n\r\n//     const fInvDet = 1.0 / det;\r\n\r\n//     t *= fInvDet;\r\n//     u *= fInvDet;\r\n//     v *= fInvDet;\r\n\r\n//     console.log(t, u, v);\r\n\r\n//     return true;\r\n// }\r\n\r\n// const intersect = intersectTriangle(\r\n//     new Vector3([0, 0, 0]), new Vector3([0, 0, 1]),\r\n//     new Vector3([-1, 1, 1]),\r\n//     new Vector3([1, 1, 1]),\r\n//     new Vector3([0, -1, 1]),\r\n// );\r\n\r\n// console.log(intersect);\r\n\r\n\r\n\r\n","import { Object3D } from \"./Object3D\";\r\nimport { Camera } from \"./cameras/Camera\";\r\nimport { PerspectiveCamera } from \"./cameras/PerspectiveCamera\";\r\nimport { WebglRenderer } from \"../2d/renderers/WebglRenderer\";\r\nimport { D3Renderer } from \"./D3Renderer\";\r\nimport { Light } from \"./lights/Light\";\r\nimport { PointLight } from \"./lights/PointLight\";\r\nimport { DirectionalLight } from \"./lights/DirectionalLight\";\r\nimport { Vector3 } from \"./math/Vector3\";\r\nimport { Point, Matrix, Rectangle } from \"../2d/math\";\r\nimport { Vector2 } from \"./math/Vector2\";\r\nimport { MouseEvent } from \"../2d/events\";\r\nimport { Raycaster } from \"./Raycaster\";\r\nimport { Filter } from \"../2d/filter\";\r\nimport { hex2rgb } from \"../2d/utils\";\r\n\r\n\r\n/**\r\n * 作为3D的顶级容器，不能被object3D添加，自身不能添加其他2D元素\r\n * 带透明度的融合有问题，尽量自行调整渲染顺序\r\n */\r\nexport class Scene3D extends Object3D {\r\n    private _viewId: number = -1;\r\n    /**\r\n     * gl的视窗数据记录，是左下角开始，以防混淆不用Rectangle\r\n     */\r\n    private _viewport: { x: number, y: number, width: number, height: number };\r\n    private _viewX: number = 0;\r\n    get viewX() {\r\n        return this._viewX;\r\n    }\r\n    set viewX(value: number) {\r\n        value = value || 0;\r\n        if (this._viewX === value) return;\r\n        this._viewX = value;\r\n        this._viewId = -1;\r\n    }\r\n    private _viewY: number = 0;\r\n    get viewY() {\r\n        return this._viewY;\r\n    }\r\n    set viewY(value: number) {\r\n        value = value || 0;\r\n        if (this._viewY === value) return;\r\n        this._viewY = value;\r\n        this._viewId = -1;\r\n    }\r\n\r\n    private _viewWidth: number = 750;\r\n    get viewWidth() {\r\n        return this._viewWidth;\r\n    }\r\n    set viewWidth(value: number) {\r\n        value = value || 0;\r\n        if (this._viewWidth === value) return;\r\n        this._viewWidth = value;\r\n        this._viewId = -1;\r\n    }\r\n    private _viewHeight: number = 1624;\r\n    get viewHeight() {\r\n        return this._viewHeight;\r\n    }\r\n    set viewHeight(value: number) {\r\n        value = value || 0;\r\n        if (this._viewHeight === value) return;\r\n        this._viewHeight = value;\r\n        this._viewId = -1;\r\n    }\r\n    setViewRect(x: number, y: number, width: number, height: number) {\r\n        this.viewX = x;\r\n        this.viewY = y;\r\n        this.viewWidth = width;\r\n        this.viewHeight = height;\r\n        this._viewId = -1;\r\n    }\r\n    private _fog: { color: Float32Array, near: number, far: number /*density: number*/ }\r\n    setFog(color: number = 0xffffff, near: number = 0, far: number = 100 /*density: number = 0.00025*/) {\r\n        var arr = hex2rgb(color)\r\n        if (this._fog) {\r\n            this._fog.color[0] = arr[0];\r\n            this._fog.color[1] = arr[1];\r\n            this._fog.color[2] = arr[2];\r\n            // this._fog.density = density\r\n            this._fog.near = near;\r\n            this._fog.far = far;\r\n        } else {\r\n            this._fog = { color: new Float32Array(arr), near, far/*density*/ }\r\n        }\r\n    }\r\n    removeFog() {\r\n        this._fog = null;\r\n    }\r\n\r\n    /**\r\n     * 父级是2d元素，用于修改视窗位置\r\n     */\r\n    parent: any\r\n\r\n    visible: boolean = true\r\n    /**\r\n     * 相机\r\n     */\r\n    camera: Camera;\r\n\r\n    private raycaster: Raycaster = new Raycaster();\r\n\r\n    /**\r\n     * 滤镜数组\r\n     */\r\n    private _filters: Filter[];\r\n    get filters(): Filter[] { return this._filters && this._filters.slice(); }\r\n    set filters(value: Filter[]) { this._filters = value && value.slice(); }\r\n    /**\r\n     * 可用的滤镜数据，_filters筛选过的\r\n     */\r\n    protected _enabledFilters: Filter[];\r\n    constructor() {\r\n        super()\r\n        this._instanceType = \"Scene3D\";\r\n        this.scene = this;\r\n        //@ts-ignore为了添加进容器时候的操作，做个兼容\r\n        this.transform = { _parentId: 0 }\r\n        this.camera = new PerspectiveCamera();\r\n    }\r\n    //只处理自己的xy坐标\r\n    updateTransform() {\r\n        if (!this.visible) return\r\n        //子级统统自己的更新方法\r\n        this.updateWorldMatrix();\r\n    }\r\n\r\n    renderWebGL(renderer: WebglRenderer) {\r\n        if (!this.visible) return\r\n\r\n        //切换渲染插件\r\n        var plugin: D3Renderer = renderer.plugins[\"d3\"];\r\n        //传入camera数据，着色器各自传\r\n        this.camera.updateWorldMatrix();\r\n        plugin.camera = this.camera;\r\n        //处理所有灯，只找同一级的？还是递归找灯\r\n        plugin.lightsConfig = this.getLightConfig();\r\n        //雾化\r\n        plugin.fog = this._fog || null;\r\n\r\n        //设置插件，会调用start，如果是两个场景，会有问题，因为是同一个插件不会flush上一个，到时注意修改\r\n        renderer.batchManager.setObjectRenderer(plugin);\r\n\r\n\r\n        this.setViewport(renderer);\r\n\r\n        //处理子级东西\r\n        if (this.filters && this.filters.length) {\r\n            //估计没必要\r\n            // renderer.batchManager.flush();\r\n            const filters = this.filters;\r\n            if (filters) {\r\n                if (!this._enabledFilters) this._enabledFilters = [];\r\n                //重置\r\n                this._enabledFilters.length = 0;\r\n                //筛选可用的\r\n                for (let i = 0; i < filters.length; i++) {\r\n                    if (filters[i].enabled) this._enabledFilters.push(filters[i]);\r\n                }\r\n                //@ts-ignore\r\n                if (this._enabledFilters.length) renderer.filterManager.pushFilter(this, this._enabledFilters);\r\n            }\r\n            this.render(renderer);\r\n            //刷掉批处理\r\n            renderer.batchManager.flush();\r\n            //移除滤镜\r\n            if (filters && this._enabledFilters && this._enabledFilters.length) renderer.filterManager.popFilter();\r\n        } else {\r\n            this.render(renderer);\r\n        }\r\n\r\n    }\r\n    setViewport(renderer: WebglRenderer) {\r\n        if (this._viewId !== this.parent.transform._worldID) {\r\n            this._viewId = this.parent.transform._worldID;\r\n            var pt = this.parent.transform.worldMatrix;\r\n            var x = (this.viewX * pt.a) + (this.viewY * pt.c) + pt.tx;\r\n            var y = (this.viewX * pt.b) + (this.viewY * pt.d) + pt.ty;\r\n            //计算实际的viewWidth和viewHeight，简单点直接是父级的缩放，还是要全局的缩放，如果只在舞台\r\n            var scaleX = Math.sqrt((pt.a * pt.a) + (pt.b * pt.b));\r\n            var scaleY = Math.sqrt((pt.c * pt.c) + (pt.d * pt.d));\r\n            //记录\r\n            this._viewport = {\r\n                x,\r\n                y: renderer.height - y - this.viewHeight * scaleY,\r\n                width: this.viewWidth * scaleX,\r\n                height: this.viewHeight * scaleY\r\n            }\r\n        }\r\n        this._viewport && renderer.gl.viewport(\r\n            this._viewport.x,\r\n            this._viewport.y,\r\n            this._viewport.width,\r\n            this._viewport.height\r\n        );\r\n    }\r\n\r\n    getBounds() {\r\n        var pt = this.parent.transform.worldMatrix;\r\n        var y = (this.viewX * pt.b) + (this.viewY * pt.d) + pt.ty;\r\n        return new Rectangle(this._viewport.x, y, this._viewport.width, this._viewport.height)\r\n    }\r\n    getLightConfig(\r\n        con: Object3D = this,\r\n        arr: LightsConfig = { pointLights: [], directionalLights: [], ambientLightColor: [0, 0, 0] }\r\n    ) {\r\n        var viewMatrix = this.camera.worldMatrixInverse;\r\n        for (var i = 0; i < con.children.length; i++) {\r\n            var c = con.children[i] as Light;\r\n            if (c instanceof Light) {\r\n                var color: number[] = c.colorVec3.clone().multiplyScalar(c.intensity).toArray();\r\n                if (c.instanceType == \"AmbientLight\") {\r\n                    arr.ambientLightColor[0] += color[0];\r\n                    arr.ambientLightColor[1] += color[1];\r\n                    arr.ambientLightColor[2] += color[2];\r\n                }\r\n                else if (c.instanceType == \"PointLight\") {\r\n                    var position: Vector3 = new Vector3().setFromMatrixPosition(c._worldMatrix);\r\n                    position.applyMatrix4(viewMatrix);//这步是否需要，待测试\r\n                    arr.pointLights.push({\r\n                        color: color,\r\n                        position: position.toArray(),\r\n                        distance: c[\"distance\"],\r\n                        decay: c[\"distance\"] === 0 ? 0.0 : c[\"decay\"],\r\n                    })\r\n                }\r\n                else if (c.instanceType == \"DirectionalLight\") {\r\n                    var direction: Vector3 = new Vector3().setFromMatrixPosition(c._worldMatrix);\r\n                    direction.sub(new Vector3().setFromMatrixPosition(c[\"target\"]._worldMatrix));\r\n                    direction.transformDirection(viewMatrix);\r\n                    arr.directionalLights.push({\r\n                        color: color,\r\n                        direction: direction.normalize().toArray(),\r\n                        castShadow: c.castShadow\r\n                    })\r\n                }\r\n            }\r\n            if (c.children && c.children.length) this.getLightConfig(c, arr);\r\n        }\r\n        return arr\r\n    }\r\n    /**\r\n     * 点击事件，只算场景的先，待mesh等写完所有2d包围盒再说，将几何转成2d的点后，根据索引的所有三角面计算是否选中\r\n     * @param globalPoint \r\n     * @param isMouseEvent \r\n     */\r\n    hitTestPoint(globalPoint: Point, isMouseEvent: boolean = false) {\r\n        if (!this.parent || !this.mouseEnable) return null;\r\n        //转成全局\r\n        var pt = this.parent.transform.worldMatrix;\r\n        var x = (this.viewX * pt.a) + (this.viewY * pt.c) + pt.tx;\r\n        var y = (this.viewX * pt.b) + (this.viewY * pt.d) + pt.ty;\r\n        //计算实际的viewWidth和viewHeight，简单点直接是父级的缩放，还是要全局的缩放，如果只在舞台\r\n        var scaleX = Math.sqrt((pt.a * pt.a) + (pt.b * pt.b));\r\n        var scaleY = Math.sqrt((pt.c * pt.c) + (pt.d * pt.d));\r\n        var w = this.viewWidth * scaleX;\r\n        var h = this.viewHeight * scaleY;\r\n\r\n        if (globalPoint.x >= x && globalPoint.x <= (x + w) && globalPoint.y >= y && globalPoint.y <= (y + h)) {\r\n        } else {\r\n            return null;\r\n        }\r\n        //检查场景中的\r\n        if (this.mouseChildren) {\r\n            //canvas上的坐标，转成视窗内的坐标，暂时不管旋转的，也不允许scene3D视窗旋转\r\n            x = ((globalPoint.x - x) / w) * 2 - 1;\r\n            y = - ((globalPoint.y - y) / h) * 2 + 1;\r\n            this.raycaster.setFromCamera(new Vector3(x, y, 0.5), this.camera);\r\n            //只需要距离最近的那个就行\r\n            var arr = this.raycaster.intersectObject(this)\r\n            if (arr.length) return arr[0].object\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private orbitControlConfig: IOrbitControlConfig;\r\n    setOrbCtrCfg(options: IOrbitControlConfig) {\r\n        const cfg = this.orbitControlConfig;\r\n        if (!cfg || !options) return;\r\n        for (var key in options) {\r\n            if (cfg[key] !== undefined) cfg[key] = options[key];\r\n        }\r\n    }\r\n    //相机控件\r\n    setOrbitControl(options?: IOrbitControlConfig) {\r\n        if (this.orbitControlConfig) return;\r\n        this.orbitControlConfig = {\r\n            enabled: true,\r\n            enableDamping: true,\r\n            dampingFactor: 0.25,\r\n            userZoom: true,\r\n            userZoomSpeed: 1.0,\r\n            userRotate: true,\r\n            userRotateSpeed: 1.0,\r\n            autoRotate: false,\r\n            autoRotateSpeed: 2.0,\r\n            //最小旋转角\r\n            minPolarAngle: 0,\r\n            //最大旋转角\r\n            maxPolarAngle: Math.PI,\r\n            minDistance: 0,\r\n            maxDistance: Infinity,\r\n            enablePitch: true\r\n        }\r\n        //设置属性\r\n        this.setOrbCtrCfg(options);\r\n        const cfg = this.orbitControlConfig;\r\n        // pitch，yaw，roll;为俯仰角，偏航角，翻滚角\r\n\r\n        // panOffset.multiplyScalar( 1 - scope.dampingFactor );\r\n\r\n        //相机目标点\r\n        var center = new Vector3();\r\n\r\n        // this.userPan = true;\r\n        // this.userPanSpeed = 2.0;\r\n\r\n\r\n\r\n        var EPS = 0.000001;\r\n        var PIXELS_PER_ROUND = 1800;\r\n\r\n        var rotateStart = new Vector2();\r\n        var rotateEnd = new Vector2();\r\n        var rotateDelta = new Vector2();\r\n\r\n        var phiDelta = 0;\r\n        var thetaDelta = 0;\r\n        var scale = 1;\r\n\r\n        function getAutoRotationAngle() {\r\n            return 2 * Math.PI / 60 / 60 * cfg.autoRotateSpeed;\r\n        }\r\n\r\n        function getZoomScale() {\r\n            return Math.pow(0.95, cfg.userZoomSpeed);\r\n        }\r\n\r\n        function rotateLeft(angle: number = getAutoRotationAngle()) {\r\n            thetaDelta -= angle;\r\n        };\r\n\r\n\r\n        function rotateUp(angle: number = getAutoRotationAngle()) {\r\n            phiDelta -= angle;\r\n        };\r\n\r\n        function zoomIn(zoomScale: number = getZoomScale()) {\r\n            scale /= zoomScale;\r\n        };\r\n        function zoomOut(zoomScale: number = getZoomScale()) {\r\n            scale *= zoomScale;\r\n        };\r\n\r\n        let update = () => {\r\n            if (\r\n                Math.abs(thetaDelta) < 0.0001 &&\r\n                Math.abs(phiDelta) < 0.0001 &&\r\n                Math.abs(scale - 1) < 0.0001 &&\r\n                !cfg.autoRotate\r\n            ) {\r\n                return\r\n            }\r\n\r\n            var position = this.camera.position;\r\n            var offset = position.clone().sub(center);\r\n            var theta = Math.atan2(offset.x, offset.z);\r\n            var phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\r\n\r\n            if (cfg.autoRotate) rotateLeft();\r\n\r\n            theta += thetaDelta;\r\n            phi += phiDelta;\r\n\r\n            phi = Math.max(cfg.minPolarAngle, Math.min(cfg.maxPolarAngle, phi));\r\n\r\n            phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\r\n\r\n            var radius = offset.length() * scale;\r\n\r\n            // restrict radius to be between desired limits\r\n            radius = Math.max(cfg.minDistance, Math.min(cfg.maxDistance, radius));\r\n\r\n            offset.x = radius * Math.sin(phi) * Math.sin(theta);\r\n            offset.y = radius * Math.cos(phi);\r\n            offset.z = radius * Math.sin(phi) * Math.cos(theta);\r\n\r\n            //相机位置\r\n            position.copy(center).add(offset);\r\n\r\n            //相机目标点\r\n            this.camera.lookAt(center.x, center.y, center.z);\r\n\r\n            //恢复\r\n            if (cfg.enableDamping) {\r\n                thetaDelta *= (1 - cfg.dampingFactor);\r\n                phiDelta *= (1 - cfg.dampingFactor);\r\n            } else {\r\n                thetaDelta = 0;\r\n                phiDelta = 0;\r\n            }\r\n\r\n            scale = 1;\r\n            // if (lastPosition.distanceTo(this.object.position) > 0) {\r\n            //     this.dispatchEvent(changeEvent);\r\n            //     lastPosition.copy(this.object.position);\r\n            // }\r\n        };\r\n\r\n        //记录两个手指唯一标识\r\n        let fingles: { x: number, y: number, id: number }[] = [];\r\n        let deltaDis: number = 0;\r\n        //事件，暂时只有旋转，其他判断先不要了\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, (e: MouseEvent) => {\r\n            if (!cfg.enabled) return\r\n            fingles.push({ x: e.clientX, y: e.clientY, id: e.identifier })\r\n            if (fingles.length >= 2) {\r\n                let f1 = fingles[fingles.length - 1];\r\n                let f2 = fingles[fingles.length - 2];\r\n                deltaDis = Math.sqrt(Math.pow(f1.x - f2.x, 2) + Math.pow(f1.y - f2.y, 2));\r\n            }\r\n            // e.stopPropagation();\r\n            rotateStart.set(e.clientX, e.clientY);\r\n        }, this);\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_MOVE, (e: MouseEvent) => {\r\n            if (!cfg.enabled) return\r\n            if (!fingles.length) return;\r\n            if (fingles.length == 1) {\r\n                if (!cfg.userRotate) return;\r\n                if (!rotateStart.x && !rotateStart.y) return\r\n                rotateEnd.set(e.clientX, e.clientY);\r\n                rotateDelta.subVectors(rotateEnd, rotateStart);\r\n                rotateLeft(2 * Math.PI * rotateDelta.x / PIXELS_PER_ROUND * cfg.userRotateSpeed);\r\n                if (cfg.enablePitch) rotateUp(2 * Math.PI * rotateDelta.y / PIXELS_PER_ROUND * cfg.userRotateSpeed);\r\n                rotateStart.copy(rotateEnd);\r\n                //更新\r\n                // update();\r\n            }\r\n            //多指，取最后两个，如果两个都移动，怎么保证就一个刷新\r\n            else {\r\n                if (cfg.userZoom === false) return;\r\n                var oneF = fingles[fingles.length - 1];\r\n                var twoF = fingles[fingles.length - 2];\r\n                if (e.identifier == oneF.id) {\r\n                    oneF.x = e.clientX\r\n                    oneF.y = e.clientY\r\n                } else if (e.identifier == twoF.id) {\r\n                    twoF.x = e.clientX\r\n                    twoF.y = e.clientY\r\n                } else {\r\n                    return\r\n                }\r\n                var cDelta = Math.sqrt(Math.pow(oneF.x - twoF.x, 2) + Math.pow(oneF.y - twoF.y, 2));\r\n                if (cDelta - deltaDis > 0) {\r\n                    zoomOut(Math.pow(0.95, cfg.userZoomSpeed / 3));//手势的执行太快了\r\n                } else {\r\n                    zoomIn(Math.pow(0.95, cfg.userZoomSpeed / 3));\r\n                }\r\n                //更新\r\n                // update();\r\n                deltaDis = cDelta;\r\n            }\r\n\r\n        }, this)\r\n        let up = (e: MouseEvent) => {//淘宝有bug，全部移除先\r\n            fingles.length = 0;\r\n            // for (var i = 0; i < fingles.length; i++) {\r\n            //     if (fingles[i].id == e.identifier) {\r\n            //         fingles.splice(i, 1);\r\n            //         rotateStart.set(0, 0);\r\n            //         return;\r\n            //     }\r\n            // }\r\n\r\n        }\r\n        this.addEventListener(MouseEvent.MOUSE_UP, up, this)\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, up, this)\r\n        //加个自动旋转的\r\n        this.addEventListener(MouseEvent.ENTER_FRAME, () => {\r\n            /*if (autoRotate)*/ update()\r\n        }, this)\r\n\r\n        //监听下滚轮\r\n        if (document) document.addEventListener('mousewheel', (event) => {\r\n            if (!cfg.enabled || !cfg.userZoom) return;\r\n            var delta = 0;\r\n            // event.preventDefault();\r\n            if (event[\"wheelDelta\"]) { // WebKit / Opera / Explorer 9\r\n                delta = event[\"wheelDelta\"];\r\n            } else if (event[\"detail\"]) { // Firefox\r\n                delta = - event[\"detail\"];\r\n            }\r\n            if (delta > 0) {\r\n                zoomOut();\r\n            } else {\r\n                zoomIn();\r\n            }\r\n            // update();\r\n        }, false);\r\n    }\r\n}\r\n\r\nexport interface IOrbitControlConfig {\r\n\r\n    enabled?: boolean,\r\n    enableDamping?: boolean,\r\n    dampingFactor?: number,\r\n    userZoom?: boolean,\r\n    userZoomSpeed?: number,\r\n\r\n    userRotate?: boolean,\r\n    userRotateSpeed?: number,\r\n\r\n    autoRotate?: boolean,\r\n    autoRotateSpeed?: number,\r\n\r\n    minPolarAngle?: number,\r\n    maxPolarAngle?: number,\r\n\r\n    minDistance?: number,\r\n    maxDistance?: number,\r\n\r\n    enablePitch?: boolean\r\n}\r\n\r\n\r\n\r\nexport interface LightsConfig {\r\n    pointLights: PointLightConfig[],\r\n    directionalLights: DirectionalLightConfig[],\r\n    ambientLightColor: number[],\r\n}\r\n\r\ninterface PointLightConfig {\r\n    color: number[],//光源颜色\r\n    position: number[],//点光源位置\r\n    distance: number,//最大光源距离\r\n    decay: number,//衰减系数，默认1，最佳2\r\n}\r\n\r\ninterface DirectionalLightConfig {\r\n    direction: number[],\r\n    color: number[],\r\n    castShadow: boolean\r\n}\r\n\r\n\r\n\r\n// window['$'].ajax({\r\n//     type: \"get\",\r\n//     url: \"//embedlog.duiba.com.cn/exposure/standard\",\r\n//     dataType: \"jsonp\",\r\n//     data: {\r\n//         dpm: 72915 + '.' + 110 + '.' + 1 + '.' + 1,\r\n//         dcm: 202 + '.' + 1 + '.' + 0 + '.' + 0,\r\n//         appId: 72915,\r\n//         domain: '//embedlog.duiba.com.cn'\r\n//     },\r\n//     async: true,\r\n//     success: (result) => {\r\n\r\n//     },\r\n//     error: (message) => {\r\n\r\n//     }\r\n// });","import { BaseMaterial } from \"./BaseMaterial\";\r\n\r\n\r\nexport class LightMaterial extends BaseMaterial {\r\n    constructor(parameters?) {\r\n        super(parameters);\r\n        this._instanceType = \"LightMaterial\";\r\n        this._lightAffect = true;\r\n    }\r\n    clone() {\r\n        return new LightMaterial().copy(this);\r\n    }\r\n}","/**\r\n * 判断是否是类型化数组\r\n * @param {*} object \r\n */\r\nexport function isTypedArray(object: any): boolean {\r\n    return ArrayBuffer.isView(object) &&\r\n        !(object instanceof DataView);\r\n}\r\n\r\n/**\r\n * 截取数组\r\n * @param array \r\n * @param from \r\n * @param to \r\n */\r\nexport function arraySlice(array, from: number, to?: number) {\r\n    if (isTypedArray(array)) {\r\n        // in ios9 array.subarray(from, undefined) will return empty array\r\n        // but array.subarray(from) or array.subarray(from, len) is correct\r\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\r\n    }\r\n    return array.slice(from, to);\r\n}\r\n\r\n// converts an array to a specific type\r\nexport function convertArray(array, type, forceClone?: boolean) {\r\n    if (!array || // let 'undefined' and 'null' pass\r\n        !forceClone && array.constructor === type) return array;\r\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\r\n        return new type(array); // create typed array\r\n    }\r\n    return Array.prototype.slice.call(array); // create Array\r\n}\r\n\r\n// function for parsing AOS keyframe formats\r\nexport function flattenJSON(jsonKeys, times, values, valuePropertyName) {\r\n\r\n    var i = 1, key = jsonKeys[0];\r\n\r\n    while (key !== undefined && key[valuePropertyName] === undefined) {\r\n\r\n        key = jsonKeys[i++];\r\n\r\n    }\r\n\r\n    if (key === undefined) return; // no data\r\n\r\n    var value = key[valuePropertyName];\r\n    if (value === undefined) return; // no data\r\n\r\n    if (Array.isArray(value)) {\r\n\r\n        do {\r\n\r\n            value = key[valuePropertyName];\r\n\r\n            if (value !== undefined) {\r\n\r\n                times.push(key.time);\r\n                values.push.apply(values, value); // push all elements\r\n\r\n            }\r\n\r\n            key = jsonKeys[i++];\r\n\r\n        } while (key !== undefined);\r\n\r\n    } else if (value.toArray !== undefined) {\r\n\r\n        // ...assume THREE.Math-ish\r\n\r\n        do {\r\n\r\n            value = key[valuePropertyName];\r\n\r\n            if (value !== undefined) {\r\n\r\n                times.push(key.time);\r\n                value.toArray(values, values.length);\r\n\r\n            }\r\n\r\n            key = jsonKeys[i++];\r\n\r\n        } while (key !== undefined);\r\n\r\n    } else {\r\n\r\n        // otherwise push as-is\r\n\r\n        do {\r\n\r\n            value = key[valuePropertyName];\r\n\r\n            if (value !== undefined) {\r\n\r\n                times.push(key.time);\r\n                values.push(value);\r\n\r\n            }\r\n\r\n            key = jsonKeys[i++];\r\n\r\n        } while (key !== undefined);\r\n\r\n    }\r\n\r\n}\r\n\r\n// returns an array by which times and values can be sorted\r\nexport function getKeyframeOrder(times) {\r\n\r\n    function compareTime(i, j) {\r\n\r\n        return times[i] - times[j];\r\n\r\n    }\r\n\r\n    var n = times.length;\r\n    var result = new Array(n);\r\n    for (var i = 0; i !== n; ++i) result[i] = i;\r\n\r\n    result.sort(compareTime);\r\n\r\n    return result;\r\n\r\n}\r\n\r\n// uses the array previously returned by 'getKeyframeOrder' to sort data\r\nexport function sortedArray(values, stride, order) {\r\n    var nValues = values.length;\r\n    var result = new values.constructor(nValues);\r\n\r\n    for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\r\n\r\n        var srcOffset = order[i] * stride;\r\n\r\n        for (var j = 0; j !== stride; ++j) {\r\n\r\n            result[dstOffset++] = values[srcOffset + j];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n}\r\n\r\nexport var InterpolateDiscrete = 2300;\r\nexport var InterpolateLinear = 2301;\r\nexport var InterpolateSmooth = 2302;","import { HashObject } from \"../../2d/HashObject\";\r\nimport { Object3D } from \"../Object3D\";\r\nimport { Mesh3D } from \"../Mesh3D\";\r\nimport { clamp } from \"../../2d/utils\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { IAnimationTrack } from \"../../2d/AnimationClip\";\r\n/**\r\n * 动画类型\r\n */\r\nexport enum AnimationType3D {\r\n    /**\r\n     * 旋转\r\n     */\r\n    quaternion = \"quaternion\",\r\n    /**\r\n     * 缩放\r\n     */\r\n    scale = \"scale\",\r\n    /**\r\n     * 顶点权重\r\n     */\r\n    morphTargetInfluences = 'morphTargetInfluences',\r\n    /**\r\n     * 位移\r\n     */\r\n    position = \"position\"\r\n}\r\n/**\r\n * 记录动画的轨迹，实时计算，还是用每帧的，暂时按时间间隔来搞，实时计算吧\r\n * 统统用线性的吧，貌似时间都打过点\r\n */\r\nexport class AnimationTrack3D extends HashObject implements IAnimationTrack {\r\n    constructor(\r\n        /**\r\n         * 需要改变属性的节点对象\r\n         */\r\n        public node: Object3D | Mesh3D,\r\n        /**\r\n         * 动画类型\r\n         */\r\n        public animationType: AnimationType3D,\r\n        /**\r\n         * 记录所有时间的数组，按顺序递增，没有的按最后一个时间的数据\r\n         */\r\n        public times: Float32Array | number[],\r\n        /**\r\n         * 上述时间要对应的数值，values.length/times.length就是步长\r\n         */\r\n        public values: Float32Array | number[]\r\n    ) {\r\n        super()\r\n        this._instanceType = \"AnimationTrack\";\r\n        //赋值函数，恢复录入时的初始状态\r\n        // this.resetValue=()=>{\r\n        switch (this.animationType) {\r\n            case AnimationType3D.position:\r\n            case AnimationType3D.scale:\r\n            case AnimationType3D.quaternion:\r\n                let value = this.node[this.animationType].clone().toArray();\r\n                this.resetValue = () => {\r\n                    this.node[this.animationType].fromArray(value);\r\n                }\r\n                break;\r\n            case AnimationType3D.morphTargetInfluences:\r\n                if (this.node.instanceType == \"Mesh3D\" || this.node.instanceType == \"SkinnedMesh3D\") {\r\n                    let value = this.node[\"morphTargetInfluences\"] ? this.node[\"morphTargetInfluences\"].slice() : [];\r\n                    this.resetValue = () => {\r\n                        var arr = this.node[\"morphTargetInfluences\"];\r\n                        for (var i = 0; i < arr.length; i++) {//这里用morphTargetInfluences本身的长度\r\n                            arr[i] = value[i] || 0;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        //给个空的\r\n        if (!this.resetValue) this.resetValue = () => { }\r\n    }\r\n    //恢复初始状态并停止\r\n    resetValue: () => void\r\n    /**\r\n     * 传入时间设置对应的属性值，time大于所有动画总时间，外部处理\r\n     * @param time \r\n     */\r\n    setValue(time: number) {\r\n        var value: Float32Array | number[] = this.getValue(time);\r\n        switch (this.animationType) {\r\n            case AnimationType3D.position:\r\n            case AnimationType3D.scale:\r\n            case AnimationType3D.quaternion:\r\n                this.node[this.animationType].fromArray(value);\r\n                break;\r\n            case AnimationType3D.morphTargetInfluences:\r\n                if (this.node.instanceType == \"Mesh3D\" || this.node.instanceType == \"SkinnedMesh3D\") {\r\n                    var arr = this.node[\"morphTargetInfluences\"]\r\n                    for (var i = 0; i < arr.length; i++) {\r\n                        arr[i] = value[i] || 0;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private getValue(time: number) {\r\n        var size = this.getValueSize();\r\n        //为0直接用第一帧数据\r\n        if (time <= 0) return this.values.slice(0, size);\r\n        //如果超过最后时间，给最后一帧数据\r\n        if (time >= this.times[this.times.length - 1]) return this.values.slice(-size);\r\n\r\n        //取最近的两个时间索引，\r\n        var t1 = this.findPreIndex(time);\r\n        var t0 = t1 - 1;\r\n        if (t0 < 0) return this.values.slice(0, size);\r\n        //计算比例插值\r\n        var scale = (time - this.times[t0]) / (this.times[t1] - this.times[t0]);\r\n        //获取数组，\r\n        var v0 = this.values.slice(t0 * size, t0 * size + size);\r\n        var v1 = this.values.slice(t1 * size, t1 * size + size);\r\n        // time = clamp(time, 0, this.times[this.times.length - 1]);\r\n        //暂时都是线性的，到时再说\r\n        if (this.animationType == AnimationType3D.quaternion) {\r\n            return quaternionLinearInterpolate(scale, v0, v1);\r\n        }\r\n        return linearInterpolate(scale, v0, v1);\r\n    }\r\n    //每项尺寸\r\n    private getValueSize() {\r\n        return this.values.length / this.times.length;\r\n    }\r\n\r\n    /**\r\n     * 外部已经剔除了第一帧和最后一帧\r\n     * @param time \r\n     */\r\n    private findPreIndex(time: number) {\r\n        var lastIndex = 0;\r\n        for (var i = 0; i < this.times.length; i++) {\r\n            if (this.times[i] > time) {\r\n                lastIndex = i;\r\n                break\r\n            }\r\n        }\r\n        return lastIndex;\r\n    }\r\n\r\n\r\n    destroy() {\r\n        this.node = null;\r\n        this.values = null;\r\n        this.times = null;\r\n    }\r\n}\r\n\r\n//线性插值，除了四元数\r\nfunction linearInterpolate(s: number, v0: Float32Array | number[], v1: Float32Array | number[]) {\r\n    var result = [];\r\n    // values = this.sampleValues,\r\n    // stride = this.valueSize,\r\n    // offset1 = i1 * stride,\r\n    // offset0 = offset1 - stride,\r\n\r\n    // weight1 = (t - t0) / (t1 - t0),\r\n    // weight0 = 1 - weight1;\r\n    for (var i = 0; i !== v0.length; ++i) {\r\n        // result[i] =\r\n        //     values[offset0 + i] * weight0 +\r\n        //     values[offset1 + i] * weight1;\r\n        result[i] = v0[i] * (1 - s) + v1[i] * s;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction quaternionLinearInterpolate(s: number, v0: Float32Array | number[], v1: Float32Array | number[]) {\r\n    var result = [];\r\n    Quaternion.slerpFlat(result, 0, v0, 0, v1, 0, s);\r\n    return result;\r\n}","import { Matrix4 } from '../math/Matrix4';\nimport { Bone3D } from './Bone3D';\nimport { HashObject } from '../../2d/HashObject';\nimport { BaseTexture } from '../../2d/texture';\n\nconst offsetMatrix = new Matrix4();\nconst identityMatrix = new Matrix4();\n\nexport class Skeleton3D extends HashObject {\n\tbones: Bone3D[];\n\tboneMatrices: Float32Array;\n\tboneInverses: Matrix4[];\n\tboneTexture: BaseTexture;\n\tboneTextureSize:number\n\tconstructor(bones: Bone3D[] = [], boneInverses?: Matrix4[]) {\n\t\tsuper();\n\t\tthis._instanceType = \"Skeleton3D\";\n\t\tthis.bones = bones.slice(0);\n\t\tthis.boneMatrices = new Float32Array(this.bones.length * 16);\n\n\t\tif (!boneInverses) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif (this.bones.length === boneInverses.length) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice(0);\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn('boneInverses长度有误');\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor (var i = 0, il = this.bones.length; i < il; i++) {\n\n\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t}\n\tcalculateInverses() {\n\t\tthis.boneInverses = [];\n\t\tfor (var i = 0, il = this.bones.length; i < il; i++) {\n\t\t\tvar inverse = new Matrix4();\n\t\t\tif (this.bones[i]) {\n\t\t\t\tinverse.setInverseOf(this.bones[i]._worldMatrix);\n\t\t\t}\n\t\t\tthis.boneInverses.push(inverse);\n\t\t}\n\t}\n\n\tpose() {\n\n\t\tvar bone: Bone3D, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor (i = 0, il = this.bones.length; i < il; i++) {\n\n\t\t\tbone = this.bones[i];\n\n\t\t\tif (bone) {\n\n\t\t\t\tbone._worldMatrix.setInverseOf(this.boneInverses[i]);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor (i = 0, il = this.bones.length; i < il; i++) {\n\n\t\t\tbone = this.bones[i];\n\n\t\t\tif (bone) {\n\n\t\t\t\tif (bone.parent && bone.parent.instanceType == \"Bone3D\") {\n\t\t\t\t\tbone._localMatrix.setInverseOf(bone.parent._worldMatrix);\n\t\t\t\t\tbone._localMatrix.multiply(bone._worldMatrix);\n\t\t\t\t} else {\n\n\t\t\t\t\tbone._localMatrix.copy(bone._worldMatrix);\n\n\t\t\t\t}\n\n\t\t\t\tbone._localMatrix.decompose(bone.position, bone.quaternion, bone.scale);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * skinnedMesh3D里面调用\n\t */\n\tupdate() {\n\t\t// this.calculateInverses();\n\t\tvar bones = this.bones;\n\t\tvar boneInverses = this.boneInverses;\n\t\tvar boneMatrices = this.boneMatrices;\n\t\tvar boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor (var i = 0, il = bones.length; i < il; i++) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tvar matrix = bones[i] ? bones[i]._worldMatrix : identityMatrix;\n\n\t\t\toffsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\t\t\t//@ts-ignore\n\t\t\toffsetMatrix.toArray(boneMatrices, i * 16);\n\n\t\t}\n\t\t// if(this.instanceId==310)console.log(this.bones[0]._worldMatrix.elements[2])\n\t\tif (boneTexture) boneTexture.update();\n\t};\n\n\n\n\tclone() {\n\t\treturn new Skeleton3D(this.bones, this.boneInverses);\n\t}\n\n\tgetBoneByName(name: string) {\n\t\tfor (var i = 0, il = this.bones.length; i < il; i++) {\n\t\t\tvar bone = this.bones[i];\n\t\t\tif (bone.name === name) return bone;\n\t\t}\n\t\treturn null;\n\t}\n\tdestroy() {\n\t\t//TODO\n\t}\n}\n\n\n\n\n","import { Object3D } from '../Object3D';\n\n\n/**\n * 记录骨骼数据用\n */\nexport class Bone3D extends Object3D {\n\t//模型解析注意，不能用parent，用par\n\tpar:number\n\t//这三个可能是模型数据上的\n\tpos;\n\trotq;\n\tscl;\n\tconstructor() {\n\t\tsuper()\n\t\tthis._instanceType = 'Bone3D';\n\t}\n\t// __a\n\t// updateWorldMatrix(){\n\t// \tsuper.updateWorldMatrix()\n\t// \t// console.log(this._worldMatrix)\n\t// \tfor(var i=0;i<this._worldMatrix.elements.length;i++){\n\t// \t\tif(!this.__a)break\n\t// \t\tif(this._worldMatrix.elements!==this.__a[i]){\n\t// \t\t\t// console.log(this.__a[i])\n\t// \t\t\tbreak\n\t// \t\t}\n\t// \t}\n\t// \tthis.__a = this._worldMatrix.elements.slice()\n\t\t\n\t// }\n}\n\n","import { EventDispatcher, Event } from \"./events\";\r\n\r\n/**\r\n * 就是个时间轴，setValue和resetValue方法自行实现\r\n */\r\nexport interface IAnimationTrack {\r\n    setValue: (time: number) => void\r\n    resetValue: () => void\r\n}\r\n/**\r\n * 不需要挂到节点上\r\n * 暂时没有帧，只有时间，以后再说\r\n * 用update更新\r\n * 通用的动画类，track自定义\r\n */\r\nexport class AnimationClip extends EventDispatcher {\r\n    name: string\r\n    /**\r\n     * 所有的动画数据\r\n     */\r\n    protected tracks: IAnimationTrack[];\r\n    private _totalTime: number;\r\n    /**\r\n     * 动画总时长，一般是所有tracks里时间最长的那个\r\n     * @readonly\r\n     */\r\n    get totalTime() {\r\n        return this._totalTime;\r\n    }\r\n    /**\r\n     * \r\n     * @param tracks \r\n     * @param totalTime 总时间自行传入，秒计，\r\n     */\r\n    constructor(tracks: IAnimationTrack[], totalTime: number) {\r\n        super()\r\n        this._instanceType = \"AnimationClip\"\r\n        this.tracks = tracks;\r\n        this._totalTime = totalTime\r\n        // this.calculateTotalTime();\r\n    }\r\n    // private calculateTotalTime() {\r\n    //     var tracks = this.tracks, duration = 0;\r\n    //     for (var i = 0, n = tracks.length; i !== n; ++i) {\r\n    //         var track = this.tracks[i];\r\n    //         duration = Math.max(duration, track.times[track.times.length - 1]);\r\n    //     }\r\n    //     this._totalTime = duration;\r\n    //     return this;\r\n    // }\r\n\r\n    private _isPlaying: boolean = true;\r\n    /**\r\n     * 是否播放中\r\n     * @readonly\r\n     */\r\n    public get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    private _isFront: boolean = true;\r\n    /**\r\n     * 是否正向播放\r\n     * @readonly\r\n     */\r\n    get isFront(): boolean {\r\n        return this._isFront;\r\n    }\r\n\r\n    /**\r\n     * 上个时间，用来确定是否更新\r\n     */\r\n    protected lastTime: number = null;\r\n    /**\r\n     * 记录时间\r\n     */\r\n    protected curTime: number = 0;\r\n\r\n    private _endMark: boolean = false;\r\n    /**\r\n     * 需要挂在循环里的方法，传时间间隔\r\n     * @param time 一般为秒计\r\n     */\r\n    update(time: number) {\r\n        if (!this.tracks || !this.tracks.length) return;\r\n        //时间不等，直接播放\r\n        if (this.curTime !== this.lastTime) {\r\n            this.rectify();\r\n            this._endMark = false;\r\n            return;\r\n        }\r\n        //时间没有，或没在播放\r\n        if (time <= 0 || !this._isPlaying) return;\r\n        this._endMark = false;\r\n        if (this._isFront) {\r\n            this.curTime += time;\r\n            if (this.curTime > this._totalTime) {\r\n                this.curTime = 0;\r\n                this._endMark = true;\r\n            }\r\n        } else {\r\n            this.curTime -= time;\r\n            if (this.curTime < 0) {\r\n                this.curTime = this._totalTime;\r\n                this._endMark = true;\r\n            }\r\n        }\r\n        if (this.curTime !== this.lastTime) {\r\n            //矫正\r\n            this.rectify();\r\n            //派发每帧事件\r\n            this.dispatchEvent(Event.ENTER_FRAME);\r\n            //派发结束帧事件\r\n            if (this._endMark && this.hasEventListener(Event.END_FRAME)) {\r\n                this.dispatchEvent(Event.END_FRAME);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 从当前时间点播放\r\n     * @param isFront 默认true正向\r\n     */\r\n    play(isFront: boolean = true) {\r\n        this._isFront = isFront;\r\n        this._isPlaying = true;\r\n    }\r\n    /**\r\n     * 停在当前时间\r\n     */\r\n    stop() {\r\n        this._isPlaying = false;\r\n        this.lastTime = this.curTime;\r\n    }\r\n    /**\r\n     * 从某时刻开始播放\r\n     * @param time \r\n     * @param isFront 默认true，正向播放\r\n     */\r\n    public gotoAndPlay(time: number, isFront: boolean = true): void {\r\n        let s = this;\r\n        s._isFront = isFront;\r\n        s._isPlaying = true;\r\n        if (time > s._totalTime) time = s._totalTime;\r\n        if (time < 1) time = 0;\r\n        s.curTime = time;\r\n    }\r\n    /**\r\n     * 停在指定时间\r\n     * @param time \r\n     * @param force 是否强制更新，默认false，如果发现没stop在指定位置，可以试试设置true\r\n     */\r\n    public gotoAndStop(time: number, force: boolean = false): void {\r\n        this._isPlaying = false;\r\n        if (time > this.totalTime) time = this.totalTime;\r\n        if (time < 0) time = 0;\r\n        this.curTime = time;\r\n        //这样会强制更新\r\n        if (force) this.lastTime = null\r\n    }\r\n\r\n    private startAniRangeFun;\r\n\r\n    /**\r\n     * 在一个区间范围内播放\r\n     * @param beginTime 开始时间，秒计，默认0，\r\n     * @param endTime 结束时间，秒计，默认_totalTime\r\n     * @param loops 循环次数，默认1\r\n     * @param callback 参数loop表示还剩几次\r\n     */\r\n    public startAniRange(\r\n        beginTime: number = 0,\r\n        endTime: number = this._totalTime,\r\n        loops: number = 1,\r\n        callback?: (loop: number) => void\r\n    ) {\r\n        if (beginTime < 0) beginTime = 0;\r\n        if (beginTime > this._totalTime) beginTime = this._totalTime;\r\n        if (endTime < 0) endTime = 0;\r\n        if (endTime > this._totalTime) endTime = this._totalTime;\r\n        if (beginTime === endTime) {\r\n            this.gotoAndStop(beginTime)\r\n            //如果相等\r\n            return\r\n        } else if (beginTime < endTime) {\r\n            this._isFront = true;\r\n        } else {\r\n            this._isFront = false;\r\n            var temp = beginTime;\r\n            beginTime = endTime;\r\n            endTime = temp;\r\n        }\r\n        //移除原先的绑定吧\r\n        if (this.startAniRangeFun) this.removeEventListener(Event.ENTER_FRAME, this.startAniRangeFun, this)\r\n        this.curTime = beginTime;\r\n        this._isPlaying = true;\r\n        let loopCount = loops ? (loops + 0.5 >> 0) : Infinity;\r\n        this.addEventListener(Event.ENTER_FRAME, this.startAniRangeFun = (e: Event) => {\r\n            let s: AnimationClip = e.target;\r\n            if (s._isFront) {\r\n                if (s.curTime >= endTime || s._endMark) {//\r\n                    loopCount--;\r\n                    if (loopCount <= 0) {\r\n                        s.gotoAndStop(endTime);\r\n                        s.removeEventListener(Event.ENTER_FRAME, this.startAniRangeFun, this);\r\n                        this.startAniRangeFun = null;\r\n                        callback && callback(loopCount);\r\n                    } else {\r\n                        s.gotoAndPlay(beginTime);\r\n                    }\r\n                }\r\n            } else {\r\n                if (s.curTime <= beginTime || s._endMark) {\r\n                    loopCount--\r\n                    if (loopCount <= 0) {\r\n                        s.gotoAndStop(beginTime);\r\n                        s.removeEventListener(Event.ENTER_FRAME, this.startAniRangeFun, this);\r\n                        this.startAniRangeFun = null;\r\n                        callback && callback(loopCount);\r\n                    } else {\r\n                        s.gotoAndPlay(endTime, false);\r\n                    }\r\n                }\r\n            }\r\n        }, this)\r\n    }\r\n    /**\r\n     * 矫正\r\n     */\r\n    protected rectify() {\r\n        if (!this.tracks || !this.tracks.length) return;\r\n        for (var i = 0; i < this.tracks.length; i++) {\r\n            this.tracks[i].setValue(this.curTime)\r\n        }\r\n        //设置相等\r\n        this.lastTime = this.curTime;\r\n    }\r\n\r\n    /**\r\n     * 用于重置初始状态，因为每个track的0状态也不一定是初始状态\r\n     * 所以各自track自行处理\r\n     */\r\n    public resetState() {\r\n        this.stop();\r\n        for (var i = 0; i < this.tracks.length; i++) this.tracks[i].resetValue()\r\n    }\r\n}","import { HashObject } from \"./HashObject\";\r\nimport { AnimationClip } from \"./AnimationClip\";\r\n\r\n/**\r\n * 用于管理传入的AnimationClips，为了多clips动画的切换\r\n * 不需要加入到舞台中\r\n * 自行加入到循环里，执行update\r\n * 暂时不允许多状态存在\r\n */\r\nexport class AnimationManager extends HashObject {\r\n    protected currentClip: AnimationClip;\r\n    /**\r\n     * 传入\r\n     * @param animationClips 所有的clip\r\n     */\r\n    constructor(\r\n        private animationClips: AnimationClip[]\r\n    ) {\r\n        super()\r\n        this._instanceType = \"AnimationManager\";\r\n        //所有的都停下先\r\n        this.stop();\r\n    }\r\n    /**\r\n     * 获取一个AnimationClip，比如想自己控制\r\n     * @param name\r\n     */\r\n    getAniClipByName(name: string) {\r\n        for (var i = 0; i < this.animationClips.length; i++) {\r\n            if (this.animationClips[i].name == name) return this.animationClips[i]\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 切换动画，会停止当前播放的动画\r\n     * 精细播放自己获取并控制，这个方法只针对多clip切换\r\n     * @param name \r\n     * @param times \r\n     */\r\n    showAni(name: string, loops: number = 1, callback?: (loop: number) => void): AnimationClip {\r\n        var clip = this.getAniClipByName(name)\r\n        if (!clip) return null;\r\n        //因为正在播放的动画会影响其他动画的初始状态，必须先重置\r\n        if (this.currentClip) this.currentClip.resetState();\r\n        this.currentClip = clip;\r\n        //播放\r\n        clip.startAniRange(0, undefined, loops, callback)\r\n        //返回一个，可以自己玩\r\n        return clip\r\n    }\r\n    /**\r\n     * 停止\r\n     */\r\n    stop() {\r\n        this.animationClips.forEach((a) => { a.stop(); })\r\n        this.currentClip = null;\r\n    }\r\n    /**\r\n     * 重置并停止\r\n     */\r\n    reset() {\r\n        this.animationClips.forEach((a) => { a.resetState(); })\r\n        this.currentClip = null;\r\n    }\r\n    /**\r\n     * 循环更新方法\r\n     * @param deltaTime 按秒计，默认0.0167\r\n     */\r\n    update(deltaTime: number = 0.0167) {\r\n        for (var i = 0; i < this.animationClips.length; i++) {\r\n            this.animationClips[i].update(deltaTime)\r\n        }\r\n    }\r\n    destroy() {\r\n        this.animationClips = null;\r\n        this.currentClip = null;\r\n    }\r\n}","import { Container, Sprite } from \"../2d/display\";\r\nimport { IBoneData, Bone } from \"./Bone\";\r\nimport { Texture } from \"../2d/texture\";\r\n\r\nimport { AnimationClip } from \"../2d/AnimationClip\";\r\nimport { AnimationManager } from \"../2d/AnimationManager\";\r\nimport { Slot, ISlotData } from \"./Slot\";\r\nimport { Skin } from \"./Skin\";\r\nimport { RegionAttachment } from \"./attachment/RegionAttachment\";\r\nimport { MeshAttachment } from \"./attachment/MeshAttachment\";\r\nimport { Transform } from \"../2d/math\";\r\nimport { Mesh } from \"../2d/mesh\";\r\n\r\nimport { rgb2hex } from \"../2d/utils\";\r\nimport { IBoneAniData, SpineBoneAniTrack } from \"./animation/SpineBoneAniTrack\";\r\nimport { IColorAniData, SpineColorAniTrack } from \"./animation/SpineColorAniTrack\";\r\nimport { IDeformAniData, SpineDeformAniTrack } from \"./animation/SpineDeformAniTrack\";\r\nimport { IAttachmentAniData, AttachmentAniTrack } from \"./animation/AttachmentAniTrack\";\r\nimport { IDrawOrderAniData, DrawOrderAniTrack } from \"./animation/DrawOrderAniTrack\";\r\nimport { newArray } from \"./animation/utils\";\r\nimport { SpineAniClip, SpineAniManager } from \"./SpineAniManager\";\r\n\r\n\r\nexport interface ISkeletonData {\r\n    skeleton: {\r\n        //图片相对路径，不用自行匹配\r\n        images: string,\r\n        //spine版本\r\n        spine: number\r\n    }\r\n    bones: IBoneData[],\r\n    //附着的皮肤\r\n    skins: { [key: string]: { [key: string]: { [key: string]: ISkinData } } },\r\n    slots: ISlotData[],\r\n    animations: {\r\n        [key: string]: {\r\n            bones: {\r\n                [key: string]: {\r\n                    rotate: IBoneAniData[],\r\n                    translate: IBoneAniData[]\r\n                    scale: IBoneAniData[]\r\n                    shear: IBoneAniData[]\r\n                }\r\n            },\r\n            //网格变形数据\r\n            deform: {\r\n                [key: string]: {\r\n                    [key: string]: {\r\n                        [key: string]: IDeformAniData[]\r\n                    }\r\n                }\r\n            },\r\n            slots: {\r\n                [key: string]: {\r\n                    //附着皮肤修改\r\n                    attachment: IAttachmentAniData[],\r\n                    //颜色变化\r\n                    color: IColorAniData[]\r\n                }\r\n            },\r\n            drawOrder: IDrawOrderAniData[]\r\n            ik: { [key: string]: { time: number, mix: number, bendPositive: boolean }[] }\r\n        }\r\n    },\r\n    transform: {\r\n        bones: string[]\r\n        name: string\r\n        order: number\r\n        rotateMix: number\r\n        rotation: number\r\n        scaleMix: number\r\n        shearMix: number\r\n        target: string\r\n        translateMix: number\r\n    }[],\r\n    ik: {\r\n        bendPositive: boolean,\r\n        bones: string[]\r\n        mix: number\r\n        name: string\r\n        order: number\r\n        target: string\r\n    }[]\r\n}\r\n\r\ninterface ISkinData {\r\n    path?: string,//图片路径，没有用name\r\n    //类型，没有就是region图片\r\n    type?: SkinType,\r\n    width?: number,//默认0\r\n    height?: number,//默认0\r\n    //图片的数据\r\n    x?: number,//默认0\r\n    y?: number,//默认0\r\n    scaleX?: number,//默认1\r\n    scaleY?: number,//默认1\r\n    rotation?: number,//默认0\r\n\r\n    //网格数据\r\n    edges: number[],//暂时没用到\r\n    hull: number,//暂时没用到\r\n    triangles: number[]\r\n    uvs: number[],//uv标准顶点长度\r\n\r\n    vertices: number[],//\r\n    //遮罩的数据\r\n    color: string,//\"ce3a3aff\"\r\n    end: string,//\"head-bb\"\r\n    vertexCount: number,\r\n\r\n}\r\n\r\n\r\nenum SkinType {\r\n    //区域，纯图片，没有类型字段就是默认region\r\n    region = \"region\",\r\n    mesh = \"mesh\",\r\n    //遮罩\r\n    clipping = \"clipping\",\r\n    linkedmesh = \"linkedmesh\",\r\n    path = \"path\",\r\n    point = \"point\"\r\n}\r\n\r\nconst tempRgb = [0, 0, 0];\r\n/**\r\n * TODO 性能略差，到时考虑单独写着色器，和3d那样断批处理，单独开着色器，传骨骼矩阵等等，绘制Mesh\r\n * 参考spine runtime和three\r\n * 事件暂时不需要，基本都走播放回调，或者到时把eventTrack和监听加进来，\r\n */\r\nexport class Spine extends Container {\r\n    //单独处理bones的容器\r\n    private boneContainer: Container;\r\n    //记录个数组，为了索引和查找\r\n    bones: Bone[];\r\n    //骨骼计算顺序，后续可能也加入约束\r\n    orderCalculations: Bone[];\r\n    skins: Skin[];\r\n    //当前皮肤\r\n    skin: Skin;\r\n    //默认皮肤\r\n    defaultSkin: Skin;\r\n    //单独处理插槽的容器，这部分不应该进节点计算矩阵，但要进节点，为了渲染\r\n    private slotContainer: Container;\r\n    //为了索引和查找，slotContainer里的位置会变\r\n    slots: Slot[];\r\n    //真实的绘制顺序\r\n    drawOrder: Slot[];\r\n    animationManager: AnimationManager;\r\n\r\n    constructor(private data: ISkeletonData, private textures?: { [key: string]: Texture }, showBones: boolean = false) {\r\n        super();\r\n        this._instanceType = \"Spine\";\r\n        //如果没有纹理，把骨骼加上\r\n        if (!this.textures) showBones = true;\r\n        //自行反向？\r\n        this.scaleY = -1;\r\n        //骨骼处理\r\n        if (data.bones) {\r\n            this.boneContainer = this.addChild(new Container());\r\n            this.bones = [];\r\n            //先看看骨骼\r\n            for (var i = 0; i < data.bones.length; i++) {\r\n                //需要显示骨骼才传入，\r\n                let bone = new Bone(data.bones[i], showBones ? this.boneContainer : null)\r\n                this.bones.push(bone)\r\n                if (!bone.data.parent) {\r\n                    this.boneContainer.addChild(bone);\r\n                } else {\r\n                    var pb = this.findBone(bone.data.parent)\r\n                    if (pb) pb.addChild(bone);\r\n                }\r\n                // let boneData = data.bones[i];\r\n                // let bone: Bone;\r\n                // if (!boneData.parent)\r\n                //     bone = new Bone(boneData);\r\n                // else {\r\n                //     var pb = this.findBone(boneData.parent)\r\n                //     bone = new Bone(boneData, pb);\r\n                //     pb.children.push(bone);\r\n                // }\r\n                // this.bones.push(bone);\r\n            }\r\n            //排序\r\n            // this.orderCalculations = [];\r\n            // for (var i = 0; i < this.bones.length; i++)this.sortBone(this.bones[i]);\r\n        }\r\n        //插槽\r\n        if (data.slots) {\r\n            this.slotContainer = this.addChildAt(new Container(), 0)\r\n            this.slots = [];\r\n            for (let i = 0; i < data.slots.length; i++) {\r\n                let slotMap = data.slots[i];\r\n                let bone = this.findBone(slotMap.bone);\r\n                this.slots.push(\r\n                    this.slotContainer.addChild(new Slot(bone, slotMap, this))\r\n                )\r\n                // if(slotMap.attachment){//下面处理\r\n                //     \r\n                // }\r\n            }\r\n            //复制一份\r\n            this.drawOrder = this.slots.slice();\r\n        }\r\n        //皮肤数据\r\n        if (data.skins) {\r\n            this.skins = []\r\n            let orginSkins = data.skins;\r\n            //是数组，那就转一下\r\n            if (Object.prototype.toString.call(data.skins) === '[object Array]') {\r\n                orginSkins = {};\r\n                //@ts-ignore\r\n                data.skins.forEach(e => {\r\n                    orginSkins[e.name] = e.attachments\r\n                });\r\n            }\r\n            for (var skinName in orginSkins) {\r\n                var skinMap = orginSkins[skinName];\r\n                var skin = new Skin(skinName);\r\n                for (var slotName in skinMap) {\r\n                    var slotIndex = this.findSlotIndex(slotName);\r\n                    if (slotIndex == -1)\r\n                        throw new Error(\"Slot not found: \" + slotName);\r\n                    var slotMap = skinMap[slotName];\r\n                    for (var entryName in slotMap) {\r\n                        var attachment = this.readAttachment(slotMap[entryName], skin, slotIndex, entryName, null);\r\n                        if (attachment != null)\r\n                            skin.addAttachment(slotIndex, entryName, attachment);\r\n                    }\r\n                }\r\n                this.skins.push(skin);\r\n                if (skin.name == \"default\") this.defaultSkin = skin;\r\n            }\r\n            //默认皮肤\r\n            // this.skin = this.defaultSkin;\r\n        }\r\n        //动画数据\r\n        if (data.animations) {\r\n            var animationClips = [];\r\n            //一级是总动画\r\n            for (let aniName in data.animations) {\r\n                //这里开始收集track;\r\n                let tracks = [];\r\n                let duration = 0;\r\n                let mm = data.animations[aniName];\r\n                //骨骼，基本没啥问题了\r\n                if (mm.bones) {\r\n                    for (let aboneName in mm.bones) {\r\n                        let boneAniData = mm.bones[aboneName]\r\n                        let bone = this.findBone(aboneName);\r\n                        for (let boneAniName in boneAniData) {\r\n                            //@ts-ignore\r\n                            let boneTrack = new SpineBoneAniTrack(bone, boneAniName, boneAniData[boneAniName]);\r\n                            tracks.push(boneTrack);\r\n                            duration = Math.max(duration, boneTrack.times[boneTrack.times.length - 1].time);\r\n                        }\r\n                    }\r\n                }\r\n                //插槽的切换\r\n                if (mm.slots) {\r\n                    for (let slotName in mm.slots) {\r\n                        let slotMap = mm.slots[slotName];\r\n                        let slotIndex = this.findSlotIndex(slotName);\r\n                        let slot = this.slots[slotIndex]\r\n                        for (let timelineName in slotMap) {\r\n                            let timelineMap = slotMap[timelineName];\r\n                            let endTime = timelineMap[timelineMap.length - 1].time;\r\n                            if (timelineName == \"attachment\") {\r\n                                tracks.push(\r\n                                    // 处理下\r\n                                    new AttachmentAniTrack(\r\n                                        slot,\r\n                                        timelineMap,\r\n                                        this\r\n                                    )\r\n                                );\r\n                                duration = Math.max(duration, endTime || 0);\r\n                            }\r\n                            else if (timelineName == \"color\") {\r\n                                tracks.push(new SpineColorAniTrack(slot, timelineMap));\r\n                                duration = Math.max(duration, endTime || 0);\r\n                            }\r\n                            // else if (timelineName == \"twoColor\") {\r\n                            //     var timeline = new core.TwoColorTimeline(timelineMap.length);\r\n                            //     timeline.slotIndex = slotIndex;\r\n                            //     var frameIndex = 0;\r\n                            //     for (var i = 0; i < timelineMap.length; i++) {\r\n                            //         var valueMap = timelineMap[i];\r\n                            //         var light = new core.Color();\r\n                            //         var dark = new core.Color();\r\n                            //         light.setFromString(valueMap.light);\r\n                            //         dark.setFromString(valueMap.dark);\r\n                            //         timeline.setFrame(frameIndex, valueMap.time, light.r, light.g, light.b, light.a, dark.r, dark.g, dark.b);\r\n                            //         this.readCurve(valueMap, timeline, frameIndex);\r\n                            //         frameIndex++;\r\n                            //     }\r\n                            //     timelines.push(timeline);\r\n                            //     duration = Math.max(duration, timeline.frames[(timeline.getFrameCount() - 1) * core.TwoColorTimeline.ENTRIES]);\r\n                            // }\r\n                            // else\r\n                            //     throw new Error(\"Invalid timeline type for a slot: \" + timelineName + \" (\" + slotName + \")\");\r\n                        }\r\n                    }\r\n                }\r\n                //变形\r\n                if (mm.deform) {\r\n                    for (var deformName in mm.deform) {\r\n                        var deformMap = mm.deform[deformName];\r\n                        //主套皮肤\r\n                        let skin = this.findSkin(deformName);\r\n                        for (var slotName in deformMap) {\r\n                            let slotMap = deformMap[slotName];\r\n                            let slotIndex = this.findSlotIndex(slotName)\r\n                            let slot = this.slots[slotIndex] //this.findSlot(slotName);\r\n                            for (var timelineName in slotMap) {\r\n                                var timelineMap = slotMap[timelineName];\r\n                                let attachment: MeshAttachment = skin.getAttachment(slotIndex, timelineName);\r\n                                let deformTrack = new SpineDeformAniTrack(slot, attachment, timelineMap);\r\n                                tracks.push(deformTrack);\r\n                                duration = Math.max(duration, deformTrack.frameTimes[deformTrack.frameTimes.length - 1]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //顺序mm\r\n                var drawOrderNode = mm.drawOrder //|| mm[\"draworder\"];\r\n                if (drawOrderNode) {//只会有一个\r\n                    var dat = new DrawOrderAniTrack(\r\n                        this.slots,\r\n                        this.drawOrder,\r\n                        drawOrderNode.map((d: IDrawOrderAniData) => {\r\n                            return {\r\n                                time: d.time || 0,\r\n                                drawOrder: (() => {\r\n                                    let offsets = d.offsets\r\n                                    if (!offsets) return null;\r\n                                    var slotCount = this.slots.length;\r\n                                    var drawOrder = newArray(slotCount, -1);\r\n                                    var unchanged = newArray(slotCount - offsets.length, 0);\r\n                                    var originalIndex = 0, unchangedIndex = 0;\r\n                                    for (var i = 0; i < offsets.length; i++) {\r\n                                        var offsetMap = offsets[i];\r\n                                        var slotIndex = this.findSlotIndex(offsetMap.slot);\r\n                                        while (originalIndex != slotIndex)\r\n                                            unchanged[unchangedIndex++] = originalIndex++;\r\n                                        drawOrder[originalIndex + offsetMap.offset] = originalIndex++;\r\n                                    }\r\n                                    while (originalIndex < slotCount)\r\n                                        unchanged[unchangedIndex++] = originalIndex++;\r\n                                    for (var i = slotCount - 1; i >= 0; i--)\r\n                                        if (drawOrder[i] == -1)\r\n                                            drawOrder[i] = unchanged[--unchangedIndex];\r\n                                    return drawOrder\r\n                                })()\r\n                            }\r\n                        })\r\n                    );\r\n                    tracks.push(dat);\r\n                    duration = Math.max(duration, dat.times[dat.times.length - 1].time);\r\n                }\r\n                //事件的先不管\r\n                // if(mm.events){}\r\n                var clip = new SpineAniClip(tracks, duration)\r\n                clip.name = aniName;\r\n                animationClips.push(clip);\r\n            }\r\n            //动画都放进manager，到时和AnimationClip都要改，传入mix和blend，现在先不管\r\n            this.animationManager = new SpineAniManager(animationClips)\r\n        }\r\n\r\n        //默认皮肤搞一次\r\n        if (data.slots) {\r\n            //默认的皮肤先干\r\n            for (let i = 0; i < this.slots.length; i++) {\r\n                let slot: Slot = this.slots[i]\r\n                if (slot.data.attachment) {\r\n                    let attachment = this.defaultSkin.getAttachment(i, slot.data.attachment)\r\n                    // slot.originAttachment = attachment;//原始的赋值一个\r\n                    slot.setAttachment(attachment)\r\n                    if (attachment instanceof RegionAttachment) {\r\n                        var spriteName = attachment.name;\r\n                        var sprite = this.createSprite(slot, attachment, spriteName);\r\n                        slot.currentSprite = sprite;\r\n                        slot.currentSpriteName = spriteName;\r\n                        slot.addChild(sprite);\r\n                    }\r\n                    else if (attachment instanceof MeshAttachment) {\r\n                        var mesh = this.createMesh(slot, attachment);\r\n                        slot.currentMesh = mesh;\r\n                        slot.currentMeshName = attachment.name;\r\n                        slot.addChild(mesh);\r\n                    }\r\n                    // else if (attachment instanceof pixi_spine.core.ClippingAttachment) {\r\n                    //     _this.createGraphics(slot, attachment);\r\n                    //     slotContainer.addChild(slot.clippingContainer);\r\n                    //     slotContainer.addChild(slot.currentGraphics);\r\n                    // }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    private findBone(name: string): Bone {\r\n        var bones = this.bones;\r\n        for (var i = 0, n = bones.length; i < n; i++) {\r\n            var bone = bones[i];\r\n            if (bone.name == name) return bone;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private sortBone(bone: Bone) {\r\n        if (bone.sorted) return;\r\n        var parent = bone.parent;\r\n        if (parent) this.sortBone(parent as Bone);\r\n        bone.sorted = true;\r\n        this.orderCalculations.push(bone);\r\n    };\r\n\r\n    private findSlot(slotName: string): Slot {\r\n        var arr = this.slots;\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i].name == slotName) return arr[i];\r\n        }\r\n        return null\r\n    }\r\n    private findSlotIndex(slotName: string) {\r\n        var arr = this.slots;\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i].name == slotName) return i;\r\n        }\r\n        return -1\r\n    }\r\n\r\n    private findSkin(skinName: string) {\r\n        var skins = this.skins;\r\n        for (var i = 0, n = skins.length; i < n; i++) {\r\n            var skin = skins[i];\r\n            if (skin.name == skinName)\r\n                return skin;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getAttachment(slotIndex: number, attachmentName: string) {\r\n        if (this.skin) {\r\n            var at = this.skin.getAttachment(slotIndex, attachmentName);\r\n            if (at) return at;\r\n        }\r\n        if (this.defaultSkin) {\r\n            var at = this.defaultSkin.getAttachment(slotIndex, attachmentName);\r\n            if (at) return at;\r\n        }\r\n        return null;\r\n        // return (this.skin || this.defaultSkin).getAttachment(slotIndex, attachmentName) || null\r\n    }\r\n\r\n    private lastTime: number\r\n    update() {\r\n        var now = Date.now()\r\n        var delta = this.lastTime ? (now - this.lastTime) * 0.001 : 0.01667\r\n        this.lastTime = now;\r\n        //动画更新，比如bone的基础属性\r\n        this.animationManager.update(delta);\r\n        // this.updateSlots();\r\n        // this.updateDrawOrder();放到下面执行\r\n        super.update();\r\n    }\r\n    //重写。只有骨骼的进入计算，插槽的根着骨骼世界矩阵计算\r\n    updateTransform() {\r\n        //自己先算\r\n        this.transform.updateWorldMatrix(this.parent.transform);\r\n        this._worldAlpha = this.alpha * this.parent._worldAlpha;\r\n        //保证先计算骨骼的\r\n        this.boneContainer && this.boneContainer.updateTransform();\r\n        // for (var i = 0; i < this.orderCalculations.length; i++)this.orderCalculations[i].update();\r\n        this.updateSlots();\r\n        this.updateDrawOrder();\r\n        this.slotContainer.updateTransform();\r\n    }\r\n    //显示对象呈现\r\n    private updateSlots() {\r\n        for (var i = 0, n = this.slots.length; i < n; i++) {\r\n            var slot: Slot = this.slots[i];\r\n            var attachment = slot.attachment;\r\n            if (!attachment) {\r\n                slot.visible = false;\r\n                continue;\r\n            }\r\n            var attColor = (attachment as RegionAttachment).color;\r\n            if (attachment instanceof RegionAttachment) {\r\n                if (slot.currentMesh) {\r\n                    slot.currentMesh.visible = false;\r\n                    slot.currentMesh = null;\r\n                    slot.currentMeshName = undefined;\r\n                }\r\n                if (!slot.currentSpriteName || slot.currentSpriteName !== attachment.name) {\r\n                    var spriteName = attachment.name;\r\n                    if (slot.currentSprite) {\r\n                        slot.currentSprite.visible = false;\r\n                    }\r\n                    slot.sprites = slot.sprites || {};\r\n                    if (slot.sprites[spriteName] !== undefined) {\r\n                        slot.sprites[spriteName].visible = true;\r\n                    }\r\n                    else {\r\n                        var sprite = this.createSprite(slot, attachment, spriteName);\r\n                        slot.addChild(sprite);\r\n                    }\r\n                    slot.currentSprite = slot.sprites[spriteName];\r\n                    slot.currentSpriteName = spriteName;\r\n\r\n                }\r\n                var transform = slot.transform;\r\n                // slot.bone.worldMatrix.decompose(transform);\r\n                slot.bone.matrix.decompose(transform);\r\n                transform._localID++;\r\n\r\n                tempRgb[0] = slot.color.r * attColor.r;\r\n                tempRgb[1] = slot.color.g * attColor.g;\r\n                tempRgb[2] = slot.color.b * attColor.b;\r\n                slot.currentSprite.tint = rgb2hex(tempRgb);\r\n                // slot.currentSprite.blendMode = slot.blendMode;\r\n            }\r\n            else if (attachment instanceof MeshAttachment) {\r\n                if (slot.currentSprite) {\r\n                    slot.currentSprite.visible = false;\r\n                    slot.currentSprite = null;\r\n                    slot.currentSpriteName = undefined;\r\n                    //切换一个初始的transform\r\n                    var transform = new Transform();\r\n                    transform._parentID = -1;\r\n                    transform._worldID = slot.transform._worldID;\r\n                    slot.transform = transform;\r\n                }\r\n                if (!slot.currentMeshName || slot.currentMeshName !== attachment.name) {\r\n                    var meshName = attachment.name;\r\n                    if (slot.currentMesh) {\r\n                        slot.currentMesh.visible = false;\r\n                    }\r\n                    slot.meshes = slot.meshes || {};\r\n                    if (slot.meshes[meshName] !== undefined) {\r\n                        slot.meshes[meshName].visible = true;\r\n                    }\r\n                    else {\r\n                        var mesh = this.createMesh(slot, attachment);\r\n                        slot.addChild(mesh);\r\n                    }\r\n                    slot.currentMesh = slot.meshes[meshName];\r\n                    slot.currentMeshName = meshName;\r\n                }\r\n                attachment.computeWorldVerticesOld(slot, slot.currentMesh._vertices, this.bones);\r\n                //@ts-ignore\r\n                slot.currentMesh._vertexDirty++\r\n                //颜色处理\r\n                tempRgb[0] = slot.color.r * attColor.r;\r\n                tempRgb[1] = slot.color.g * attColor.g;\r\n                tempRgb[2] = slot.color.b * attColor.b;\r\n                slot.currentMesh.tint = rgb2hex(tempRgb);\r\n                // slot.currentMesh.blendMode = slot.blendMode;\r\n            }\r\n            else {\r\n                slot.visible = false;\r\n                continue;\r\n            }\r\n            slot.visible = true;\r\n            slot.alpha = slot.color.a;\r\n        }\r\n    }\r\n    /**\r\n     * 遮罩的先不管，有了再说\r\n     */\r\n    private updateDrawOrder() {\r\n        var drawOrder = this.drawOrder;\r\n        // var clippingAttachment = null;\r\n        // var clippingContainer = null;\r\n        for (var i = 0, n = drawOrder.length; i < n; i++) {\r\n            let index = this.slots.indexOf(drawOrder[i])\r\n            let slot = this.slots[index];\r\n            // var slotContainer = this.slotContainers[drawOrder[i].data.index];\r\n            // if (!clippingContainer) {\r\n            //     if (slotContainer.parent !== null && slotContainer.parent !== this) {\r\n            //         slotContainer.parent.removeChild(slotContainer);\r\n            //         slotContainer.parent = this;\r\n            //     }\r\n            // }\r\n            // if (slot.currentGraphics && slot.attachment) {\r\n            //     clippingContainer = slot.clippingContainer;\r\n            //     clippingAttachment = slot.attachment;\r\n            //     clippingContainer.children.length = 0;\r\n            //     this.children[i] = slotContainer;\r\n            //     if (clippingAttachment.endSlot == slot.data) {\r\n            //         clippingAttachment.endSlot = null;\r\n            //     }\r\n            // }\r\n            // else {\r\n            //     if (clippingContainer) {\r\n            //     var c = this.tempClipContainers[i];\r\n            //     if (!c) {\r\n            //         c = this.tempClipContainers[i] = this.newContainer();\r\n            //         c.visible = false;\r\n            //     }\r\n            //     this.children[i] = c;\r\n            //     slotContainer.parent = null;\r\n            //     clippingContainer.addChild(slotContainer);\r\n            //     if (clippingAttachment.endSlot == slot.data) {\r\n            //         clippingContainer.renderable = true;\r\n            //         clippingContainer = null;\r\n            //         clippingAttachment = null;\r\n            //     }\r\n            // }\r\n            // else {\r\n            // this.children[i] = slotContainer;\r\n            this.slotContainer.children[i] = slot;//暂时slotContainer里面不会有其他东西，这么干\r\n            // }\r\n        }\r\n    }\r\n\r\n    private readAttachment(map: ISkinData, skin, slotIndex, name, skeletonData) {\r\n        //@ts-ignore\r\n        name = map.name || name\r\n        var type = map.type || SkinType.region\r\n        switch (type) {\r\n            case SkinType.region: {\r\n                var region = new RegionAttachment(\r\n                    name,\r\n                    map.x,\r\n                    map.y,\r\n                    map.scaleX,\r\n                    map.scaleY,\r\n                    map.rotation,\r\n                    map.width,\r\n                    map.height,\r\n                    this.textures && this.textures[map.path || name]\r\n                );\r\n                if (map.color) region.color.setFromString(map.color);\r\n                return region;\r\n            }\r\n            case \"mesh\": {\r\n                var mesh = new MeshAttachment(name);\r\n                mesh.texture = this.textures && this.textures[map.path || name];\r\n                // var color = this.getValue(map, \"color\", null);\r\n                // if (color != null)\r\n                //     mesh.color.setFromString(color);\r\n                var uvs = map.uvs;\r\n                this.readVertices(map, mesh, uvs.length);\r\n                mesh.triangles = map.triangles;\r\n                mesh.regionUVs = new Float32Array(uvs);\r\n                mesh.hullLength = map.hull * 2 || 0\r\n                return mesh;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    private readVertices(map: ISkinData, attachment: MeshAttachment, verticesLength: number) {\r\n        attachment.worldVerticesLength = verticesLength;\r\n        var vertices = map.vertices;\r\n        if (verticesLength == vertices.length) {\r\n            var scaledVertices = new Float32Array(vertices);\r\n            attachment.vertices = scaledVertices;\r\n            return;\r\n        }\r\n        var weights = new Array();\r\n        var bones = new Array();\r\n        for (var i = 0, n = vertices.length; i < n;) {\r\n            var boneCount = vertices[i++];\r\n            bones.push(boneCount);\r\n            for (var nn = i + boneCount * 4; i < nn; i += 4) {\r\n                bones.push(vertices[i]);\r\n                weights.push(vertices[i + 1]);\r\n                weights.push(vertices[i + 2]);\r\n                weights.push(vertices[i + 3]);\r\n            }\r\n        }\r\n        attachment.bones = bones;\r\n        attachment.vertices = new Float32Array(weights);\r\n    };\r\n\r\n    private createSprite(slot: Slot, attachment: RegionAttachment, defName: string) {\r\n        var sprite = new Sprite(attachment.texture);\r\n        sprite.rotation = attachment.rotation || 0\r\n        sprite.anchorTexture.set(0.5, 0.5)\r\n        // sprite.scaleY = -1;//放在这里很悬，目前没法线sprite有缩放的情况\r\n        // sprite.anchor.x = 0.5;\r\n        // sprite.anchor.y = 0.5;\r\n        sprite.position.x = attachment.x;\r\n        sprite.position.y = attachment.y;\r\n        sprite.alpha = attachment.color.a;\r\n        //判断纹理是否存在\r\n        if (attachment.texture) {\r\n            sprite.scaleX = attachment.scaleX * attachment.width / attachment.texture.width;\r\n            //注意加个负号\r\n            sprite.scaleY = -attachment.scaleY * attachment.height / attachment.texture.height;\r\n        }\r\n        slot.sprites = slot.sprites || {};\r\n        slot.sprites[defName] = sprite;\r\n        return sprite;\r\n    }\r\n\r\n    private createMesh(slot: Slot, attachment: MeshAttachment) {\r\n        var strip = new Mesh(attachment.texture, new Float32Array(attachment.regionUVs.length), attachment.regionUVs, new Uint16Array(attachment.triangles));\r\n        if (strip.canvasPadding) strip.canvasPadding = 1.5;\r\n        strip.refresh(true)\r\n        strip.multiplyUvs()\r\n        // strip.alpha = attachment.color.a;\r\n        slot.meshes = slot.meshes || {};\r\n        slot.meshes[attachment.name] = strip;\r\n        return strip;\r\n    };\r\n    /**\r\n     * 返回一个Spine，注意data原始数据不能修改，之前写了那些多，忘了里面有没有修改\r\n     */\r\n    clone(): Spine {\r\n        return new Spine(this.data, this.textures)\r\n    }\r\n\r\n    // setSkin(name: string) {\r\n    //     var skin = this.findSkin(name);\r\n    //     if (skin) {\r\n    //         if (this.skin)\r\n    //             skin.attachAll(this.slots, this.skin);\r\n    //         else {\r\n    //             var slots = this.slots;\r\n    //             for (var i = 0, n = slots.length; i < n; i++) {\r\n    //                 var slot = slots[i];\r\n    //                 var name_1 = slot.data.attachment;\r\n    //                 if (name_1) {\r\n    //                     var attachment = skin.getAttachment(i, name_1);\r\n    //                     if (attachment)\r\n    //                         slot.setAttachment(attachment);\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         this.skin = skin;\r\n    //     }\r\n    // }\r\n    setSkin(name: string) {\r\n        var skin = this.findSkin(name);\r\n        //皮肤不存在\r\n        if (!skin) return;\r\n        //皮肤一致\r\n        if (this.skin == skin) return;\r\n        //\r\n        if (this.addSkin(skin)) return;\r\n        //如果要替换成默认的皮肤，\r\n        if (skin == this.defaultSkin) {\r\n            this.resetSkin();\r\n        } else {\r\n            //先重置皮肤，再用下面的换装，因为可能出现非一致插槽换装\r\n            this.resetSkin();\r\n            this.addSkin(skin)\r\n        }\r\n    }\r\n    resetSkin() {\r\n        this.skin = this.defaultSkin;\r\n        this.slots.forEach((s) => { s.setToSetupPose(); })\r\n    }\r\n    /**\r\n     * 原先是默认皮肤，然后添加新皮肤\r\n     */\r\n    private addSkin(skin: Skin) {\r\n        if (this.skin && this.skin != this.defaultSkin) return false;\r\n        var slots = this.slots;\r\n        for (var i = 0, n = slots.length; i < n; i++) {\r\n            var slot = slots[i];\r\n            var name_1 = slot.data.attachment;\r\n            if (name_1) {\r\n                var attachment = skin.getAttachment(i, name_1);\r\n                if (attachment) slot.setAttachment(attachment);\r\n            }\r\n        }\r\n        this.skin = skin;\r\n        return true\r\n    }\r\n    /**\r\n     * 获取所有皮肤名字\r\n     */\r\n    get skinNames(): string[] {\r\n        if (!this.skins || !this.skins.length) return [];\r\n        return this.skins.map((s) => { return s.name; })\r\n    }\r\n    /**\r\n     * 获取所有动画的名字\r\n     */\r\n    get aniNames(): string[] {\r\n        var am = this.animationManager;\r\n        //@ts-ignore\r\n        if (!am || !am.animationClips || !am.animationClips.length) return [];\r\n        //@ts-ignore\r\n        return am.animationClips.map((s) => { return s.name; })\r\n    }\r\n}\r\n\r\n// function calculateTotalTime(tracks: SpineBoneAniTrack[]) {\r\n//     var duration = 0;\r\n//     for (var i = 0, n = tracks.length; i !== n; ++i) {\r\n//         var track = tracks[i];\r\n//         duration = Math.max(duration, track.times[track.times.length - 1].time);\r\n//     }\r\n//     return duration\r\n// }\r\n\r\n","import { GlobalLoader } from \"../2d/loader\";\r\nimport { getEnv } from \"../2d/utils\";\r\nimport { Texture, BaseTexture } from \"../2d/texture\";\r\nimport { Rectangle } from \"../2d/math\";\r\n\r\n/**\r\n * 为了不影响原2djson图集的rotate判断，这里单独搞，rotate是6\r\n * @param url \r\n * @param onLoad 参数就是图集的对象\r\n * @param onError \r\n * @param imgUrl 不传会用url替换成png为图片路径\r\n */\r\nexport function loadAtlas(\r\n    url: string,\r\n    // onLoad: (textures: { [key: string]: Texture }) => void,//这种写法，d.ts生成有问题\r\n    onLoad: (textures: any) => void,\r\n    onError?: (err: any) => void,\r\n    imgUrl?: string\r\n) {\r\n    //替换后缀改成.png\r\n    imgUrl = imgUrl || url.replace(\".atlas\", \".png\")\r\n    Promise.all([\r\n        //数据\r\n        new Promise((r) => {\r\n            if (getEnv() == \"tb\") {\r\n                GlobalLoader.tbLoad((s, res) => {\r\n                    r(s ? res : null)\r\n                }, url, \"utf8\")\r\n            } else {\r\n                GlobalLoader.loadRawWeb((s, res) => {\r\n                    r(s ? res : null)\r\n                }, url, \"text\")\r\n            }\r\n        }) as Promise<string>,\r\n        //图片\r\n        new Promise((r) => {\r\n            GlobalLoader.loadImage((s, image) => {\r\n                r(s ? BaseTexture.fromImage(image) : null)\r\n            }, imgUrl)\r\n        }) as Promise<BaseTexture>\r\n    ]).then((results) => {\r\n        if (results[0] && results[1]) {\r\n            var textures = createTexturesByAtlas(results[1], results[0])\r\n            onLoad && onLoad(textures)\r\n        } else {\r\n            onError && onError(\"atlas图集：\" + url + \"加载失败\")\r\n        }\r\n\r\n    })\r\n\r\n\r\n}\r\n//由于旋转角度问题，单开方法\r\nexport function createTexturesByAtlas(baseTexture: BaseTexture, altaData: string): { [key: string]: Texture } {\r\n    const textures: { [key: string]: Texture } = {}\r\n    //解析数据\r\n    var reader = new AtlasReader(altaData)\r\n    var tuple = new Array(4);\r\n    var json = null\r\n    while (true) {\r\n        var line = reader.readLine();\r\n        // console.log(line)\r\n        if (line == null) break;\r\n        line = line.trim();\r\n        if (line.length == 0) { }\r\n        else if (!json) {//把下面的干回去，头部信息，暂时不用，但要读完\r\n            json = {}\r\n            if (reader.readTuple(tuple) == 2) {\r\n                // page.width = parseInt(tuple[0]);\r\n                // page.height = parseInt(tuple[1]);\r\n                reader.readTuple(tuple);\r\n            }\r\n            reader.readTuple(tuple);\r\n            // page.minFilter = core.Texture.filterFromString(tuple[0]);\r\n            // page.magFilter = core.Texture.filterFromString(tuple[1]);\r\n            var direction = reader.readValue();\r\n            // page.uWrap = core.TextureWrap.ClampToEdge;\r\n            // page.vWrap = core.TextureWrap.ClampToEdge;\r\n            // if (direction == \"x\")\r\n            //     page.uWrap = core.TextureWrap.Repeat;\r\n            // else if (direction == \"y\")\r\n            //     page.vWrap = core.TextureWrap.Repeat;\r\n            // else if (direction == \"xy\")\r\n            //     page.uWrap = page.vWrap = core.TextureWrap.Repeat;\r\n        } else {//下面的就是所有数据了\r\n            var rotation = reader.readValue() == \"true\" ? 6 : 0;\r\n            reader.readTuple(tuple);\r\n            var x = parseInt(tuple[0]);\r\n            var y = parseInt(tuple[1]);\r\n            reader.readTuple(tuple);\r\n            var w = parseInt(tuple[0]);\r\n            var h = parseInt(tuple[1]);\r\n            if (reader.readTuple(tuple) == 4) {\r\n                if (reader.readTuple(tuple) == 4) {\r\n                    reader.readTuple(tuple);\r\n                }\r\n            }\r\n            var sw = parseInt(tuple[0]);\r\n            var sh = parseInt(tuple[1]);\r\n            reader.readTuple(tuple);\r\n            var ox = parseInt(tuple[0]) /// resolution;\r\n            var oy = parseInt(tuple[1]) /// resolution;\r\n            let frame: Rectangle = null;\r\n            //裁切的数据\r\n            let trim: Rectangle = null;\r\n            //贴图原始尺寸\r\n            const orig = new Rectangle(\r\n                0,\r\n                0,\r\n                Math.floor(sw),\r\n                Math.floor(sh)\r\n            );\r\n            //如果旋转过\r\n            if (rotation) {\r\n                frame = new Rectangle(\r\n                    Math.floor(x),\r\n                    Math.floor(y),\r\n                    Math.floor(h),\r\n                    Math.floor(w)\r\n                );\r\n            } else {\r\n                frame = new Rectangle(\r\n                    Math.floor(x),\r\n                    Math.floor(y),\r\n                    Math.floor(w),\r\n                    Math.floor(h)\r\n                );\r\n            }\r\n            //如果是被截掉过透明边界的 ,,加上如果和原始尺寸不一致也是裁切\r\n            if (ox || oy || w != sw || h != sh) {\r\n                //其实就是在orig上切图，偏移\r\n                // trim = new Rectangle(\r\n                //     Math.floor(ox),\r\n                //     Math.floor(oy),\r\n                //     Math.floor(w),\r\n                //     Math.floor(h)\r\n                // );\r\n                //斟酌是否有必要用Math.floor，包括上面所有的\r\n                trim = new Rectangle(ox, sh - h - oy, w, h);\r\n            }\r\n            //暂时不考虑进全局图集\r\n            textures[line] = new Texture(\r\n                baseTexture,\r\n                frame,\r\n                orig,\r\n                trim,\r\n                rotation,\r\n                // data.anchor\r\n            );\r\n            //index:-1读完\r\n /*region.index = parseInt(*/reader.readValue()/*)*/;\r\n        }\r\n    }\r\n\r\n    return textures;\r\n}\r\n\r\nclass AtlasReader {\r\n    lines: Array<string>;\r\n    index: number = 0;\r\n\r\n    constructor(text: string) {\r\n        this.lines = text.split(/\\r\\n|\\r|\\n/);\r\n    }\r\n\r\n    readLine(): string {\r\n        if (this.index >= this.lines.length)\r\n            return null;\r\n        return this.lines[this.index++];\r\n    }\r\n\r\n    readValue(): string {\r\n        let line = this.readLine();\r\n        let colon = line.indexOf(\":\");\r\n        if (colon == -1)\r\n            throw new Error(\"Invalid line: \" + line);\r\n        return line.substring(colon + 1).trim();\r\n    }\r\n\r\n    readTuple(tuple: Array<string>): number {\r\n        let line = this.readLine();\r\n        let colon = line.indexOf(\":\");\r\n        if (colon == -1)\r\n            throw new Error(\"Invalid line: \" + line);\r\n        let i = 0, lastMatch = colon + 1;\r\n        for (; i < 3; i++) {\r\n            let comma = line.indexOf(\",\", lastMatch);\r\n            if (comma == -1) break;\r\n            tuple[i] = line.substr(lastMatch, comma - lastMatch).trim();\r\n            lastMatch = comma + 1;\r\n        }\r\n        tuple[i] = line.substring(lastMatch).trim();\r\n        return i + 1;\r\n    }\r\n}","\r\n\r\nexport * from './2d/const';\r\n\r\nexport * from \"./2d/display\";\r\n\r\nexport * from \"./2d/events\";\r\n\r\nexport * from \"./2d/filter\";\r\n\r\nexport * from \"./2d/graphics\";\r\n\r\nexport * from \"./2d/loader\";\r\n\r\nexport * from \"./2d/math\";\r\n\r\nexport * from \"./2d/mesh\";\r\n\r\nexport * from \"./2d/renderers/CanvasRenderer\";\r\nexport * from \"./2d/renderers/WebglRenderer\";\r\n\r\nexport * from \"./2d/text\";\r\n\r\n\r\nexport * from \"./2d/texture\";\r\n\r\nexport * from \"./2d/ui\";\r\n\r\nexport * from \"./2d/utils\";\r\n\r\n//音频不用这个，到时外部弄个库\r\n// export * from \"./sound\"\r\n\r\nexport * from \"./tween\";\r\n\r\n//3D\r\nexport * from \"./3d\";\r\n\r\n//spine\r\nexport * from \"./spine\";\r\n\r\n\r\n//如果是浏览器环境，声明个my为null，为了无声明不报错\r\n// if (window) window[\"my\"] = null\r\n// export * from \"./Stats\";\r\n\r\n/**\r\n * ios端canvas现在是永远根据设置的width和height（不是style里的）乘以dpi返回的尺寸\r\n *\r\n * 安卓端测试包已根据实际尺寸返回canvas尺寸，style里的能缩放canvas\r\n * 2d渲染模式ios的canvas没被style缩小，安卓测试包已被缩小（所以正常）\r\n *\r\n * 安卓正式包和ios的表现一样\r\n *\r\n *\r\n *\r\n * 待测的东西，滤镜，Mesh，\r\n */\r\n\r\n/**\r\n * 和web引擎的区别，\r\n * 1、baseTexture上和texture有修改，\r\n * 2、TextureManager上多了uploadData\r\n * 3、stage上有大修改（鼠标事件名等等等）\r\n * 4、const常用属性dpi，osType有修改\r\n * 5、utils里添加了tbminiAdapte方法\r\n * 6、text有大修改\r\n * 7、loader有大修改\r\n * 8、去掉了svga，到时能取外域文件再说\r\n * 9、ios一帧多buffer绘制在小程序上有问题，先去掉了，原因在查，暂时应该无影响，有影响再说\r\n * 10、安卓端createImage()返回的对象拿不到src属性，注意\r\n * 11、\r\n */\r\n\r\n// function aa(){\r\n//     HashObject\r\n// }\r\n","import { ObservablePoint } from './ObservablePoint';\nimport { Matrix } from \"./Matrix\";\nimport { HashObject } from '../HashObject';\nimport { cos, sin } from '../const';\n\n/**\n * @class\n */\nexport default class Transform extends HashObject {\n    /**\n     * 世界矩阵\n     */\n    worldMatrix: Matrix;\n    /**\n     * 本地矩阵\n     */\n    localMatrix: Matrix;\n\n    //约定，要更新时。父级的_worldID 和子级的_parentID不能同时设为-1；或者，只要都是-1就要更新\n    /**\n     * 记录子级是否更新worldMatrix，需要保证子级修改设置_worldID++\n     */\n    _worldID: number;\n    /**\n     * 记录是否和父级更新的_worldID一致，需要保证跟随父级修改设置_parentID=-1\n     */\n    _parentID: number;\n    /**\n    * 位置\n    */\n    position: ObservablePoint;\n    /**\n     * 缩放\n     */\n    scale: ObservablePoint;\n    /**\n     * 锚点\n     * 不改变坐标原点\n     */\n    anchor: ObservablePoint;\n    /**\n     * 斜切值\n     */\n    skew: ObservablePoint;\n    /**\n     * 弧度制\n     */\n    _rotation: number;\n    _cx: number;\n    _sx: number;\n    _cy: number;\n    _sy: number;\n\n    /**\n     * 记录的本地坐标id；需要保证本地矩阵修改设置_localID++\n     */\n    _localID: number;\n    /**\n     * 当前本地坐标id\n     */\n    _currentLocalID: number;\n\n    constructor() {\n        super();\n        let s = this;\n        s._instanceType = \"Transform\";\n\n        this.worldMatrix = new Matrix();\n\n        this.localMatrix = new Matrix();\n\n        //初始为0\n        this._worldID = 0;\n        this._parentID = 0;\n\n        this.position = new ObservablePoint(this.onChange, this, 0, 0);\n\n        this.scale = new ObservablePoint(this.onChange, this, 1, 1);\n\n        this.anchor = new ObservablePoint(this.onChange, this, 0, 0);\n\n        this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n\n        this._rotation = 0;\n\n        this._cx = 1; // cos rotation + skewY;\n        this._sx = 0; // sin rotation + skewY;\n        this._cy = 0; // cos rotation + Math.PI/2 - skewX;\n        this._sy = 1; // sin rotation + Math.PI/2 - skewX;\n\n        //初始为0\n        this._localID = 0;\n        this._currentLocalID = 0;\n    }\n\n    /**\n     * 任何属性更改\n     * @private\n     */\n    onChange() {\n        this._localID++;\n    }\n\n    /**\n     * 当斜切改变时，先记录，优化计算\n     * @private\n     */\n    updateSkew() {\n        this._cx = cos(this._rotation + this.skew._y);\n        this._sx = sin(this._rotation + this.skew._y);\n        this._cy = -sin(this._rotation - this.skew._x); // cos, added PI/2\n        this._sy = cos(this._rotation - this.skew._x); // sin, added PI/2\n\n        this._localID++;\n    }\n\n    /**\n     * 更新本地矩阵\n     */\n    updateLocalMatrix() {\n        const lt = this.localMatrix;\n\n        if (this._localID !== this._currentLocalID) {\n            //根据基础属性计算本地矩阵\n            lt.a = this._cx * this.scale._x;\n            lt.b = this._sx * this.scale._x;\n            lt.c = this._cy * this.scale._y;\n            lt.d = this._sy * this.scale._y;\n\n            //不改变位置原点，只改缩放和旋转中心点，+this.anchor._x\n            lt.tx = this.position._x + this.anchor._x - ((this.anchor._x * lt.a) + (this.anchor._y * lt.c));\n            lt.ty = this.position._y + this.anchor._y - ((this.anchor._x * lt.b) + (this.anchor._y * lt.d));\n            this._currentLocalID = this._localID;\n\n            //保证会更新世界坐标\n            this._parentID = -1;\n        }\n    }\n\n    /**\n     * 更新世界矩阵,跟随父级修改\n     * @param {Transform} parentTransform - 父级矩阵\n     */\n    updateWorldMatrix(parentTransform: Transform) {\n        const lt = this.localMatrix;\n\n        //先确定local是否需要更新\n        if (this._localID !== this._currentLocalID) {\n            //根据基础属性计算本地矩阵\n            lt.a = this._cx * this.scale._x;\n            lt.b = this._sx * this.scale._x;\n            lt.c = this._cy * this.scale._y;\n            lt.d = this._sy * this.scale._y;\n\n            //不改变位置原点，只改缩放和旋转中心点，+this.anchor._x\n            lt.tx = this.position._x + this.anchor._x - ((this.anchor._x * lt.a) + (this.anchor._y * lt.c));\n            lt.ty = this.position._y + this.anchor._y - ((this.anchor._x * lt.b) + (this.anchor._y * lt.d));\n            this._currentLocalID = this._localID;\n\n            //保证会更新世界坐标\n            this._parentID = -1;\n        }\n\n        //判断是否和父级更新的_worldID一致，或者都为-1(防止都设为-1的情况)去掉-1判断后TODO待测试\n        if (this._parentID !== parentTransform._worldID /*|| parentTransform._worldID == -1*/) {\n            // concat the parent matrix with the objects transform.\n            const pt = parentTransform.worldMatrix;\n            const wt = this.worldMatrix;\n\n            wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n            wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n            wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n            wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n            wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n            wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n            // if (parentTransform._worldID == -1) {\n            //     this._parentID = parentTransform._worldID = 0;\n            // } else {\n            //     this._parentID = parentTransform._worldID\n            // }\n\n            //修改自身worldId,保证子级会更新\n            this._worldID++;\n        }\n    }\n\n    /**\n     * 弧度制\n     *\n     * @member {number}\n     */\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(value) {\n        if (value === this._rotation) return\n        this._rotation = value;\n        this.updateSkew();\n    }\n\n    destroy() {\n        this.worldMatrix = null;\n        this.localMatrix = null;\n        this.position = null;\n        this.skew = null;\n        this.scale = null;\n        this.anchor = null;\n    }\n}\n","import { BLEND_MODES } from \"../const\";\r\n\r\n/**\r\n * Corrects blend, takes premultiplied alpha into account\r\n *\r\n * @private\r\n * @return {Array<number[]>} Mapped modes.\r\n */\r\nexport function mapPremultipliedBlendModes() {\r\n    var pm = [];\r\n    var npm = [];\r\n\r\n    for (var i = 0; i < 32; i++) {\r\n        pm[i] = i;\r\n        npm[i] = i;\r\n    }\r\n\r\n    pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\r\n    pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\r\n    pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\r\n\r\n    npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\r\n    npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\r\n    npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\r\n\r\n    var array = [];\r\n    //0是非预乘alpha的\r\n    array.push(npm);\r\n    //1是预乘alpha的\r\n    array.push(pm);\r\n\r\n    return array;\r\n}","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexport const INT_BITS1 = 32;\nexport const INT_MAX = 0x7fffffff;\nexport const INT_MIN = -1 << (INT_BITS - 1);\n\n//Computes absolute value of integer\nexport function abs(v) {\n  var mask = v >> (INT_BITS - 1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexport function min(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexport function max(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexport function isPow2(v) {\n  return !(v & (v - 1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexport function log2(v) {\n  //Ts报错，但实际可运行\n  var r, shift;\n  r =     Number(v > 0xFFFF) << 4; v >>>= r;\n  shift = Number(v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = Number(v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = Number(v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexport function log10(v) {\n  return (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n    (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n      (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexport function popCount(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nexport function countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n};\n\n//Rounds to next power of 2\nexport function nextPow2(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexport function prevPow2(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v >>> 1);\n}\n\n//Computes parity of word\nexport function parity(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function (tab) {\n  for (var i = 0; i < 256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexport function reverse(v) {\n  return (REVERSE_TABLE[v & 0xff] << 24) |\n    (REVERSE_TABLE[(v >>> 8) & 0xff] << 16) |\n    (REVERSE_TABLE[(v >>> 16) & 0xff] << 8) |\n    REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexport function interleave2(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexport function deinterleave2(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1)) & 0x33333333;\n  v = (v | (v >>> 2)) & 0x0F0F0F0F;\n  v = (v | (v >>> 4)) & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexport function interleave3(x, y, z) {\n  x &= 0x3FF;\n  x = (x | (x << 16)) & 4278190335;\n  x = (x | (x << 8)) & 251719695;\n  x = (x | (x << 4)) & 3272356035;\n  x = (x | (x << 2)) & 1227133513;\n\n  y &= 0x3FF;\n  y = (y | (y << 16)) & 4278190335;\n  y = (y | (y << 8)) & 251719695;\n  y = (y | (y << 4)) & 3272356035;\n  y = (y | (y << 2)) & 1227133513;\n  x |= (y << 1);\n\n  z &= 0x3FF;\n  z = (z | (z << 16)) & 4278190335;\n  z = (z | (z << 8)) & 251719695;\n  z = (z | (z << 4)) & 3272356035;\n  z = (z | (z << 2)) & 1227133513;\n\n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexport function deinterleave3(v, n) {\n  v = (v >>> n) & 1227133513;\n  v = (v | (v >>> 2)) & 3272356035;\n  v = (v | (v >>> 4)) & 251719695;\n  v = (v | (v >>> 8)) & 4278190335;\n  v = (v | (v >>> 16)) & 0x3FF;\n  return (v << 22) >> 22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexport function nextCombination(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n","import { CanvasRenderer } from \"../renderers/CanvasRenderer\";\r\nimport RenderTexture from \"../texture/RenderTexture\";\r\nimport { Matrix, Rectangle } from \"../math\";\r\nimport { DisplayObject } from \"../display/DisplayObject\";\r\nimport { createCanvas } from \"./tbminiAdapte\";\r\n\r\n\r\n// 作为将显示对象导出成图片的render渲染器\r\nlet _dRender: CanvasRenderer = null;\r\nlet _dCanvas\r\nlet tempMatrix = new Matrix()\r\n/**\r\n * 将显示对象转成base64的图片数据\r\n * 小程序上有问题，尽量不用，矢量图的canvas绘制被删了\r\n * @method toDisplayDataURL\r\n * @static\r\n * @param {DisplayObject} obj 显示对象\r\n * @param {Rectangle} rect 需要裁切的区域，默认不裁切\r\n * @param {Object} typeInfo {type:\"png\"}  或者 {type:\"jpeg\",quality:100}  png格式不需要设置quality，jpeg 格式需要设置quality的值 从1-100\r\n * @param {number} bgColor 十六进制颜色值如 0xffffff 默认值为空的情况下，jpeg格式的话就是黑色底，png格式的话就是透明底,暂时无效\r\n * @return {string} base64格式数据\r\n * @example\r\n *      toDisplayDataURL(DisplayObj, {\r\n *               x: 0,\r\n *               y: 32,\r\n *               width: 441,\r\n *               height: 694\r\n *       }, {\r\n *               type: \"jpeg\"//数据类型jpg/png\r\n *               quality: 90//图片质量值1-100,png格式不需要设置quality\r\n *       }, '#CDDBEB');\r\n *\r\n * Tip:在一些需要上传图片，编辑图片，需要提交图片数据，分享作品又或者长按保存作品的项目，运用toDisplayDataURL方法把显示对象base64就是最好不过的选择了。\r\n */\r\nexport default function toDisplayDataURL(\r\n    obj: DisplayObject,\r\n    rect: Rectangle = null,\r\n    typeInfo/*: { type: \"png\" | \"jpeg\", quality?: number }*/ = null,\r\n    bgColor: number = 0x000000\r\n): string {\r\n    var bounds = obj.getLocalBounds();\r\n    let w: number = rect ? rect.width : bounds.width;\r\n    let h: number = rect ? rect.height : bounds.height;\r\n    let x: number = rect ? rect.x : bounds.x;\r\n    let y: number = rect ? rect.y : bounds.y;\r\n    if (!_dRender) {\r\n        var canvas: HTMLCanvasElement = createCanvas();\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n        _dCanvas = canvas\r\n        _dRender = new CanvasRenderer(canvas.getContext(\"2d\"), w, h);\r\n    } else {\r\n        _dCanvas.width = w;\r\n        _dCanvas.height = h;\r\n    }\r\n\r\n    if (!typeInfo) {\r\n        typeInfo = { type: \"png\" };\r\n    }\r\n\r\n    //以防万一，刷一次\r\n    obj.transform.updateLocalMatrix();\r\n    tempMatrix.copy(obj.transform.localMatrix);\r\n    tempMatrix.invert();\r\n    tempMatrix.tx -= x;\r\n    tempMatrix.ty -= y;\r\n    _dRender.render(obj, null, tempMatrix);\r\n    //因为上面render会修改obj的全局矩阵，保证会被修改回去\r\n    obj.transform._parentID = -1;\r\n    // document.body.appendChild(_canvasBuffer.baseTexture.source)\r\n    return _dCanvas.toDataURL(\"image/\" + typeInfo.type, typeInfo.quality);\r\n};\r\n\r\n//利用离屏纹理，暂时背景色无效，因为canvasRender暂时不对离屏纹理填充背景色，以后有需要再说\r\n// let _canvasBuffer: RenderTexture = null;\r\n/**\r\n * 将显示对象转成base64的图片数据\r\n * @method toDisplayDataURL\r\n * @static\r\n * @param {DisplayObject} obj 显示对象\r\n * @param {Rectangle} rect 需要裁切的区域，默认不裁切\r\n * @param {Object} typeInfo {type:\"png\"}  或者 {type:\"jpeg\",quality:100}  png格式不需要设置quality，jpeg 格式需要设置quality的值 从1-100\r\n * @param {number} bgColor 十六进制颜色值如 0xffffff 默认值为空的情况下，jpeg格式的话就是黑色底，png格式的话就是透明底,\r\n * @return {string} base64格式数据\r\n */\r\n/*function toDisplayDataURL(obj: DisplayObject, rect: Rectangle = null, typeInfo: any = null, bgColor: number = 0x000000): string {\r\n    var bounds = obj.getLocalBounds();\r\n    let w: number = rect ? rect.width : bounds.width;\r\n    let h: number = rect ? rect.height : bounds.height;\r\n    let x: number = rect ? rect.x : bounds.x;\r\n    let y: number = rect ? rect.y : bounds.y;\r\n    if (!_canvasBuffer) {\r\n        _canvasBuffer = RenderTexture.create(w, h);\r\n    } else {\r\n        _canvasBuffer.resize(w, h)\r\n    }\r\n    if (!_dRender) {\r\n        _dRender = new CanvasRenderer({});\r\n    }\r\n    if (!typeInfo) {\r\n        typeInfo = { type: \"png\" };\r\n    }\r\n    if (typeInfo.type == \"png\") {\r\n        _dRender.transparent = true;\r\n    } else {\r\n        _dRender.transparent = false;\r\n        _dRender.backgroundColor = bgColor\r\n    }\r\n    obj.transform.updateLocalMatrix();\r\n    tempMatrix.copy(obj.transform.localMatrix);\r\n    tempMatrix.invert();\r\n    tempMatrix.tx -= x;\r\n    tempMatrix.ty -= y;\r\n    _dRender.render(obj, _canvasBuffer, tempMatrix);\r\n    return _canvasBuffer.baseTexture.source[\"toDataURL\"](\"image/\" + typeInfo.type, typeInfo.quality);\r\n};*/","import { SHAPES } from '../../const';\nimport { HashObject } from '../../HashObject';\nimport { CanvasRenderer } from '../CanvasRenderer';\nimport Graphics from '../../graphics/Graphics';\nimport GraphicsData from '../../graphics/GraphicsData';\nimport { holePath, judgeCcw } from '../plugins/CanvasGraphicsRenderer';\n\n/**\n * \n */\nexport default class CanvasMaskManager extends HashObject {\n    renderer\n    /**\n     * @param {CanvasRenderer} renderer - The canvas renderer.\n     */\n    constructor(renderer: CanvasRenderer) {\n        super();\n        this._instanceType = \"CanvasMaskManager\"\n        this.renderer = renderer;\n    }\n\n    /**\n     * This method adds it to the current stack of masks.\n     *\n     * @param {object} maskData - the maskData that will be pushed\n     */\n    pushMask(maskData: Graphics) {\n        const renderer = this.renderer;\n        renderer.context.save();\n        renderer.context.globalAlpha = 0;//得加上，不绘制\n        const transform = maskData.transform.worldMatrix;\n        renderer.context.setTransform(\n            transform.a,\n            transform.b,\n            transform.c,\n            transform.d,\n            transform.tx,\n            transform.ty\n        );\n        //兼容下canvas下也能用Shape作为遮罩\n        if (maskData.instanceType == \"Shape\") {\n            maskData[\"_drawShape\"](renderer.context)\n        } else if (maskData.instanceType == \"Graphics\") {//还有那种sprite的。。。暂时这么判断，canvas下的sprite无效\n            //以防万一，没有end，加一段，不考虑闭合情况\n            maskData[\"finishPoly\"]()\n            this.renderGraphicsShape(maskData);\n        }\n        renderer.context.clip();\n    }\n\n    /**\n     * Renders a Graphics shape.\n     *\n     * @param {Graphics} graphics - The object to render.\n     */\n    renderGraphicsShape(graphics: Graphics) {\n        const context = this.renderer.context;\n        const len = graphics.graphicsData.length;\n\n        if (len === 0) return;\n\n        //beginPath 清空子路径列表\n        //clip和fill都会把当beginPath后的所有的子路径进行裁剪或填充，且闭合当前子路径，但是不会清空子路径列表\n        //stroke不会闭合当前子路径\n        //closePath闭合当前子路径，和beginPath并不对应，手动将首尾闭合就没必要调用closePath\n        //rect，arc都是顺时针的，rect会首尾闭合，arc全角也会闭合\n        //几个都要应用的话，只执行一次beginPath  \n        context.beginPath();\n        for (let i = 0; i < len; i++) {\n            const data = graphics.graphicsData[i];\n            const shape = data.shape;\n            var ccw = true;\n            if (data.type === SHAPES.POLY) {\n                const points = shape.points;\n\n                context.moveTo(points[0], points[1]);\n\n                for (let j = 1; j < points.length / 2; j++) {\n                    context.lineTo(points[j * 2], points[(j * 2) + 1]);\n                }\n                ccw = !judgeCcw(points)\n                // if the first and last point are the same close the path - much neater :)\n                if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\n                    // context.closePath();\n                } else {\n                    context.closePath();\n                }\n            }\n            else if (data.type === SHAPES.RECT) {\n                context.rect(shape.x, shape.y, shape.width, shape.height);\n            }\n            else if (data.type === SHAPES.CIRC) {\n                // TODO - need to be Undefined!\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n            }\n            else if (data.type === SHAPES.ELIP) {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                const w = shape.width * 2;\n                const h = shape.height * 2;\n\n                const x = shape.x - (w / 2);\n                const y = shape.y - (h / 2);\n\n                const kappa = 0.5522848;\n                const ox = (w / 2) * kappa; // control point offset horizontal\n                const oy = (h / 2) * kappa; // control point offset vertical\n                const xe = x + w;           // x-end\n                const ye = y + h;           // y-end\n                const xm = x + (w / 2);       // x-middle\n                const ym = y + (h / 2);       // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n            }\n            else if (data.type === SHAPES.RREC) {\n                const rx = shape.x;\n                const ry = shape.y;\n                const width = shape.width;\n                const height = shape.height;\n                let radius = shape.radius;\n\n                const maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.moveTo(rx, ry + radius);\n                context.quadraticCurveTo(rx, ry, rx + radius, ry);\n                context.lineTo(rx + width - radius, ry);\n                context.quadraticCurveTo(rx + width, ry, rx + width, ry + radius);\n                context.lineTo(rx + width, ry + height - radius);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width - radius, ry + height);\n                context.lineTo(rx + radius, ry + height);\n                context.quadraticCurveTo(rx, ry + height, rx, ry + height - radius);\n                context.lineTo(rx, ry + radius);\n            }\n            for (let j = 0; j < data.holes.length; j++) {\n                holePath(data.holes[i], context, ccw)\n            }\n        }\n    }\n\n    /**\n     * Restores the current drawing context to the state it was before the mask was applied.\n     *\n     * @param {CanvasRenderer} renderer - The renderer context to use.\n     */\n    popMask(renderer: CanvasRenderer) {\n        renderer.context.restore();\n    }\n\n    /**\n     * Destroys this canvas mask manager.\n     *\n     */\n    destroy() {\n        /* empty */\n    }\n}\n","import {CanvasRenderer} from '../CanvasRenderer';\nimport { SCALE_MODES, BLEND_MODES } from '../../const';\nimport { Matrix, GroupD8 } from '../../math';\nimport Sprite from '../../display/Sprite';\nimport { DisplayObject } from '../../display/DisplayObject';\nimport Graphics from '../../graphics/Graphics';\nimport { getTintedTexture } from '../../utils';\n\nconst canvasRenderWorldTransform = new Matrix();\n\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n */\nexport default class CanvasSpriteRenderer {\n    renderer: CanvasRenderer;\n    /**\n     * @param {CanvasRenderer} renderer -The renderer sprite this batch works for.\n     */\n    constructor(renderer: CanvasRenderer) {\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the sprite object.\n     * 渲染带texture的显示对象，Sprite,Graphic\n     * @param {Sprite} sprite - the sprite to render when using this spritebatch\n     */\n    render(sprite: any) {\n        const texture = sprite._texture;\n        const renderer = this.renderer;\n\n        const width = texture._frame.width;\n        const height = texture._frame.height;\n\n        let wt = sprite.transform.worldMatrix;\n        let dx = 0;\n        let dy = 0;\n\n        if (texture.orig.width <= 0 || texture.orig.height <= 0 || !texture.baseTexture.source) return;\n\n        //  Ignore null sources\n        if (!texture.valid) return\n\n        //设置混色模式\n        renderer.setBlendMode(sprite.blendMode);\n        //透明度\n        renderer.context.globalAlpha = sprite._worldAlpha;\n\n\n        // If smoothingEnabled is supported and we need to change the smoothing property for sprite texture\n        // const smoothingEnabled = texture.baseTexture.scaleMode === SCALE_MODES.LINEAR;\n\n        // if (renderer.smoothProperty && renderer.context[renderer.smoothProperty] !== smoothingEnabled) {\n        //     // 如果遇到性能问题，先禁掉\n        //     renderer.context[renderer.smoothProperty] = smoothingEnabled;\n        // }\n        if (sprite._anchorTexture) {\n            if (texture.trim) {\n                dx = (texture.trim.width / 2) + texture.trim.x - (sprite._anchorTexture.x * texture.orig.width);\n                dy = (texture.trim.height / 2) + texture.trim.y - (sprite._anchorTexture.y * texture.orig.height);\n            }\n            else {\n\n                dx = (0.5 - sprite._anchorTexture.x) * texture.orig.width;\n                dy = (0.5 - sprite._anchorTexture.y) * texture.orig.height;\n            }\n            if (texture.rotate) {\n                canvasRenderWorldTransform.copy(wt)\n                wt = canvasRenderWorldTransform;\n                GroupD8.matrixAppendRotationInv(wt, texture.rotate, dx, dy);\n                // the anchor has already been applied above, so lets set it to zero\n                dx = 0;\n                dy = 0;\n            }\n\n            dx -= width / 2;\n            dy -= height / 2;\n        } else {\n            dx = sprite[\"offsetX\"] || 0;\n            dy = sprite[\"offsetY\"] || 0;\n            // console.log(sprite[\"offsetX\"])\n        }\n\n        renderer.context.setTransform(\n            wt.a,\n            wt.b,\n            wt.c,\n            wt.d,\n            wt.tx,\n            wt.ty\n        );\n\n        //处理outerBlend\n        const outerBlend = renderer._outerBlend;\n        if (outerBlend) {\n            renderer.context.save();\n            renderer.context.beginPath();\n            renderer.context.rect(\n                dx,\n                dy,\n                width,\n                height\n            );\n            renderer.context.clip();\n        }\n\n        //判断调色\n        if (sprite.tint !== 0xFFFFFF) {\n            if (sprite.cachedTint !== sprite.tint || sprite.tintedTexture.tintId !== sprite._texture._updateID) {\n                sprite.cachedTint = sprite.tint;\n                //在sprite的destroy里置空，_texture上的tintCache暂时没法清\n                sprite.tintedTexture = getTintedTexture(sprite._texture, sprite.tint);\n            }\n\n            renderer.context.drawImage(\n                sprite.tintedTexture,\n                0,\n                0,\n                width,\n                height,\n                dx,\n                dy,\n                width,\n                height\n            );\n        }\n        else {\n            //考虑是否分开，\n            renderer.context.drawImage(\n                texture.baseTexture.source,//不支持data类型\n                texture._frame.x,\n                texture._frame.y,\n                width,\n                height,\n                dx,\n                dy,\n                width,\n                height\n            );\n        }\n        //如果处理过outerBlend\n        if (outerBlend)  renderer.context.restore();\n        \n        //以防万一，设置一次\n        renderer.setBlendMode(BLEND_MODES.NORMAL);\n    }\n\n    /**\n     * destroy the sprite object.\n     *\n     */\n    destroy() {\n        this.renderer = null;\n    }\n}","import { createCanvas } from \"../../utils\";\n\n\n\n/**\n * Creates a Canvas element of the given size.\n * 其实就是一个离屏canvas，webgl模式不需要建canvas，因为可以用帧缓存\n */\nexport default class CanvasRenderTarget {\n    /**\n     * The Canvas object that belongs to this CanvasRenderTarget.\n     */\n    canvas: HTMLCanvasElement;\n    /**\n     * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n     */\n    context: CanvasRenderingContext2D;\n\n    /**\n     * @param {number} width - the width for the newly created canvas\n     * @param {number} height - the height for the newly created canvas\n     */\n    constructor(width: number, height: number) {\n\n        this.canvas = createCanvas() //document.createElement('canvas');\n        // console.log(\"rd1\",this.canvas)\n        this.resize(width, height);//要先设置尺寸？\n        this.context = this.canvas.getContext('2d');\n        // console.log(\"rd\",this.context)\n        this.resize(width, height);//为何要多加一次\n        this.clear();//淘宝canvas问题，绘制前必须调用过clearRect，否则就有几率绘制不出来\n    }\n\n    /**\n     * Clears the canvas that was created by the CanvasRenderTarget class.\n     *\n     * @private\n     */\n    clear() {\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * Resizes the canvas to the specified width and height.\n     *\n     * @param {number} width - the new width of the canvas\n     * @param {number} height - the new height of the canvas\n     */\n    resize(width: number, height: number): void {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n\n    /**\n     * Destroys this canvas.\n     *\n     */\n    destroy() {\n        this.context = null;\n        this.canvas = null;\n    }\n\n    /**\n     * The width of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get width(): number {\n        return this.canvas.width;\n    }\n\n    set width(val: number) {\n        this.canvas.width = val;\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get height(): number {\n        return this.canvas.height;\n    }\n\n    set height(val: number) {\n        this.canvas.height = val;\n    }\n}\n","import { Mesh } from \"../../mesh\";\nimport { CanvasRenderer } from \"../CanvasRenderer\";\n/**\n * canvas模式下网格渲染插件\n */\nexport class CanvasMeshRenderer {\n    constructor(public renderer: CanvasRenderer) { }\n    render(mesh: Mesh) {\n        const renderer = this.renderer;\n        const context = renderer.context;\n        const transform = mesh.worldMatrix;\n        context.setTransform(\n            transform.a,\n            transform.b,\n            transform.c,\n            transform.d,\n            transform.tx,\n            transform.ty\n        );\n\n        renderer.context.globalAlpha = mesh._worldAlpha;\n        renderer.setBlendMode(mesh.blendMode);\n\n        //当没有纹理,纯色的时候,可以用其他方式渲染,到时再说\n        this._renderTriangles(mesh);\n    }\n\n    private _renderTriangles(mesh: Mesh) {\n        const indices = mesh._indices;\n        const length = indices.length;\n\n        for (let i = 0; i < length; i += 3) {\n            const index0 = indices[i] * 2;\n            const index1 = indices[i + 1] * 2;\n            const index2 = indices[i + 2] * 2;\n\n            this._renderDrawTriangle(mesh, index0, index1, index2);\n        }\n    }\n\n\n    private _renderDrawTriangle(mesh: Mesh, index0: number, index1: number, index2: number) {\n        const context = this.renderer.context;\n        const uvs = mesh._uvs;\n        const vertices = mesh._vertices;\n        const texture = mesh.texture;\n\n        if (!texture.valid) return;\n\n        const base = texture.baseTexture;\n        const textureSource = base.source;\n        const textureWidth = base.width;\n        const textureHeight = base.height;\n\n\n        let u0 = uvs[index0] * base.width;\n        let u1 = uvs[index1] * base.width;\n        let u2 = uvs[index2] * base.width;\n        let v0 = uvs[index0 + 1] * base.height;\n        let v1 = uvs[index1 + 1] * base.height;\n        let v2 = uvs[index2 + 1] * base.height;\n\n        let x0 = vertices[index0];\n        let x1 = vertices[index1];\n        let x2 = vertices[index2];\n        let y0 = vertices[index0 + 1];\n        let y1 = vertices[index1 + 1];\n        let y2 = vertices[index2 + 1];\n\n        const canvasPadding = mesh.canvasPadding\n\n        if (canvasPadding > 0) {\n            const paddingX = canvasPadding / Math.abs(mesh.worldMatrix.a);\n            const paddingY = canvasPadding / Math.abs(mesh.worldMatrix.d);\n            const centerX = (x0 + x1 + x2) / 3;\n            const centerY = (y0 + y1 + y2) / 3;\n\n            let normX = x0 - centerX;\n            let normY = y0 - centerY;\n\n            let dist = Math.sqrt((normX * normX) + (normY * normY));\n\n            x0 = centerX + ((normX / dist) * (dist + paddingX));\n            y0 = centerY + ((normY / dist) * (dist + paddingY));\n\n            //\n\n            normX = x1 - centerX;\n            normY = y1 - centerY;\n\n            dist = Math.sqrt((normX * normX) + (normY * normY));\n            x1 = centerX + ((normX / dist) * (dist + paddingX));\n            y1 = centerY + ((normY / dist) * (dist + paddingY));\n\n            normX = x2 - centerX;\n            normY = y2 - centerY;\n\n            dist = Math.sqrt((normX * normX) + (normY * normY));\n            x2 = centerX + ((normX / dist) * (dist + paddingX));\n            y2 = centerY + ((normY / dist) * (dist + paddingY));\n        }\n\n        //设定截取三角面的路径\n        context.save();\n        context.beginPath();\n\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.lineTo(x2, y2);\n\n        context.closePath();\n\n        context.clip();\n\n        // Compute matrix transform\n        const delta = (u0 * v1) + (v0 * u2) + (u1 * v2) - (v1 * u2) - (v0 * u1) - (u0 * v2);\n        const deltaA = (x0 * v1) + (v0 * x2) + (x1 * v2) - (v1 * x2) - (v0 * x1) - (x0 * v2);\n        const deltaB = (u0 * x1) + (x0 * u2) + (u1 * x2) - (x1 * u2) - (x0 * u1) - (u0 * x2);\n        const deltaC = (u0 * v1 * x2) + (v0 * x1 * u2) + (x0 * u1 * v2) - (x0 * v1 * u2) - (v0 * u1 * x2) - (u0 * x1 * v2);\n        const deltaD = (y0 * v1) + (v0 * y2) + (y1 * v2) - (v1 * y2) - (v0 * y1) - (y0 * v2);\n        const deltaE = (u0 * y1) + (y0 * u2) + (u1 * y2) - (y1 * u2) - (y0 * u1) - (u0 * y2);\n        const deltaF = (u0 * v1 * y2) + (v0 * y1 * u2) + (y0 * u1 * v2) - (y0 * v1 * u2) - (v0 * u1 * y2) - (u0 * y1 * v2);\n\n        context.transform(\n            deltaA / delta,\n            deltaD / delta,\n            deltaB / delta,\n            deltaE / delta,\n            deltaC / delta,\n            deltaF / delta\n        );\n\n        context.drawImage(\n            textureSource,\n            0,\n            0,\n            textureWidth,\n            textureHeight,\n            0,\n            0,\n            textureWidth,\n            textureHeight\n        );\n\n        context.restore();\n    }\n\n    // renderMeshFlat(mesh) {\n    //     const context = this.renderer.context;\n    //     const vertices = mesh.vertices;\n    //     const length = vertices.length / 2;\n\n    //     // this.count++;\n\n    //     context.beginPath();\n\n    //     for (let i = 1; i < length - 2; ++i) {\n    //         // draw some triangles!\n    //         const index = i * 2;\n\n    //         const x0 = vertices[index];\n    //         const y0 = vertices[index + 1];\n\n    //         const x1 = vertices[index + 2];\n    //         const y1 = vertices[index + 3];\n\n    //         const x2 = vertices[index + 4];\n    //         const y2 = vertices[index + 5];\n\n    //         context.moveTo(x0, y0);\n    //         context.lineTo(x1, y1);\n    //         context.lineTo(x2, y2);\n    //     }\n\n    //     context.fillStyle = '#FF0000';\n    //     context.fill();\n    //     context.closePath();\n    // }\n\n    destroy() {\n        this.renderer = null;\n    }\n}\n","import { canUseNewCanvasBlendModes } from \"./canUseNewCanvasBlendModes\";\nimport Texture from \"../texture/Texture\";\nimport { createCanvas } from \"./tbminiAdapte\";\n\n/**\n * Number of steps which will be used as a cap when rounding colors.\n *\n * @type {number}\n */\nlet cacheStepsPerColorChannel: number = 8;\n\n/**\n * Tint cache boolean flag.\n *\n * @type {boolean}\n */\nlet convertTintToImage: boolean = false;\n\n/**\n * 做缓存使用，若不转换为Image，一般不用\n */\nlet defaultCanvas: HTMLCanvasElement;\n/**\n * 调色方法，根据混色是否可用\n */\nlet tintMethod: Function = canUseNewCanvasBlendModes() ? tintWithMultiply : tintWithPerPixel;\n\n/**\n * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n *\n * @param {Texture} texture - the sprite to tint\n * @param {number} color - the color to use to tint the sprite with\n * @return {HTMLCanvasElement} The tinted canvas\n */\nexport function getTintedTexture(texture: Texture, color: number): HTMLCanvasElement {\n    color = roundColor(color);\n\n    const stringColor = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n\n    texture[\"tintCache\"] = texture[\"tintCache\"] || {};\n\n    const cachedTexture = texture[\"tintCache\"][stringColor];\n\n    let canvas;\n\n    if (cachedTexture) {\n        if (cachedTexture.tintId === texture._updateID) {\n            return texture[\"tintCache\"][stringColor];\n        }\n\n        canvas = texture[\"tintCache\"][stringColor];\n    }\n    else {\n        canvas = defaultCanvas || createCanvas()//document.createElement('canvas');\n    }\n\n    tintMethod(texture, color, canvas);\n\n    canvas.tintId = texture._updateID;\n\n    if (convertTintToImage) {\n        // is this better?\n        const tintImage = new Image();\n\n        tintImage.src = canvas.toDataURL();\n\n        texture[\"tintCache\"][stringColor] = tintImage;\n    }\n    else {\n        texture[\"tintCache\"][stringColor] = canvas;\n        // if we are not converting the texture to an image then we need to lose the reference to the canvas\n        defaultCanvas = null;\n    }\n\n    return canvas;\n};\n\n/**\n * Tint a texture using the 'multiply' operation.\n * @param {Texture} texture - the texture to tint\n * @param {number} color - the color to use to tint the sprite with\n * @param {HTMLCanvasElement} canvas - the current canvas\n */\nfunction tintWithMultiply(texture: Texture, color: number, canvas: HTMLCanvasElement): void {\n    const context = canvas.getContext('2d');\n    const crop = texture._frame.clone();\n\n    canvas.width = Math.ceil(crop.width);\n    canvas.height = Math.ceil(crop.height);\n\n    context.save();\n    context.fillStyle = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n\n    context.fillRect(0, 0, crop.width, crop.height);\n\n    context.globalCompositeOperation = 'multiply';\n\n    context.drawImage(\n        texture.baseTexture.source,\n        crop.x,\n        crop.y,\n        crop.width,\n        crop.height,\n        0,\n        0,\n        crop.width,\n        crop.height\n    );\n\n    context.globalCompositeOperation = 'destination-atop';\n\n    context.drawImage(\n        texture.baseTexture.source,\n        crop.x,\n        crop.y,\n        crop.width,\n        crop.height,\n        0,\n        0,\n        crop.width,\n        crop.height\n    );\n    context.restore();\n};\n\n/**\n * Tint a texture using the 'overlay' operation.\n *\n * @param {Texture} texture - the texture to tint\n * @param {number} color - the color to use to tint the sprite with\n * @param {HTMLCanvasElement} canvas - the current canvas\n */\nfunction tintWithOverlay(texture: Texture, color: number, canvas: HTMLCanvasElement): void {\n    const context = canvas.getContext('2d');\n    const crop = texture._frame.clone();\n\n    canvas.width = Math.ceil(crop.width);\n    canvas.height = Math.ceil(crop.height);\n\n    context.save();\n    context.globalCompositeOperation = 'copy';\n    context.fillStyle = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n    context.fillRect(0, 0, crop.width, crop.height);\n\n    context.globalCompositeOperation = 'destination-atop';\n    context.drawImage(\n        texture.baseTexture.source,\n        crop.x,\n        crop.y,\n        crop.width,\n        crop.height,\n        0,\n        0,\n        crop.width,\n        crop.height\n    );\n\n    // context.globalCompositeOperation = 'copy';\n    context.restore();\n};\n\n/**\n * Tint a texture pixel per pixel.\n *\n * @param {Texture} texture - the texture to tint\n * @param {number} color - the color to use to tint the sprite with\n * @param {HTMLCanvasElement} canvas - the current canvas\n */\nfunction tintWithPerPixel(texture: Texture, color: number, canvas: HTMLCanvasElement): void {\n    const context = canvas.getContext('2d');\n    const crop = texture._frame.clone();\n\n    canvas.width = Math.ceil(crop.width);\n    canvas.height = Math.ceil(crop.height);\n\n    context.save();\n    context.globalCompositeOperation = 'copy';\n    context.drawImage(\n        texture.baseTexture.source,\n        crop.x,\n        crop.y,\n        crop.width,\n        crop.height,\n        0,\n        0,\n        crop.width,\n        crop.height\n    );\n    context.restore();\n\n    const rgbValues = hex2rgb(color);\n    const r = rgbValues[0];\n    const g = rgbValues[1];\n    const b = rgbValues[2];\n\n    const pixelData = context.getImageData(0, 0, crop.width, crop.height);\n\n    const pixels = pixelData.data;\n\n    for (let i = 0; i < pixels.length; i += 4) {\n        pixels[i + 0] *= r;\n        pixels[i + 1] *= g;\n        pixels[i + 2] *= b;\n    }\n\n    context.putImageData(pixelData, 0, 0);\n};\n\n\nfunction rgb2hex(rgb) {\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\n}\nfunction hex2rgb(hex, out?) {\n    out = out || [];\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n    return out;\n}\nfunction roundColor(color) {\n    const step = cacheStepsPerColorChannel;\n    const rgbValues = hex2rgb(color);\n    rgbValues[0] = Math.min(255, (rgbValues[0] / step) * step);\n    rgbValues[1] = Math.min(255, (rgbValues[1] / step) * step);\n    rgbValues[2] = Math.min(255, (rgbValues[2] / step) * step);\n    return rgb2hex(rgbValues);\n}","import { BLEND_MODES } from \"../const\";\r\n\r\n/**\r\n * Maps gl blend combinations to WebGL.\r\n * @function mapWebGLBlendModes\r\n * @private\r\n * @param {WebGLRenderingContext} gl - The rendering context.\r\n * @param {string[]} [array=[]] - The array to output into.\r\n * @return {string[]} Mapped modes.\r\n */\r\nexport function mapWebGLBlendModes(gl: WebGLRenderingContext, array: any[] = []): any[] {\r\n    // TODO - premultiply alpha would be different.\r\n    // add a boolean for that!\r\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    // array[BLEND_MODES.ADD] = [gl.ONE, gl.DST_ALPHA];\r\n    // array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\r\n    // array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR];\r\n    //下面修改5.0上的，用新的stateManager\r\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.DST_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n\r\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n\r\n    array[BLEND_MODES.NONE] = [0, 0];\r\n\r\n    // not-premultiplied blend modes\r\n    array[BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.DST_ALPHA, gl.ONE, gl.DST_ALPHA];\r\n    array[BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_COLOR];\r\n\r\n    //和NORMAL一致\r\n    array[BLEND_MODES.SRC_OVER] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\r\n    // composite operations\r\n    array[BLEND_MODES.SRC_IN] = [gl.DST_ALPHA, gl.ZERO];\r\n    array[BLEND_MODES.SRC_OUT] = [gl.ONE_MINUS_DST_ALPHA, gl.ZERO];\r\n    array[BLEND_MODES.SRC_ATOP] = [gl.DST_ALPHA, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.DST_OVER] = [gl.ONE_MINUS_DST_ALPHA, gl.ONE];\r\n    array[BLEND_MODES.DST_IN] = [gl.ZERO, gl.SRC_ALPHA];\r\n    array[BLEND_MODES.DST_OUT] = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\r\n    array[BLEND_MODES.DST_ATOP] = [gl.ONE_MINUS_DST_ALPHA, gl.SRC_ALPHA];\r\n\r\n    //擦除效果,无效，到时查下，是否因为alpha色值合并了\r\n    array[BLEND_MODES.ERASE] = [gl.ZERO, gl.ONE, gl.SRC_ALPHA, 0]\r\n\r\n    // SUBTRACT from flash\r\n    array[BLEND_MODES.SUBTRACT] = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.FUNC_REVERSE_SUBTRACT, gl.FUNC_ADD];\r\n\r\n    return array;\r\n}","import { BLEND_MODES } from \"../const\";\r\nimport { canUseNewCanvasBlendModes } from \"./canUseNewCanvasBlendModes\";\r\n\r\nexport function mapCanvasBlendModes(array = []) {\r\n    if (canUseNewCanvasBlendModes()) {\r\n        array[BLEND_MODES.NORMAL] = 'source-over';\r\n        array[BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\r\n        array[BLEND_MODES.MULTIPLY] = 'multiply';\r\n        array[BLEND_MODES.SCREEN] = 'screen';\r\n        array[BLEND_MODES.OVERLAY] = 'overlay';\r\n        array[BLEND_MODES.DARKEN] = 'darken';\r\n        array[BLEND_MODES.LIGHTEN] = 'lighten';\r\n        array[BLEND_MODES.COLOR_DODGE] = 'color-dodge';\r\n        array[BLEND_MODES.COLOR_BURN] = 'color-burn';\r\n        array[BLEND_MODES.HARD_LIGHT] = 'hard-light';\r\n        array[BLEND_MODES.SOFT_LIGHT] = 'soft-light';\r\n        array[BLEND_MODES.DIFFERENCE] = 'difference';\r\n        array[BLEND_MODES.EXCLUSION] = 'exclusion';\r\n        array[BLEND_MODES.HUE] = 'hue';\r\n        array[BLEND_MODES.SATURATION] = 'saturate';\r\n        array[BLEND_MODES.COLOR] = 'color';\r\n        array[BLEND_MODES.LUMINOSITY] = 'luminosity';\r\n    }\r\n    else {\r\n        // this means that the browser does not support the cool new blend modes in canvas 'cough' ie 'cough'\r\n        array[BLEND_MODES.NORMAL] = 'source-over';\r\n        array[BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\r\n        array[BLEND_MODES.MULTIPLY] = 'source-over';\r\n        array[BLEND_MODES.SCREEN] = 'source-over';\r\n        array[BLEND_MODES.OVERLAY] = 'source-over';\r\n        array[BLEND_MODES.DARKEN] = 'source-over';\r\n        array[BLEND_MODES.LIGHTEN] = 'source-over';\r\n        array[BLEND_MODES.COLOR_DODGE] = 'source-over';\r\n        array[BLEND_MODES.COLOR_BURN] = 'source-over';\r\n        array[BLEND_MODES.HARD_LIGHT] = 'source-over';\r\n        array[BLEND_MODES.SOFT_LIGHT] = 'source-over';\r\n        array[BLEND_MODES.DIFFERENCE] = 'source-over';\r\n        array[BLEND_MODES.EXCLUSION] = 'source-over';\r\n        array[BLEND_MODES.HUE] = 'source-over';\r\n        array[BLEND_MODES.SATURATION] = 'source-over';\r\n        array[BLEND_MODES.COLOR] = 'source-over';\r\n        array[BLEND_MODES.LUMINOSITY] = 'source-over';\r\n    }\r\n    // not-premultiplied, only for webgl\r\n    array[BLEND_MODES.NORMAL_NPM] = array[BLEND_MODES.NORMAL];\r\n    array[BLEND_MODES.ADD_NPM] = array[BLEND_MODES.ADD];\r\n    array[BLEND_MODES.SCREEN_NPM] = array[BLEND_MODES.SCREEN];\r\n\r\n    //和NORMAL一致\r\n    array[BLEND_MODES.SRC_OVER] = 'source-over';\r\n    // composite operations\r\n    array[BLEND_MODES.SRC_IN] = 'source-in';\r\n    array[BLEND_MODES.SRC_OUT] = 'source-out';\r\n    array[BLEND_MODES.SRC_ATOP] = 'source-atop';\r\n    array[BLEND_MODES.DST_OVER] = 'destination-over';\r\n    array[BLEND_MODES.DST_IN] = 'destination-in';\r\n    array[BLEND_MODES.DST_OUT] = 'destination-out';\r\n    array[BLEND_MODES.DST_ATOP] = 'destination-atop';\r\n\r\n    // SUBTRACT from flash, does not exist in canvas\r\n    array[BLEND_MODES.SUBTRACT] = 'source-over';\r\n\r\n    return array;\r\n}","\r\n\r\n\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { createImage, getEnv } from \"../utils\";\r\n\r\n/**\r\n * 加载器，不做缓存判断，所有的外部自行缓存，或者判断是否要进加载器\r\n * 仅仅是加载方法集成\r\n * 感觉没必要集成EventDispatcher\r\n * 加载方法都是回调方式\r\n * 无特殊要求的直接用GlobalLoader\r\n */\r\nexport class Loader extends EventDispatcher {\r\n    /**\r\n     * 记录原始数据，json和image，贴图在建立时会被缓存\r\n     * 需要缓存的都用在回调里自行缓存，比如弄个RES\r\n     */\r\n    private caches = {};\r\n\r\n    /**\r\n     * \r\n     */\r\n    constructor() {\r\n        super();\r\n        this._instanceType = \"Loader\";\r\n    }\r\n\r\n    /**\r\n     * 加载图集\r\n     * @param callback \r\n     * @param url 图集一般是png格式,传的是json,在callback自行拆分\r\n     */\r\n    loadSheet(callback: (success: boolean, sheet?: { json: any, img: HTMLImageElement }) => void, url: string) {\r\n        let pngFile = url.substring(0, url.lastIndexOf('.')) + '.png';\r\n        this.loadImage((suc, data) => {\r\n            if (suc) {\r\n                this.cache(pngFile, data);\r\n                if (this.caches[url]) {\r\n                    callback(true, { json: this.caches[url], img: data })\r\n                    //已回调,释放置空\r\n                    this.caches[url] = null;\r\n                    this.caches[pngFile] = null;\r\n                }\r\n            } else {\r\n                callback(false)\r\n            }\r\n        }, pngFile);\r\n\r\n\r\n        this.loadJson((suc, data) => {\r\n            if (suc) {\r\n                this.cache(url, data);\r\n                if (this.caches[pngFile]) {\r\n                    callback(true, { json: data, img: this.caches[pngFile] });\r\n                    //已回调,释放置空\r\n                    this.caches[url] = null;\r\n                    this.caches[pngFile] = null;\r\n                }\r\n            } else {\r\n                callback(false)\r\n            }\r\n        }, url)\r\n\r\n        //暂时先不用fetch。safari兼容问题\r\n        // fetchAsync(url)\r\n        //     .then((data) => {\r\n        //         this.cache(url, data);\r\n        //         if (this.caches[pngFile]) {\r\n        //             callback(true, { json: data, img: this.caches[pngFile] })\r\n        //         }\r\n        //         // console.log(data)\r\n        //     })\r\n        //     .catch(reason => {\r\n        //         callback(false, reason)\r\n        //         // console.log(reason.message)\r\n        //     })\r\n    }\r\n    /**\r\n     * 加载json文件\r\n     * @param callback \r\n     * @param url \r\n     */\r\n    loadJson(callback: (s: boolean, res: any) => void, url: string) {\r\n        //@ts-ignore ,正式环境不能使用request，走downloadFile\r\n        // my.request({\r\n        //     url: url,\r\n        //     dataType: \"json\",\r\n        //     success: (res) => {\r\n        //         callback(true, res.data)\r\n        //     },\r\n        //     fail: function (res) {\r\n        //         // my.alert({\r\n        //         //   title: JSON.stringify(res)\r\n        //         // });\r\n        //         callback(false, res)\r\n        //     }\r\n        // });\r\n        if (getEnv() == \"tb\") {\r\n            // this.tbLoad(callback, url, \"utf8\")\r\n            this.tbLoad((s, res) => {\r\n                callback(s, s ? JSON.parse(res) : res)//utf8返回的数字符串\r\n            }, url, \"utf8\")\r\n            return\r\n        }\r\n        this.loadRawWeb(callback, url, \"json\")\r\n    }\r\n    /**\r\n     * 加载ArrayBuffer\r\n     * @param callback \r\n     * @param url \r\n     */\r\n    loadAB(callback: (s: boolean, res: ArrayBuffer) => void, url: string) {\r\n        if (getEnv() == \"tb\") {\r\n            GlobalLoader.tbLoad(callback, url, \"ArrayBuffer\")\r\n        } else {\r\n            GlobalLoader.loadRawWeb(callback, url, \"arraybuffer\")\r\n        }\r\n    }\r\n    /**\r\n     * web环境原生加载方式\r\n     * @param callback \r\n     * @param url \r\n     * @param type \r\n     */\r\n    loadRawWeb(\r\n        callback: (s: boolean, res: any) => void,\r\n        url: string,\r\n        type: 'text' | 'json' | 'arraybuffer' = \"json\"\r\n    ) {\r\n        //每次都要new\r\n        let _req;\r\n        if (window[\"XMLHttpRequest\"]) {\r\n            _req = new XMLHttpRequest();\r\n        } else if (window[\"ActiveXObject\"]) {\r\n            _req = new window[\"ActiveXObject\"]();\r\n        } else {\r\n            alert(\"请升级至最新版本的浏览器\")\r\n        }\r\n        if (_req != null) {\r\n            _req.open(\"GET\", url, true);\r\n            _req.responseType = type;\r\n            _req.send();\r\n            _req.onreadystatechange = () => {\r\n                if (_req.readyState == 4 && _req.status == 200) {\r\n                    callback(true, _req.response)\r\n                }\r\n            };\r\n            _req.onerror = (reason): void => {\r\n                callback(false, reason)\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 加载图片\r\n     * @param callback \r\n     * @param url \r\n     */\r\n    loadImage(callback: (s: boolean, image?: HTMLImageElement) => void, url: string) {\r\n        let img = createImage();\r\n        //之前的劫持下\r\n        // window[\"Image\"] = function () {\r\n        //     var image = canvas.createImage()\r\n        //     return image\r\n        // }\r\n        // let img = new Image()\r\n        img.onload = function () {\r\n            callback(true, img);\r\n        }\r\n        img.onerror = function () {\r\n            callback(false);\r\n        }\r\n        //坑爹中文\r\n        url = encodeURI(url)\r\n        //除了base64的路径，其他都设置了跨域，其实有部分服务器不允许跨域，不能设置anonymous\r\n        if (url.indexOf('data:') !== 0) img.crossOrigin = \"anonymous\";\r\n        img.src = url;\r\n    }\r\n    /**\r\n     * 加载小程序的音频，暂时不用，完全废弃\r\n     * @param callback \r\n     * @param url \r\n     */\r\n    loadAudio(callback: (s: boolean, audio?) => void, url) {\r\n        //@ts-ignore\r\n        const innerAudioContext = my.createInnerAudioContext()\r\n        // innerAudioContext.autoplay = true\r\n        innerAudioContext.src = url;\r\n        innerAudioContext.onCanplay(() => {\r\n            callback(true, innerAudioContext)\r\n        })\r\n        // innerAudioContext.onPlay(() => {\r\n        //     console.log('开始播放')\r\n        // })\r\n        innerAudioContext.onError((res) => {\r\n            // console.log(res.errMsg)\r\n            callback(false)\r\n        })\r\n        // innerAudioContext.onEnded(() => {\r\n        //     console.log('播放结束')\r\n        // })\r\n    }\r\n\r\n    /**\r\n     * 淘宝加载方式\r\n     * @param callback \r\n     * @param url 云存储链接cloud或者阿里系白名单域名\r\n     */\r\n    tbLoad(\r\n        callback: (s: boolean, res?: any) => void,\r\n        url: string,\r\n        type: \"utf8\" | \"ArrayBuffer\" = \"ArrayBuffer\"\r\n    ) {\r\n        //类似这种地址\"cloud://A8673B47AAA58993A24A6718E203B967//dice.svga\"\r\n        if (url.indexOf(\"cloud://\") == 0) {\r\n            this.getTbTempUrl((src) => {\r\n                this.downloadReadFile(callback, src, type)\r\n            }, url)\r\n        } else {\r\n            this.downloadReadFile(callback, url, type)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 淘宝小程序，获取云存储临时cdn地址\r\n     * @param callback \r\n     * @param url \r\n     */\r\n    private getTbTempUrl(callback: (src: string) => void, url) {\r\n        //@ts-ignore\r\n        const { cloud } = getApp();\r\n        //获取临时地址\r\n        cloud.file.getTempFileURL({ fileId: [url] }).then((urls) => {\r\n            callback(urls[0].url.replace('-internal', ''))\r\n        }).catch((err) => {\r\n            console.error(err)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param callback \r\n     * @param url \r\n     * @param type 指定的字符编码，不传表示以 ArrayBuffer 格式读取文件的二进制内容\r\n     */\r\n    private downloadReadFile(\r\n        callback: (s: boolean, res?: any) => void,\r\n        url: string,\r\n        type: \"utf8\" | \"ArrayBuffer\" = \"ArrayBuffer\"\r\n    ) {\r\n        //@ts-ignore\r\n        let tbMy = my;\r\n        tbMy.downloadFile({\r\n            url: url,\r\n            success(res) {\r\n                var i = res.apFilePath;//临时地址是否有必要缓存下，如果读不到再考虑下载。\r\n                tbMy.getFileSystemManager().readFile({\r\n                    filePath: i,\r\n                    encoding: type === \"ArrayBuffer\" ? \"\" : type,//不加表示加载的是ArrayBuffer\r\n                    success: function (r) {\r\n                        callback(true, r.data)//注意是r.data\r\n                        // actions.load_viaProto(r.data, cb, failure);\r\n                    },\r\n                    fail: function (res) {\r\n                        callback(false, res)\r\n                    }\r\n                })\r\n            },\r\n            fail(res) {\r\n                callback(false, res)\r\n            },\r\n        });\r\n    }\r\n\r\n    private cache(name: string, data: any) {\r\n        if (this.caches[name]) {\r\n            console.log(\"覆盖原先数据：\" + name);\r\n        }\r\n        this.caches[name] = data\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const GlobalLoader = new Loader();\r\n  //https://yun.duiba.com.cn/db_games/activity/yilian0726/1565580040/resource/result/resultAlta1.json\r\n    //\"https://yun.duiba.com.cn/db_games/activity/etc/optionImages/%E5%8D%8E%E4%B8%BAP30.jpg\"","import { Rectangle } from \"../math\";\nimport BaseTexture from \"./BaseTexture\";\nimport GroupD8 from \"../math/GroupD8\";\n/**\n * Texture的uv\n * @class\n * @private\n */\nexport default class TextureUvs {\n    x0: number;\n    y0: number;\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n    x3: number;\n    y3: number;\n    uvsUint32: Uint32Array;\n    uvsFloat32: Float32Array;\n    /**\n     * 用于记录图片的uv\n     * 00.....10\n     * .      .\n     * .      .\n     * 01.....11\n     */\n    constructor() {\n        this.x0 = 0;\n        this.y0 = 0;\n\n        this.x1 = 1;\n        this.y1 = 0;\n\n        this.x2 = 1;\n        this.y2 = 1;\n\n        this.x3 = 0;\n        this.y3 = 1;\n\n        this.uvsUint32 = new Uint32Array(4);\n\n        this.uvsFloat32 = new Float32Array(8);\n    }\n\n    /**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @private\n     * @param {Rectangle} frame - The frame of the texture\n     * @param {Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link GroupD8}\n     */\n    set(frame: Rectangle, baseFrame: Rectangle | BaseTexture, rotate: number) {\n        const tw = baseFrame.width;\n        const th = baseFrame.height;\n\n        if (rotate) {\n            // width and height div 2 div baseFrame size\n            const w2 = frame.width / 2 / tw;\n            const h2 = frame.height / 2 / th;\n\n            // coordinates of center\n            const cX = (frame.x / tw) + w2;\n            const cY = (frame.y / th) + h2;\n\n            rotate = GroupD8.add(rotate, GroupD8.NW); // NW is top-left corner\n            this.x0 = cX + (w2 * GroupD8.uX(rotate));\n            this.y0 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            this.x1 = cX + (w2 * GroupD8.uX(rotate));\n            this.y1 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x2 = cX + (w2 * GroupD8.uX(rotate));\n            this.y2 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x3 = cX + (w2 * GroupD8.uX(rotate));\n            this.y3 = cY + (h2 * GroupD8.uY(rotate));\n        } else {\n\n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n\n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n\n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n\n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n\n        }\n\n        this.uvsUint32[0] = (((this.y0 * 65535) & 0xFFFF) << 16) | ((this.x0 * 65535) & 0xFFFF);\n        this.uvsUint32[1] = (((this.y1 * 65535) & 0xFFFF) << 16) | ((this.x1 * 65535) & 0xFFFF);\n        this.uvsUint32[2] = (((this.y2 * 65535) & 0xFFFF) << 16) | ((this.x2 * 65535) & 0xFFFF);\n        this.uvsUint32[3] = (((this.y3 * 65535) & 0xFFFF) << 16) | ((this.x3 * 65535) & 0xFFFF);\n\n        this.uvsFloat32[0] = this.x0;\n        this.uvsFloat32[1] = this.y0;\n        this.uvsFloat32[2] = this.x1;\n        this.uvsFloat32[3] = this.y1;\n        this.uvsFloat32[4] = this.x2;\n        this.uvsFloat32[5] = this.y2;\n        this.uvsFloat32[6] = this.x3;\n        this.uvsFloat32[7] = this.y3;\n    }\n}\n","import Container from \"./Container\";\r\nimport { RENDERER_TYPE, VERSION, osType } from \"../const\"\r\n// import SystemRenderer from \"../renderers/SystemRenderer\";\r\nimport { Rectangle, Point } from \"../math\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Event } from \"../events/Event\";\r\n// import { FloatDisplay } from \"./FloatDisplay\";\r\nimport { DisplayObject } from \"./DisplayObject\";\r\nimport { MouseEvent } from \"../events/MouseEvent\";\r\n\r\nimport { WebglRenderer } from \"../renderers/WebglRenderer\";\r\n\r\nimport { CanvasRenderer } from \"../renderers/CanvasRenderer\";\r\nimport { SystemRenderer } from \"../renderers/SystemRenderer\";\r\nimport { getEnv, isWebGLSupported } from \"../utils\";\r\n\r\nexport class Stage extends Container {\r\n\r\n    /**\r\n     * 当前stage所使用的渲染器\r\n     * 渲染器有两种,一种是canvas 一种是webGl\r\n     * @property renderObj\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {IRender}\r\n     * @default null\r\n     */\r\n    public renderObj: SystemRenderer = null;\r\n\r\n\r\n    /**\r\n     * 直接获取stage的引用，避免总是从Event.ADD_TO_STAGE 事件中去获取stage引用\r\n     * @property getStage\r\n     * @param {string} stageName\r\n     * @return {any}\r\n     * @since 2.0.0\r\n     */\r\n    public static getStage(stageName: string = \"cusEngine\"): Stage {\r\n        return Stage._stageList[stageName];\r\n    }\r\n\r\n    /**\r\n     * @property _stageList\r\n     * @static\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    private static _stageList: any = {};\r\n\r\n    /**\r\n     * 舞台在设备里截取后的可见区域,有些时候知道可见区域是非常重要的,因为这样你就可以根据舞台的可见区域做自适应了。\r\n     * @property viewRect\r\n     * @public\r\n     * @readonly\r\n     * @since 1.0.0\r\n     * @type {Rectangle}\r\n     * @default {x:0,y:0,width:0,height:0}\r\n     * @readonly\r\n     */\r\n    public viewRect: Rectangle = new Rectangle();\r\n\r\n    /**\r\n     * 舞台的尺寸宽,也就是我们常说的设计尺寸\r\n     * @property desWidth\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default 320\r\n     * @type {number}\r\n     * @readonly\r\n     */\r\n    public desWidth: number = 0;\r\n    /**\r\n     * 舞台的尺寸高,也就是我们常说的设计尺寸\r\n     * @property desHeight\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default 240\r\n     * @type {number}\r\n     * @readonly\r\n     */\r\n    public desHeight: number = 0;\r\n    /**\r\n     * 舞台在当前设备中的真实高\r\n     * @property divHeight\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default 320\r\n     * @type {number}\r\n     * @readonly\r\n     */\r\n    public divHeight: number = 0;\r\n    /**\r\n     * 舞台在当前设备中的真实宽\r\n     * @property divWidth\r\n     * @public\r\n     * @since 1.0.0\r\n     * @default 240\r\n     * @readonly\r\n     * @type {number}\r\n     */\r\n    public divWidth: number = 0;\r\n    /**\r\n     * 舞台的背景色\r\n     * 默认就是透明背景\r\n     * 可能设置一个颜色值改变舞台背景\r\n     * @property bgColor\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     * @default \"\";\r\n     */\r\n    private _bgColor: number = 0x000000;\r\n\r\n    public get bgColor(): number {\r\n        return this._bgColor;\r\n    }\r\n    /**\r\n     * 设置颜色，即改变渲染器颜色\r\n     */\r\n    public set bgColor(value: number) {\r\n        if (this._bgColor === value) return\r\n        this._bgColor = value;\r\n        this.renderObj.backgroundColor = value;\r\n    }\r\n\r\n    /**\r\n     * 上一次鼠标或触碰经过的显示对象列表\r\n     * @property _lastDpList\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    private _lastDpList: any = {};\r\n\r\n    private _dpi: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private canvas: HTMLCanvasElement;\r\n\r\n    /**\r\n     * 淘宝小程序环境canvas的偏移,淘宝环境才用,web环境实时,字段保留,但是不会计算了\r\n     */\r\n    private canvasOffsetTb: { x: number, y: number } = { x: 0, y: 0 };\r\n    private offsetTimeId: any\r\n\r\n    get stageWidth() {\r\n        return this.viewRect.width;\r\n    }\r\n\r\n    get stageHeight() {\r\n        return this.viewRect.height;\r\n    }\r\n    /**\r\n     * 缩放模式\r\n     */\r\n    private _scaleMode: \"fixedWidth\" | \"fixedHeight\";\r\n    /**\r\n     * 舞台是否居中\r\n     */\r\n    private _stageCenter: boolean;\r\n    /**\r\n     * canvas的实际宽高及显示宽高外部自己设定,stage内部不对尺寸做任何修改\r\n     * 且需要根据实际尺寸和显示尺寸确定dpi\r\n     * @param canvas canvas标签\r\n     * @param desWidth 舞台设计宽\r\n     * @param desHeight 舞台设计高\r\n     * @param divWidth canvas显示宽\r\n     * @param divHeight canvas显示高\r\n     * @param renderType 渲染类型,默认canvas\r\n     * @param stageCenter 舞台是否根据设计尺寸居中,默认false(左上角置顶)\r\n     * @param fixedHeight 是否定高,默认false(定宽)\r\n     */\r\n    public constructor(\r\n        canvas: HTMLCanvasElement,\r\n        desWidth: number = 750,\r\n        desHeight: number = 1624,\r\n        divWidth: number,\r\n        divHeight: number,\r\n        renderType: RENDERER_TYPE = RENDERER_TYPE.CANVAS,\r\n        stageCenter: boolean = false,\r\n        fixedHeight: boolean = false\r\n    ) {\r\n        super();\r\n        this.canvas = canvas;\r\n        let s: Stage = this;\r\n        this._instanceType = \"Stage\";\r\n        Stage._stageList[\"canvas\"] = s;\r\n        s.stage = this;\r\n        s.name = \"stageInstance_\" + s.instanceId;\r\n        s.desWidth = desWidth;\r\n        s.desHeight = desHeight;\r\n        s.divWidth = divWidth;\r\n        s.divHeight = divHeight;\r\n\r\n        // console.log(\"%c \", \"background: url(http://5b0988e595225.cdn.sohucs.com/images/20180315/d41842ad9b5443d3854a480ea49f3b09.gif) no-repeat center;padding-left:80px;padding-bottom: 80px;border-radius:50%;\")\r\n        //打印个版本号\r\n        console.log(\r\n            \"%cfyge版本：\" + VERSION,\r\n            \"text-shadow: 0 1px 0 #ccc,0 2px 0 #c9c9c9,0 3px 0 #bbb,0 4px 0 #b9b9b9,0 5px 0 #aaa,0 6px 1px rgba(0,0,0,.1),0 0 5px rgba(0,0,0,.1),0 1px 3px rgba(0,0,0,.3),0 3px 5px rgba(0,0,0,.2),0 5px 10px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.2),0 20px 20px rgba(0,0,0,.15);font-size:3em\"\r\n        )\r\n        //webgl不支持时的兼容，回退canvas\r\n        if (renderType == RENDERER_TYPE.WEBGL && !isWebGLSupported()) {\r\n            renderType = RENDERER_TYPE.CANVAS;\r\n            console.warn(\"不支持webgl\")\r\n        }\r\n        if (renderType == RENDERER_TYPE.CANVAS) {\r\n            let context = canvas.getContext(\"2d\");\r\n            s.renderObj = new CanvasRenderer(context, canvas.width, canvas.height);\r\n        } else {\r\n            let contextOptions: WebGLContextAttributes = {\r\n                alpha: true,\r\n                antialias: false,//抗锯齿尽量别开，耗性能\r\n                premultipliedAlpha: true,  //一般png图片都不会预乘alpha，所以必为true,除非有些图集工具选择了premultipliedAlpha\r\n                stencil: true,\r\n                // preserveDrawingBuffer: this.options.preserveDrawingBuffer,//需要toDataUrl时要开\r\n                // powerPreference: this.options.powerPreference,\r\n            };\r\n            let context = canvas.getContext(\"webgl\", contextOptions) || canvas.getContext(\"experimental-webgl\", contextOptions) as WebGLRenderingContext;\r\n            s.renderObj = new WebglRenderer(context, canvas.width, canvas.height);\r\n            //监听下上下文丢失的情况\r\n            if (getEnv() == \"web\") {\r\n                canvas.addEventListener(\r\n                    'webglcontextlost',\r\n                    (s.renderObj as WebglRenderer).handleContextLost.bind(s.renderObj),\r\n                    false\r\n                );\r\n                canvas.addEventListener(\r\n                    'webglcontextrestored',\r\n                    (s.renderObj as WebglRenderer).handleContextRestored.bind(s.renderObj),\r\n                    false\r\n                );\r\n            }\r\n\r\n        }\r\n        //TODO,还有一种方式,传入分辨率和显示宽高,canvas尺寸在里面修改,这样要多传个参数,暂时不改传参,不然版本问题,\r\n        //到时修改这个放到上面,因为渲染器也用到了canvas的尺寸,\r\n        //注意淘宝小程序环境必须先设置canvas的尺寸再getContext,类似CanvasRenderTarget构造函数里的问题\r\n        //分辨率,\r\n        s._dpi = canvas.width / divWidth;\r\n        s._stageCenter = stageCenter;\r\n        s._scaleMode = fixedHeight ? \"fixedHeight\" : \"fixedWidth\";\r\n        //设置缩放及视窗\r\n        s._setAlign();\r\n\r\n        //延时派发舞台初始化事件\r\n        setTimeout(function () {\r\n            //派发事件\r\n            s.dispatchEvent(Event.INIT_STAGE);\r\n        }, 100);\r\n\r\n        //淘宝环境额外处理canvas偏移,到时需要修改id传入，再说把，不需要了，淘宝上返回的就是canvas上的显示坐标\r\n        // if (getEnv() == \"tb\") {//暂时先去掉吧，会出现一些问题，有需要，手动设置canvasOffsetTb的xy，屏幕坐标\r\n        //     s.offsetTimeId = setInterval(() => {\r\n        //         //@ts-ignore\r\n        //         my.createSelectorQuery().select('#canvas').boundingClientRect().exec((r) => {\r\n        //             if (r && r[0]) {\r\n        //                 s.canvasOffsetTb.x = r[0].left || 0;\r\n        //                 s.canvasOffsetTb.y = r[0].top || 0;\r\n        //             }\r\n        //         });\r\n        //     }, 200)\r\n        // }\r\n    }\r\n    /**\r\n     * 暂时不存在外部调用的情况\r\n     */\r\n    private _setAlign() {\r\n        let s = this;\r\n        let canvas = s.canvas;\r\n        //舞台设置居中处理锚点和位置偏移\r\n        if (s._stageCenter) {\r\n            s.anchorX = s.desWidth >> 1;\r\n            s.anchorY = s.desHeight >> 1;\r\n            s.x = (canvas.width - s.desWidth) >> 1;\r\n            s.y = (canvas.height - s.desHeight) >> 1;\r\n        }\r\n        //默认定宽\r\n        var scale = s._scaleMode == \"fixedHeight\" ? canvas.height / s.desHeight : canvas.width / s.desWidth;\r\n        s.scaleX = scale;\r\n        s.scaleY = scale;\r\n        //视窗计算\r\n        s.viewRect = s.viewRect || new Rectangle();\r\n        s.viewRect.x = (s.desWidth - canvas.width / scale) >> 1;\r\n        s.viewRect.y = (s.desHeight - canvas.height / scale) >> 1;\r\n        s.viewRect.width = s.desWidth - s.viewRect.x * 2;\r\n        s.viewRect.height = s.desHeight - s.viewRect.y * 2;\r\n\r\n        //额外逻辑,不设置舞台居中时,x,y为左上角,置0\r\n        if (!s._stageCenter) s.viewRect.x = s.viewRect.y = 0;\r\n    }\r\n    /**\r\n     * 移动端不常用\r\n     * 微信浏览器使用情景:ios返回页面下面出现操作栏\r\n     * window.addEventListener('resize', () => {stage.resize()});\r\n     * 这里会按照原_dpi修改canvas的实际尺寸\r\n     * 一般设备的dpi不会改变,\r\n     * web全屏环境可不传参数,否则自行计算显示尺寸传入\r\n     * @param divWidth \r\n     * @param divHeight \r\n     */\r\n    public resize(divWidth?: number, divHeight?: number) {\r\n        if (getEnv() == \"web\") {//web环境不传当作全屏处理\r\n            divWidth = divWidth || document.body.clientWidth;\r\n            divHeight = divHeight || document.body.clientHeight;\r\n        }\r\n        if (!divWidth || !divWidth) {\r\n            console.error(\"传入的显示尺寸不能为空\")\r\n            return\r\n        }\r\n        let s = this, d = s._dpi, c = s.canvas;\r\n        //如果一致不修改\r\n        if (divWidth == s.divWidth && divHeight == s.divHeight) return;\r\n        //这里修改canvas尺寸\r\n        if (divWidth != s.divWidth) c.width = divWidth * d;\r\n        if (divHeight != s.divHeight) c.height = divHeight * d;\r\n        //赋值显示宽高\r\n        s.divWidth = divWidth;\r\n        s.divHeight = divHeight;\r\n        //修改缩放显示及视窗\r\n        s._setAlign();\r\n        //渲染器修改尺寸\r\n        s.renderObj.resize(c.width, c.height);\r\n        //派发事件\r\n        s.dispatchEvent(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * 这个是鼠标事件的MouseEvent对象池,因为如果用户有监听鼠标事件,如果不建立对象池,那每一秒将会new Fps个数的事件对象,影响性能\r\n     * @property _ml\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    private _ml: any = [];\r\n    /**\r\n     * 这个是事件中用到的Point对象池,以提高性能\r\n     * @property _mp\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    private _mp: any = [];\r\n\r\n    /**\r\n     * 刷新mouse或者touch事件\r\n     * @method _initMouseEvent\r\n     * @private\r\n     */\r\n    private _initMouseEvent(event: MouseEvent, cp: Point, sp: Point, identifier: number): void {\r\n        event[\"_pd\"] = false;\r\n        event.clientX = cp.x;\r\n        event.clientY = cp.y;\r\n        event.stageX = sp.x;\r\n        event.stageY = sp.y;\r\n        event.identifier = identifier;\r\n    }\r\n\r\n    //每一个手指事件的对象池\r\n    /**\r\n     * @property _mouseDownPoint\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    private _mouseDownPoint: any = {};\r\n\r\n    /**\r\n     * 循环刷新页面的函数\r\n     * @method flush\r\n     * @private\r\n     * @return {void}\r\n     */\r\n    public flush(): void {\r\n        this.renderObj.render(this);\r\n    }\r\n\r\n    /**\r\n     * html的鼠标或单点触摸对应的引擎事件类型名\r\n     * touchcancel:\"onMouseUp\"不常用，先不加\r\n     * @property _mouseEventTypes\r\n     * @type {{mousedown: string, mouseup: string, mousemove: string, touchstart: string, touchmove: string, touchend: string}}\r\n     * @private\r\n     */\r\n    private _mouseEventTypes: any = {\r\n        //pc\r\n        mousedown: \"onMouseDown\",\r\n        mousemove: \"onMouseMove\",\r\n        mouseup: \"onMouseUp\",\r\n        //mobile\r\n        touchstart: \"onMouseDown\",\r\n        touchmove: \"onMouseMove\",\r\n        touchend: \"onMouseUp\",\r\n        //tbMini\r\n        touchStart: \"onMouseDown\",//小程序返回的时间名是驼峰的\r\n        touchMove: \"onMouseMove\",\r\n        touchEnd: \"onMouseUp\"\r\n    };\r\n\r\n    /**\r\n     * 无多指，无拖动\r\n     * @method onMouseEvent\r\n     * @param e\r\n     * @private\r\n     */\r\n    onMouseEvent(e: any): void {\r\n        //@ts-ignore\r\n        if (getEnv() == \"web\") e.preventDefault();\r\n        let s: Stage = this;\r\n        //检查mouse或touch事件是否有，如果有的话，就触发事件函数\r\n        if (EventDispatcher._totalMEC > 0) {\r\n            let points: any;\r\n            //事件类型\r\n\r\n            let item = s._mouseEventTypes[e.type];\r\n            let events: any;\r\n            let event: any;\r\n            //stageMousePoint\r\n            let sp: Point;\r\n            //localPoint;\r\n            let lp: Point;\r\n            //clientPoint\r\n            let cp: Point;\r\n            //事件个数\r\n            let eLen: number;\r\n            let identifier: any;\r\n            if (osType == \"pc\") {\r\n                e.identifier = 0;\r\n                points = [e];\r\n            } else {\r\n                points = [e.changedTouches[0]];\r\n            }\r\n            // points = [e.changedTouches[0]];\r\n            //  points = [e.touches[0]];//不能用这个\r\n            let { x: offsetX, y: offsetY } = s.canvasOffsetTb;\r\n            //@ts-ignore\r\n            if (getEnv() == \"web\") {\r\n                let doc = document.documentElement;\r\n                let box = s.canvas.getBoundingClientRect();\r\n                offsetX = box.left + window.pageXOffset - doc.clientLeft;\r\n                offsetY = box.top + window.pageYOffset - doc.clientTop;\r\n            }\r\n\r\n\r\n            for (let o = 0; o < points.length; o++) {\r\n                if (!points[o]) continue;\r\n                eLen = 0;\r\n                events = [];\r\n                identifier = \"m\" + points[o].identifier;\r\n                if (s._mp.length > 0) {\r\n                    cp = s._mp.shift();\r\n                } else {\r\n                    cp = new Point();\r\n                }\r\n                cp.x = ((points[o].pageX || points[o].x || points[o].b) - offsetX) * s._dpi// devicePixelRatio;\r\n                cp.y = ((points[o].pageY || points[o].y || points[o].c) - offsetY) * s._dpi// devicePixelRatio;\r\n                // my.alert({\r\n                //   title: JSON.stringify(points[o])\r\n                // });\r\n                //计算舞台中的点\r\n                sp = s.globalToLocal(cp, DisplayObject._bp);\r\n                //检查是否有鼠标事件\r\n                if (EventDispatcher.getMouseEventCount() > 0) {\r\n                    if (!s._ml[eLen]) {\r\n                        event = new MouseEvent(item);\r\n                        s._ml[eLen] = event;\r\n                    } else {\r\n                        event = s._ml[eLen];\r\n                        event.type = item;\r\n                    }\r\n                    events[events.length] = event;\r\n                    s._initMouseEvent(event, cp, sp, identifier);\r\n                    eLen++;\r\n                }\r\n                if (item == \"onMouseDown\") {\r\n                    s._mouseDownPoint[identifier] = cp;\r\n                    //清空上次存在的显示列表\r\n                } else if (item == \"onMouseUp\") {\r\n                    if (s._mouseDownPoint[identifier]) {\r\n                        if (Point.distance(s._mouseDownPoint[identifier], cp) < 20) {\r\n                            //检查是否有添加对应的click事件\r\n                            if (EventDispatcher.getMouseEventCount(\"onMouseClick\") > 0) {\r\n                                if (!s._ml[eLen]) {\r\n                                    event = new MouseEvent(\"onMouseClick\");\r\n                                    s._ml[eLen] = event;\r\n                                } else {\r\n                                    event = s._ml[eLen];\r\n                                    event.type = \"onMouseClick\";\r\n                                }\r\n                                events[events.length] = event;\r\n                                s._initMouseEvent(event, cp, sp, identifier);\r\n                                eLen++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (eLen > 0) {\r\n                    //有事件开始遍历显示列表\r\n                    //找出最底层的显示对象\r\n                    let d: DisplayObject = s.hitTestPoint(cp, true);\r\n                    // console.log(d)\r\n                    let displayList: Array<DisplayObject> = [];\r\n                    // my.alert({\r\n                    //   title: '55729:' + d.instanceId\r\n                    // });\r\n                    if (d) {\r\n                        //证明有点击到事件,然后从最底层追上来,看看一路是否有人添加过mouse或touch事件,还要考虑mousechildren和阻止事件方法\r\n                        //找出真正的target,因为有些父级可能会mouseChildren=false;\r\n                        while (d) {\r\n                            if (d[\"mouseChildren\"] === false) {\r\n                                //丢掉之前的层级,因为根本没用了\r\n                                displayList.length = 0;\r\n                            }\r\n                            displayList[displayList.length] = d;\r\n                            d = d.parent;\r\n                        }\r\n                    } else {\r\n                        displayList[displayList.length] = s;\r\n                    }\r\n                    let len: number = displayList.length;\r\n                    for (let i = len - 1; i >= 0; i--) {\r\n                        d = displayList[i];\r\n                        for (let j = 0; j < eLen; j++) {\r\n                            if (!events[j][\"_pd\"]) {\r\n                                //有事件，且mouseEnable为true\r\n                                if (d.hasEventListener(events[j].type) && d.mouseEnable) {\r\n                                    events[j].target = d;\r\n                                    events[j].currentTarget = displayList[0];\r\n                                    lp = d.globalToLocal(cp, DisplayObject._bp);\r\n                                    events[j].localX = lp.x;\r\n                                    events[j].localY = lp.y;\r\n                                    d.dispatchEvent(events[j]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //这里一定要反转一下，因为会影响mouseOut mouseOver\r\n                    displayList.reverse();\r\n                    for (let i = len - 1; i >= 0; i--) {\r\n                        d = displayList[i];\r\n                        for (let j = 0; j < eLen; j++) {\r\n                            if (!events[j][\"_pd\"]) {\r\n                                //有事件，且mouseEnable为true\r\n                                if (d.hasEventListener(events[j].type, false) && d.mouseEnable) {\r\n                                    events[j].target = d;\r\n                                    events[j].currentTarget = displayList[eLen - 1];\r\n                                    lp = d.globalToLocal(cp, DisplayObject._bp);\r\n                                    events[j].localX = lp.x;\r\n                                    events[j].localY = lp.y;\r\n                                    d.dispatchEvent(events[j], null, false);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //最后要和上一次的遍历者对比下，如果不相同则要触发onMouseOver和onMouseOut\r\n                    if (item != \"onMouseDown\") {\r\n                        if (EventDispatcher.getMouseEventCount(\"onMouseOver\") > 0 || EventDispatcher.getMouseEventCount(\"onMouseOut\") > 0) {\r\n                            if (s._lastDpList[identifier]) {\r\n                                //从第二个开始，因为第一个对象始终是stage顶级对象\r\n                                let len1 = s._lastDpList[identifier].length;\r\n                                let len2 = displayList.length;\r\n                                len = len1 > len2 ? len1 : len2;\r\n                                let isDiff = false;\r\n                                let overEvent: MouseEvent;\r\n                                let outEvent: MouseEvent;\r\n                                for (let i = 1; i < len; i++) {\r\n                                    if (!isDiff) {\r\n                                        if (s._lastDpList[identifier][i] != displayList[i]) {\r\n                                            //确定哪些有onMouseOver,哪些有onMouseOut\r\n                                            isDiff = true;\r\n                                            if (!s._ml[eLen]) {\r\n                                                overEvent = new MouseEvent(\"onMouseOver\");\r\n                                                s._ml[eLen] = overEvent;\r\n                                            } else {\r\n                                                overEvent = s._ml[eLen];\r\n                                                overEvent.type = \"onMouseOver\";\r\n                                            }\r\n                                            s._initMouseEvent(overEvent, cp, sp, identifier);\r\n                                            eLen++;\r\n                                            if (!s._ml[eLen]) {\r\n                                                outEvent = new MouseEvent(\"onMouseOut\");\r\n                                                s._ml[eLen] = outEvent;\r\n                                            } else {\r\n                                                outEvent = s._ml[eLen];\r\n                                                outEvent.type = \"onMouseOut\";\r\n                                            }\r\n                                            s._initMouseEvent(outEvent, cp, sp, identifier);\r\n                                        }\r\n                                    }\r\n                                    if (isDiff) {\r\n                                        if (s._lastDpList[identifier][i]) {\r\n                                            //触发onMouseOut事件\r\n                                            if (!outEvent[\"_pd\"]) {\r\n                                                d = s._lastDpList[identifier][i];\r\n                                                if (d.hasEventListener(\"onMouseOut\")) {\r\n                                                    outEvent.currentTarget = s._lastDpList[identifier][len1 - 1];\r\n                                                    outEvent.target = d;\r\n                                                    lp = d.globalToLocal(cp, DisplayObject._bp);\r\n                                                    outEvent.localX = lp.x;\r\n                                                    outEvent.localY = lp.y;\r\n                                                    d.dispatchEvent(outEvent);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        if (displayList[i]) {\r\n                                            //触发onMouseOver事件\r\n                                            if (!overEvent[\"_pd\"]) {\r\n                                                d = displayList[i];\r\n                                                if (d.hasEventListener(\"onMouseOver\")) {\r\n                                                    overEvent.currentTarget = displayList[len2 - 1];\r\n                                                    overEvent.target = d;\r\n                                                    lp = d.globalToLocal(cp, DisplayObject._bp);\r\n                                                    overEvent.localX = lp.x;\r\n                                                    overEvent.localY = lp.y;\r\n                                                    d.dispatchEvent(overEvent);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        s._mp[s._mp.length] = cp;\r\n                    }\r\n                    if (item == \"onMouseUp\") {\r\n                        delete s._mouseDownPoint[identifier];\r\n                        delete s._lastDpList[identifier];\r\n                    } else {\r\n                        s._lastDpList[identifier] = displayList;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    public getBounds(): Rectangle {\r\n        return this.viewRect;\r\n    }\r\n\r\n    public destroy(): void {\r\n        let s = this;\r\n        // if (getEnv() == \"tb\") clearInterval(s.offsetTimeId);\r\n        s.renderObj.destroy();\r\n        s.renderObj = null;\r\n        s.viewRect = null;\r\n        s._lastDpList = null;\r\n        s._ml = null;\r\n        super.destroy();\r\n    }\r\n}","import BatchDrawCall from '../webgl/BatchDrawCall';\nimport { osType, BLEND_MODES } from \"../../const\"\n// import State from '../state/State';\nimport ObjectRenderer from '../webgl/ObjectRenderer';\nimport { checkMaxIfStatementsInShader } from '../../../glCore/checkMaxIfStatementsInShader';\n\nimport { BatchBuffer } from '../webgl/BatchBuffer';\nimport { generateMultiTextureShader } from '../webgl/generateMultiTextureShader';\nimport { WebglRenderer } from '../WebglRenderer';\nimport { GLShader, GLBuffer, VertexArrayObject } from '../../../glCore';\nimport { nextPow2, log2, premultiplyTint, premultiplyBlendMode } from '../../utils';\nimport { DisplayObject } from '../../display/DisplayObject';\nimport Texture from '../../texture/Texture';\nimport BaseTexture from '../../texture/BaseTexture';\n\nlet TICK = 0;\n\n/**\n * 批处理核心渲染插件\n *\n * @class\n * @extends ObjectRenderer\n */\nexport default class BatchRenderer extends ObjectRenderer {\n    vertSize: number;\n    vertByteSize: number;\n    size: number;\n    /**\n     * 当前顶点数量\n     */\n    currentSize: number;\n    /**\n     * 当前索引数量\n     */\n    currentIndexSize: number;\n    /**\n     * 顶点数据\n     */\n    aBuffers: {};\n    /**\n     * 索引数据\n     */\n    iBuffers: {};\n    /**\n     * The default shaders that is used if a sprite doesn't have a more specific one.\n     * there is a shader for each number of textures that can be rendered.\n     * These shaders will also be generated on the fly as required.\n     */\n    shader: GLShader;\n    /**\n     * 当前累计的绘制对象数量\n     */\n    currentIndex: number;\n    groups: BatchDrawCall[];\n    /**\n     * 绘制对象数组\n     * 包括图片的和矢量图的\n     */\n    elements: batchElementInterface[];\n    vaos: VertexArrayObject[];\n    vaoMax: number;\n    vertexCount: number;\n    MAX_TEXTURES: number;\n\n    vertexBuffers: GLBuffer[];\n    indexBuffers: GLBuffer[];\n\n\n    constructor(renderer: WebglRenderer) {\n        super(renderer);\n\n        /**\n         * 每个点\n         * Number of values sent in the vertex buffer.\n         * aVertexPosition(2), aTextureCoord(2), aColor(1), aTextureId(1) = 6\n         *\n         * @member {number}\n         */\n        this.vertSize = 6;\n\n        /**\n         * The size of the vertex information in bytes.\n         *\n         * @member {number}\n         */\n        this.vertByteSize = this.vertSize * 4;\n\n        /**\n         * The number of images in the SpriteRenderer before it flushes.\n         *\n         * @member {number}\n         */\n        this.size = 2000 * 4;// settings.SPRITE_BATCH_SIZE; // 2000 is a nice balance between mobile / desktop\n\n        this.currentSize = 0;\n        this.currentIndexSize = 0;\n\n        // the total number of bytes in our batch\n        // let numVerts = this.size * 4 * this.vertByteSize;\n\n        this.aBuffers = {};\n        this.iBuffers = {};\n\n\n        this.shader = null;\n\n\n        this.currentIndex = 0;\n        this.groups = [];\n\n        for (let k = 0; k < this.size / 4; k++) {\n            this.groups[k] = new BatchDrawCall();\n        }\n\n        this.elements = [];\n        this.vertexBuffers = [];\n        this.indexBuffers = [];\n        this.vaos = [];\n\n        this.vaoMax = 2;\n        this.vertexCount = 0;\n\n        this.renderer.addEventListener('onPreRender', this.onPreRender, this);\n\n        // this.state = State.for2d();深度检测去掉\n\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     */\n    onContextChange() {\n        const gl = this.renderer.gl;\n\n        if (false /*传统方式*/) {\n            this.MAX_TEXTURES = 1;\n        }\n        else {\n            // step 1: first check max textures the GPU can handle.\n            this.MAX_TEXTURES = Math.min(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), 16);\n\n            // step 2: check the maximum number of if statements the shader can have too..\n            this.MAX_TEXTURES = checkMaxIfStatementsInShader(this.MAX_TEXTURES, gl);\n        }\n\n        // generate generateMultiTextureProgram, may be a better move?\n        this.shader = generateMultiTextureShader(gl, this.MAX_TEXTURES);\n\n        // we use the second shader as the first one depending on your browser may omit aTextureId\n        // as it is not used by the shader so is optimized out.\n\n\n        this.renderer.bindVao(null);\n\n        const attrs = this.shader.attributes;\n\n        for (let i = 0; i < this.vaoMax; i++) {\n            /* eslint-disable max-len */\n            const vertexBuffer = this.vertexBuffers[i] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n            const indexBuffer = this.indexBuffers[i] = GLBuffer.createIndexBuffer(gl, null, gl.STREAM_DRAW);\n\n            // build the vao object that will render..\n            const vao = this.renderer.createVao()\n                .addIndex(indexBuffer)\n                .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n                // .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\n                // .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4);\n                .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.FLOAT, true, this.vertByteSize, 2 * 4)\n                .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4)\n                .addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4);\n            // if (attrs.aTextureId)\n            // {\n            //     vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n            // }\n\n            this.vaos[i] = vao;\n        }\n    }\n\n    /**\n     * Called before the renderer starts rendering.\n     *\n     */\n    onPreRender() {\n        this.vertexCount = 0;\n    }\n\n    /**\n     * Renders the sprite object.\n     * element必须的属性\n     * \n     * _texture  里面有.BaseTexture\n     * _vertexData  \n     * _indices \n     * _worldAlpha\n     * _tintRGB\n     * _uvs\n     * \n     * the sprite to render when using this spritebatch\n     */\n    render(element: batchElementInterface) {\n        if (!element._texture || !element._texture.valid) {\n            return;\n        }\n\n        if (this.currentSize + (element._vertexData.length / 2) > this.size) {\n            this.flush();\n        }\n\n        this.elements[this.currentIndex++] = element;\n\n        this.currentSize += element._vertexData.length / 2;\n        this.currentIndexSize += element._indices.length;\n    }\n\n    /**\n     * 获得索引buffer\n     * @param size \n     */\n    getIndexBuffer(size) {\n        // 12 indices is enough for 2 quads\n        const roundedP2 = nextPow2(Math.ceil(size / 12));\n        const roundedSizeIndex = log2(roundedP2);\n        const roundedSize = roundedP2 * 12;\n\n        // if (this.iBuffers.length <= roundedSizeIndex) {\n        //     this.iBuffers.length = roundedSizeIndex + 1;\n        // }\n\n        let buffer = this.iBuffers[roundedSizeIndex];\n\n        if (!buffer) {\n            this.iBuffers[roundedSizeIndex] = buffer = new Uint16Array(roundedSize);\n        }\n\n        return buffer;\n    }\n\n    /**\n     * 获取相应的顶点数据buffer\n     * @param size \n     */\n    getAttributeBuffer(size: number) {\n        // 8 vertices is enough for 2 quads\n        const roundedP2 = nextPow2(Math.ceil(size / 8));\n        const roundedSizeIndex = log2(roundedP2);\n        const roundedSize = roundedP2 * 8;\n\n        // if (this.aBuffers.length <= roundedSizeIndex) {\n        //     this.iBuffers.length = roundedSizeIndex + 1;\n        // }\n\n        let buffer = this.aBuffers[roundedSize];\n\n        if (!buffer) {\n            this.aBuffers[roundedSize] = buffer = new BatchBuffer(roundedSize * this.vertByteSize);\n        }\n\n        return buffer;\n    }\n\n    /**\n     * Renders the content and empties the current batch.\n     *\n     */\n    flush() {\n        if (this.currentSize === 0) {\n            return;\n        }\n\n        const gl = this.renderer.gl;\n        const MAX_TEXTURES = this.MAX_TEXTURES;\n\n        const buffer = this.getAttributeBuffer(this.currentSize);\n        const indexBuffer = this.getIndexBuffer(this.currentIndexSize);\n\n        const elements = this.elements;\n        const groups = this.groups;\n\n        const float32View = buffer.float32View;\n        const uint32View = buffer.uint32View;\n\n        const touch = this.renderer.textureGC.count;\n\n        let index = 0;\n        let indexCount = 0;\n        let nextTexture;\n        let currentTexture;\n        let groupCount = 1;\n\n        let textureCount = 0;\n        let currentGroup = groups[0];\n\n        //先用第一个的混色模式\n        let blendMode = premultiplyBlendMode[elements[0]._texture.baseTexture.premultipliedAlpha ? 1 : 0][elements[0]._blendMode];\n\n        currentGroup.textureCount = 0;\n        currentGroup.start = 0;\n        // currentGroup.blend = blendMode;\n\n        TICK++;\n\n        let i;\n\n        for (i = 0; i < this.currentIndex; ++i) {\n            // upload the sprite elements...\n            // they have all ready been calculated so we just need to push them into the buffer.\n\n            const sprite = elements[i];\n\n            elements[i] = null;\n\n            nextTexture = sprite._texture.baseTexture;\n\n            const spriteBlendMode = premultiplyBlendMode[nextTexture.premultipliedAlpha ? 1 : 0][sprite._blendMode];\n\n            if (blendMode !== spriteBlendMode) {\n                blendMode = spriteBlendMode;\n\n                // force the batch to break!\n                currentTexture = null;\n                textureCount = MAX_TEXTURES;\n                TICK++;\n            }\n\n            if (currentTexture !== nextTexture) {\n                currentTexture = nextTexture;\n\n                if (nextTexture._enabledId !== TICK) {\n                    if (textureCount === MAX_TEXTURES) {\n                        TICK++;\n\n                        textureCount = 0;\n\n                        currentGroup.size = indexCount - currentGroup.start;\n\n                        currentGroup = groups[groupCount++];\n                        currentGroup.textureCount = 0;\n                        currentGroup.blend = blendMode;\n                        currentGroup.start = indexCount;\n                    }\n\n                    nextTexture._touchedId = touch;\n                    nextTexture._enabledId = TICK;\n                    nextTexture._id = textureCount;\n\n                    currentGroup.textures[currentGroup.textureCount++] = nextTexture;\n                    textureCount++;\n                }\n            }\n            // argb, nextTexture._id, float32View, uint32View, indexBuffer, index, indexCount);\n            this.packGeometry(sprite, float32View, uint32View, indexBuffer, index, indexCount);\n\n            // push a graphics..\n            index += (sprite._vertexData.length / 2) * this.vertSize;\n            indexCount += sprite._indices.length;\n        }\n\n        currentGroup.size = indexCount - currentGroup.start;\n\n        //        this.indexBuffer.update();\n        //暂时出现了bug，ios不做特殊处理先，以后有时间排查，暂时应该影响不大\n        if (osType == \"ios\" && false) {\n            //可能有一帧，在多个地方执行flush\n            // this is still needed for IOS performance..\n            // it really does not like uploading to the same buffer in a single frame!\n            if (this.vaoMax <= this.vertexCount) {\n                this.vaoMax++;\n\n                const attrs = this.shader.attributes;\n\n                /* eslint-disable max-len */\n                const vertexBuffer = this.vertexBuffers[this.vertexCount] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n                const indexBufferAdd = this.indexBuffers[this.vertexCount] = GLBuffer.createIndexBuffer(gl, null, gl.STREAM_DRAW);\n\n                // build the vao object that will render..\n                const vao = this.renderer.createVao()\n                    .addIndex(indexBufferAdd)\n                    .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n                    .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.FLOAT, true, this.vertByteSize, 2 * 4)\n                    .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4)\n                    .addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4);\n                this.vaos[this.vertexCount] = vao;\n\n                // console.log(this.vertexCount)\n            }\n\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\n            this.indexBuffers[this.vertexCount].upload(indexBuffer, 0, false);\n\n            this.vertexCount++;\n\n        }\n        else {\n\n            // lets use the faster option, always use buffer number 0\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\n            this.indexBuffers[this.vertexCount].upload(indexBuffer, 0, true);\n        }\n\n        //   this.renderer.state.set(this.state);\n\n        const textureManager = this.renderer.textureManager;\n        // const stateSystem = this.renderer.state;\n        // e.log(groupCount);\n        // / render the groups..\n\n        for (i = 0; i < groupCount; i++) {\n            const group = groups[i];\n            const groupTextureCount = group.textureCount;\n\n            for (let j = 0; j < groupTextureCount; j++) {\n                if (group.textures[j] != textureManager.boundTextures[j]) {\n                    //location已经和sampleId固定了，就算原先boundsTextures有，也要重新绑定位置\n                    // console.log(\"bindTexture\")\n                    textureManager.bindTexture(group.textures[j], j, true);\n                }\n                group.textures[j] = null;\n            }\n            //混色模式暂不用\n            // this.state.blendMode = group.blend;\n            // this.state.blend = true;\n\n            // this.renderer.state.setState(this.state);\n            // set the blend mode..\n            // stateSystem.setBlendMode(group.blend);\n            this.renderer.setBlendMode(group.blend)\n\n            gl.drawElements(group.type, group.size, gl.UNSIGNED_SHORT, group.start * 2);\n        }\n\n        // reset elements for the next flush\n        this.currentIndex = 0;\n        this.currentSize = 0;\n        this.currentIndexSize = 0;\n    }\n\n    packGeometry(element: batchElementInterface, float32View, uint32View, indexBuffer, index, indexCount) {\n        const p = index / this.vertSize;// float32View.length / 6 / 2;\n        const uvs = element._uvs;\n        const indicies = element._indices;// geometry.getIndex().data;// indicies;\n        const vertexData = element._vertexData;\n        const textureId = element._texture.baseTexture[\"_id\"];\n\n        var _tintRGB = element._tintRGB == undefined ? 16777215 : element._tintRGB\n\n        const alpha = Math.min(element._worldAlpha, 1.0);\n        // we dont call extra function if alpha is 1.0, that's faster\n        const argb = alpha < 1.0 && element._texture.baseTexture.premultipliedAlpha ? premultiplyTint(_tintRGB, alpha)\n            : _tintRGB + (alpha * 255 << 24);\n\n        // lets not worry about tint! for now..\n        for (let i = 0; i < vertexData.length; i += 2) {\n            float32View[index++] = vertexData[i];\n            float32View[index++] = vertexData[i + 1];\n            float32View[index++] = uvs[i];\n            float32View[index++] = uvs[i + 1];\n            uint32View[index++] = argb;\n            float32View[index++] = textureId;\n        }\n\n        for (let i = 0; i < indicies.length; i++) {\n            indexBuffer[indexCount++] = p + indicies[i];\n        }\n    }\n\n    /**\n     * Starts a new sprite batch.\n     */\n    start() {\n        //暂时不考虑2d专门的状态机属性\n        // this.renderer.state.setState(this.state);\n\n        this.renderer.bindShader(this.shader);\n\n        // if (osType != \"ios\") {//暂时出现了bug，ios不做特殊处理先\n        this.renderer.bindVao(this.vaos[this.vertexCount]);\n        this.vertexBuffers[this.vertexCount].bind();\n        this.indexBuffers[this.vertexCount].bind();\n        // }\n    }\n\n    /**\n     * Stops and flushes the current batch.\n     *\n     */\n    stop() {\n        this.flush();\n    }\n\n    /**\n     * Destroys the SpriteRenderer.\n     *\n     */\n    destroy() {\n        for (let i = 0; i < this.vaoMax; i++) {\n            // if (this.vertexBuffers[i])\n            // {\n            //     this.vertexBuffers[i].destroy();\n            // }\n            if (this.vaos[i]) {\n                this.vaos[i].destroy();\n            }\n        }\n\n        this.renderer.removeEventListener('onPreRender', this.onPreRender, this);\n\n        if (this.shader) {\n            this.shader.destroy();\n            this.shader = null;\n        }\n\n        this.vaos = null;\n\n        super.destroy();\n    }\n}\n\ninterface batchElementInterface {\n    _blendMode: BLEND_MODES,\n    _texture: Texture,\n    _worldAlpha: number,\n    _vertexData: Float32Array,\n    _indices: Uint16Array,\n    _tintRGB?: number,\n    _uvs: Float32Array,\n}\n","import { DRAW_MODES, BLEND_MODES } from \"../../const\";\nimport BaseTexture from \"../../texture/BaseTexture\";\n\n/**\n * \n * @class\n */\nexport default class BatchDrawCall {\n    /**\n     * 存储基础图片\n     */\n    textures: BaseTexture[];\n    /**\n     * 混色模式\n     */\n    blend:BLEND_MODES\n    /**\n     * 图片总数\n     */\n    textureCount: number;\n    /**\n     * 索引起始\n     */\n    start: number;\n    /**\n     * 总数\n     */\n    size: number;\n    /**\n     * 绘制类型\n     */\n    type: number;\n    constructor() {\n        this.textures = [];\n        // this.ids = [];\n        this.blend = 0;\n        this.textureCount = 0;\n        this.start = 0;\n        this.size = 0;\n        this.type = DRAW_MODES.TRIANGLES;\n    }\n}\n","import { GLShader } from '../../../glCore';\r\n//顶点着色器程序\r\nconst VSHADER_SOURCE =\r\n    \"precision highp float;\" +\r\n    \"attribute vec2 aVertexPosition;\" +\r\n    \"attribute vec2 aTextureCoord;\" +\r\n    \"attribute vec4 aColor;\" +\r\n    \"attribute float aTextureId;\" +\r\n\r\n    \"uniform mat3 projectionMatrix;\" +\r\n    // \"uniform mat3 modelMatrix;\" +\r\n\r\n    \"varying vec2 vTextureCoord;\" +\r\n    \"varying vec4 vColor;\" +\r\n    \"varying float vTextureId;\" +\r\n\r\n    \"void main(void){\" +\r\n    \"gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\" +\r\n    // \"gl_Position = vec4((projectionMatrix *modelMatrix* vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\" +\r\n    \"vTextureCoord = aTextureCoord;\" +\r\n    \"vTextureId = aTextureId;\" +\r\n    \"vColor = aColor;\" +\r\n    \"}\";\r\n//片元着色器程序\r\nconst fragTemplate = [\r\n    'precision mediump float;',\r\n    'varying vec2 vTextureCoord;',\r\n    'varying vec4 vColor;',\r\n    'varying float vTextureId;',\r\n    'uniform sampler2D uSamplers[%count%];',\r\n\r\n    'void main(void){',\r\n    'vec4 color;',\r\n    'float textureId = floor(vTextureId+0.5);',\r\n    '%forloop%',\r\n    'gl_FragColor = color * vColor;',\r\n    '}',\r\n].join('\\n');\r\n\r\n\r\n/**\r\n * 创建批处理专用着色器，核心，切换纹理\r\n * @param gl \r\n * @param maxTextures 最大纹理数\r\n */\r\nexport function generateMultiTextureShader(gl, maxTextures) {\r\n    // const vertexSrc = readFileSync(join(__dirname, './texture.vert'), 'utf8');\r\n    let fragmentSrc = fragTemplate;\r\n\r\n    fragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures);\r\n    fragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\r\n// console.log(fragmentSrc)\r\n    const shader = new GLShader(gl, VSHADER_SOURCE, fragmentSrc);\r\n\r\n    const sampleValues = [];\r\n\r\n    for (let i = 0; i < maxTextures; i++) {\r\n        sampleValues[i] = i;\r\n    }\r\n\r\n    shader.bind();\r\n    shader.uniforms[\"uSamplers\"] = sampleValues;\r\n    // console.log(fragmentSrc)\r\n    return shader;\r\n}\r\n\r\nfunction generateSampleSrc(maxTextures) {\r\n    let src = '';\r\n\r\n    src += '\\n';\r\n    src += '\\n';\r\n\r\n    for (let i = 0; i < maxTextures; i++) {\r\n        if (i > 0) {\r\n            src += '\\nelse ';\r\n        }\r\n\r\n        if (i < maxTextures - 1) {\r\n            src += `if(textureId == ${i}.0)`;\r\n        }\r\n\r\n        src += '\\n{';\r\n        src += `\\n\\tcolor = texture2D(uSamplers[${i}], vTextureCoord);`;\r\n        src += '\\n}';\r\n    }\r\n\r\n    src += '\\n';\r\n    src += '\\n';\r\n\r\n    return src;\r\n}\r\n","var EMPTY_ARRAY_BUFFER = new ArrayBuffer(0);\r\n\r\n/**\r\n * 用于创建webGL buffer，顶点和索引专用\r\n * @class\r\n * @memberof glCore\r\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n * @param type {gl.ARRAY_BUFFER | gl.ELEMENT_ARRAY_BUFFER} @mat\r\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\r\n * @param drawType {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\r\n */\r\nexport class GLBuffer {\r\n\t/**\r\n\t * 当前上下文\r\n\t * @member {WebGLRenderingContext}\r\n\t */\r\n\tgl: any;\r\n\t/**\r\n\t * The WebGL buffer, created upon instantiation\r\n\t * @member {WebGLBuffer}\r\n\t */\r\n\tbuffer: any;\r\n\t/**\r\n\t * buffer类型\r\n\t * 顶点或索引\r\n\t * @member {gl.ARRAY_BUFFER|gl.ELEMENT_ARRAY_BUFFER}\r\n\t */\r\n\ttype: any;\r\n\r\n\t/**\r\n\t * The draw type of the buffer\r\n\t * 绘制类型\r\n\t * gl.STATIC_DRAW: 缓冲区的内容可能经常使用，而不会经常更改\r\n\t * gl.DYNAMIC_DRAW: 缓冲区的内容可能经常被使用，并且经常更改\r\n\t * gl.STREAM_DRAW: 缓冲区的内容可能不会经常使用,且不会经常更改\r\n\t * @member {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\r\n\t */\r\n\tdrawType: any;\r\n\r\n\t/**\r\n\t * The data in the buffer, as a typed array\r\n\t * 用来表示通用的、固定长度的原始二进制数据缓冲区。ArrayBuffer 不能直接操作，\r\n\t * 而是要通过类型数组对象或 DataView 对象来操作，\r\n\t * 它们会将缓冲区中的数据表示为特定的格式，并通过这些格式来读写缓冲区的内容。\r\n\t * @member {ArrayBuffer| SharedArrayBuffer|ArrayBufferView}\r\n\t */\r\n\tdata;\r\n\r\n\t/**\r\n\t * 更新ID\r\n\t */\r\n\t_updateID: number;\r\n\tconstructor(gl, type?, data?, drawType?) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.buffer = gl.createBuffer();\r\n\r\n\t\tthis.type = type || gl.ARRAY_BUFFER;\r\n\r\n\t\tthis.drawType = drawType || gl.STATIC_DRAW;\r\n\r\n\t\tthis.data = EMPTY_ARRAY_BUFFER;\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.upload(data);\r\n\t\t}\r\n\r\n\t\tthis._updateID = 0;\r\n\t};\r\n\r\n\t/**\r\n\t * 上传数据\r\n\t * Uploads the buffer to the GPU\r\n\t * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data to upload\r\n\t * @param offset {Number} if only a subset of the data should be uploaded, this is the amount of data to subtract\r\n\t * @param dontBind {Boolean} whether to bind the buffer before uploading it  是否不绑定buffer\r\n\t */\r\n\tpublic upload(data, offset?:number, dontBind?:boolean) {\r\n\t\t// todo - needed?\r\n\t\tif (!dontBind) this.bind();\r\n\r\n\t\tvar gl = this.gl;\r\n\r\n\t\tdata = data || this.data;\r\n\t\toffset = offset || 0;\r\n\r\n\t\tif (this.data.byteLength >= data.byteLength) {\r\n\t\t\tgl.bufferSubData(this.type, offset, data);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tgl.bufferData(this.type, data, this.drawType);\r\n\t\t}\r\n\r\n\t\tthis.data = data;\r\n\t};\r\n\r\n\t/**\r\n\t * Binds the buffer\r\n\t * 状态机接下来使用的buffer\r\n\t * \r\n\t */\r\n\tpublic bind() {\r\n\t\tvar gl = this.gl;\r\n\t\tgl.bindBuffer(this.type, this.buffer);\r\n\t};\r\n\t/**\r\n\t * Destroys the buffer\r\n\t *\r\n\t */\r\n\tpublic destroy = function () {\r\n\t\tthis.gl.deleteBuffer(this.buffer);\r\n\t};\r\n\t/**\r\n\t * 创建顶点缓存\r\n\t * @param gl \r\n\t * @param data \r\n\t * @param drawType \r\n\t */\r\n\tpublic static createVertexBuffer(gl, data?, drawType?) {\r\n\t\treturn new GLBuffer(gl, gl.ARRAY_BUFFER, data, drawType);\r\n\t};\r\n\r\n\t/**\r\n\t * 创建索引缓存\r\n\t * @param gl \r\n\t * @param data \r\n\t * @param drawType \r\n\t */\r\n\tpublic static createIndexBuffer(gl, data?, drawType?) {\r\n\t\treturn new GLBuffer(gl, gl.ELEMENT_ARRAY_BUFFER, data, drawType);\r\n\t};\r\n\r\n\tpublic static create(gl, type, data, drawType) {\r\n\t\treturn new GLBuffer(gl, type, data, drawType);\r\n\t};\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n// state object//\r\nimport { setVertexAttribArrays } from './setVertexAttribArrays';\r\n\r\n/**\r\n * Helper class to work with WebGL VertexArrayObjects (vaos)\r\n * Only works if WebGL extensions are enabled (they usually are)\r\n * 核心类VAOs\r\n * @class\r\n * @memberof glCore\r\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n */\r\nexport class VertexArrayObject {\r\n    nativeVaoExtension: any;\r\n    nativeState: any;\r\n    nativeVao: any;\r\n    /**\r\n     * 当前上下文\r\n     */\r\n    gl: WebGLRenderingContext;\r\n    /**\r\n     * An array of attributes\r\n     * attributes数组\r\n     */\r\n    attributes: any[];\r\n\r\n    /**\r\n     * 索引buffer\r\n     *  @member {GLBuffer}\r\n     */\r\n    indexBuffer: any;\r\n    /**\r\n     * A boolean flag\r\n     */\r\n    dirty: boolean;\r\n    constructor(gl: WebGLRenderingContext, state) {\r\n        this.nativeVaoExtension = null;\r\n\r\n        //不要求必须使用原生时，基本都支持扩展\r\n        if (!VertexArrayObject.FORCE_NATIVE) {\r\n            this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') ||\r\n                gl.getExtension('MOZ_OES_vertex_array_object') ||\r\n                gl.getExtension('WEBKIT_OES_vertex_array_object');\r\n        }\r\n\r\n        this.nativeState = state;\r\n\r\n        if (this.nativeVaoExtension) {\r\n            this.nativeVao = this.nativeVaoExtension.createVertexArrayOES();\r\n\r\n            var maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\r\n            // VAO - overwrite the state..\r\n            this.nativeState = {\r\n                tempAttribState: new Array(maxAttribs),\r\n                attribState: new Array(maxAttribs)\r\n            };\r\n        }\r\n\r\n        this.gl = gl;\r\n\r\n        this.attributes = [];\r\n\r\n        this.indexBuffer = null;\r\n\r\n        this.dirty = false;\r\n    };\r\n\r\n    /**\r\n     * Binds the buffer\r\n     * 绑定数据\r\n     */\r\n    public bind() {\r\n        if (this.nativeVao) {\r\n            this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\r\n\r\n            if (this.dirty) {\r\n                this.dirty = false;\r\n                this.activate();\r\n                return this;\r\n            }\r\n            if (this.indexBuffer) {\r\n                this.indexBuffer.bind();\r\n            }\r\n        }\r\n        else {\r\n            this.activate();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Unbinds the buffer\r\n     * 解绑数据\r\n     */\r\n    public unbind() {\r\n        if (this.nativeVao) {\r\n            this.nativeVaoExtension.bindVertexArrayOES(null);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Uses this vao\r\n     * 激活vao\r\n     */\r\n    public activate() {\r\n\r\n        var gl = this.gl;\r\n        var lastBuffer = null;\r\n\r\n        for (var i = 0; i < this.attributes.length; i++) {\r\n            var attrib = this.attributes[i];\r\n\r\n            if (lastBuffer !== attrib.buffer) {\r\n                attrib.buffer.bind();\r\n                lastBuffer = attrib.buffer;\r\n            }\r\n\r\n            // gl.vertexAttribPointer(attrib.attribute.location,\r\n            //     attrib.attribute.size,\r\n            //     attrib.type || gl.FLOAT,\r\n            //     attrib.normalized || false,\r\n            //     attrib.stride || 0,\r\n            //     attrib.start || 0);\r\n            attrib.attribute.pointer(\r\n                attrib.type || gl.FLOAT,\r\n                attrib.normalized || false,\r\n                attrib.stride || 0,\r\n                attrib.start || 0\r\n            )\r\n        }\r\n\r\n        setVertexAttribArrays(gl, this.attributes, this.nativeState);\r\n\r\n        if (this.indexBuffer) {\r\n            this.indexBuffer.bind();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 添加attribute\r\n     * @param buffer     {gl.GLBuffer}\r\n     * @param attribute  {*}\r\n     * @param type       {String}\r\n     * @param normalized {Boolean}\r\n     * @param stride     {Number}\r\n     * @param start      {Number}\r\n     * @param name       {string} 名字，用于移除，否则不需要传\r\n     */\r\n    public addAttribute(buffer, attribute, type?, normalized?, stride?, start?, name?: string) {\r\n        this.attributes.push({\r\n            buffer: buffer,\r\n            attribute: attribute,\r\n\r\n            location: attribute.location,\r\n            type: type || this.gl.FLOAT,\r\n            normalized: normalized || false,\r\n            stride: stride || 0,\r\n            start: start || 0,\r\n\r\n            name: name,//名字，用于移除用，\r\n        });\r\n\r\n        this.dirty = true;\r\n\r\n        return this;\r\n    };\r\n    /**\r\n     * 移除attribute，暂时attributes是数组，是否考虑变成对象，现在按数组遍历移除，到时重名可能还有问题TODO\r\n     * @param name \r\n     * @param onlyOne  \r\n     */\r\n    public removeAttribute(name: string, onlyOne: boolean = true): this {\r\n        let len = this.attributes.length;\r\n        for (var i = len - 1; i >= 0; i--) {//倒序\r\n            let attr = this.attributes[i]\r\n            if (attr.name === name) {//同名移除\r\n                this.attributes.splice(i, 1);//从数组移除\r\n                //有改动，标记下\r\n                this.dirty = true;\r\n                //只需要移除一个就break\r\n                if (onlyOne) break;\r\n            }\r\n        }\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 添加索引数据\r\n     * @param buffer   {gl.GLBuffer}\r\n     */\r\n    public addIndex(buffer/*, options*/) {\r\n        this.indexBuffer = buffer;\r\n\r\n        this.dirty = true;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Unbinds this vao and disables it\r\n     * 解绑废弃vao\r\n     */\r\n    public clear() {\r\n        // var gl = this.gl;\r\n\r\n        // TODO - should this function unbind after clear?\r\n        // for now, no but lets see what happens in the real world!\r\n        if (this.nativeVao) {\r\n            this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\r\n        }\r\n\r\n        this.attributes.length = 0;\r\n        this.indexBuffer = null;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 执行绘制\r\n     * @param type  {Number} gl.TRIANGLES\\gl.TRIANGLE_STRIP等\r\n     * @param size  {Number} 个数\r\n     * @param start {Number} 偏移\r\n     */\r\n    public draw(type, size?, start?) {\r\n        var gl = this.gl;\r\n\r\n        if (this.indexBuffer) {\r\n            //有索引 https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements\r\n            gl.drawElements(type, size || this.indexBuffer.data.length, gl.UNSIGNED_SHORT, (start || 0) * 2);\r\n        }\r\n        else {\r\n            //无索引 https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawArrays\r\n            // TODO need a better way to calculate size..\r\n            gl.drawArrays(type, start || 0, size || this.getSize());\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Destroy this vao\r\n     */\r\n    public destroy() {\r\n        // lose references\r\n        this.gl = null;\r\n        this.indexBuffer = null;\r\n        this.attributes = null;\r\n        this.nativeState = null;\r\n\r\n        if (this.nativeVao) {\r\n            this.nativeVaoExtension.deleteVertexArrayOES(this.nativeVao);\r\n        }\r\n\r\n        this.nativeVaoExtension = null;\r\n        this.nativeVao = null;\r\n    };\r\n\r\n    public getSize() {\r\n        var attrib = this.attributes[0];\r\n        // return attrib.buffer.data.length / ((attrib.stride / 4) || attrib.attribute.size);\r\n        //ArrayBuffer没有length，要不要考虑0？\r\n        return (attrib.buffer.data.length || attrib.buffer.data.byteLength / 4) / ((attrib.stride / 4) || attrib.attribute.size);\r\n    };\r\n\r\n    /**\r\n    * Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\r\n    * If you find on older devices that things have gone a bit weird then set this to true.\r\n    */\r\n    /**\r\n     * Lets the VAO know if you should use the WebGL extension or the native methods.\r\n     * Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\r\n     * If you find on older devices that things have gone a bit weird then set this to true.\r\n     * @static\r\n     * @property {Boolean} FORCE_NATIVE\r\n     */\r\n    public static FORCE_NATIVE = false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","// var GL_MAP = {};\r\n\r\n/**\r\n * 连接attribute变量与分配给它的缓冲区对象，两种方式，与顶点着色器通信核心方法\r\n * @param gl {WebGLRenderingContext} The current WebGL context\r\n * @param attribs {*}\r\n * @param state {*}\r\n */\r\nexport function setVertexAttribArrays(gl, attribs, state?) {\r\n    var i;\r\n    if (state) {\r\n        var tempAttribState = state.tempAttribState,\r\n            attribState = state.attribState;\r\n\r\n        for (i = 0; i < tempAttribState.length; i++) {\r\n            tempAttribState[i] = false;\r\n        }\r\n\r\n        // set the new attribs\r\n        for (i = 0; i < attribs.length; i++) {\r\n            tempAttribState[attribs[i].attribute.location] = true;\r\n        }\r\n\r\n        for (i = 0; i < attribState.length; i++) {\r\n            if (attribState[i] !== tempAttribState[i]) {\r\n                attribState[i] = tempAttribState[i];\r\n\r\n                if (state.attribState[i]) {\r\n                    gl.enableVertexAttribArray(i);\r\n                }\r\n                else {\r\n                    gl.disableVertexAttribArray(i);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    else {\r\n        for (i = 0; i < attribs.length; i++) {\r\n            var attrib = attribs[i];\r\n            gl.enableVertexAttribArray(attrib.attribute.location);\r\n        }\r\n    }\r\n};","\r\nimport { GLTexture } from './GLTexture';\r\n\r\n/**\r\n * Helper class to create a webGL Framebuffer\r\n * 帧缓存，暂时不使用，renderTarget里用，主要用于滤镜处理\r\n *\r\n * @class\r\n * @memberof glCore\r\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n * @param width {Number} the width of the drawing area of the frame buffer\r\n * @param height {Number} the height of the drawing area of the frame buffer\r\n */\r\nexport class GLFramebuffer {\r\n    /**\r\n     * 当前渲染上下文\r\n     */\r\n    gl: WebGLRenderingContext;\r\n    /**\r\n     * 帧缓存\r\n     */\r\n    framebuffer: WebGLFramebuffer;\r\n    /**\r\n     * 模板缓存\r\n     */\r\n    stencil: WebGLRenderbuffer;\r\n\r\n    texture: GLTexture;\r\n    width: number;\r\n    height: number;\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.framebuffer = gl.createFramebuffer();\r\n        this.stencil = null;\r\n        this.texture = null;\r\n        this.width = width || 100;\r\n        this.height = height || 100;\r\n    };\r\n    /**\r\n     * Adds a texture to the frame buffer\r\n     * @param texture {glCore.GLTexture}\r\n     */\r\n    public enableTexture(texture?: GLTexture) {\r\n        var gl = this.gl;\r\n\r\n        this.texture = texture || new GLTexture(gl);\r\n\r\n        this.texture.bind();\r\n\r\n        //gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        this.bind();\r\n\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\r\n    };\r\n\r\n    /**\r\n     * Initialises the stencil buffer\r\n     */\r\n    public enableStencil() {\r\n        if (this.stencil) return;\r\n\r\n        var gl = this.gl;\r\n\r\n        this.stencil = gl.createRenderbuffer();\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\r\n\r\n        // TODO.. this is depth AND stencil?\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.stencil);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, this.width, this.height);\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * Erases the drawing area and fills it with a colour\r\n     * @param  r {Number} the red value of the clearing colour\r\n     * @param  g {Number} the green value of the clearing colour\r\n     * @param  b {Number} the blue value of the clearing colour\r\n     * @param  a {Number} the alpha value of the clearing colour\r\n     */\r\n    public clear(r: number, g: number, b: number, a: number) {\r\n        this.bind();\r\n\r\n        var gl = this.gl;\r\n\r\n        gl.clearColor(r, g, b, a);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    };\r\n\r\n    /**\r\n     * Binds the frame buffer to the WebGL context\r\n     */\r\n    public bind() {\r\n        var gl = this.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    };\r\n\r\n    /**\r\n     * Unbinds the frame buffer to the WebGL context\r\n     */\r\n    public unbind() {\r\n        var gl = this.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    };\r\n    /**\r\n     * Resizes the drawing area of the buffer to the given width and height\r\n     * @param  width  {Number} the new width\r\n     * @param  height {Number} the new height\r\n     */\r\n    public resize(width: number, height: number) {\r\n        var gl = this.gl;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        if (this.texture) {\r\n            this.texture.uploadData(null, width, height);\r\n        }\r\n\r\n        if (this.stencil) {\r\n            // update the stencil buffer width and height\r\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width, height);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroys this buffer\r\n     */\r\n    public destroy() {\r\n        var gl = this.gl;\r\n\r\n        //TODO\r\n        if (this.texture) {\r\n            this.texture.destroy();\r\n        }\r\n\r\n        gl.deleteFramebuffer(this.framebuffer);\r\n\r\n        this.gl = null;\r\n\r\n        this.stencil = null;\r\n        this.texture = null;\r\n    };\r\n\r\n    /**\r\n     * Creates a frame buffer with a texture containing the given data\r\n     * @static\r\n     * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n     * @param width {Number} the width of the drawing area of the frame buffer\r\n     * @param height {Number} the height of the drawing area of the frame buffer\r\n     * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\r\n     */\r\n    public static createRGBA(gl: WebGLRenderingContext, width: number, height: number, data?) {\r\n        // var texture = GLTexture.fromData(gl, null, width, height);\r\n        var texture = GLTexture.fromData(gl, data || null, width, height);\r\n        texture.enableNearestScaling();\r\n        texture.enableWrapClamp();\r\n\r\n        //now create the framebuffer object and attach the texture to it.\r\n        var fbo = new GLFramebuffer(gl, width, height);\r\n        fbo.enableTexture(texture);\r\n        //加上了，待测试\r\n        fbo.enableStencil(); // get this back on soon!\r\n\r\n        //fbo.enableStencil(); // get this back on soon!\r\n\r\n        fbo.unbind();\r\n\r\n        return fbo;\r\n    };\r\n\r\n    /**\r\n     * Creates a frame buffer with a texture containing the given data\r\n     * @static\r\n     * @param gl {WebGLRenderingContext} The current WebGL rendering context\r\n     * @param width {Number} the width of the drawing area of the frame buffer\r\n     * @param height {Number} the height of the drawing area of the frame buffer\r\n     * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\r\n     */\r\n    public static createFloat32(gl: WebGLRenderingContext, width: number, height: number, data: any) {\r\n        // create a new texture..\r\n        var texture = GLTexture.fromData(gl, data, width, height);\r\n        texture.enableNearestScaling();\r\n        texture.enableWrapClamp();\r\n\r\n        //now create the framebuffer object and attach the texture to it.\r\n        var fbo = new GLFramebuffer(gl, width, height);\r\n        fbo.enableTexture(texture);\r\n\r\n        fbo.unbind();\r\n\r\n        return fbo;\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nimport { compileProgram } from './shader/compileProgram';\r\nimport { extractAttributes } from './shader/extractAttributes';\r\nimport { extractUniforms } from './shader/extractUniforms';\r\nimport { setPrecision } from './shader/setPrecision';\r\nimport { generateUniformAccessObject } from './shader/generateUniformAccessObject';\r\n\r\n/**\r\n * Helper class to create a webGL Shader\r\n * 创建webgl shader用，里面主要用到attributes和uniforms\r\n * @class\r\n * @memberof glCore\r\n * @param gl {WebGLRenderingContext}\r\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\r\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\r\n * @param precision {string} The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\r\n * @param attributeLocations {object} A key value pair showing which location eact attribute should sit eg {position:0, uvs:1}\r\n */\r\nexport class GLShader {\r\n\t/**\r\n\t * The current WebGL rendering context\r\n\t * @member {WebGLRenderingContext}\r\n\t */\r\n\tgl: WebGLRenderingContext;\r\n\t/**\r\n\t * The shader program\r\n\t * @member {WebGLProgram}\r\n\t */\r\n\tprogram: WebGLProgram;\r\n\r\n\t/**\r\n\t *  The attributes of the shader as an object containing the following properties\r\n\t * {\r\n\t * \ttype,\r\n\t * \tsize,\r\n\t * \tlocation,\r\n\t * \tpointer\r\n\t * }\r\n\t * @member {Object}\r\n\t */\r\n\tattributes: any;\r\n\r\n\tuniformData: any;\r\n\t/**\r\n\t * The uniforms of the shader as an object containing the following properties\r\n\t * {\r\n\t * \tgl,\r\n\t * \tdata\r\n\t * }\r\n\t * @member {Object}\r\n\t */\r\n\tuniforms: any;\r\n\r\n\tconstructor(\r\n\t\tgl:WebGLRenderingContext, \r\n\t\tvertexSrc:string, \r\n\t\tfragmentSrc:string, \r\n\t\tprecision?:string, \r\n\t\tattributeLocations?) {\r\n\t\tthis.gl = gl;\r\n\r\n\t\tif (precision) {\r\n\t\t\tvertexSrc = setPrecision(vertexSrc, precision);\r\n\t\t\tfragmentSrc = setPrecision(fragmentSrc, precision);\r\n\t\t}\r\n\r\n\t\t// First compile the program..\r\n\t\tthis.program = compileProgram(gl, vertexSrc, fragmentSrc, attributeLocations);\r\n\r\n\t\t// next extract the attributes\r\n\t\tthis.attributes = extractAttributes(gl, this.program);\r\n\r\n\t\tthis.uniformData = extractUniforms(gl, this.program);\r\n\r\n\t\tthis.uniforms = generateUniformAccessObject(gl, this.uniformData);\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Uses this shader\r\n\t * 状态机当前使用的shader\r\n\t * @return {glCore.GLShader} Returns itself.\r\n\t */\r\n\tpublic bind() {\r\n\t\tthis.gl.useProgram(this.program);\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Destroys this shader\r\n\t * TODO\r\n\t */\r\n\tpublic destroy() {\r\n\t\tthis.attributes = null;\r\n\t\tthis.uniformData = null;\r\n\t\tthis.uniforms = null;\r\n\r\n\t\tvar gl = this.gl;\r\n\t\tgl.deleteProgram(this.program);\r\n\t};\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import { GLTexture } from '../../../glCore';\nimport { WRAP_MODES, SCALE_MODES } from '../../const';\nimport RenderTarget from '../renderTarget/RenderTarget';\nimport { removeItems } from '../../utils';\nimport BaseTexture from '../../texture/BaseTexture';\nimport { WebglRenderer } from '../WebglRenderer';\n\n/**\n * Helper class to create a webGL Texture\n *\n */\nexport default class TextureManager {\n    boundTextures;\n    renderer: WebglRenderer;\n    emptyTextures;\n    _nextTextureLocation: number = 0;\n    currentLocation: number;\n    gl: WebGLRenderingContext;\n    /**\n     * Track textures in the renderer so we can no longer listen to them on destruction.\n     */\n    _managedTextures: Array<any>;\n    /**\n     * @param {WebGLRenderer} renderer - A reference to the current renderer\n     */\n    constructor(renderer: WebglRenderer) {\n\n        this.renderer = renderer;\n\n        this.gl = renderer.gl;\n\n\n        this._managedTextures = [];\n\n        this.renderer.addEventListener('onContextChange', this.onContextChange, this);\n    }\n\n    onContextChange() {\n        const gl = this.gl;\n        const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n        this.boundTextures = new Array(maxTextures);\n        this.emptyTextures = new Array(maxTextures);\n\n        // now lets fill up the textures with empty ones!\n        const emptyGLTexture = GLTexture.fromData(gl, null, 1, 1);\n\n        const tempObj = { _glTextures: {} };\n\n        tempObj._glTextures[this.renderer.CONTEXT_UID] = {};\n\n        for (let i = 0; i < maxTextures; i++) {\n            const empty = new BaseTexture();\n\n            empty._glTextures[this.renderer.CONTEXT_UID] = emptyGLTexture;\n\n            this.boundTextures[i] = tempObj;\n            this.emptyTextures[i] = empty;\n            this.bindTexture(null, i);\n        }\n    }\n\n\n\n    /**\n     * Binds the texture. This will return the location of the bound texture.\n     * It may not be the same as the one you pass in. This is due to optimisation that prevents\n     * needless binding of textures. For example if the texture is already bound it will return the\n     * current location of the texture instead of the one provided. To bypass this use force location\n     *\n     * @param {Texture} texture - the new texture\n     * @param {number} location - the suggested texture location\n     * @param {boolean} forceLocation - force the location\n     * @return {number} bound texture location\n     */\n    bindTexture(texture: any, location?: number, forceLocation?: boolean): number {\n        texture = texture || this.emptyTextures[location];\n        texture = texture.baseTexture || texture;\n        texture._touchedId = this.renderer.textureGC.count;\n\n        //从原先绑定过的纹理里找\n        if (!forceLocation) {\n            // TODO - maybe look into adding boundIds.. save us the loop?\n            for (let i = 0; i < this.boundTextures.length; i++) {\n                if (this.boundTextures[i] === texture) {\n                    return i;\n                }\n            }\n\n            if (location === undefined) {\n                this._nextTextureLocation++;\n                this._nextTextureLocation %= this.boundTextures.length;\n                location = this.boundTextures.length - this._nextTextureLocation - 1;\n            }\n        }\n        else {\n            location = location || 0;\n        }\n\n        const gl = this.gl;\n        const glTexture = texture._glTextures[this.renderer.CONTEXT_UID];\n\n        //考虑到时用dirty更新的方法，不然有些属性更新可能无效，mipmap等\n        if (!glTexture) {\n            // this will also bind the texture..\n            this.updateTexture(texture, location);\n        }\n        else {\n            // bind the current texture\n            if (this.currentLocation !== location) {\n                this.currentLocation = location;\n                gl.activeTexture(gl.TEXTURE0 + location);\n            }\n\n            if (this.boundTextures[location] !== texture) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n            }\n            this.boundTextures[location] = texture;\n        }\n        return location;\n    }\n    /**\n     * Gets a texture.\n     *\n     */\n    getTexture() {\n        // empty\n    }\n\n    /**\n     * Updates and/or Creates a WebGL texture for the renderer's context.\n     *\n     * @param {BaseTexture|Texture} texture - the texture to update\n     * @param {number} location - the location the texture will be bound to.\n     * @return {GLTexture} The gl texture.\n     */\n    updateTexture(texture: any, location?: number): GLTexture {\n        //如果是事件返回的\n        if (texture.instanceType === \"Event\") {\n            //选择它的target\n            texture = texture.target.baseTexture || texture.target\n        } else {\n            texture = texture.baseTexture || texture;\n        }\n\n\n        const gl = this.gl;\n\n        const isRenderTexture = !!texture[\"_glRenderTargets\"];\n\n        if (!texture.hasLoaded) {\n            return null;\n        }\n\n        const boundTextures = this.boundTextures;\n\n        // if the location is undefined then this may have been called by n event.\n        // this being the case the texture may already be bound to a slot. As a texture can only be bound once\n        // we need to find its current location if it exists.\n        if (location === undefined) {\n            location = 0;\n\n            // TODO maybe we can use texture bound ids later on...\n            // check if texture is already bound..\n            for (let i = 0; i < boundTextures.length; ++i) {\n                if (boundTextures[i] === texture) {\n                    location = i;\n                    break;\n                }\n            }\n        }\n\n        boundTextures[location] = texture;\n\n        if (this.currentLocation !== location) {\n            this.currentLocation = location;\n            gl.activeTexture(gl.TEXTURE0 + location);\n        }\n\n        let glTexture: GLTexture = texture._glTextures[this.renderer.CONTEXT_UID];\n\n        if (!glTexture) {\n            if (isRenderTexture) {\n                const renderTarget = new RenderTarget(\n                    this.gl,\n                    texture.width,\n                    texture.height,\n                    texture.scaleMode,\n                    false\n                );\n                renderTarget.resize(texture.width, texture.height);\n                texture._glRenderTargets[this.renderer.CONTEXT_UID] = renderTarget;\n                glTexture = renderTarget.texture;\n            }\n            else {\n                glTexture = new GLTexture(this.gl, null, null, null, null);\n                //之前已经active过了，upload里也有bind，这里也许不用执行\n                // glTexture.bind(location);\n                glTexture.premultiplyAlpha = true;\n                if (texture.source.data) {//是data形式\n                    glTexture.uploadData(texture.source.data, texture.width, texture.height)\n                } else {\n                    glTexture.upload(texture.source);\n                }\n            }\n\n            texture._glTextures[this.renderer.CONTEXT_UID] = glTexture;\n\n            texture.addEventListener('update', this.updateTexture, this);\n            texture.addEventListener('dispose', this.destroyTexture, this);\n\n            this._managedTextures.push(texture);\n\n            if (texture.isPowerOfTwo) {\n                if (texture.mipmap) {\n                    glTexture.enableMipmap();\n                }\n                if (texture.wrapMode === WRAP_MODES.CLAMP) {\n                    glTexture.enableWrapClamp();\n                }\n                else if (texture.wrapMode === WRAP_MODES.REPEAT) {\n                    glTexture.enableWrapRepeat();\n                }\n                else {\n                    glTexture.enableWrapMirrorRepeat();\n                }\n            }\n            else {\n                glTexture.enableWrapClamp();\n            }\n\n            if (texture.scaleMode === SCALE_MODES.NEAREST) {\n                glTexture.enableNearestScaling();\n            }\n            else {\n                glTexture.enableLinearScaling();\n            }\n        }\n        // the texture already exists so we only need to update it..\n        else if (isRenderTexture) {\n            texture._glRenderTargets[this.renderer.CONTEXT_UID].resize(texture.width, texture.height);\n        }\n        else {\n            if (texture.source.data) {//是data形式\n                glTexture.uploadData(texture.source.data, texture.width, texture.height)\n            } else {\n                glTexture.upload(texture.source);\n            }\n        }\n\n        return glTexture;\n    }\n\n    /**\n     * unbinds the texture ...\n     *\n     * @param {Texture} texture - the texture to unbind\n     */\n    unbindTexture(texture) {\n        const gl = this.gl;\n\n        texture = texture.baseTexture || texture;\n\n        for (let i = 0; i < this.boundTextures.length; i++) {\n            if (this.boundTextures[i] === texture) {\n                this.boundTextures[i] = this.emptyTextures[i];\n                if (this.currentLocation !== i) {\n                    gl.activeTexture(gl.TEXTURE0 + i);\n                    this.currentLocation = i;\n                }\n                gl.bindTexture(gl.TEXTURE_2D, this.emptyTextures[i]._glTextures[this.renderer.CONTEXT_UID].texture);\n            }\n        }\n    }\n\n    /**\n     * Deletes the texture from WebGL\n     *\n     * @param {BaseTexture|Texture} texture - the texture to destroy\n     * @param {boolean} [skipRemove=false] - Whether to skip removing the texture from the TextureManager.\n     */\n    destroyTexture(texture, skipRemove) {\n        texture = texture.baseTexture || texture;\n\n        if (!texture.hasLoaded) {\n            return;\n        }\n\n        const uid = this.renderer.CONTEXT_UID;\n        const glTextures = texture._glTextures;\n        const glRenderTargets = texture._glRenderTargets;\n\n        if (glTextures[uid]) {\n            this.unbindTexture(texture);\n\n            glTextures[uid].destroy();\n            texture.removeEventListener('update', this.updateTexture, this);\n            texture.removeEventListener('dispose', this.destroyTexture, this);\n\n            delete glTextures[uid];\n\n            if (!skipRemove) {\n                const i = this._managedTextures.indexOf(texture);\n\n                if (i !== -1) {\n                    removeItems(this._managedTextures, i, 1);\n                }\n            }\n        }\n\n        if (glRenderTargets && glRenderTargets[uid]) {\n            glRenderTargets[uid].destroy();\n            delete glRenderTargets[uid];\n        }\n    }\n\n    /**\n     * Deletes all the textures from WebGL\n     */\n    removeAll() {\n        // empty all the old gl textures as they are useless now\n        for (let i = 0; i < this._managedTextures.length; ++i) {\n            const texture = this._managedTextures[i];\n\n            if (texture._glTextures[this.renderer.CONTEXT_UID]) {\n                delete texture._glTextures[this.renderer.CONTEXT_UID];\n            }\n        }\n    }\n\n    /**\n     * Destroys this manager and removes all its textures\n     */\n    destroy() {\n        // destroy managed textures\n        for (let i = 0; i < this._managedTextures.length; ++i) {\n            const texture = this._managedTextures[i];\n\n            this.destroyTexture(texture, true);\n            //上面已经移除了\n            // texture.removeEventListener('update', this.updateTexture, this);\n            // texture.removeEventListener('dispose', this.destroyTexture, this);\n        }\n        //移除绑定事件\n        this.renderer.removeEventListener('onContextChange', this.onContextChange, this);\n        this.renderer = null;\n        this._managedTextures = null;\n    }\n}\n","import { GC_MODES } from '../../const';\nimport { WebglRenderer } from '../WebglRenderer';\n/**\n * TextureGarbageCollector. This class manages the GPU and ensures that it does not get clogged\n * up with textures that are no longer being used.\n *\n */\nexport default class TextureGarbageCollector {\n    renderer: WebglRenderer;\n    count: number;\n    checkCount: number;\n    maxIdle: number;\n    checkCountMax: number;\n    mode: number;\n    /**\n     * @param {WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer: WebglRenderer) {\n        this.renderer = renderer;\n\n        this.count = 0;\n        this.checkCount = 0;\n        this.maxIdle = 60 * 60;\n        this.checkCountMax = 60 * 10;\n        this.mode = GC_MODES.AUTO;\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    update() {\n        this.count++;\n\n        if (this.mode === GC_MODES.MANUAL) {\n            return;\n        }\n\n        this.checkCount++;\n\n        if (this.checkCount > this.checkCountMax) {\n            this.checkCount = 0;\n\n            this.run();\n        }\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    run() {\n        const tm = this.renderer.textureManager;\n        const managedTextures = tm._managedTextures;\n        let wasRemoved = false;\n\n        for (let i = 0; i < managedTextures.length; i++) {\n            const texture = managedTextures[i];\n\n            // only supports non generated textures at the moment!\n            //去掉长期不用的纹理\n            if (!texture._glRenderTargets && this.count - texture._touchedId > this.maxIdle) {\n                tm.destroyTexture(texture, true);\n                managedTextures[i] = null;\n                wasRemoved = true;\n                \n            }\n        }\n\n        if (wasRemoved) {\n            let j = 0;\n\n            for (let i = 0; i < managedTextures.length; i++) {\n                if (managedTextures[i] !== null) {\n                    managedTextures[j++] = managedTextures[i];\n                }\n            }\n\n            managedTextures.length = j;\n        }\n    }\n\n    /**\n     * Removes all the textures within the specified displayObject and its children from the GPU\n     *\n     * @param {DisplayObject} displayObject - the displayObject to remove the textures from.\n     */\n    unload(displayObject) {\n        const tm = this.renderer.textureManager;\n\n        // only destroy non generated textures\n        if (displayObject._texture && displayObject._texture._glRenderTargets) {\n            tm.destroyTexture(displayObject._texture, true);\n        }\n\n        for (let i = displayObject.children.length - 1; i >= 0; i--) {\n            this.unload(displayObject.children[i]);\n        }\n    }\n}\n","import { mapWebGLBlendModes } from '../../utils';\n\nconst BLEND = 0;\nconst DEPTH_TEST = 1;\nconst FRONT_FACE = 2;\nconst CULL_FACE = 3;\nconst BLEND_FUNC = 4;\n\n/**\n * A WebGL state machines\n * 状态机管理类\n * @class\n */\nexport default class WebGLState {\n    blendModes\n    /**\n     * The current active state\n     *\n     */\n    activeState: Uint8Array;\n    /**\n     * The default state\n     *\n     */\n    defaultState: Uint8Array;\n\n    gl: any;\n    maxAttribs: any;\n    attribState: { tempAttribState: any[]; attribState: any[]; };\n    nativeVaoExtension: any;\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     */\n    constructor(gl: WebGLRenderingContext) {\n\n        this.activeState = new Uint8Array(16);\n\n\n        this.defaultState = new Uint8Array(16);\n\n        // default blend mode..暂时不用混色\n        this.defaultState[0] = 1;\n\n        this.gl = gl;\n\n        this.maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        this.attribState = {\n            tempAttribState: new Array(this.maxAttribs),\n            attribState: new Array(this.maxAttribs),\n        };\n\n        this.blendModes = mapWebGLBlendModes(gl);\n\n        // check we have vao..\n        this.nativeVaoExtension = (\n            gl.getExtension('OES_vertex_array_object')\n            || gl.getExtension('MOZ_OES_vertex_array_object')\n            || gl.getExtension('WEBKIT_OES_vertex_array_object')\n        );\n    }\n\n    /**\n     * Sets the current state\n     *\n     * @param {*} state - The state to set.\n     */\n    setState(state) {\n        this.setBlend(state[BLEND]);\n        this.setDepthTest(state[DEPTH_TEST]);\n        this.setFrontFace(state[FRONT_FACE]);\n        this.setCullFace(state[CULL_FACE]);\n        this.setBlendMode(state[BLEND_FUNC]);\n    }\n\n    /**\n     * Enables or disabled blending.\n     *\n     * @param {boolean} value - Turn on or off webgl blending.\n     */\n    setBlend(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[BLEND] === value) {\n            return;\n        }\n\n        this.activeState[BLEND] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n    }\n\n    /**\n     * Sets the blend mode.\n     *\n     * @param {number} value - The blend mode to set to.\n     */\n    setBlendMode(value) {\n        if (value === this.activeState[BLEND_FUNC]) {\n            return;\n        }\n\n        this.activeState[BLEND_FUNC] = value;\n\n        const mode = this.blendModes[value];\n\n        if (mode.length === 2) {\n            this.gl.blendFunc(mode[0], mode[1]);\n        }\n        else {\n            this.gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n        }\n    }\n\n    /**\n     * Sets whether to enable or disable depth test.\n     *\n     * @param {boolean} value - Turn on or off webgl depth testing.\n     */\n    setDepthTest(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[DEPTH_TEST] === value) {\n            return;\n        }\n\n        this.activeState[DEPTH_TEST] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    }\n\n    /**\n     * 设置是否开启剔除功能\n     * @param {boolean} value - Turn on or off webgl cull face.\n     */\n    setCullFace(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[CULL_FACE] === value) {\n            return;\n        }\n\n        this.activeState[CULL_FACE] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    }\n\n    /**\n     * 设置剔除的面，基本不设置，因为设置正方面就行setFrontFace\n     * gl.FRONT  \n     * gl.BACK 默认\n     * gl.FRONT_AND_BACK\n     */\n    // setCullSide(value){\n    //     value = value ? 1 : 0;\n    // }\n    \n    /**\n     * 设置gl的正面的绘制顺序，\n     * @param {boolean} value - true是顺时针，false是逆时针\n     */\n    setFrontFace(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[FRONT_FACE] === value) {\n            return;\n        }\n\n        this.activeState[FRONT_FACE] = value;\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    }\n\n    /**\n     * Disables all the vaos in use\n     *\n     */\n    resetAttributes() {\n        for (let i = 0; i < this.attribState.tempAttribState.length; i++) {\n            this.attribState.tempAttribState[i] = 0;\n        }\n\n        for (let i = 0; i < this.attribState.attribState.length; i++) {\n            this.attribState.attribState[i] = 0;\n        }\n\n        // im going to assume one is always active for performance reasons.\n        for (let i = 1; i < this.maxAttribs; i++) {\n            this.gl.disableVertexAttribArray(i);\n        }\n    }\n\n    // used\n    /**\n     * Resets all the logic and disables the vaos\n     */\n    resetToDefault() {\n        // unbind any VAO if they exist..\n        if (this.nativeVaoExtension) {\n            this.nativeVaoExtension.bindVertexArrayOES(null);\n        }\n\n        // reset all attributes..\n        this.resetAttributes();\n\n        // set active state so we can force overrides of gl state\n        for (let i = 0; i < this.activeState.length; ++i) {\n            this.activeState[i] = 32;\n        }\n        // 翻转Y纹理，gl状态默认不翻转false\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        this.setState(this.defaultState);\n\n    }\n\n    /**\n     * \n     */\n    resetTo3D() {\n        //允许深度检测\n        this.setDepthTest(1);\n        //设置逆时针为正面\n        this.setFrontFace(0);\n        //设置剔除\n        this.setCullFace(1);\n    }\n\n\n}\n","\nimport ObjectRenderer from '../webgl/ObjectRenderer';\nimport { WebglRenderer } from '../WebglRenderer';\n\n/**\n * 批处理管理器，用于切换渲染插件\n * @class\n */\nexport default class BatchManager {\n    /**\n     * \n     */\n    renderer: WebglRenderer;\n    /**\n     * 空\n     */\n    emptyRenderer: ObjectRenderer;\n    /**\n     * 当前使用的ObjectRenderer\n     * @member {ObjectRenderer}\n     */\n    currentRenderer: ObjectRenderer;\n\n    constructor(renderer: WebglRenderer) {\n        this.renderer = renderer;\n        this.emptyRenderer = new ObjectRenderer(renderer);\n        this.currentRenderer = this.emptyRenderer;\n    }\n\n    /**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {ObjectRenderer} objectRenderer - The object renderer to use.\n     */\n    setObjectRenderer(objectRenderer: ObjectRenderer) {\n        if (this.currentRenderer === objectRenderer) {\n            return;\n        }\n\n        this.currentRenderer.stop();\n        this.currentRenderer = objectRenderer;\n\n        this.currentRenderer.start();\n    }\n\n    /**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     */\n    flush() {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n\n    /**\n     * Reset the system to an empty renderer\n     */\n    reset() {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n}\n","\r\nimport Graphics from '../../graphics/Graphics';\r\nimport { WebglRenderer } from '../WebglRenderer';\r\nimport RenderTarget from '../renderTarget/RenderTarget';\r\nimport { SpriteMaskFilter } from '../../filter';\r\n\r\n/**\r\n * @class\r\n */\r\nexport default class MaskManager {\r\n    renderer: WebglRenderer;\r\n    scissor: boolean;\r\n    scissorData: any;\r\n    scissorRenderTarget: RenderTarget;\r\n    enableScissor: boolean;\r\n    alphaMaskPool: any[];\r\n    alphaMaskIndex: number;\r\n    /**\r\n     * - The renderer this manager works for.\r\n     */\r\n    constructor(renderer: WebglRenderer) {\r\n\r\n        this.renderer = renderer\r\n\r\n        // TODO - we don't need both!\r\n        this.scissor = false;\r\n        this.scissorData = null;\r\n        this.scissorRenderTarget = null;\r\n\r\n        this.enableScissor = true;\r\n\r\n        this.alphaMaskPool = [];\r\n        this.alphaMaskIndex = 0;\r\n    }\r\n\r\n    /**\r\n     * Applies the Mask and adds it to the current filter stack.\r\n     *\r\n     * @param {DisplayObject} target - Display Object to push the mask to\r\n     * @param {Sprite|Graphics} maskData - The masking data.\r\n     */\r\n    pushMask(target, maskData) {\r\n        // TODO the root check means scissor rect will not\r\n        // be used on render textures more info here:\r\n        // https://github.com/pixijs/js/pull/3545\r\n\r\n        if (maskData.texture) {\r\n            this.pushSpriteMask(target, maskData);\r\n        }\r\n        else\r\n            // if (this.enableScissor\r\n            //     && !this.scissor\r\n            //     && this.renderer._activeRenderTarget.root\r\n            //     && !this.renderer.stencilManager.stencilMaskStack.length\r\n            //     && maskData.isFastRect()) {\r\n            //     const matrix = maskData.worldMatrix;\r\n\r\n            //     let rot = Math.atan2(matrix.b, matrix.a);\r\n\r\n            //     // use the nearest degree!\r\n            //     rot = Math.round(rot * (180 / Math.PI));\r\n\r\n            //     if (rot % 90) {\r\n            //         this.pushStencilMask(maskData);\r\n            //     }\r\n            //     else {\r\n            //         this.pushScissorMask(target, maskData);\r\n            //     }\r\n            // }\r\n            // else {\r\n            this.pushStencilMask(maskData);\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Removes the last mask from the mask stack and doesn't return it.\r\n     *\r\n     * @param {DisplayObject} target - Display Object to pop the mask from\r\n     * @param {Sprite|Graphics} maskData - The masking data.\r\n     */\r\n    popMask(target, maskData) {\r\n        if (maskData.texture) {\r\n            this.popSpriteMask();\r\n        }\r\n        else\r\n            // if (this.enableScissor && !this.renderer.stencilManager.stencilMaskStack.length) {\r\n            //     this.popScissorMask();\r\n            // }\r\n            // else {\r\n            this.popStencilMask();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Applies the Mask and adds it to the current filter stack.\r\n     *\r\n     * @param {RenderTarget} target - Display Object to push the sprite mask to\r\n     * @param {Sprite} maskData - Sprite to be used as the mask\r\n     */\r\n    private pushSpriteMask(target, maskData) {\r\n        let alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\r\n\r\n        if (!alphaMaskFilter) {\r\n            alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new SpriteMaskFilter(maskData)];\r\n        }\r\n\r\n        alphaMaskFilter[0].resolution = 1;\r\n        alphaMaskFilter[0].maskSprite = maskData;\r\n\r\n        //存下之前的滤镜区域\r\n        const cacheFilterArea = target.filterArea;\r\n\r\n        //待测试 先计算如果maskData是shape要先执行updateShape，calculateBounds里会执行，这里不需要了\r\n        // if (maskData.instanceType == \"Shape\") maskData.updateShape();\r\n\r\n        //取遮罩的范围\r\n        target.filterArea = maskData.getBounds(true);\r\n\r\n        this.renderer.filterManager.pushFilter(target, alphaMaskFilter);\r\n        //恢复\r\n        target.filterArea = cacheFilterArea;\r\n\r\n        this.alphaMaskIndex++;\r\n    }\r\n\r\n    /**\r\n     * Removes the last filter from the filter stack and doesn't return it.\r\n     *\r\n     */\r\n    private popSpriteMask() {\r\n        this.renderer.filterManager.popFilter();\r\n        this.alphaMaskIndex--;\r\n    }\r\n\r\n    /**\r\n     * Applies the Mask and adds it to the current filter stack.\r\n     *\r\n     * @param {Graphics} maskData - The masking data.\r\n     */\r\n    private pushStencilMask(maskData: Graphics) {\r\n        this.renderer.batchManager.flush();\r\n        this.renderer.stencilManager.pushStencil(maskData);\r\n    }\r\n\r\n    /**\r\n     * Removes the last filter from the filter stack and doesn't return it.\r\n     *\r\n     */\r\n    private popStencilMask() {\r\n        this.renderer.stencilManager.popStencil();\r\n    }\r\n\r\n    /**\r\n     * 有bug暂不用\r\n     * @param {DisplayObject} target - Display Object to push the mask to\r\n     * @param {Graphics} maskData - The masking data.\r\n     */\r\n    pushScissorMask(target, maskData: Graphics) {\r\n        maskData.renderable = true;\r\n\r\n        const renderTarget = this.renderer._activeRenderTarget;\r\n\r\n        const bounds = maskData.getBounds();\r\n\r\n        bounds.fit(renderTarget.size);\r\n        maskData.renderable = false;\r\n\r\n        this.renderer.gl.enable(this.renderer.gl.SCISSOR_TEST);\r\n\r\n        this.renderer.gl.scissor(\r\n            bounds.x,\r\n            (renderTarget.root ? renderTarget.size.height - bounds.y - bounds.height : bounds.y),\r\n            bounds.width,\r\n            bounds.height\r\n        );\r\n\r\n        this.scissorRenderTarget = renderTarget;\r\n        this.scissorData = maskData;\r\n        this.scissor = true;\r\n    }\r\n\r\n    /**\r\n     *有bug暂不用\r\n     *\r\n     */\r\n    private popScissorMask() {\r\n        this.scissorRenderTarget = null;\r\n        this.scissorData = null;\r\n        this.scissor = false;\r\n\r\n        // must be scissor!\r\n        const gl = this.renderer.gl;\r\n\r\n        gl.disable(gl.SCISSOR_TEST);\r\n    }\r\n\r\n    destroy() {\r\n        this.renderer = null\r\n    }\r\n}\r\n","import { defaultValue } from \"../../glCore\";\n\n\nexport default function extractUniformsFromSrc(vertexSrc, fragmentSrc) {\n    const vertUniforms = extractUniformsFromString(vertexSrc);\n    const fragUniforms = extractUniformsFromString(fragmentSrc);\n    return Object[\"assign\"](vertUniforms, fragUniforms);\n}\n\nfunction extractUniformsFromString(string) {\n    const maskRegex = new RegExp('^(projectionMatrix|uSampler|filterArea|filterClamp)$');\n\n    const uniforms = {};\n    let nameSplit;\n\n    // clean the lines a little - remove extra spaces / tabs etc\n    // then split along ';'\n    const lines = string.replace(/\\s+/g, ' ')\n        .split(/\\s*;\\s*/);\n\n    // loop through..\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].trim();\n\n        if (line.indexOf('uniform') > -1) {\n            const splitLine = line.split(' ');\n            const type = splitLine[1];\n\n            let name = splitLine[2];\n            let size = 1;\n\n            if (name.indexOf('[') > -1) {\n                // array!\n                nameSplit = name.split(/\\[|]/);\n                name = nameSplit[0];\n                size *= Number(nameSplit[1]);\n            }\n\n            if (!name.match(maskRegex)) {\n                uniforms[name] = {\n                    value: defaultValue(type, size),\n                    name,\n                    type,\n                };\n            }\n        }\n    }\n\n    return uniforms;\n}\n","import Filter from \"../Filter\";\n\nconst fxaaVert =\n    \"precision highp float;\" +\n    \"attribute vec2 aVertexPosition;\" +\n    \"attribute vec2 aTextureCoord;\" +\n\n    \"uniform mat3 projectionMatrix;\" +\n\n    \"varying vec2 v_rgbNW;\" +\n    \"varying vec2 v_rgbNE;\" +\n    \"varying vec2 v_rgbSW;\" +\n    \"varying vec2 v_rgbSE;\" +\n    \"varying vec2 v_rgbM;\" +\n\n    \"uniform vec4 filterArea;\" +\n\n    \"varying vec2 vTextureCoord;\" +\n\n    \"vec2 mapCoord( vec2 coord ){\" +\n    \"coord *= filterArea.xy;\" +\n    \"coord += filterArea.zw;\" +\n\n    \"return coord;\" +\n    \"}\" +\n\n    \"vec2 unmapCoord( vec2 coord ){\" +\n    \"coord -= filterArea.zw;\" +\n    \"coord /= filterArea.xy;\" +\n\n    \"return coord;\" +\n    \"}\" +\n    //到时考虑这里编译能否成功\n    \"void texcoords(vec2 fragCoord, vec2 resolution,\" +\n    \"out vec2 v_rgbNW, out vec2 v_rgbNE,\" +\n    \"out vec2 v_rgbSW, out vec2 v_rgbSE,\" +\n    \"out vec2 v_rgbM) {\" +\n    \"vec2 inverseVP = 1.0 / resolution.xy;\" +\n    \"v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\" +\n    \"v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\" +\n    \"v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\" +\n    \"v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\" +\n    \"v_rgbM = vec2(fragCoord * inverseVP);\" +\n    \"}\" +\n\n    \"void main(void) {\" +\n\n    \"gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\" +\n\n    \"vTextureCoord = aTextureCoord;\" +\n\n    \"vec2 fragCoord = vTextureCoord * filterArea.xy;\" +\n\n    \"texcoords(fragCoord, filterArea.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\" +\n    \"}\";\n\nconst fxaaFrag = [\n    'precision highp float;',\n    'varying vec2 v_rgbNW;',\n    'varying vec2 v_rgbNE;',\n    'varying vec2 v_rgbSW;',\n    'varying vec2 v_rgbSE;',\n    'varying vec2 v_rgbM;',\n\n    'varying vec2 vTextureCoord;',\n    'uniform sampler2D uSampler;',\n    'uniform vec4 filterArea;',\n\n    '#ifndef FXAA_REDUCE_MIN',\n    '#define FXAA_REDUCE_MIN   (1.0/ 128.0)',\n    '#endif',\n    '#ifndef FXAA_REDUCE_MUL',\n    '#define FXAA_REDUCE_MUL   (1.0 / 8.0)',\n    '#endif',\n    '#ifndef FXAA_SPAN_MAX',\n    '#define FXAA_SPAN_MAX     8.0',\n    '#endif',\n\n    'vec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,',\n    'vec2 v_rgbNW, vec2 v_rgbNE,',\n    'vec2 v_rgbSW, vec2 v_rgbSE,',\n    'vec2 v_rgbM) {',\n    'vec4 color;',\n    'mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);',\n    'vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;',\n    'vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;',\n    'vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;',\n    'vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;',\n    'vec4 texColor = texture2D(tex, v_rgbM);',\n    'vec3 rgbM  = texColor.xyz;',\n    'vec3 luma = vec3(0.299, 0.587, 0.114);',\n    'float lumaNW = dot(rgbNW, luma);',\n    'float lumaNE = dot(rgbNE, luma);',\n    'float lumaSW = dot(rgbSW, luma);',\n    'float lumaSE = dot(rgbSE, luma);',\n    'float lumaM  = dot(rgbM,  luma);',\n    'float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));',\n    'float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));',\n\n    'mediump vec2 dir;',\n    'dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));',\n    'dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));',\n\n    'float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *',\n    '(0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);',\n\n    'float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);',\n    'dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),',\n    'max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),',\n    'dir * rcpDirMin)) * inverseVP;',\n\n    'vec3 rgbA = 0.5 * (',\n    'texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +',\n    'texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);',\n    'vec3 rgbB = rgbA * 0.5 + 0.25 * (',\n    'texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +',\n    'texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);',\n\n    'float lumaB = dot(rgbB, luma);',\n    'if ((lumaB < lumaMin) || (lumaB > lumaMax))',\n    'color = vec4(rgbA, texColor.a);',\n    'else',\n    'color = vec4(rgbB, texColor.a);',\n    'return color;',\n    '}',\n\n    'void main() {',\n\n    'vec2 fragCoord = vTextureCoord * filterArea.xy;',\n\n    'vec4 color;',\n\n    'color = fxaa(uSampler, fragCoord, filterArea.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);',\n\n    'gl_FragColor = color;',\n    '}'].join(\"\\n\")\n/**\n *\n * Basic FXAA implementation based on the code on geeks3d.com with the\n * modification that the texture2DLod stuff was removed since it's\n * unsupported by WebGL.\n *\n * @see https://github.com/mitsuhiko/webgl-meincraft\n *\n * @class\n * @extends Filter\n * @memberof filters\n *\n */\nexport default class FXAAFilter extends Filter {\n    constructor() {\n        super(fxaaVert, fxaaFrag);\n    }\n}\n","\nimport Filter from '../Filter';\nimport { defaultVert } from '../defaultVerts';\n\nconst noiseFrag =\n    \"precision mediump float;\" +\n\n    \"varying vec2 vTextureCoord;\" +\n    \"varying vec4 vColor;\" +\n\n    \"uniform float uNoise;\" +\n    \"uniform float uSeed;\" +\n    \"uniform sampler2D uSampler;\" +\n\n    \"float rand(vec2 co){\" +\n    \"return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\" +\n    \"}\" +\n\n    \"void main(){\" +\n    \"vec4 color = texture2D(uSampler, vTextureCoord);\" +\n    \"float randomValue = rand(gl_FragCoord.xy * uSeed);\" +\n    \"float diff = (randomValue - 0.5) * uNoise;\" +\n\n    // Un-premultiply alpha before applying the color matrix. See issue #3539.\n    \"if (color.a > 0.0) {\" +\n    \"color.rgb /= color.a;\" +\n    \"}\" +\n\n    \"color.r += diff;\" +\n    \"color.g += diff;\" +\n    \"color.b += diff;\" +\n\n    // Premultiply alpha again.\n    \"color.rgb *= color.a;\" +\n\n    \"gl_FragColor = color;\" +\n    \"}\"\n\n\n\n/**\n * @author Vico @vicocotea\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/adjust/noise.js\n */\n\n/**\n * A Noise effect filter.\n *\n * @class\n * @extends Filter\n * @memberof filters\n */\nexport default class NoiseFilter extends Filter {\n    /**\n     * @param {number} noise - The noise intensity, should be a normalized value in the range [0, 1].\n     * @param {number} seed - A random seed for the noise generation. Default is `Math.random()`.\n     */\n    constructor(noise: number = 0.5, seed: number = Math.random()) {\n        super(defaultVert, noiseFrag);\n        this.noise = noise;\n        this.seed = seed;\n    }\n\n    /**\n     * The amount of noise to apply, this value should be in the range (0, 1].\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    get noise() {\n        return this.uniforms.uNoise;\n    }\n\n    set noise(value) {\n        this.uniforms.uNoise = value;\n    }\n\n    /**\n     * A seed value to apply to the random noise generation. `Math.random()` is a good value to use.\n     *\n     * @member {number}\n     */\n    get seed() {\n        return this.uniforms.uSeed;\n    }\n\n    set seed(value) {\n        this.uniforms.uSeed = value;\n    }\n}\n","import Filter from \"../Filter\";\nimport { Matrix, Point } from \"../../math\";\nimport { defaultFilterMatrix } from \"../defaultVerts\";\nimport Sprite from \"../../display/Sprite\";\n\nconst displacementFrag =\n    'precision mediump float;' +\n    'varying vec2 vFilterCoord;' +\n    'varying vec2 vTextureCoord;' +\n\n    'uniform vec2 scale;' +\n\n    'uniform sampler2D uSampler;' +\n    'uniform sampler2D mapSampler;' +\n\n    'uniform vec4 filterArea;' +\n    'uniform vec4 filterClamp;' +\n\n    'void main(void){' +\n    'vec4 map = texture2D(mapSampler, vFilterCoord);' +\n\n    'map -= 0.5;' +\n    'map.xy *= scale / filterArea.xy;' +\n\n    'gl_FragColor = texture2D(uSampler, clamp(vec2(vTextureCoord.x + map.x, vTextureCoord.y + map.y), filterClamp.xy, filterClamp.zw));' +\n    '}'\n\n/**\n * The DisplacementFilter class uses the pixel values from the specified texture\n * (called the displacement map) to perform a displacement of an object. You can\n * use this filter to apply all manor of crazy warping effects. Currently the r\n * property of the texture is used to offset the x and the g property of the texture\n * is used to offset the y.\n *\n * @class\n * @extends Filter\n * @memberof filters\n */\nexport default class DisplacementFilter extends Filter {\n    maskSprite: Sprite;\n    maskMatrix: Matrix;\n    scale: Point;\n    /**\n     * @param {Sprite} sprite - The sprite used for the displacement map. (make sure its added to the scene!)\n     * @param {number} scale - The scale of the displacement\n     */\n    constructor(sprite: Sprite, scale?: number) {\n        const maskMatrix = new Matrix();\n\n        sprite.renderable = false;\n\n        super(defaultFilterMatrix, displacementFrag);\n\n        this.maskSprite = sprite;\n        this.maskMatrix = maskMatrix;\n\n        this.uniforms.mapSampler = sprite._texture;\n        this.uniforms.filterMatrix = maskMatrix;\n        this.uniforms.scale = { x: 1, y: 1 };\n\n        if (scale === null || scale === undefined) scale = 20;\n\n        this.scale = new Point(scale, scale);\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {FilterManager} filterManager - The manager.\n     * @param {RenderTarget} input - The input target.\n     * @param {RenderTarget} output - The output target.\n     */\n    apply(filterManager, input, output) {\n        this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, this.maskSprite);\n        this.uniforms.scale.x = this.scale.x;\n        this.uniforms.scale.y = this.scale.y;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output);\n    }\n\n    /**\n     * The texture used for the displacement map. Must be power of 2 sized texture.\n     *\n     * @member {Texture}\n     */\n    get map() {\n        return this.uniforms.mapSampler;\n    }\n\n    set map(value) {\n        this.uniforms.mapSampler = value;\n    }\n}\n","\r\nimport BlurXFilter from './BlurXFilter';\r\nimport BlurYFilter from './BlurYFilter';\r\nimport Filter from '../Filter';\r\n\r\n/**\r\n * The BlurFilter applies a Gaussian blur to an object.\r\n * The strength of the blur can be set for x- and y-axis separately.\r\n *\r\n * @class\r\n * @extends Filter\r\n * @memberof filters\r\n */\r\nexport default class BlurFilter extends Filter {\r\n    private blurXFilter: BlurXFilter;\r\n    private blurYFilter: BlurYFilter;\r\n\r\n    /**\r\n     * @param {number} strength - The strength of the blur filter.\r\n     * @param {number} quality - The quality of the blur filter.\r\n     * @param {number} resolution - The resolution of the blur filter.\r\n     * @param {number} [kernelSize=5] - The kernelSize of the blur filter.Options: 5, 7, 9, 11, 13, 15.\r\n     */\r\n    constructor(strength?, quality?, resolution?, kernelSize?) {\r\n        super();\r\n\r\n        this.blurXFilter = new BlurXFilter(strength, quality, resolution, kernelSize);\r\n        this.blurYFilter = new BlurYFilter(strength, quality, resolution, kernelSize);\r\n\r\n        this.padding = 0;\r\n        this.resolution = resolution || 1;\r\n        this.quality = quality || 4;\r\n        this.blur = strength || 8;\r\n    }\r\n\r\n    /**\r\n     * Applies the filter.\r\n     *\r\n     * @param {FilterManager} filterManager - The manager.\r\n     * @param {RenderTarget} input - The input target.\r\n     * @param {RenderTarget} output - The output target.\r\n     */\r\n    apply(filterManager, input, output) {\r\n        const renderTarget = filterManager.getRenderTarget(true);\r\n\r\n        this.blurXFilter.apply(filterManager, input, renderTarget, true);\r\n        this.blurYFilter.apply(filterManager, renderTarget, output, false);\r\n\r\n        filterManager.returnRenderTarget(renderTarget);\r\n    }\r\n\r\n    /**\r\n     * Sets the strength of both the blurX and blurY properties simultaneously\r\n     *\r\n     * @member {number}\r\n     * @default 2\r\n     */\r\n    get blur() {\r\n        return this.blurXFilter.blur;\r\n    }\r\n\r\n    set blur(value) {\r\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\r\n        this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\r\n    }\r\n\r\n    /**\r\n     * Sets the number of passes for blur. More passes means higher quaility bluring.\r\n     *\r\n     * @member {number}\r\n     * @default 1\r\n     */\r\n    get quality() {\r\n        return this.blurXFilter.quality;\r\n    }\r\n\r\n    set quality(value) {\r\n        this.blurXFilter.quality = this.blurYFilter.quality = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the strength of the blurX property\r\n     *\r\n     * @member {number}\r\n     * @default 2\r\n     */\r\n    get blurX() {\r\n        return this.blurXFilter.blur;\r\n    }\r\n\r\n    set blurX(value) {\r\n        this.blurXFilter.blur = value;\r\n        this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\r\n    }\r\n\r\n    /**\r\n     * Sets the strength of the blurY property\r\n     *\r\n     * @member {number}\r\n     * @default 2\r\n     */\r\n    get blurY() {\r\n        return this.blurYFilter.blur;\r\n    }\r\n\r\n    set blurY(value) {\r\n        this.blurYFilter.blur = value;\r\n        this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\r\n    }\r\n\r\n    /**\r\n     * Sets the blendmode of the filter\r\n     *\r\n     * @member {number}\r\n     * @default BLEND_MODES.NORMAL\r\n     */\r\n    get blendMode() {\r\n        return this.blurYFilter.blendMode;\r\n    }\r\n\r\n    set blendMode(value) {\r\n        this.blurYFilter.blendMode = value;\r\n    }\r\n}\r\n","import Filter from \"../Filter\";\nimport { defaultVert } from \"../defaultVerts\";\n\n\nconst colorMatrixFrag =\n    'precision mediump float;' +\n    'varying vec2 vTextureCoord;' +\n    'uniform sampler2D uSampler;' +\n    'uniform float m[20];' +\n    'uniform float uAlpha;' +\n\n    'void main(void){' +\n    'vec4 c = texture2D(uSampler, vTextureCoord);' +\n\n    'if (uAlpha == 0.0) {' +\n    'gl_FragColor = c;' +\n    'return;' +\n    '}' +\n\n    // Un-premultiply alpha before applying the color matrix. See issue #3539.\n    'if (c.a > 0.0) {' +\n    'c.rgb /= c.a;' +\n    '}' +\n\n    'vec4 result;' +\n\n    'result.r = (m[0] * c.r);' +\n    'result.r += (m[1] * c.g);' +\n    'result.r += (m[2] * c.b);' +\n    'result.r += (m[3] * c.a);' +\n    'result.r += m[4];' +\n\n    'result.g = (m[5] * c.r);' +\n    'result.g += (m[6] * c.g);' +\n    'result.g += (m[7] * c.b);' +\n    'result.g += (m[8] * c.a);' +\n    'result.g += m[9];' +\n\n    'result.b = (m[10] * c.r);' +\n    'result.b += (m[11] * c.g);' +\n    'result.b += (m[12] * c.b);' +\n    'result.b += (m[13] * c.a);' +\n    'result.b += m[14];' +\n\n    'result.a = (m[15] * c.r);' +\n    'result.a += (m[16] * c.g);' +\n    'result.a += (m[17] * c.b);' +\n    'result.a += (m[18] * c.a);' +\n    'result.a += m[19];' +\n\n    'vec3 rgb = mix(c.rgb, result.rgb, uAlpha);' +\n\n    // Premultiply alpha again.\n    'rgb *= result.a;' +\n\n    'gl_FragColor = vec4(rgb, result.a);' +\n    '}'\n\n/**\n * The ColorMatrixFilter class lets you apply a 5x4 matrix transformation on the RGBA\n * color and alpha values of every pixel on your displayObject to produce a result\n * with a new set of RGBA color and alpha values. It's pretty powerful!\n *\n * ```js\n *  let colorMatrix = new filters.ColorMatrixFilter();\n *  container.filters = [colorMatrix];\n *  colorMatrix.contrast(2);\n * ```\n * @author Clément Chenebault <clement@goodboydigital.com>\n * @class\n * @extends Filter\n */\nexport default class ColorMatrixFilter extends Filter {\n    grayscale: (scale: any, multiply: any) => void;\n    /**\n     *\n     */\n    constructor(colorMatrix?: number[]) {\n        super(defaultVert, colorMatrixFrag);\n\n        this.uniforms.m = colorMatrix || [\n            1, 0, 0, 0, 0,\n            0, 1, 0, 0, 0,\n            0, 0, 1, 0, 0,\n            0, 0, 0, 1, 0\n        ];\n\n        this.alpha = 1;\n    }\n\n    /**\n     * Transforms current matrix and set the new one\n     *\n     * @param {number[]} matrix - 5x4 matrix\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    _loadMatrix(matrix, multiply: boolean = false) {\n        let newMatrix = matrix;\n\n        if (multiply) {\n            this._multiply(newMatrix, this.uniforms.m, matrix);\n            newMatrix = this._colorMatrix(newMatrix);\n        }\n\n        // set the new matrix\n        this.uniforms.m = newMatrix;\n    }\n\n    /**\n     * Multiplies two mat5's\n     *\n     * @private\n     * @param {number[]} out - 5x4 matrix the receiving matrix\n     * @param {number[]} a - 5x4 matrix the first operand\n     * @param {number[]} b - 5x4 matrix the second operand\n     * @returns {number[]} 5x4 matrix\n     */\n    _multiply(out, a, b) {\n        // Red Channel\n        out[0] = (a[0] * b[0]) + (a[1] * b[5]) + (a[2] * b[10]) + (a[3] * b[15]);\n        out[1] = (a[0] * b[1]) + (a[1] * b[6]) + (a[2] * b[11]) + (a[3] * b[16]);\n        out[2] = (a[0] * b[2]) + (a[1] * b[7]) + (a[2] * b[12]) + (a[3] * b[17]);\n        out[3] = (a[0] * b[3]) + (a[1] * b[8]) + (a[2] * b[13]) + (a[3] * b[18]);\n        out[4] = (a[0] * b[4]) + (a[1] * b[9]) + (a[2] * b[14]) + (a[3] * b[19]) + a[4];\n\n        // Green Channel\n        out[5] = (a[5] * b[0]) + (a[6] * b[5]) + (a[7] * b[10]) + (a[8] * b[15]);\n        out[6] = (a[5] * b[1]) + (a[6] * b[6]) + (a[7] * b[11]) + (a[8] * b[16]);\n        out[7] = (a[5] * b[2]) + (a[6] * b[7]) + (a[7] * b[12]) + (a[8] * b[17]);\n        out[8] = (a[5] * b[3]) + (a[6] * b[8]) + (a[7] * b[13]) + (a[8] * b[18]);\n        out[9] = (a[5] * b[4]) + (a[6] * b[9]) + (a[7] * b[14]) + (a[8] * b[19]) + a[9];\n\n        // Blue Channel\n        out[10] = (a[10] * b[0]) + (a[11] * b[5]) + (a[12] * b[10]) + (a[13] * b[15]);\n        out[11] = (a[10] * b[1]) + (a[11] * b[6]) + (a[12] * b[11]) + (a[13] * b[16]);\n        out[12] = (a[10] * b[2]) + (a[11] * b[7]) + (a[12] * b[12]) + (a[13] * b[17]);\n        out[13] = (a[10] * b[3]) + (a[11] * b[8]) + (a[12] * b[13]) + (a[13] * b[18]);\n        out[14] = (a[10] * b[4]) + (a[11] * b[9]) + (a[12] * b[14]) + (a[13] * b[19]) + a[14];\n\n        // Alpha Channel\n        out[15] = (a[15] * b[0]) + (a[16] * b[5]) + (a[17] * b[10]) + (a[18] * b[15]);\n        out[16] = (a[15] * b[1]) + (a[16] * b[6]) + (a[17] * b[11]) + (a[18] * b[16]);\n        out[17] = (a[15] * b[2]) + (a[16] * b[7]) + (a[17] * b[12]) + (a[18] * b[17]);\n        out[18] = (a[15] * b[3]) + (a[16] * b[8]) + (a[17] * b[13]) + (a[18] * b[18]);\n        out[19] = (a[15] * b[4]) + (a[16] * b[9]) + (a[17] * b[14]) + (a[18] * b[19]) + a[19];\n\n        return out;\n    }\n\n    /**\n     * Create a Float32 Array and normalize the offset component to 0-1\n     *\n     * @private\n     * @param {number[]} matrix - 5x4 matrix\n     * @return {number[]} 5x4 matrix with all values between 0-1\n     */\n    _colorMatrix(matrix) {\n        // Create a Float32 Array and normalize the offset component to 0-1\n        const m = new Float32Array(matrix);\n\n        m[4] /= 255;\n        m[9] /= 255;\n        m[14] /= 255;\n        m[19] /= 255;\n\n        return m;\n    }\n\n    /**\n     * Adjusts brightness\n     *\n     * @param {number} b - value of the brigthness (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    brightness(b, multiply) {\n        const matrix = [\n            b, 0, 0, 0, 0,\n            0, b, 0, 0, 0,\n            0, 0, b, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Set the matrices in grey scales\n     *\n     * @param {number} scale - value of the grey (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    greyscale(scale, multiply) {\n        const matrix = [\n            scale, scale, scale, 0, 0,\n            scale, scale, scale, 0, 0,\n            scale, scale, scale, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Set the black and white matrice.\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    blackAndWhite(multiply) {\n        const matrix = [\n            0.3, 0.6, 0.1, 0, 0,\n            0.3, 0.6, 0.1, 0, 0,\n            0.3, 0.6, 0.1, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Set the hue property of the color\n     *\n     * @param {number} rotation - in degrees\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    hue(rotation, multiply) {\n        rotation = (rotation || 0) / 180 * Math.PI;\n\n        const cosR = Math.cos(rotation);\n        const sinR = Math.sin(rotation);\n        const sqrt = Math.sqrt;\n\n        /* a good approximation for hue rotation\n         This matrix is far better than the versions with magic luminance constants\n         formerly used here, but also used in the starling framework (flash) and known from this\n         old part of the internet: quasimondo.com/archives/000565.php\n\n         This new matrix is based on rgb cube rotation in space. Look here for a more descriptive\n         implementation as a shader not a general matrix:\n         https://github.com/evanw/glfx.js/blob/58841c23919bd59787effc0333a4897b43835412/src/filters/adjust/huesaturation.js\n\n         This is the source for the code:\n         see http://stackoverflow.com/questions/8507885/shift-hue-of-an-rgb-color/8510751#8510751\n         */\n\n        const w = 1 / 3;\n        const sqrW = sqrt(w); // weight is\n\n        const a00 = cosR + ((1.0 - cosR) * w);\n        const a01 = (w * (1.0 - cosR)) - (sqrW * sinR);\n        const a02 = (w * (1.0 - cosR)) + (sqrW * sinR);\n\n        const a10 = (w * (1.0 - cosR)) + (sqrW * sinR);\n        const a11 = cosR + (w * (1.0 - cosR));\n        const a12 = (w * (1.0 - cosR)) - (sqrW * sinR);\n\n        const a20 = (w * (1.0 - cosR)) - (sqrW * sinR);\n        const a21 = (w * (1.0 - cosR)) + (sqrW * sinR);\n        const a22 = cosR + (w * (1.0 - cosR));\n\n        const matrix = [\n            a00, a01, a02, 0, 0,\n            a10, a11, a12, 0, 0,\n            a20, a21, a22, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Set the contrast matrix, increase the separation between dark and bright\n     * Increase contrast : shadows darker and highlights brighter\n     * Decrease contrast : bring the shadows up and the highlights down\n     *\n     * @param {number} amount - value of the contrast (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    contrast(amount, multiply?) {\n        const v = (amount || 0) + 1;\n        const o = -0.5 * (v - 1);\n\n        const matrix = [\n            v, 0, 0, 0, o,\n            0, v, 0, 0, o,\n            0, 0, v, 0, o,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Set the saturation matrix, increase the separation between colors\n     * Increase saturation : increase contrast, brightness, and sharpness\n     *\n     * @param {number} amount - The saturation amount (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    saturate(amount = 0, multiply?: boolean) {\n        const x = (amount * 2 / 3) + 1;\n        const y = ((x - 1) * -0.5);\n\n        const matrix = [\n            x, y, y, 0, 0,\n            y, x, y, 0, 0,\n            y, y, x, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Desaturate image (remove color)\n     *\n     * Call the saturate function\n     *\n     */\n    desaturate() // eslint-disable-line no-unused-vars\n    {\n        this.saturate(-1);\n    }\n\n    /**\n     * Negative image (inverse of classic rgb matrix)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    negative(multiply) {\n        const matrix = [\n            -1, 0, 0, 1, 0,\n            0, -1, 0, 1, 0,\n            0, 0, -1, 1, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Sepia image\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    sepia(multiply) {\n        const matrix = [\n            0.393, 0.7689999, 0.18899999, 0, 0,\n            0.349, 0.6859999, 0.16799999, 0, 0,\n            0.272, 0.5339999, 0.13099999, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Color motion picture process invented in 1916 (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    technicolor(multiply) {\n        const matrix = [\n            1.9125277891456083, -0.8545344976951645, -0.09155508482755585, 0, 11.793603434377337,\n            -0.3087833385928097, 1.7658908555458428, -0.10601743074722245, 0, -70.35205161461398,\n            -0.231103377548616, -0.7501899197440212, 1.847597816108189, 0, 30.950940869491138,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Polaroid filter\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    polaroid(multiply) {\n        const matrix = [\n            1.438, -0.062, -0.062, 0, 0,\n            -0.122, 1.378, -0.122, 0, 0,\n            -0.016, -0.016, 1.483, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Filter who transforms : Red -> Blue and Blue -> Red\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    toBGR(multiply) {\n        const matrix = [\n            0, 0, 1, 0, 0,\n            0, 1, 0, 0, 0,\n            1, 0, 0, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Color reversal film introduced by Eastman Kodak in 1935. (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    kodachrome(multiply) {\n        const matrix = [\n            1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n            -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n            -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Brown delicious browni filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    browni(multiply) {\n        const matrix = [\n            0.5997023498159715, 0.34553243048391263, -0.2708298674538042, 0, 47.43192855600873,\n            -0.037703249837783157, 0.8609577587992641, 0.15059552388459913, 0, -36.96841498319127,\n            0.24113635128153335, -0.07441037908422492, 0.44972182064877153, 0, -7.562075277591283,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Vintage filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    vintage(multiply) {\n        const matrix = [\n            0.6279345635605994, 0.3202183420819367, -0.03965408211312453, 0, 9.651285835294123,\n            0.02578397704808868, 0.6441188644374771, 0.03259127616149294, 0, 7.462829176470591,\n            0.0466055556782719, -0.0851232987247891, 0.5241648018700465, 0, 5.159190588235296,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * We don't know exactly what it does, kind of gradient map, but funny to play with!\n     *\n     * @param {number} desaturation - Tone values.\n     * @param {number} toned - Tone values.\n     * @param {string} lightColor - Tone values, example: `0xFFE580`\n     * @param {string} darkColor - Tone values, example: `0xFFE580`\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    colorTone(desaturation, toned, lightColor, darkColor, multiply) {\n        desaturation = desaturation || 0.2;\n        toned = toned || 0.15;\n        lightColor = lightColor || 0xFFE580;\n        darkColor = darkColor || 0x338000;\n\n        const lR = ((lightColor >> 16) & 0xFF) / 255;\n        const lG = ((lightColor >> 8) & 0xFF) / 255;\n        const lB = (lightColor & 0xFF) / 255;\n\n        const dR = ((darkColor >> 16) & 0xFF) / 255;\n        const dG = ((darkColor >> 8) & 0xFF) / 255;\n        const dB = (darkColor & 0xFF) / 255;\n\n        const matrix = [\n            0.3, 0.59, 0.11, 0, 0,\n            lR, lG, lB, desaturation, 0,\n            dR, dG, dB, toned, 0,\n            lR - dR, lG - dG, lB - dB, 0, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Night effect\n     *\n     * @param {number} intensity - The intensity of the night effect.\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    night(intensity, multiply) {\n        intensity = intensity || 0.1;\n        const matrix = [\n            intensity * (-2.0), -intensity, 0, 0, 0,\n            -intensity, 0, intensity, 0, 0,\n            0, intensity, intensity * 2.0, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Predator effect\n     *\n     * Erase the current matrix by setting a new indepent one\n     *\n     * @param {number} amount - how much the predator feels his future victim\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    predator(amount, multiply) {\n        const matrix = [\n            // row 1\n            11.224130630493164 * amount,\n            -4.794486999511719 * amount,\n            -2.8746118545532227 * amount,\n            0 * amount,\n            0.40342438220977783 * amount,\n            // row 2\n            -3.6330697536468506 * amount,\n            9.193157196044922 * amount,\n            -2.951810836791992 * amount,\n            0 * amount,\n            -1.316135048866272 * amount,\n            // row 3\n            -3.2184197902679443 * amount,\n            -4.2375030517578125 * amount,\n            7.476448059082031 * amount,\n            0 * amount,\n            0.8044459223747253 * amount,\n            // row 4\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * LSD effect\n     *\n     * Multiply the current matrix\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n    lsd(multiply) {\n        const matrix = [\n            2, -0.4, 0.5, 0, 0,\n            -0.5, 2, -0.4, 0, 0,\n            -0.4, -0.5, 3, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, multiply);\n    }\n\n    /**\n     * Erase the current matrix by setting the default one\n     *\n     */\n    reset() {\n        const matrix = [\n            1, 0, 0, 0, 0,\n            0, 1, 0, 0, 0,\n            0, 0, 1, 0, 0,\n            0, 0, 0, 1, 0,\n        ];\n\n        this._loadMatrix(matrix, false);\n    }\n\n    /**\n     * The matrix of the color matrix filter\n     *\n     * @member {number[]}\n     * @default [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]\n     */\n    get matrix() {\n        return this.uniforms.m;\n    }\n\n    set matrix(value) // eslint-disable-line require-jsdoc\n    {\n        this.uniforms.m = value;\n    }\n\n    /**\n     * The opacity value to use when mixing the original and resultant colors.\n     *\n     * When the value is 0, the original color is used without modification.\n     * When the value is 1, the result color is used.\n     * When in the range (0, 1) the color is interpolated between the original and result by this amount.\n     *\n     * @member {number}\n     * @default 1\n     */\n    get alpha() {\n        return this.uniforms.uAlpha;\n    }\n\n    set alpha(value) // eslint-disable-line require-jsdoc\n    {\n        this.uniforms.uAlpha = value;\n    }\n}\n\n// Americanized alias\nColorMatrixFilter.prototype.grayscale = ColorMatrixFilter.prototype.greyscale;\n","\n\nimport Filter from '../Filter';\nimport { defaultVert } from '../defaultVerts';\n\nconst alphaFrag =\n    'precision mediump float;' +\n    'varying vec2 vTextureCoord;' +\n\n    'uniform sampler2D uSampler;' +\n    'uniform float uAlpha;' +\n\n    'void main(void){' +\n    'gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;' +\n    '}'\n/**\n * Simplest filter - applies alpha\n *\n * Use this instead of Container's alpha property to avoid visual layering of individual elements.\n * AlphaFilter applies alpha evenly across the entire display object and any opaque elements it contains.\n * If elements are not opaque, they will blend with each other anyway.\n *\n * Very handy if you want to use common features of all filters:\n *\n * 1. Assign a blendMode to this filter, blend all elements inside display object with background.\n *\n * 2. To use clipping in display coordinates, assign a filterArea to the same container that has this filter.\n *\n * @class\n * @extends Filter\n * @memberof filters\n */\nexport default class AlphaFilter extends Filter {\n    /**\n     * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\n     */\n    constructor(alpha: number = 1.0) {\n        super(defaultVert, alphaFrag);\n        this.alpha = alpha;\n        this.glShaderKey = 'alpha';\n    }\n\n    /**\n     * Coefficient for alpha multiplication\n     *\n     * @member {number}\n     * @default 1\n     */\n    get alpha() {\n        return this.uniforms.uAlpha;\n    }\n    set alpha(value: number) {\n        this.uniforms.uAlpha = value;\n    }\n}\n","import Filter from \"../Filter\";\nimport { Matrix } from \"../../math\";\nimport Sprite from \"../../display/Sprite\";\nimport TextureMatrix from \"../../texture/TextureMatrix\";\nimport FilterManager from \"../../renderers/managers/FilterManager\";\n\nconst spriteMaskFilterFrag =\n    \"precision mediump float;\" +//片元着色器用到浮点数必须设置精度\n    \"varying vec2 vMaskCoord;\" +\n    \"varying vec2 vTextureCoord;\" +\n\n    \"uniform sampler2D uSampler;\" +\n    \"uniform sampler2D mask;\" +\n    \"uniform float alpha;\" +\n    \"uniform vec4 maskClamp;\" +\n\n    \"void main(void){\" +\n    \"float clip = step(3.5,\" +\n    \"step(maskClamp.x, vMaskCoord.x) +\" +\n    \"step(maskClamp.y, vMaskCoord.y) +\" +\n    \"step(vMaskCoord.x, maskClamp.z) +\" +\n    \"step(vMaskCoord.y, maskClamp.w));\" +\n\n    \"vec4 original = texture2D(uSampler, vTextureCoord);\" +\n    \"vec4 masky = texture2D(mask, vMaskCoord);\" +\n\n    // \"original *= (masky.r * masky.a * alpha * clip);\" +\n    \"original *= (masky.a * alpha * clip);\" +//不管r分量，不晓得为啥干进来\n\n    \"gl_FragColor = original;\" +\n    \"}\";\nconst spriteMaskFilterVert =\n    \"attribute vec2 aVertexPosition;\" +\n    \"attribute vec2 aTextureCoord;\" +\n\n    \"uniform mat3 projectionMatrix;\" +\n    \"uniform mat3 otherMatrix;\" +\n\n    \"varying vec2 vMaskCoord;\" +\n    \"varying vec2 vTextureCoord;\" +\n\n    \"void main(void){\" +\n    \"gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\" +\n\n    \"vTextureCoord = aTextureCoord;\" +\n    \"vMaskCoord = ( otherMatrix * vec3( aTextureCoord, 1.0)  ).xy;\" +\n    \"}\";\n\n/**\n * The SpriteMaskFilter class\n *\n * @class\n * @extends Filter\n */\nexport default class SpriteMaskFilter extends Filter {\n    maskSprite: Sprite\n    maskMatrix: Matrix\n    /**\n     * @param {Sprite} sprite - the target sprite\n     */\n    constructor(sprite: Sprite) {\n        const maskMatrix = new Matrix();\n\n        super(\n            spriteMaskFilterVert,\n            spriteMaskFilterFrag\n        );\n\n        sprite.renderable = false;\n\n        this.maskSprite = sprite;\n        this.maskMatrix = maskMatrix;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {RenderTarget} input - The input render target.\n     * @param {RenderTarget} output - The target to output to.\n     */\n    apply(filterManager:FilterManager, input, output) {\n        const maskSprite = this.maskSprite;\n        const tex = this.maskSprite.texture;\n        //如果纹理没有，或者不可用\n        if (!tex || !tex.valid) return;\n\n        if (!tex.transform) {\n            // margin = 0.0, let it bleed a bit, shader code becomes easier\n            // assuming that atlas textures were made with 1-pixel padding\n            tex.transform = new TextureMatrix(tex, 0.0);\n        }\n        tex.transform.update();\n\n        this.uniforms.mask = tex;\n        this.uniforms.otherMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, maskSprite)\n            .prepend(tex.transform.mapCoord);\n        this.uniforms.alpha = maskSprite._worldAlpha;\n        this.uniforms.maskClamp = tex.transform.uClampFrame;\n\n        filterManager.applyFilter(this, input, output);\n    }\n}\n","import Filter from \"../Filter\";\r\nimport { defaultVert } from \"../defaultVerts\";\r\n\r\nconst blurFrag = [\r\n    \"precision mediump float;\",\r\n    \"varying vec2 vTextureCoord;\",\r\n    \"uniform sampler2D uSampler;\",\r\n    \"const float resolution=1024.0;\",\r\n    \"uniform float radius;\",//radius可为1.4\r\n    \"uniform vec2 dir;\",//若为x模糊，可传入（1.0,0.0）  y模糊  （0.0,1.0）\r\n\r\n    \"void main() {\",\r\n    //this will be our RGBA sum\r\n    \"vec4 sum = vec4(0.0);\",\r\n\r\n    //our original texcoord for this fragment\r\n    \"vec2 tc = vTextureCoord;\",\r\n\r\n    //the amount to blur, i.e. how far off center to sample from \r\n    //1.0 -> blur by one pixel\r\n    //2.0 -> blur by two pixels, etc.\r\n    \"float blur = radius/resolution;\",\r\n\r\n    //the direction of our blur\r\n    //(1.0, 0.0) -> x-axis blur\r\n    //(0.0, 1.0) -> y-axis blur\r\n    \"float hstep = dir.x;\",\r\n    \"float vstep = dir.y;\",\r\n\r\n\r\n    //apply blurring, using a 9-tap filter with predefined gaussian weights\r\n\r\n    \"sum += texture2D(uSampler, vec2(tc.x - 4.0*blur*hstep, tc.y - 4.0*blur*vstep)) * 0.0162162162;\",\r\n    \"sum += texture2D(uSampler, vec2(tc.x - 3.0*blur*hstep, tc.y - 3.0*blur*vstep)) * 0.0540540541;\",\r\n    \"sum += texture2D(uSampler, vec2(tc.x - 2.0*blur*hstep, tc.y - 2.0*blur*vstep)) * 0.1216216216;\",\r\n    \"sum += texture2D(uSampler, vec2(tc.x - 1.0*blur*hstep, tc.y - 1.0*blur*vstep)) * 0.1945945946;\",\r\n\r\n    \"sum += texture2D(uSampler, vec2(tc.x, tc.y)) * 0.2270270270;\",\r\n\r\n    \"sum += texture2D(uSampler, vec2(tc.x + 1.0*blur*hstep, tc.y + 1.0*blur*vstep)) * 0.1945945946;\",\r\n    \"sum += texture2D(uSampler, vec2(tc.x + 2.0*blur*hstep, tc.y + 2.0*blur*vstep)) * 0.1216216216;\",\r\n    \"sum += texture2D(uSampler, vec2(tc.x + 3.0*blur*hstep, tc.y + 3.0*blur*vstep)) * 0.0540540541;\",\r\n    \"sum += texture2D(uSampler, vec2(tc.x + 4.0*blur*hstep, tc.y + 4.0*blur*vstep)) * 0.0162162162;\",\r\n\r\n    \"vec4 cc= texture2D(uSampler,vTextureCoord );\",\r\n\r\n    //discard alpha for our simple demo, multiply by vertex color and return\r\n    \"gl_FragColor =vec4(sum.rgb, cc.a);\",\r\n    \"}\"\r\n].join(\"\\n\")\r\n\r\n//简单新能高点的模糊滤镜\r\nexport default class BlurFilterNew extends Filter {\r\n    private _blur: number;\r\n    get blur() {\r\n        return this._blur;\r\n    }\r\n    /**\r\n     * 系数0到1\r\n     */\r\n    set blur(value) {\r\n        if (this._blur === value) return;\r\n        if (value > 1) value = 1;\r\n        if (value < 0) value = 0;\r\n        this._blur = value\r\n        this.uniforms.radius = value * 10;\r\n    }\r\n    /**\r\n     * \r\n     * @param blur 模糊系数 0到1\r\n     */\r\n    constructor(blur: number = 0.5) {\r\n        super(defaultVert, blurFrag);\r\n        this.blur = blur;\r\n        //先固定吧\r\n        this.uniforms.dir = [1.0, 1.0];\r\n    }\r\n}","import { ExtractBrightnessFilter } from './ExtractBrightnessFilter';\nimport Filter from '../Filter';\nimport { defaultVert } from '../defaultVerts';\nimport { KawaseBlurFilter } from '../kawase-blur/KawaseBlurFilter';\nimport FilterManager from '../../renderers/managers/FilterManager';\n\nconst fragment = [\n    \"precision mediump float;\",\n    'uniform sampler2D uSampler;',\n    'varying vec2 vTextureCoord;',\n\n    'uniform sampler2D bloomTexture;',\n    'uniform float bloomScale;',\n    'uniform float brightness;',\n\n    'void main() {',\n    'vec4 color = texture2D(uSampler, vTextureCoord);',\n    'color.rgb *= brightness;',\n    'vec4 bloomColor = vec4(texture2D(bloomTexture, vTextureCoord).rgb, 0.0);',\n    'bloomColor.rgb *= bloomScale;',\n    'gl_FragColor = color + bloomColor;',\n    '}'\n].join(\"\\n\")\n\ninterface OptionsInt {\n    threshold?: number;\n    bloomScale?: number;\n    brightness?: number;\n    blur?: number;\n    quality?: number;\n    kernels?: number;\n    pixelSize?: number;\n    resolution?: number;\n}\n/**\n * The AdvancedBloomFilter applies a Bloom Effect to an object. Unlike the normal BloomFilter\n * this had some advanced controls for adjusting the look of the bloom. Note: this filter\n * is slower than normal BloomFilter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/advanced-bloom.png)\n *\n * @param {object|number} [options] - The optional parameters of advanced bloom filter.\n *                        When options is a number , it will be `options.threshold`.\n * @param {number} [options.threshold=0.5] - Defines how bright a color needs to be to affect bloom.\n * @param {number} [options.bloomScale=1.0] - To adjust the strength of the bloom. Higher values is more intense brightness.\n * @param {number} [options.brightness=1.0] - The brightness, lower value is more subtle brightness, higher value is blown-out.\n * @param {number} [options.blur=8] - Sets the strength of the Blur properties simultaneously\n * @param {number} [options.quality=4] - The quality of the Blur filter.\n * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n * @param {number|number[]|Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n * @param {number} [options.resolution=1] - The resolution of the Blur filter.\n */\nexport class AdvancedBloomFilter extends Filter {\n    private _extractFilter: ExtractBrightnessFilter\n    private _blurFilter: KawaseBlurFilter\n    bloomScale: number;\n    brightness: number;\n    private _resolution: number;\n    constructor(options?: OptionsInt) {\n\n        super(defaultVert, fragment);\n\n        if (typeof options === 'number') {\n            options = { threshold: options };\n        }\n\n        options = Object[\"assign\"]({\n            threshold: 0.5,\n            bloomScale: 1.0,\n            brightness: 1.0,\n            kernels: null,\n            blur: 8,\n            quality: 4,\n            pixelSize: 1,\n            resolution: 1,\n        }, options);\n\n        /**\n         * To adjust the strength of the bloom. Higher values is more intense brightness.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.bloomScale = options.bloomScale;\n\n        /**\n         * The brightness, lower value is more subtle brightness, higher value is blown-out.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.brightness = options.brightness;\n\n        const { kernels, blur, quality, pixelSize, resolution } = options;\n\n        this._extractFilter = new ExtractBrightnessFilter(options.threshold);\n        this._extractFilter.resolution = resolution;\n        this._blurFilter = kernels ?\n            new KawaseBlurFilter(kernels) :\n            new KawaseBlurFilter(blur, quality);\n        this.pixelSize = pixelSize;\n        this.resolution = resolution;\n    }\n\n    /**\n     * Override existing apply method in Filter\n     * @private\n     */\n    apply(filterManager: FilterManager, input, output, clear) {\n\n        const brightTarget = filterManager.getRenderTarget();\n\n        this._extractFilter.apply(filterManager, input, brightTarget, true);\n\n        const bloomTarget = filterManager.getRenderTarget();\n\n        this._blurFilter.apply(filterManager, brightTarget, bloomTarget, true);\n\n        this.uniforms.bloomScale = this.bloomScale;\n        this.uniforms.brightness = this.brightness;\n        this.uniforms.bloomTexture = bloomTarget;\n\n        filterManager.applyFilter(this, input, output, clear);\n\n        filterManager.returnRenderTarget(bloomTarget);\n        filterManager.returnRenderTarget(brightTarget);\n    }\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     */\n    get resolution() {\n        return this._resolution;\n    }\n    set resolution(value) {\n        this._resolution = value;\n\n        if (this._extractFilter) {\n            this._extractFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    }\n\n    /**\n     * Defines how bright a color needs to be to affect bloom.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    get threshold() {\n        return this._extractFilter.threshold;\n    }\n    set threshold(value) {\n        this._extractFilter.threshold = value;\n    }\n\n    /**\n     * Sets the kernels of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    get kernels() {\n        return this._blurFilter.kernels;\n    }\n    set kernels(value) {\n        this._blurFilter.kernels = value;\n    }\n\n    /**\n     * Sets the strength of the Blur properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this._blurFilter.blur;\n    }\n    set blur(value) {\n        this._blurFilter.blur = value;\n    }\n\n    /**\n     * Sets the quality of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    get quality() {\n        return this._blurFilter.quality;\n    }\n    set quality(value) {\n        this._blurFilter.quality = value;\n    }\n\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|Point}\n     * @default 1\n     */\n    get pixelSize() {\n        return this._blurFilter.pixelSize;\n    }\n    set pixelSize(value) {\n        this._blurFilter.pixelSize = value;\n    }\n}\n","import Filter from \"../Filter\";\nimport { defaultVert } from \"../defaultVerts\";\n\nconst extractBrightnessFrag = [\n    \"precision mediump float;\",\n    'uniform sampler2D uSampler;',\n    'varying vec2 vTextureCoord;',\n\n    'uniform float threshold;',\n\n    'void main() {',\n    'vec4 color = texture2D(uSampler, vTextureCoord);',\n\n    // A simple & fast algorithm for getting brightness.\n    // It's inaccuracy , but good enought for this feature.\n    'float _max = max(max(color.r, color.g), color.b);',\n    'float _min = min(min(color.r, color.g), color.b);',\n    'float brightness = (_max + _min) * 0.5;',\n\n    'if(brightness > threshold) {',\n    'gl_FragColor = color;',\n    '} else {',\n    'gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);',\n    '}',\n    '}'\n\n].join(\"\\n\")\n/**\n * Internal filter for AdvancedBloomFilter to get brightness.\n * @class\n * @private\n * @param {number} [threshold=0.5] Defines how bright a color needs to be extracted.\n */\nexport class ExtractBrightnessFilter extends Filter {\n\n    constructor(threshold = 0.5) {\n        super(defaultVert, extractBrightnessFrag);\n\n        this.threshold = threshold;\n    }\n\n    /**\n     * Defines how bright a color needs to be extracted.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    get threshold() {\n        return this.uniforms.threshold;\n    }\n    set threshold(value) {\n        this.uniforms.threshold = value;\n    }\n}\n\n","import Filter from \"../Filter\";\nimport { defaultVert } from \"../defaultVerts\";\nimport { Point } from \"../../math\";\nimport FilterManager from \"../../renderers/managers/FilterManager\";\nimport RenderTarget from \"../../renderers/renderTarget/RenderTarget\";\n\nconst fragmentClamp = [\n    \"precision mediump float;\",\n    'varying vec2 vTextureCoord;',\n    'uniform sampler2D uSampler;',\n\n    'uniform vec2 uOffset;',\n    'uniform vec4 filterClamp;',\n\n    'void main(void)',\n    '{',\n    'vec4 color = vec4(0.0);',\n\n    // Sample top left pixel\n    'color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));',\n\n    // Sample top right pixel\n    'color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));',\n\n    // Sample bottom right pixel\n    'color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));',\n\n    // Sample bottom left pixel\n    'color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));',\n\n    // Average\n    'color *= 0.25;',\n\n    'gl_FragColor = color;',\n    '}'\n\n].join(\"\\n\")\n\nconst fragment = [\n    \"precision mediump float;\",\n    'varying vec2 vTextureCoord;',\n    'uniform sampler2D uSampler;',\n\n    'uniform vec2 uOffset;',\n\n    'void main(void)',\n    '{',\n    'vec4 color = vec4(0.0);',\n\n    // Sample top left pixel\n    'color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));',\n\n    // Sample top right pixel\n    'color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));',\n\n    // Sample bottom right pixel\n    'color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));',\n\n    // Sample bottom left pixel\n    'color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));',\n\n    // Average\n    'color *= 0.25;',\n\n    'gl_FragColor = color;',\n    '}'\n].join(\"\\n\")\n\n/**\n * A much faster blur than Gaussian blur, but more complicated to use.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/kawase-blur.png)\n *\n * @see https://software.intel.com/en-us/blogs/2014/07/15/an-investigation-of-fast-real-time-gpu-based-image-blur-algorithms\n * \n * @param {number|number[]} [blur=4] - The blur of the filter. Should be greater than `0`. If\n *        value is an Array, setting kernels.\n * @param {number} [quality=3] - The quality of the filter. Should be an integer greater than `1`.\n * @param {boolean} [clamp=false] - Clamp edges, useful for removing dark edges\n *        from fullscreen filters or bleeding to the edge of filterArea.\n */\nexport class KawaseBlurFilter extends Filter {\n    private _pixelSize: Point;\n    private _clamp: boolean;\n    private _kernels: any;\n    private _blur: number;\n    private _quality: number;\n    constructor(blur = 4, quality = 3, clamp = false) {\n        super(defaultVert, clamp ? fragmentClamp : fragment);\n        this.uniforms.uOffset = new Float32Array(2);\n\n        this._pixelSize = new Point();\n        this.pixelSize = 1;\n        this._clamp = clamp;\n        this._kernels = null;\n\n        // if `blur` is array , as kernels\n        if (Array.isArray(blur)) {\n            this.kernels = blur;\n        }\n        else {\n            this._blur = blur;\n            this.quality = quality;\n        }\n    }\n\n    /**\n     * Overrides apply\n     * @private\n     */\n    apply(filterManager:FilterManager, input:RenderTarget, output:RenderTarget, clear) {\n        const uvX = this.pixelSize.x / input.size.width;\n        const uvY = this.pixelSize.y / input.size.height;\n        let offset;\n\n        if (this._quality === 1 || this._blur === 0) {\n            offset = this._kernels[0] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, input, output, clear);\n        }\n        else {\n            const renderTarget = filterManager.getRenderTarget();\n\n            let source = input;\n            let target = renderTarget;\n            let tmp;\n\n            const last = this._quality - 1;\n\n            for (let i = 0; i < last; i++) {\n                offset = this._kernels[i] + 0.5;\n                this.uniforms.uOffset[0] = offset * uvX;\n                this.uniforms.uOffset[1] = offset * uvY;\n                filterManager.applyFilter(this, source, target, true);\n\n                tmp = source;\n                source = target;\n                target = tmp;\n            }\n            offset = this._kernels[last] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, source, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    }\n\n    /**\n     * Auto generate kernels by blur & quality\n     * @private\n     */\n    _generateKernels() {\n        const blur = this._blur;\n        const quality = this._quality;\n        const kernels = [blur];\n\n        if (blur > 0) {\n            let k = blur;\n            const step = blur / quality;\n\n            for (let i = 1; i < quality; i++) {\n                k -= step;\n                kernels.push(k);\n            }\n        }\n\n        this._kernels = kernels;\n    }\n\n    /**\n     * The kernel size of the blur filter, for advanced usage.\n     *\n     * @member {number[]}\n     * @default [0]\n     */\n    get kernels() {\n        return this._kernels;\n    }\n    set kernels(value) {\n        if (Array.isArray(value) && value.length > 0) {\n            this._kernels = value;\n            this._quality = value.length;\n            this._blur = Math.max.apply(Math, value);\n        }\n        else {\n            // if value is invalid , set default value\n            this._kernels = [0];\n            this._quality = 1;\n        }\n    }\n\n    /**\n     * Get the if the filter is clampped.\n     *\n     * @readonly\n     * @member {boolean}\n     * @default false\n     */\n    get clamp() {\n        return this._clamp;\n    }\n\n    /**\n     * Sets the pixel size of the filter. Large size is blurrier. For advanced usage.\n     *\n     * @member {Point|number|number[]}\n     * @default [1, 1]\n     */\n    set pixelSize(value) {\n        if (typeof value === 'number') {\n            this._pixelSize.x = value;\n            this._pixelSize.y = value;\n        }\n        else if (Array.isArray(value)) {\n            this._pixelSize.x = value[0];\n            this._pixelSize.y = value[1];\n        }\n        else if (value instanceof Point) {\n            this._pixelSize.x = value.x;\n            this._pixelSize.y = value.y;\n        }\n        else {\n            // if value is invalid , set default value\n            this._pixelSize.x = 1;\n            this._pixelSize.y = 1;\n        }\n    }\n    get pixelSize():any {\n        return this._pixelSize;\n    }\n\n    /**\n     * The quality of the filter, integer greater than `1`.\n     *\n     * @member {number}\n     * @default 3\n     */\n    get quality() {\n        return this._quality;\n    }\n    set quality(value) {\n        this._quality = Math.max(1, Math.round(value));\n        this._generateKernels();\n    }\n\n    /**\n     * The amount of blur, value greater than `0`.\n     *\n     * @member {number}\n     * @default 4\n     */\n    get blur() {\n        return this._blur;\n    }\n    set blur(value) {\n        this._blur = value;\n        this._generateKernels();\n    }\n}\n\n\n","\nimport { WebglRenderer } from '../WebglRenderer';\nimport Graphics from '../../graphics/Graphics';\n\n/**\n * 管理模板缓存，主要用于遮罩\n * @class\n */\nexport default class StencilManager {\n    renderer: WebglRenderer\n    stencilMaskStack: Graphics[];\n    /**\n     * @param {WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer: WebglRenderer) {\n\n        this.renderer = renderer;\n        this.stencilMaskStack = null;\n    }\n\n    /**\n     * Changes the mask stack that is used by this manager.\n     *\n     * @param {Graphics[]} stencilMaskStack - The mask stack\n     */\n    setMaskStack(stencilMaskStack: Graphics[]) {\n        this.stencilMaskStack = stencilMaskStack;\n\n        const gl = this.renderer.gl;\n\n        if (stencilMaskStack.length === 0) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        else {\n            gl.enable(gl.STENCIL_TEST);\n        }\n    }\n\n    /**\n     * Applies the Mask and adds it to the current stencil stack. @alvin\n     *\n     * @param {Graphics} graphics - The mask\n     */\n    pushStencil(graphics: Graphics) {\n\n        this.renderer._activeRenderTarget.attachStencilBuffer();\n        const gl = this.renderer.gl;\n        const prevMaskCount = this.stencilMaskStack.length;\n\n        if (prevMaskCount === 0) {\n            gl.enable(gl.STENCIL_TEST);\n        }\n\n        this.stencilMaskStack.push(graphics);\n\n        // Increment the refference stencil value where the new mask overlaps with the old ones.\n        gl.colorMask(false, false, false, false);\n        gl.stencilFunc(gl.EQUAL, prevMaskCount, this._getBitwiseMask());\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n\n        graphics.renderable = true;\n        var tempAlpha = graphics._worldAlpha;//因为如果alpha为0，不会渲染，\n        graphics._worldAlpha = 1;\n        graphics.renderWebGL(this.renderer);\n        this.renderer.batchManager.flush();\n        graphics.renderable = false;\n        graphics._worldAlpha = tempAlpha;\n\n        this._useCurrent();\n    }\n\n    /**\n     * Removes the last mask from the stencil stack. @alvin\n     */\n    popStencil() {\n\n        const gl = this.renderer.gl;\n        const graphics = this.stencilMaskStack.pop();\n\n        if (this.stencilMaskStack.length === 0) {\n            // the stack is empty!\n            gl.disable(gl.STENCIL_TEST);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n            gl.clearStencil(0);\n        }\n        else {\n            // Decrement the refference stencil value where the popped mask overlaps with the other ones\n            gl.colorMask(false, false, false, false);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n\n            graphics.renderable = true;\n            var tempAlpha = graphics._worldAlpha;//因为如果alpha为0，不会渲染，\n            graphics._worldAlpha = 1;\n            graphics.renderWebGL(this.renderer);\n            this.renderer.batchManager.flush();\n            graphics.renderable = false;\n            graphics._worldAlpha = tempAlpha;\n            this._useCurrent();\n        }\n    }\n\n    /**\n     * Setup renderer to use the current stencil data.\n     */\n    private _useCurrent() {\n        const gl = this.renderer.gl;\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.EQUAL, this.stencilMaskStack.length, this._getBitwiseMask());\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    }\n\n    /**\n     * Fill 1s equal to the number of acitve stencil masks.\n     *\n     * @return {number} The bitwise mask.\n     */\n    _getBitwiseMask() {\n        return (1 << this.stencilMaskStack.length) - 1;\n    }\n\n    /**\n     * Destroys the mask stack.\n     *\n     */\n    destroy() {\n        this.renderer = null;\n\n        this.stencilMaskStack = null;\n    }\n}\n","import { Rectangle, Matrix } from \"../../math\";\r\nimport RenderTarget from \"../renderTarget/RenderTarget\";\r\nimport {Filter} from \"../../filter\";\r\nimport { WebglRenderer } from \"../WebglRenderer\";\r\nimport Quad from \"../webgl/Quad\";\r\nimport { DisplayObject } from \"../../display/DisplayObject\";\r\nimport { nextPow2 } from \"../../utils\";\r\nimport { GLShader } from \"../../../glCore\";\r\nimport * as filterTransforms from '../../filter/filterTransforms';\r\n\r\nclass FilterState {\r\n    renderTarget: RenderTarget;\r\n    target: any;\r\n    resolution: number;\r\n    sourceFrame: Rectangle;\r\n    destinationFrame: Rectangle;\r\n    filters: Filter[];\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        this.renderTarget = null;\r\n        this.target = null;\r\n        this.resolution = 1;\r\n\r\n        // those three objects are used only for root\r\n        // re-assigned for everything else\r\n        this.sourceFrame = new Rectangle();\r\n        this.destinationFrame = new Rectangle();\r\n        this.filters = [];\r\n    }\r\n\r\n    /**\r\n     * clears the state\r\n     */\r\n    clear() {\r\n        this.filters = null;\r\n        this.target = null;\r\n        this.renderTarget = null;\r\n    }\r\n}\r\n\r\nconst screenKey = 'screen';\r\n\r\nexport default class FilterManager {\r\n    gl: WebGLRenderingContext;\r\n    renderer: WebglRenderer;\r\n    quad: Quad;\r\n    shaderCache: any;\r\n    pool: any;\r\n    filterData: any;\r\n    managedFilters: Filter[];\r\n    _screenWidth: number;\r\n    _screenHeight: number;\r\n    /**\r\n     * @param {WebGLRenderer} renderer - The renderer this manager works for.\r\n     */\r\n    constructor(renderer: WebglRenderer) {\r\n        this.renderer = renderer;\r\n        this.gl = this.renderer.gl;\r\n        // know about sprites!\r\n        this.quad = new Quad(this.gl, renderer.state.attribState);\r\n\r\n        this.shaderCache = {};\r\n        // todo add default!\r\n        this.pool = {};\r\n\r\n        this.filterData = null;\r\n\r\n        this.managedFilters = [];\r\n\r\n        this.renderer.addEventListener('onPreRender', this.onPreRender, this);\r\n\r\n        this._screenWidth = renderer.width;\r\n        this._screenHeight = renderer.height;\r\n    }\r\n\r\n    /**\r\n     * Adds a new filter to the manager.\r\n     *\r\n     * @param {DisplayObject} target - The target of the filter to render.\r\n     * @param {Filter[]} filters - The filters to apply.\r\n     */\r\n    pushFilter(target: DisplayObject, filters: Filter[]) {\r\n        const renderer = this.renderer;\r\n\r\n        let filterData = this.filterData;\r\n\r\n        if (!filterData) {\r\n\r\n            // add new stack\r\n            const filterState = new FilterState();\r\n\r\n            filterState.sourceFrame = filterState.destinationFrame = this.renderer._activeRenderTarget.size;\r\n            filterState.renderTarget = renderer._activeRenderTarget;\r\n\r\n            this.renderer._activeRenderTarget.filterData = filterData = {\r\n                index: 0,\r\n                stack: [filterState],\r\n            };\r\n\r\n            this.filterData = filterData;\r\n        }\r\n\r\n        // get the current filter state..\r\n        let currentState = filterData.stack[++filterData.index];\r\n        const renderTargetFrame = filterData.stack[0].destinationFrame;\r\n\r\n        if (!currentState) {\r\n            currentState = filterData.stack[filterData.index] = new FilterState();\r\n        }\r\n\r\n        // const fullScreen = target.filterArea\r\n        //     && target.filterArea.x === 0\r\n        //     && target.filterArea.y === 0\r\n        //     && target.filterArea.width === renderer.screen.width\r\n        //     && target.filterArea.height === renderer.screen.height;\r\n\r\n        // for now we go off the filter of the first resolution..\r\n        const resolution = filters[0].resolution;\r\n        const padding = filters[0].padding | 0;\r\n        const targetBounds = /*fullScreen ? renderer.screen : (*/target.filterArea || target.getBounds(true)/*)*/;\r\n        const sourceFrame:Rectangle = currentState.sourceFrame;\r\n        const destinationFrame = currentState.destinationFrame;\r\n\r\n        sourceFrame.x = ((targetBounds.x * resolution) | 0) / resolution;\r\n        sourceFrame.y = ((targetBounds.y * resolution) | 0) / resolution;\r\n        sourceFrame.width = ((targetBounds.width * resolution) | 0) / resolution;\r\n        sourceFrame.height = ((targetBounds.height * resolution) | 0) / resolution;\r\n\r\n        // if (!fullScreen) {\r\n        if (filterData.stack[0].renderTarget.transform) { //\r\n\r\n            // TODO we should fit the rect around the transform..\r\n        }\r\n        else if (filters[0].autoFit) {\r\n            sourceFrame.fit(renderTargetFrame);\r\n        }\r\n\r\n        // lets apply the padding After we fit the element to the screen.\r\n        // this should stop the strange side effects that can occur when cropping to the edges\r\n        sourceFrame.pad(padding);\r\n        // }\r\n\r\n        destinationFrame.width = sourceFrame.width;\r\n        destinationFrame.height = sourceFrame.height;\r\n\r\n        // lets play the padding after we fit the element to the screen.\r\n        // this should stop the strange side effects that can occur when cropping to the edges\r\n\r\n        const renderTarget = this.getPotRenderTarget(renderer.gl, sourceFrame.width, sourceFrame.height, resolution);\r\n\r\n        currentState.target = target;\r\n        currentState.filters = filters;\r\n        currentState.resolution = resolution;\r\n        currentState.renderTarget = renderTarget;\r\n\r\n        // bind the render target to draw the shape in the top corner..\r\n\r\n        renderTarget.setFrame(destinationFrame, sourceFrame);\r\n\r\n        // bind the render target\r\n        renderer.bindRenderTarget(renderTarget);\r\n        renderTarget.clear();\r\n    }\r\n\r\n    /**\r\n     * Pops off the filter and applies it.\r\n     *\r\n     */\r\n    popFilter() {\r\n        const filterData = this.filterData;\r\n\r\n        const lastState = filterData.stack[filterData.index - 1];\r\n        const currentState = filterData.stack[filterData.index];\r\n\r\n        this.quad.map(currentState.renderTarget.size, currentState.sourceFrame).upload();\r\n\r\n        const filters = currentState.filters;\r\n\r\n        if (filters.length === 1) {\r\n            filters[0].apply(this, currentState.renderTarget, lastState.renderTarget, false, currentState);\r\n            this.freePotRenderTarget(currentState.renderTarget);\r\n        }\r\n        else {\r\n            let flip = currentState.renderTarget;\r\n            let flop = this.getPotRenderTarget(\r\n                this.renderer.gl,\r\n                currentState.sourceFrame.width,\r\n                currentState.sourceFrame.height,\r\n                currentState.resolution\r\n            );\r\n\r\n            flop.setFrame(currentState.destinationFrame, currentState.sourceFrame);\r\n\r\n            // finally lets clear the render target before drawing to it..\r\n            flop.clear();\r\n\r\n            let i = 0;\r\n\r\n            for (i = 0; i < filters.length - 1; ++i) {\r\n                filters[i].apply(this, flip, flop, true, currentState);\r\n\r\n                const t = flip;\r\n\r\n                flip = flop;\r\n                flop = t;\r\n            }\r\n\r\n            filters[i].apply(this, flip, lastState.renderTarget, false, currentState);\r\n\r\n            this.freePotRenderTarget(flip);\r\n            this.freePotRenderTarget(flop);\r\n        }\r\n\r\n        currentState.clear();\r\n        filterData.index--;\r\n\r\n        if (filterData.index === 0) {\r\n            this.filterData = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws a filter.\r\n     *\r\n     * @param {Filter} filter - The filter to draw.\r\n     * @param {RenderTarget} input - The input render target.\r\n     * @param {RenderTarget} output - The target to output to.\r\n     * @param {boolean} clear - Should the output be cleared before rendering to it\r\n     */\r\n    applyFilter(filter: Filter, input: RenderTarget, output: RenderTarget, clear?: boolean) {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n\r\n        let shader = filter.glShaders[renderer.CONTEXT_UID];\r\n\r\n        // cacheing..\r\n        if (!shader) {\r\n            if (filter.glShaderKey) {\r\n                shader = this.shaderCache[filter.glShaderKey];\r\n\r\n                if (!shader) {\r\n                    shader = new GLShader(this.gl, filter.vertexSrc, filter.fragmentSrc);\r\n\r\n                    filter.glShaders[renderer.CONTEXT_UID] = this.shaderCache[filter.glShaderKey] = shader;\r\n                    this.managedFilters.push(filter);\r\n                }\r\n            }\r\n            else {\r\n                shader = filter.glShaders[renderer.CONTEXT_UID] = new GLShader(this.gl, filter.vertexSrc, filter.fragmentSrc);\r\n                this.managedFilters.push(filter);\r\n            }\r\n\r\n            // TODO - this only needs to be done once?\r\n            renderer.bindVao(null);\r\n\r\n            this.quad.initVao(shader);\r\n        }\r\n\r\n        renderer.bindVao(this.quad.vao);\r\n\r\n        renderer.bindRenderTarget(output);\r\n\r\n        if (clear) {\r\n            gl.disable(gl.SCISSOR_TEST);\r\n            renderer.clear();// [1, 1, 1, 1]);\r\n            gl.enable(gl.SCISSOR_TEST);\r\n        }\r\n\r\n        // in case the render target is being masked using a scissor rect\r\n        if (output === renderer.maskManager.scissorRenderTarget) {\r\n            renderer.maskManager.pushScissorMask(null, renderer.maskManager.scissorData);\r\n        }\r\n\r\n        renderer.bindShader(shader);\r\n\r\n        // free unit 0 for us, doesn't matter what was there\r\n        // don't try to restore it, because syncUniforms can upload it to another slot\r\n        // and it'll be a problem\r\n        const tex = this.renderer.textureManager.emptyTextures[0];\r\n\r\n        this.renderer.textureManager.boundTextures[0] = tex;\r\n        // this syncs the filters  uniforms with glsl uniforms\r\n        this.syncUniforms(shader, filter);\r\n\r\n        renderer.state.setBlendMode(filter.blendMode);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, input.texture.texture);\r\n\r\n        this.quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\r\n\r\n        //确保会重新active\r\n        this.renderer.textureManager.currentLocation = -1\r\n    }\r\n\r\n    /**\r\n     * Uploads the uniforms of the filter.\r\n     *\r\n     * @param {GLShader} shader - The underlying gl shader.\r\n     * @param {Filter} filter - The filter we are synchronizing.\r\n     */\r\n    syncUniforms(shader: GLShader, filter: Filter) {\r\n        const uniformData = filter.uniformData;\r\n        const uniforms = filter.uniforms;\r\n\r\n        // 0 is reserved for the texture so we start at 1!\r\n        let textureCount = 1;\r\n        let currentState;\r\n\r\n        // filterArea and filterClamp that are handled by FilterManager directly\r\n        // they must not appear in uniformData\r\n\r\n        if (shader.uniforms.filterArea) {\r\n            currentState = this.filterData.stack[this.filterData.index];\r\n\r\n            const filterArea = shader.uniforms.filterArea;\r\n\r\n            filterArea[0] = currentState.renderTarget.size.width;\r\n            filterArea[1] = currentState.renderTarget.size.height;\r\n            filterArea[2] = currentState.sourceFrame.x;\r\n            filterArea[3] = currentState.sourceFrame.y;\r\n\r\n            shader.uniforms.filterArea = filterArea;\r\n        }\r\n\r\n        // use this to clamp displaced texture coords so they belong to filterArea\r\n        // see displacementFilter fragment shader for an example\r\n        if (shader.uniforms.filterClamp) {\r\n            currentState = currentState || this.filterData.stack[this.filterData.index];\r\n\r\n            const filterClamp = shader.uniforms.filterClamp;\r\n\r\n            filterClamp[0] = 0;\r\n            filterClamp[1] = 0;\r\n            filterClamp[2] = (currentState.sourceFrame.width - 1) / currentState.renderTarget.size.width;\r\n            filterClamp[3] = (currentState.sourceFrame.height - 1) / currentState.renderTarget.size.height;\r\n\r\n            shader.uniforms.filterClamp = filterClamp;\r\n        }\r\n\r\n        // TODO Cacheing layer..每次运行都要重新赋值uniform，考虑加判断\r\n        for (const i in uniformData) {\r\n            const type = uniformData[i].type;\r\n\r\n            if (type === 'sampler2d' && uniforms[i] !== 0) {\r\n                if (uniforms[i].baseTexture) {\r\n                    shader.uniforms[i] = this.renderer.textureManager.bindTexture(uniforms[i].baseTexture, textureCount);\r\n                }\r\n                else {\r\n                    shader.uniforms[i] = textureCount;\r\n\r\n                    // TODO\r\n                    // this is helpful as renderTargets can also be set.\r\n                    // Although thinking about it, we could probably\r\n                    // make the filter texture cache return a RenderTexture\r\n                    // rather than a renderTarget\r\n                    const gl = this.renderer.gl;\r\n\r\n                    this.renderer.textureManager.boundTextures[textureCount] = this.renderer.textureManager.emptyTextures[textureCount];\r\n                    gl.activeTexture(gl.TEXTURE0 + textureCount);\r\n\r\n                    uniforms[i].texture.bind();\r\n                }\r\n\r\n                textureCount++;\r\n            }\r\n            else if (type === 'mat3') {\r\n                // check if its matrix..\r\n                if (uniforms[i].a !== undefined) {\r\n                    shader.uniforms[i] = uniforms[i].toArray(true);\r\n                }\r\n                else {\r\n                    shader.uniforms[i] = uniforms[i];\r\n                }\r\n            }\r\n            else if (type === 'vec2') {\r\n                // check if its a point..\r\n                if (uniforms[i].x !== undefined) {\r\n                    const val = shader.uniforms[i] || new Float32Array(2);\r\n\r\n                    val[0] = uniforms[i].x;\r\n                    val[1] = uniforms[i].y;\r\n                    shader.uniforms[i] = val;\r\n                }\r\n                else {\r\n                    shader.uniforms[i] = uniforms[i];\r\n                }\r\n            }\r\n            else if (type === 'float') {\r\n                if (shader.uniforms.data[i].value !== uniformData[i]) {\r\n                    shader.uniforms[i] = uniforms[i];\r\n                }\r\n            }\r\n            else {\r\n                shader.uniforms[i] = uniforms[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a render target from the pool, or creates a new one.\r\n     *\r\n     * @param {boolean} clear - Should we clear the render texture when we get it?\r\n     * @param {number} resolution - The resolution of the target.\r\n     * @return {RenderTarget} The new render target\r\n     */\r\n    getRenderTarget(clear?: boolean, resolution?: number): RenderTarget {\r\n        const currentState = this.filterData.stack[this.filterData.index];\r\n        const renderTarget = this.getPotRenderTarget(\r\n            this.renderer.gl,\r\n            currentState.sourceFrame.width,\r\n            currentState.sourceFrame.height,\r\n            resolution || currentState.resolution\r\n        );\r\n\r\n        renderTarget.setFrame(currentState.destinationFrame, currentState.sourceFrame);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    /**\r\n     * Returns a render target to the pool.\r\n     *\r\n     * @param {RenderTarget} renderTarget - The render target to return.\r\n     */\r\n    returnRenderTarget(renderTarget: RenderTarget) {\r\n        this.freePotRenderTarget(renderTarget);\r\n    }\r\n\r\n    /**\r\n     * Calculates the mapped matrix.\r\n     *\r\n     * TODO playing around here.. this is temporary - (will end up in the shader)\r\n     * this returns a matrix that will normalise map filter cords in the filter to screen space\r\n     *\r\n     * @param {Matrix} outputMatrix - the matrix to output to.\r\n     * @return {Matrix} The mapped matrix.\r\n     */\r\n    calculateScreenSpaceMatrix(outputMatrix: Matrix): Matrix {\r\n        const currentState = this.filterData.stack[this.filterData.index];\r\n\r\n        return filterTransforms.calculateScreenSpaceMatrix(\r\n            outputMatrix,\r\n            currentState.sourceFrame,\r\n            currentState.renderTarget.size\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Multiply vTextureCoord to this matrix to achieve (0,0,1,1) for filterArea\r\n     *\r\n     * @param {Matrix} outputMatrix - The matrix to output to.\r\n     * @return {Matrix} The mapped matrix.\r\n     */\r\n    calculateNormalizedScreenSpaceMatrix(outputMatrix) {\r\n        const currentState = this.filterData.stack[this.filterData.index];\r\n\r\n        return filterTransforms.calculateNormalizedScreenSpaceMatrix(\r\n            outputMatrix,\r\n            currentState.sourceFrame,\r\n            currentState.renderTarget.size\r\n        );\r\n    }\r\n\r\n    /**\r\n     * This will map the filter coord so that a texture can be used based on the transform of a sprite\r\n     *\r\n     * @param {Matrix} outputMatrix - The matrix to output to.\r\n     * @param {Sprite} sprite - The sprite to map to.\r\n     * @return {Matrix} The mapped matrix.\r\n     */\r\n    calculateSpriteMatrix(outputMatrix, sprite):Matrix {\r\n        const currentState = this.filterData.stack[this.filterData.index];\r\n\r\n        return filterTransforms.calculateSpriteMatrix(\r\n            outputMatrix,\r\n            currentState.sourceFrame,\r\n            currentState.renderTarget.size,\r\n            sprite\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Destroys this Filter Manager.\r\n     *\r\n     * @param {boolean} [contextLost=false] context was lost, do not free shaders\r\n     *\r\n     */\r\n    destroy(contextLost = false) {\r\n        const renderer = this.renderer;\r\n        const filters = this.managedFilters;\r\n\r\n        renderer.removeEventListener('onPreRender', this.onPreRender, this);\r\n        this.renderer = null;\r\n        for (let i = 0; i < filters.length; i++) {\r\n            if (!contextLost) {\r\n                filters[i].glShaders[renderer.CONTEXT_UID].destroy();\r\n            }\r\n            delete filters[i].glShaders[renderer.CONTEXT_UID];\r\n        }\r\n\r\n        this.shaderCache = {};\r\n        if (!contextLost) {\r\n            this.emptyPool();\r\n        }\r\n        else {\r\n            this.pool = {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a Power-of-Two render texture.\r\n     *\r\n     * TODO move to a seperate class could be on renderer?\r\n     * also - could cause issue with multiple contexts?\r\n     *\r\n     * @private\r\n     * @param {WebGLRenderingContext} gl - The webgl rendering context\r\n     * @param {number} minWidth - The minimum width of the render target.\r\n     * @param {number} minHeight - The minimum height of the render target.\r\n     * @param {number} resolution - The resolution of the render target.\r\n     * @return {RenderTarget} The new render target.\r\n     */\r\n    getPotRenderTarget(gl, minWidth, minHeight, resolution): RenderTarget {\r\n        let key: any = screenKey;\r\n\r\n        minWidth *= resolution;\r\n        minHeight *= resolution;\r\n\r\n        if (minWidth !== this._screenWidth\r\n            || minHeight !== this._screenHeight) {\r\n            // TODO you could return a bigger texture if there is not one in the pool?\r\n            minWidth = nextPow2(minWidth);\r\n            minHeight = nextPow2(minHeight);\r\n            key = ((minWidth & 0xFFFF) << 16) | (minHeight & 0xFFFF);\r\n        }\r\n\r\n        if (!this.pool[key]) {\r\n            this.pool[key] = [];\r\n        }\r\n\r\n        let renderTarget = this.pool[key].pop();\r\n\r\n        // creating render target will cause texture to be bound!\r\n        if (!renderTarget) {\r\n            // temporary bypass cache..\r\n            const tex = this.renderer.textureManager.boundTextures[0];\r\n\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            // internally - this will cause a texture to be bound..\r\n            renderTarget = new RenderTarget(gl, minWidth, minHeight, undefined);\r\n\r\n            // set the current one back\r\n            gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\r\n            //确保会重新active\r\n            this.renderer.textureManager.currentLocation = -1\r\n        }\r\n\r\n        // manually tweak the resolution...\r\n        // this will not modify the size of the frame buffer, just its resolution.\r\n        renderTarget.resolution = resolution;\r\n        renderTarget.defaultFrame.width = renderTarget.size.width = minWidth / resolution;\r\n        renderTarget.defaultFrame.height = renderTarget.size.height = minHeight / resolution;\r\n        renderTarget.filterPoolKey = key;\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    /**\r\n     * Empties the texture pool.\r\n     *\r\n     */\r\n    emptyPool() {\r\n        for (const i in this.pool) {\r\n            const textures = this.pool[i];\r\n\r\n            if (textures) {\r\n                for (let j = 0; j < textures.length; j++) {\r\n                    textures[j].destroy(true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.pool = {};\r\n    }\r\n\r\n    /**\r\n     * Frees a render target back into the pool.\r\n     *\r\n     * @param {RenderTarget} renderTarget - The renderTarget to free\r\n     */\r\n    freePotRenderTarget(renderTarget) {\r\n        this.pool[renderTarget.filterPoolKey].push(renderTarget);\r\n    }\r\n\r\n    /**\r\n     * Called before the renderer starts rendering.\r\n     *\r\n     */\r\n    onPreRender() {\r\n        // if (this._screenWidth !== this.renderer.htmlElement.width\r\n        //     || this._screenHeight !== this.renderer.htmlElement.height) {\r\n        //     this._screenWidth = this.renderer.htmlElement.width;\r\n        //     this._screenHeight = this.renderer.htmlElement.height;\r\n        if (this._screenWidth !== this.renderer.width\r\n            || this._screenHeight !== this.renderer.height) {\r\n            this._screenWidth = this.renderer.width;\r\n            this._screenHeight = this.renderer.height;\r\n            const textures = this.pool[screenKey];\r\n\r\n            if (textures) {\r\n                for (let j = 0; j < textures.length; j++) {\r\n                    textures[j].destroy(true);\r\n                }\r\n            }\r\n            this.pool[screenKey] = [];\r\n        }\r\n    }\r\n}\r\n","import { createIndicesForQuads } from \"./createIndicesForQuads\";\nimport { GLBuffer, VertexArrayObject, GLShader } from \"../../../glCore\";\nimport { Rectangle } from \"../../math\";\n\n\n\n/**\n * webgl矩形数据\n * 外部基本不使用，不继承HashObject\n */\nexport default class Quad {\n    /**\n     * 当前gl上下文\n     */\n    gl: WebGLRenderingContext;\n    /**\n     * 顶点数据\n     */\n    vertices: Float32Array;\n    /**\n     * uv数据\n     */\n    uvs: Float32Array;\n    /**\n     * 顶点和uv干一起\n     */\n    interleaved: Float32Array;\n    /**\n     * 索引数据\n     */\n    indices: Uint16Array;\n\n    vertexBuffer: GLBuffer;\n    indexBuffer: GLBuffer;\n    vao: VertexArrayObject;\n    /**\n     * @param {WebGLRenderingContext} gl - The gl context for this quad to use.\n     * @param {object} state - TODO: Description\n     */\n    constructor(gl: WebGLRenderingContext, state: any) {\n        this.gl = gl;\n        this.vertices = new Float32Array([\n            -1, -1,\n            1, -1,\n            1, 1,\n            -1, 1,\n        ]);\n        this.uvs = new Float32Array([\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n        ]);\n\n        this.interleaved = new Float32Array(8 * 2);\n\n        for (let i = 0; i < 4; i++) {\n            this.interleaved[i * 4] = this.vertices[(i * 2)];\n            this.interleaved[(i * 4) + 1] = this.vertices[(i * 2) + 1];\n            this.interleaved[(i * 4) + 2] = this.uvs[i * 2];\n            this.interleaved[(i * 4) + 3] = this.uvs[(i * 2) + 1];\n        }\n\n        this.indices = createIndicesForQuads(1);\n\n        this.vertexBuffer = GLBuffer.createVertexBuffer(gl, this.interleaved, gl.STATIC_DRAW);\n\n        this.indexBuffer = GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        this.vao = new VertexArrayObject(gl, state);\n    }\n\n    /**\n     * 用shader初始化vao\n     */\n    initVao(shader: GLShader) {\n        this.vao.clear()\n            .addIndex(this.indexBuffer)\n            .addAttribute(this.vertexBuffer, shader.attributes.aVertexPosition, this.gl.FLOAT, false, 4 * 4, 0)\n            .addAttribute(this.vertexBuffer, shader.attributes.aTextureCoord, this.gl.FLOAT, false, 4 * 4, 2 * 4);\n    }\n\n    /**\n     * Maps two Rectangle to the quad.\n     * @param {Rectangle} targetTextureFrame - the first rectangle\n     * @param {Rectangle} destinationFrame - the second rectangle\n     * @return {Quad} Returns itself.\n     */\n    map(targetTextureFrame: Rectangle, destinationFrame: Rectangle): Quad {\n        let x = 0; // destinationFrame.x / targetTextureFrame.width;\n        let y = 0; // destinationFrame.y / targetTextureFrame.height;\n\n        this.uvs[0] = x;\n        this.uvs[1] = y;\n\n        this.uvs[2] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[3] = y;\n\n        this.uvs[4] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[5] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        this.uvs[6] = x;\n        this.uvs[7] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        x = destinationFrame.x;\n        y = destinationFrame.y;\n\n        this.vertices[0] = x;\n        this.vertices[1] = y;\n\n        this.vertices[2] = x + destinationFrame.width;\n        this.vertices[3] = y;\n\n        this.vertices[4] = x + destinationFrame.width;\n        this.vertices[5] = y + destinationFrame.height;\n\n        this.vertices[6] = x;\n        this.vertices[7] = y + destinationFrame.height;\n\n        return this;\n    }\n\n    /**\n     * 上传绑定数据\n     * @return {Quad} Returns itself.\n     */\n    upload(): Quad {\n        for (let i = 0; i < 4; i++) {\n            this.interleaved[i * 4] = this.vertices[(i * 2)];\n            this.interleaved[(i * 4) + 1] = this.vertices[(i * 2) + 1];\n            this.interleaved[(i * 4) + 2] = this.uvs[i * 2];\n            this.interleaved[(i * 4) + 3] = this.uvs[(i * 2) + 1];\n        }\n\n        this.vertexBuffer.upload(this.interleaved);\n\n        return this;\n    }\n\n    destroy() {\n        const gl = this.gl;\n\n        gl.deleteBuffer(this.vertexBuffer);\n        gl.deleteBuffer(this.indexBuffer);\n\n        this.gl = null;\n        this.vertices = null;\n        this.uvs = null;\n        this.interleaved = null;\n        this.indices = null;\n\n        this.vertexBuffer.destroy();\n        this.indexBuffer.destroy();\n        this.vao.destroy();\n    }\n}\n","/**\r\n * Generic Mask Stack data structure\r\n * 根据图片数量创建索引数组 ，暂时不用了\r\n * 0....1\r\n * . .  .\r\n * .  . .\r\n * 3....2   \r\n * @function createIndicesForQuads\r\n * @private\r\n * @param {number} size - Number of quads\r\n * @return {Uint16Array} indices\r\n */\r\nexport function createIndicesForQuads(size: number): Uint16Array {\r\n    // the total number of indices in our array, there are 6 points per quad.\r\n\r\n    const totalIndices = size * 6;\r\n\r\n    const indices = new Uint16Array(totalIndices);\r\n\r\n    // fill the indices with the quads to draw\r\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\r\n        indices[i + 0] = j + 0;\r\n        indices[i + 1] = j + 1;\r\n        indices[i + 2] = j + 2;\r\n        indices[i + 3] = j + 0;\r\n        indices[i + 4] = j + 2;\r\n        indices[i + 5] = j + 3;\r\n    }\r\n\r\n    return indices;\r\n}\r\n","import { Matrix } from \"../math\";\nimport Sprite from \"../display/Sprite\";\n\n/**\n * Calculates the mapped matrix\n * @param filterArea {Rectangle} The filter area\n * @param sprite {Sprite} the target sprite\n * @param outputMatrix {Matrix} @alvin\n * @private\n */\n// TODO playing around here.. this is temporary - (will end up in the shader)\n// this returns a matrix that will normalise map filter cords in the filter to screen space\nexport function calculateScreenSpaceMatrix(outputMatrix, filterArea, textureSize) {\n    // let worldTransform = sprite.worldTransform.copy(Matrix.TEMP_MATRIX),\n    // let texture = {width:1136, height:700};//sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    const mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(textureSize.width, textureSize.height);\n\n    return mappedMatrix;\n}\n\nexport function calculateNormalizedScreenSpaceMatrix(outputMatrix, filterArea, textureSize) {\n    const mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    const translateScaleX = (textureSize.width / filterArea.width);\n    const translateScaleY = (textureSize.height / filterArea.height);\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    return mappedMatrix;\n}\n\n// this will map the filter coord so that a texture can be used based on the transform of a sprite\nexport function calculateSpriteMatrix(outputMatrix, filterArea, textureSize, sprite: Sprite): Matrix {\n    const orig = sprite._texture.orig;\n    const mappedMatrix: Matrix = outputMatrix.set(textureSize.width, 0, 0, textureSize.height, filterArea.x, filterArea.y);\n    const worldTransform = Matrix.TEMP_MATRIX.copy(sprite.worldMatrix) //sprite.worldMatrix.copy(Matrix.TEMP_MATRIX);\n\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n    mappedMatrix.scale(1.0 / orig.width, 1.0 / orig.height);\n    mappedMatrix.translate(sprite.anchorTexture.x, sprite.anchorTexture.y);\n\n    return mappedMatrix;\n}\n","import { EventDispatcher } from \"./EventDispatcher\";\r\n\r\n/**\r\n * 全局事件派发器\r\n */\r\nexport const GDispatcher: EventDispatcher = new EventDispatcher()\r\n\r\n//下面这个用习惯了，但是为了统一，还是改吧，engine和fyge里都没改，用着呢有地方\r\n// export class GDispatcher {\r\n//     /**\r\n//      * 事件回调池\r\n//      */\r\n//     private static callbackPool: any = {};\r\n\r\n//     /**\r\n//      * 事件作用域池\r\n//      */\r\n//     private static thisObjPool: any = {};\r\n\r\n//     /**\r\n//      * \r\n//      * @param name 事件名\r\n//      * @param callback 回调\r\n//      * @param thisObj 作用域\r\n//      */\r\n//     public static addEvent(name: string, callback, thisObj?: any): void {\r\n//         if (!this.callbackPool[name]) {\r\n//             this.callbackPool[name] = [];\r\n//             this.thisObjPool[name] = [];\r\n//         }\r\n\r\n//         const index: number = this.callbackPool[name].indexOf(callback);\r\n//         if (index != -1) {\r\n//             this.callbackPool[name][index] = callback;\r\n//             this.thisObjPool[name][index] = thisObj;\r\n//         } else {\r\n//             this.callbackPool[name].push(callback);\r\n//             this.thisObjPool[name].push(thisObj);\r\n//         }\r\n//     }\r\n\r\n//     /**\r\n//      * \r\n//      * @param name 事件名\r\n//      * @param callback 回调\r\n//      * @param thisObj 作用域\r\n//      */\r\n//     public static removeEvent(name: string, callback, thisObj?: any): void {\r\n//         if (this.callbackPool[name]) {\r\n//             var len = this.callbackPool[name].length;\r\n//             for (let i = len - 1; i >= 0; i--) {\r\n//                 if (this.callbackPool[name][i] === callback && this.thisObjPool[name][i] == thisObj) {\r\n//                     this.callbackPool[name].splice(i, 1);\r\n//                     this.thisObjPool[name].splice(i, 1);\r\n//                 }\r\n//             }\r\n//             // const index: number = this.callbackPool[name].indexOf(callback);\r\n//             // if (index != -1) {\r\n//             //     this.callbackPool[name].splice(index, 1);\r\n//             //     this.thisObjPool[name].splice(index, 1);\r\n//             // }\r\n//         }\r\n//     }\r\n\r\n//     /**\r\n//      * 派发事件\r\n//      * @param name 事件名\r\n//      * @param args 任意参数\r\n//      */\r\n//     public static dispatchEvent(name: string, ...args): void {\r\n//         const callbacks: Function[] = this.callbackPool[name];\r\n//         const thisObjs: any = this.thisObjPool[name];\r\n//         if (callbacks) {\r\n//             let i = 0;\r\n//             const len: number = callbacks.length;\r\n//             for (i; i < len; i++) {\r\n//                 callbacks[i].apply(thisObjs[i], args);\r\n//             }\r\n//         }\r\n//     }\r\n// }","import Circle from \"./shapes/Circle\";\nimport { Rectangle, Matrix } from \"../math\";\nimport Ellipse from \"./shapes/Ellipse\";\nimport Polygon from \"./shapes/Polygon\";\nimport RoundedRectangle from \"./shapes/RoundedRectangle\";\nimport { HashObject } from \"../HashObject\";\nimport LineStyle from \"./styles/LineStyle\";\nimport FillStyle from \"./styles/FillStyle\";\n\n/**\n * A GraphicsData object.\n * 记录图形数据\n */\nexport default class GraphicsData extends HashObject {\n\n    fillStyle: FillStyle;\n    lineStyle: LineStyle;\n    matrix: Matrix;\n    holes: any[];\n    /**\n     * The shape object to draw.\n     * @member {Circle|Ellipse|Polygon|Rectangle|RoundedRectangle}\n     */\n    shape: any;\n    /**\n     * The type of the shape, see the Const.Shapes file for all the existing types,\n     * @member {number}\n     */\n    type: number;\n    /**\n     * 点的一维数组[x,y,x1,y1,x2,y2]\n     * 存下shape的点数据，因为如果shape不是poly不会特意存下points\n     */\n    points: number[]\n    /**\n     *\n     */\n    constructor(\n        shape: Circle | Rectangle | Ellipse | Polygon | RoundedRectangle,\n        fillStyle: FillStyle = null,\n        lineStyle: LineStyle = null,\n        matrix: Matrix = null\n    ) {\n        super();\n        this._instanceType = \"GraphicsData\"\n\n        this.shape = shape;\n        this.lineStyle = lineStyle;\n        this.fillStyle = fillStyle;\n        this.matrix = matrix;\n\n        this.holes = [];\n        this.type = shape.type;\n        this.points = [];\n    }\n\n    /**\n     * Creates a new GraphicsData object with the same values as this one.\n     *\n     * @return {GraphicsData} Cloned GraphicsData object\n     */\n    clone(): GraphicsData {\n        return new GraphicsData(\n            this.shape,\n            this.fillStyle,\n            this.lineStyle,\n            this.matrix\n        );\n    }\n\n    /**\n     * Destroys the Graphics data.\n     */\n    destroy() {\n        this.shape = null;\n        this.holes.length = 0;\n        this.holes = null;\n        this.points.length = 0;\n        this.points = null;\n        this.lineStyle = null;\n        this.fillStyle = null;\n    }\n}\n","import { Rectangle, Point } from '../../math';\nimport { SHAPES } from '../../const';\n\n/**\n * 圆形\n */\nexport default class Circle {\n    /**\n     * @member {number}\n     * @default 0\n     */\n    x: number;\n    /**\n     * @member {number}\n     * @default 0\n     */\n    y: number;\n    /**\n     * @member {number}\n     * @default 0\n     */\n    radius: number;\n    /**\n     * 类型\n     * @member {number}\n     * @readOnly\n     * @default SHAPES.CIRC\n     * @see SHAPES\n     */\n    type: number;\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [radius=0] - The radius of the circle\n     */\n    constructor(x: number = 0, y: number = 0, radius: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n        this.type = SHAPES.CIRC;\n    }\n\n    /**\n     * Creates a clone of this Circle instance\n     *\n     * @return {Circle} a copy of the Circle\n     */\n    clone():Circle {\n        return new Circle(this.x, this.y, this.radius);\n    }\n\n    /**\n     * @param {Point} point - The point to test\n     * @return {boolean} Whether the x/y coordinates are within this Circle\n     */\n    isPointIn(point:Point):boolean {\n        if (this.radius <= 0) {\n            return false;\n        }\n\n        const r2 = this.radius * this.radius;\n        let dx = (this.x - point.x);\n        let dy = (this.y - point.y);\n        dx *= dx;\n        dy *= dy;\n\n        return (dx + dy <= r2);\n    }\n\n    /**\n    * Returns the framing rectangle of the circle as a Rectangle object\n    *\n    * @return {Rectangle} the framing rectangle\n    */\n    getBounds():Rectangle {\n        return new Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    }\n}\n","import { Rectangle, Point } from '../../math';\nimport { SHAPES } from '../../const';\n\n/**\n * The Ellipse object can be used to specify a hit area for displayObjects\n *\n */\nexport default class Ellipse {\n    /**\n     * @member {number}\n     * @default 0\n     */\n    x: number;\n    /**\n     * @member {number}\n     * @default 0\n     */\n    y: number;\n    /**\n     * @member {number}\n     * @default 0\n     */\n    width: number;\n    /**\n     * @member {number}\n     * @default 0\n     */\n    height: number;\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readOnly\n     * @default SHAPES.ELIP\n     * @see SHAPES\n     */\n    type: number;\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [width=0] - The half width of this ellipse\n     * @param {number} [height=0] - The half height of this ellipse\n     */\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.type = SHAPES.ELIP;\n    }\n\n    /**\n     * Creates a clone of this Ellipse instance\n     *\n     * @return {Ellipse} a copy of the ellipse\n     */\n    clone():Ellipse {\n        return new Ellipse(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     *\n     * @param {Point} point - The  point to test\n     * @return {boolean} Whether the x/y coords are within this ellipse\n     */\n    isPointIn(point:Point):boolean {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n\n        // normalize the coords to an ellipse with center 0,0\n        let normx = ((point.x - this.x) / this.width);\n        let normy = ((point.y - this.y) / this.height);\n\n        normx *= normx;\n        normy *= normy;\n\n        return (normx + normy <= 1);\n    }\n\n    /**\n     * Returns the framing rectangle of the ellipse as a Rectangle object\n     *\n     * @return {Rectangle} the framing rectangle\n     */\n    getBounds():Rectangle {\n        return new Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n    }\n}\n","import { Point } from '../../math/Point';\nimport { SHAPES } from '../../const';\n\n/**\n * \n */\nexport default class Polygon {\n\n    /**\n     * 是否闭合\n     */\n    closed: boolean;\n    /**\n     * [0,1, 2,3, 2,3, 2,3]\n     * An array of the points of this polygon\n     * @member {number[]}\n     */\n    points: number[];\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readOnly\n     * @default SHAPES.POLY\n     * @see SHAPES\n     */\n    type: number;\n    /**\n     * new Polygon(new Point(), new Point(), ...)\n     * \n     * new Polygon([x,y, x,y, ...])\n     * new Polygon(x,y, x,y, x,y, ...)\n     * @param {Point[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new Polygon(new Point(), new Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    constructor(...points) {\n        if (Array.isArray(points[0])) {\n            points = points[0];\n        }\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (points[0] instanceof Point) {\n            const p = [];\n\n            for (let i = 0, il = points.length; i < il; i++) {\n                p.push(points[i].x, points[i].y);\n            }\n\n            points = p;\n        }\n\n        this.closed = true;\n\n\n        this.points = points;\n\n\n        this.type = SHAPES.POLY;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {Polygon} a copy of the polygon\n     */\n    clone(): Polygon {\n        return new Polygon(this.points.slice());\n    }\n\n    /**\n     * Closes the polygon, adding points if necessary.\n     *\n     */\n    close() {\n        const points = this.points;\n\n        // close the poly if the value is true!\n        if (points[0] !== points[points.length - 2] || points[1] !== points[points.length - 1]) {\n            points.push(points[0], points[1]);\n        }\n    }\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {Point} point - The  point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n    isPointIn(point: Point): boolean {\n        var x = point.x;\n        var y = point.y;\n\n        let inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        const length = this.points.length / 2;\n\n        for (let i = 0, j = length - 1; i < length; j = i++) {\n            const xi = this.points[i * 2];\n            const yi = this.points[(i * 2) + 1];\n            const xj = this.points[j * 2];\n            const yj = this.points[(j * 2) + 1];\n            const intersect = ((yi > y) !== (yj > y)) && (x < ((xj - xi) * ((y - yi) / (yj - yi))) + xi);\n\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    }\n}\n","import { SHAPES } from '../../const';\nimport { Point } from '../../math';\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n */\nexport default class RoundedRectangle {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    /**\n     * @member {number}\n     * @default 20\n     */\n    radius: number;\n    type: number;\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [width=0] - The overall width of this rounded rectangle\n     * @param {number} [height=0] - The overall height of this rounded rectangle\n     * @param {number} [radius=20] - Controls the radius of the rounded corners\n     */\n    constructor(\n        x: number = 0,\n        y: number = 0,\n        width: number = 0,\n        height: number = 0,\n        radius: number = 20\n    ) {\n        this.x = x;\n\n        this.y = y;\n\n        this.width = width;\n\n        this.height = height;\n        //计算最大圆角\n        let max = (width < height ? width : height) / 2;\n        //小于0取反\n        radius = radius < 0 ? -radius : radius;\n        //大于max取max\n        radius = radius > max ? max : radius;\n        \n        this.radius = radius;\n\n        this.type = SHAPES.RREC;\n    }\n\n    /**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {RoundedRectangle} a copy of the rounded rectangle\n     */\n    clone(): RoundedRectangle {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     *\n     * @param {Point} point - The  point to test\n     * @return {boolean} Whether the x/y coords are within this ellipse\n     */\n    isPointIn(point: Point): boolean {\n        var x = point.x;\n        var y = point.y;\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width) {\n            if (y >= this.y && y <= this.y + this.height) {\n                if ((y >= this.y + this.radius && y <= this.y + this.height - this.radius)\n                    || (x >= this.x + this.radius && x <= this.x + this.width - this.radius)) {\n                    return true;\n                }\n                let dx = x - (this.x + this.radius);\n                let dy = y - (this.y + this.radius);\n                const radius2 = this.radius * this.radius;\n\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.width - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n                dy = y - (this.y + this.height - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n","import { earcut } from \"./earcut\";\nimport Graphics from \"../Graphics\";\nimport GraphicsData from \"../GraphicsData\";\n\n/**\n * Builds a polygon to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport default {\n\n    build(graphicsData: GraphicsData) {\n        graphicsData.points = graphicsData.shape.points.slice();\n    },\n\n    triangulate(graphicsData:GraphicsData, graphicsGeometry:Graphics) {\n        let points = graphicsData.points;\n        const holes = graphicsData.holes;\n        const verts = graphicsGeometry.verts;\n        const indices = graphicsGeometry.indices;\n\n        if (points.length >= 6) {\n            const holeArray = [];\n            // Process holes..\n\n            for (let i = 0; i < holes.length; i++) {\n                const hole = holes[i];\n\n                holeArray.push(points.length / 2);\n                points = points.concat(hole.points);\n            }\n\n            // sort color\n            const triangles = earcut(points, holeArray, 2);\n\n            if (!triangles) {\n                return;\n            }\n\n            const vertPos = verts.length / 2;\n\n            for (let i = 0; i < triangles.length; i += 3) {\n                indices.push(triangles[i] + vertPos);\n                indices.push(triangles[i + 1] + vertPos);\n                indices.push(triangles[i + 2] + vertPos);\n            }\n\n            for (let i = 0; i < points.length; i++) {\n                verts.push(points[i]);\n            }\n        }\n    },\n};\n","import { SHAPES } from \"../../const\";\nimport GraphicsData from \"../GraphicsData\";\nimport Graphics from \"../Graphics\";\n\n\n\n/**\n * Builds a circle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {WebGLGraphicsData} graphicsData - The graphics object to draw\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport default {\n\n    build(graphicsData: GraphicsData) {\n        // need to convert points to a nice regular data\n        const circleData = graphicsData.shape;\n        const points = graphicsData.points;\n        const x = circleData.x;\n        const y = circleData.y;\n        let width;\n        let height;\n\n        points.length = 0;\n\n        // TODO - bit hacky??\n        if (graphicsData.type === SHAPES.CIRC) {\n            width = circleData.radius;\n            height = circleData.radius;\n        }\n        else {\n            width = circleData.width;\n            height = circleData.height;\n        }\n\n        if (width === 0 || height === 0) {\n            return;\n        }\n\n        let totalSegs = Math.floor(30 * Math.sqrt(circleData.radius))\n            || Math.floor(15 * Math.sqrt(circleData.width + circleData.height));\n\n        totalSegs /= 2.3;\n\n        const seg = (Math.PI * 2) / totalSegs;\n\n        for (let i = 0; i < totalSegs; i++) {\n            points.push(\n                x + (Math.sin(seg * i) * width),\n                y + (Math.cos(seg * i) * height)\n            );\n        }\n\n        points.push(\n            points[0],\n            points[1]\n        );\n    },\n\n    triangulate(graphicsData, graphicsGeometry:Graphics) {\n        const points = graphicsData.points;\n        const verts = graphicsGeometry.verts;\n        const indices = graphicsGeometry.indices;\n\n        let vertPos = verts.length / 2;\n        const center = vertPos;\n\n        verts.push(graphicsData.shape.x, graphicsData.shape.y);\n\n        for (let i = 0; i < points.length; i += 2) {\n            verts.push(points[i], points[i + 1]);\n\n            // add some uvs\n            indices.push(vertPos++, center, vertPos);\n        }\n    },\n};\n","import { earcut } from \"./earcut\"\nimport GraphicsData from \"../GraphicsData\";\nimport Graphics from \"../Graphics\";\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport default {\n\n    //计算点points\n    build(graphicsData:GraphicsData) {\n        // --- //\n        // need to convert points to a nice regular data\n        //\n        const rectData = graphicsData.shape;\n        const x = rectData.x;\n        const y = rectData.y;\n        const width = rectData.width;\n        const height = rectData.height;\n\n        const points = graphicsData.points;\n\n        points.length = 0;\n\n        points.push(x, y,\n            x + width, y,\n            x + width, y + height,\n            x, y + height);\n    },\n\n    //计算顶点和索引\n    triangulate(graphicsData:GraphicsData, graphics: Graphics) {\n        const points = graphicsData.points;\n\n        //graphics之前可能已经有点\n        const verts = graphics.verts;\n        const vertPos = verts.length / 2;\n\n        verts.push(points[0], points[1],\n            points[2], points[3],\n            points[6], points[7],\n            points[4], points[5]);\n\n        graphics.indices.push(vertPos, vertPos + 1, vertPos + 2,\n            vertPos + 1, vertPos + 2, vertPos + 3);\n    },\n};\n","import { earcut } from \"./earcut\"\nimport GraphicsData from \"../GraphicsData\";\nimport Graphics from \"../Graphics\";\n\n/**\n * Builds a rounded rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport default {\n\n    build(graphicsData:GraphicsData)\n    {\n        const rrectData = graphicsData.shape;\n        const points = graphicsData.points;\n        const x = rrectData.x;\n        const y = rrectData.y;\n        const width = rrectData.width;\n        const height = rrectData.height;\n\n        const radius = rrectData.radius;\n\n        points.length = 0;\n\n        points.push(x, y + radius);\n        quadraticBezierCurve(x, y + height - radius, x, y + height, x + radius, y + height, points);\n        quadraticBezierCurve(x + width - radius, y + height, x + width, y + height, x + width, y + height - radius, points);\n        quadraticBezierCurve(x + width, y + radius, x + width, y, x + width - radius, y, points);\n        quadraticBezierCurve(x + radius, y, x, y, x, y + radius + 0.0000000001, points);\n\n        // this tiny number deals with the issue that occurs when points overlap and earcut fails to triangulate the item.\n        // TODO - fix this properly, this is not very elegant.. but it works for now.\n    },\n\n    triangulate(graphicsData:GraphicsData, graphicsGeometry:Graphics)\n    {\n        const points = graphicsData.points;\n\n        const verts = graphicsGeometry.verts;\n        const indices = graphicsGeometry.indices;\n\n        const vecPos = verts.length / 2;\n\n        const triangles = earcut(points, null, 2);\n\n        for (let i = 0, j = triangles.length; i < j; i += 3)\n        {\n            indices.push(triangles[i] + vecPos);\n            //     indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i + 1] + vecPos);\n            //   indices.push(triangles[i + 2] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n        }\n\n        for (let i = 0, j = points.length; i < j; i++)\n        {\n            verts.push(points[i], points[++i]);\n        }\n    },\n};\n\n/**\n * Calculate a single point for a quadratic bezier curve.\n * Utility function used by quadraticBezierCurve.\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} n1 - first number\n * @param {number} n2 - second number\n * @param {number} perc - percentage\n * @return {number} the result\n *\n */\nfunction getPt(n1, n2, perc)\n{\n    const diff = n2 - n1;\n\n    return n1 + (diff * perc);\n}\n\n/**\n * Calculate the points for a quadratic bezier curve. (helper function..)\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} fromX - Origin point x\n * @param {number} fromY - Origin point x\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [out=[]] - The output array to add points into. If not passed, a new array is created.\n * @return {number[]} an array of points\n */\nfunction quadraticBezierCurve(fromX, fromY, cpX, cpY, toX, toY, out = [])\n{\n    const n = 20;\n    const points = out;\n\n    let xa = 0;\n    let ya = 0;\n    let xb = 0;\n    let yb = 0;\n    let x = 0;\n    let y = 0;\n\n    for (let i = 0, j = 0; i <= n; ++i)\n    {\n        j = i / n;\n\n        // The Green Line\n        xa = getPt(fromX, cpX, j);\n        ya = getPt(fromY, cpY, j);\n        xb = getPt(cpX, toX, j);\n        yb = getPt(cpY, toY, j);\n\n        // The Black Dot\n        x = getPt(xa, xb, j);\n        y = getPt(ya, yb, j);\n\n        points.push(x, y);\n    }\n\n    return points;\n}\n","import GraphicsData from \"../GraphicsData\";\nimport Graphics from \"../Graphics\";\nimport { Point } from \"../../math\";\nimport { SHAPES } from \"../../const\";\n\n\n/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport default function (graphicsData: GraphicsData, graphicsGeometry: Graphics) {\n    // if (graphicsData.lineStyle.native)\n    // {\n    //     buildNativeLine(graphicsData, graphicsGeometry);\n    // }\n    // else\n    // {\n    buildLine(graphicsData, graphicsGeometry);\n    // }\n}\n\n/**\n * Builds a line to draw using the polygon method.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {GraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {GraphicsGeometry} graphicsGeometry - Geometry where to append output\n */\nfunction buildLine(graphicsData:GraphicsData, graphicsGeometry:Graphics) {\n    const shape = graphicsData.shape;\n    let points = graphicsData.points || shape.points.slice();\n\n    if (points.length === 0) {\n        return;\n    }\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    // commenting this out fixes #711 and #1620\n    // if (graphicsData.lineWidth%2)\n    // {\n    //     for (i = 0; i < points.length; i++)\n    //     {\n    //         points[i] += 0.5;\n    //     }\n    // }\n\n    const style = graphicsData.lineStyle;\n\n    // get first and last point.. figure out the middle!\n    const firstPoint = new Point(points[0], points[1]);\n    const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n    const closedShape = shape.type !== SHAPES.POLY;\n    const closedPath = firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y;\n\n    // if the first point is the last point - gonna have issues :)\n    if (closedPath || closedShape) {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        if (closedPath) {\n            points.pop();\n            points.pop();\n            lastPoint.set(points[points.length - 2], points[points.length - 1]);\n        }\n\n        const midPointX = lastPoint.x + ((firstPoint.x - lastPoint.x) * 0.5);\n        const midPointY = lastPoint.y + ((firstPoint.y - lastPoint.y) * 0.5);\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    const verts = graphicsGeometry.verts;\n    const length = points.length / 2;\n    let indexCount = points.length;\n    let indexStart = verts.length / 2;\n\n    // DRAW the Line\n    const width = style.width / 2;\n\n    // sort color\n    let p1x = points[0];\n    let p1y = points[1];\n    let p2x = points[2];\n    let p2y = points[3];\n    let p3x = 0;\n    let p3y = 0;\n\n    let perpx = -(p1y - p2y);\n    let perpy = p1x - p2x;\n    let perp2x = 0;\n    let perp2y = 0;\n    let perp3x = 0;\n    let perp3y = 0;\n\n    let dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    const ratio = style.alignment;// 0.5;\n    const r1 = (1 - ratio) * 2;\n    const r2 = ratio * 2;\n\n    // start\n    verts.push(\n        p1x - (perpx * r1),\n        p1y - (perpy * r1));\n\n    verts.push(\n        p1x + (perpx * r2),\n        p1y + (perpy * r2));\n\n    for (let i = 1; i < length - 1; ++i) {\n        p1x = points[(i - 1) * 2];\n        p1y = points[((i - 1) * 2) + 1];\n\n        p2x = points[i * 2];\n        p2y = points[(i * 2) + 1];\n\n        p3x = points[(i + 1) * 2];\n        p3y = points[((i + 1) * 2) + 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n\n        dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp2x = -(p2y - p3y);\n        perp2y = p2x - p3x;\n\n        dist = Math.sqrt((perp2x * perp2x) + (perp2y * perp2y));\n        perp2x /= dist;\n        perp2y /= dist;\n        perp2x *= width;\n        perp2y *= width;\n\n        const a1 = (-perpy + p1y) - (-perpy + p2y);\n        const b1 = (-perpx + p2x) - (-perpx + p1x);\n        const c1 = ((-perpx + p1x) * (-perpy + p2y)) - ((-perpx + p2x) * (-perpy + p1y));\n        const a2 = (-perp2y + p3y) - (-perp2y + p2y);\n        const b2 = (-perp2x + p2x) - (-perp2x + p3x);\n        const c2 = ((-perp2x + p3x) * (-perp2y + p2y)) - ((-perp2x + p2x) * (-perp2y + p3y));\n\n        let denom = (a1 * b2) - (a2 * b1);\n\n        if (Math.abs(denom) < 0.1) {\n            denom += 10.1;\n            verts.push(\n                p2x - (perpx * r1),\n                p2y - (perpy * r1));\n\n            verts.push(\n                p2x + (perpx * r2),\n                p2y + (perpy * r2));\n\n            continue;\n        }\n\n        const px = ((b1 * c2) - (b2 * c1)) / denom;\n        const py = ((a2 * c1) - (a1 * c2)) / denom;\n        const pdist = ((px - p2x) * (px - p2x)) + ((py - p2y) * (py - p2y));\n\n        if (pdist > (196 * width * width)) {\n            perp3x = perpx - perp2x;\n            perp3y = perpy - perp2y;\n\n            dist = Math.sqrt((perp3x * perp3x) + (perp3y * perp3y));\n            perp3x /= dist;\n            perp3y /= dist;\n            perp3x *= width;\n            perp3y *= width;\n\n            verts.push(p2x - (perp3x * r1), p2y - (perp3y * r1));\n\n            verts.push(p2x + (perp3x * r2), p2y + (perp3y * r2));\n\n            verts.push(p2x - (perp3x * r2 * r1), p2y - (perp3y * r1));\n\n            indexCount++;\n        }\n        else {\n            verts.push(p2x + ((px - p2x) * r1), p2y + ((py - p2y) * r1));\n\n            verts.push(p2x - ((px - p2x) * r2), p2y - ((py - p2y) * r2));\n        }\n    }\n\n    p1x = points[(length - 2) * 2];\n    p1y = points[((length - 2) * 2) + 1];\n\n    p2x = points[(length - 1) * 2];\n    p2y = points[((length - 1) * 2) + 1];\n\n    perpx = -(p1y - p2y);\n    perpy = p1x - p2x;\n\n    dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(p2x - (perpx * r1), p2y - (perpy * r1));\n\n    verts.push(p2x + (perpx * r2), p2y + (perpy * r2));\n\n    const indices = graphicsGeometry.indices;\n\n    // indices.push(indexStart);\n\n    for (let i = 0; i < indexCount - 2; ++i) {\n        indices.push(indexStart, indexStart + 1, indexStart + 2);\n\n        indexStart++;\n    }\n}\n\n/**\n * Builds a line to draw using the gl.drawArrays(gl.LINES) method\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n */\nfunction buildNativeLine(graphicsData, graphicsGeometry) {\n    let i = 0;\n\n    const points = graphicsData.points || graphicsData.shape.points;\n\n    if (points.length === 0) return;\n\n    const verts = graphicsGeometry.points;\n    const indices = graphicsGeometry.indices;\n    const length = points.length / 2;\n\n    let indexStart = verts.length / 2;\n    // sort color\n\n    for (i = 1; i < length; i++) {\n        const p1x = points[(i - 1) * 2];\n        const p1y = points[((i - 1) * 2) + 1];\n\n        const p2x = points[i * 2];\n        const p2y = points[(i * 2) + 1];\n\n        verts.push(p1x, p1y);\n\n        verts.push(p2x, p2y);\n\n        indices.push(indexStart++, indexStart++);\n    }\n}\n","import FillStyle from './FillStyle';\nimport { LINE_ALIGNMENT } from '../../const';\n\n/**\n * 图形的画线模式\n */\nexport default class LineStyle extends FillStyle {\n\n    /**\n     * webgl的画线模式\n     * 默认false\n     */\n    native: boolean;\n    /**\n     * 线宽度\n     * 默认0\n     */\n    width: number;\n    /**\n     * 线的对齐方式\n     * 默认LINE_ALIGNMENT.middle  0.5\n     */\n    alignment: LINE_ALIGNMENT;\n    /**\n     * Clones the object\n     *\n     * @return {LineStyle}\n     */\n    clone():LineStyle {\n        const obj:LineStyle = new LineStyle();\n        obj.color = this.color;\n        obj.alpha = this.alpha;\n        obj.texture = this.texture;\n        obj.matrix = this.matrix;\n        obj.visible = this.visible;\n        obj.width = this.width;\n        obj.alignment = this.alignment;\n        obj.native = this.native;\n        return obj;\n    }\n    /**\n     * 重置\n     */\n    reset() {\n        super.reset();\n        // 默认黑色0x000000\n        this.color = 0x0;\n        this.width = 0;\n        this.alignment = 0.5;\n        this.native = false;\n    }\n}\n","\r\nexport { default as bezierCurveTo } from './bezierCurveTo';\r\nexport { bezierCurveControlPoint } from \"./bezierCurveControlPoint\";\r\n/**\r\n * Graphics curves resolution settings. If `adaptive` flag is set to `true`,\r\n * the resolution is calculated based on the curve's length to ensure better visual quality.\r\n * Adaptive draw works with `bezierCurveTo` and `quadraticCurveTo`.\r\n *\r\n * @constant\r\n * @name CURVES\r\n * @type {object}\r\n * @property {boolean} adaptive=false - flag indicating if the resolution should be adaptive\r\n * @property {number} maxLength=10 - maximal length of a single segment of the curve (if adaptive = false, ignored)\r\n * @property {number} minSegments=8 - minimal number of segments in the curve (if adaptive = false, ignored)\r\n * @property {number} maxSegments=2048 - maximal number of segments in the curve (if adaptive = false, ignored)\r\n */\r\nexport const GRAPHICS_CURVES: { adaptive: boolean, maxLength: number, minSegments: number, maxSegments: number, segmentsCount: Function } = {\r\n    adaptive: false,\r\n    maxLength: 10,\r\n    minSegments: 8,\r\n    maxSegments: 2048,\r\n    /**\r\n     * 根据曲线长度给出分段数，保证光滑\r\n     *\r\n     * @private\r\n     * @param {number} length 曲线长度\r\n     * @param {number} defaultSegments 默认分段数\r\n     * @return {number} 分段数\r\n     */\r\n    segmentsCount(length: number, defaultSegments: number = 20): number {\r\n        if (!this.adaptive) return defaultSegments;\r\n        let result = Math.ceil(length / this.maxLength);\r\n\r\n        if (result < this.minSegments) {\r\n            result = this.minSegments;\r\n        }\r\n        else if (result > this.maxSegments) {\r\n            result = this.maxSegments;\r\n        }\r\n        return result;\r\n    }\r\n};\r\n\r\n/**\r\n * Calculate length of quadratic curve\r\n * @see {@link http://www.malczak.linuxpl.com/blog/quadratic-bezier-curve-length/}\r\n * for the detailed explanation of math behind this.\r\n *\r\n * @param {number} fromX - x-coordinate of curve start point\r\n * @param {number} fromY - y-coordinate of curve start point\r\n * @param {number} cpX - x-coordinate of curve control point\r\n * @param {number} cpY - y-coordinate of curve control point\r\n * @param {number} toX - x-coordinate of curve end point\r\n * @param {number} toY - y-coordinate of curve end point\r\n * @return {number} Length of quadratic curve\r\n */\r\nexport function quadraticCurveLength(\r\n    fromX: number,\r\n    fromY: number,\r\n    cpX: number,\r\n    cpY: number,\r\n    toX: number,\r\n    toY: number): number {\r\n    const ax = fromX - ((2.0 * cpX) + toX);\r\n    const ay = fromY - ((2.0 * cpY) + toY);\r\n    const bx = 2.0 * ((cpX - 2.0) * fromX);\r\n    const by = 2.0 * ((cpY - 2.0) * fromY);\r\n    const a = 4.0 * ((ax * ax) + (ay * ay));\r\n    const b = 4.0 * ((ax * bx) + (ay * by));\r\n    const c = (bx * bx) + (by * by);\r\n\r\n    const s = 2.0 * Math.sqrt(a + b + c);\r\n    const a2 = Math.sqrt(a);\r\n    const a32 = 2.0 * a * a2;\r\n    const c2 = 2.0 * Math.sqrt(c);\r\n    const ba = b / a2;\r\n\r\n    return (\r\n        (a32 * s)\r\n        + (a2 * b * (s - c2))\r\n        + (\r\n            ((4.0 * c * a) - (b * b))\r\n            * Math.log(((2.0 * a2) + ba + s) / (ba + c2))\r\n        )\r\n    )\r\n        / (4.0 * a32);\r\n}\r\n\r\n/**\r\n * Calculate length of bezier curve.\r\n * Analytical solution is impossible, since it involves an integral that does not integrate in general.\r\n * Therefore numerical solution is used.\r\n *\r\n * @param {number} fromX - Starting point x\r\n * @param {number} fromY - Starting point y\r\n * @param {number} cpX - Control point x\r\n * @param {number} cpY - Control point y\r\n * @param {number} cpX2 - Second Control point x\r\n * @param {number} cpY2 - Second Control point y\r\n * @param {number} toX - Destination point x\r\n * @param {number} toY - Destination point y\r\n * @return {number} Length of bezier curve\r\n */\r\nexport function bezierCurveLength(\r\n    fromX: number,\r\n    fromY: number,\r\n    cpX: number,\r\n    cpY: number,\r\n    cpX2: number,\r\n    cpY2: number,\r\n    toX: number,\r\n    toY: number): number {\r\n    const n = 10;\r\n    let result = 0.0;\r\n    let t = 0.0;\r\n    let t2 = 0.0;\r\n    let t3 = 0.0;\r\n    let nt = 0.0;\r\n    let nt2 = 0.0;\r\n    let nt3 = 0.0;\r\n    let x = 0.0;\r\n    let y = 0.0;\r\n    let dx = 0.0;\r\n    let dy = 0.0;\r\n    let prevX = fromX;\r\n    let prevY = fromY;\r\n\r\n    for (let i = 1; i <= n; ++i) {\r\n        t = i / n;\r\n        t2 = t * t;\r\n        t3 = t2 * t;\r\n        nt = (1.0 - t);\r\n        nt2 = nt * nt;\r\n        nt3 = nt2 * nt;\r\n\r\n        x = (nt3 * fromX) + (3.0 * nt2 * t * cpX) + (3.0 * nt * t2 * cpX2) + (t3 * toX);\r\n        y = (nt3 * fromY) + (3.0 * nt2 * t * cpY) + (3 * nt * t2 * cpY2) + (t3 * toY);\r\n        dx = prevX - x;\r\n        dy = prevY - y;\r\n        prevX = x;\r\n        prevY = y;\r\n\r\n        result += Math.sqrt((dx * dx) + (dy * dy));\r\n    }\r\n\r\n    return result;\r\n}","/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number} n - Number of segments approximating the bezier curve\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */\nexport default function bezierCurveTo(\n    fromX: number,\n    fromY: number,\n    cpX: number,\n    cpY: number,\n    cpX2: number,\n    cpY2: number,\n    toX: number,\n    toY: number,\n    n: number,\n    path: number[] = []\n): number[] {\n    let dt = 0;\n    let dt2 = 0;\n    let dt3 = 0;\n    let t2 = 0;\n    let t3 = 0;\n\n    path.push(fromX, fromY);\n\n    for (let i = 1, j = 0; i <= n; ++i) {\n        j = i / n;\n\n        dt = (1 - j);\n        dt2 = dt * dt;\n        dt3 = dt2 * dt;\n\n        t2 = j * j;\n        t3 = t2 * j;\n\n        path.push(\n            (dt3 * fromX) + (3 * dt2 * j * cpX) + (3 * dt * t2 * cpX2) + (t3 * toX),\n            (dt3 * fromY) + (3 * dt2 * j * cpY) + (3 * dt * t2 * cpY2) + (t3 * toY)\n        );\n    }\n\n    return path;\n}\n","/**\r\n * 返回{ A: A, B: B }，A控制点数组，B控制点数组\r\n * @param points 点数组，格式[ { x: 0, y: 0 },{ x: 30, y: 0 },{ x: 30, y: -30 }],带x,y键值的对象就行\r\n */\r\nexport function bezierCurveControlPoint(points) {\r\n    if (points.length > 2) {\r\n        var A = [];\r\n        var B = [];\r\n        A[0] = { x: points[0].x + (points[1].x - points[0].x) / 4, y: points[0].y + (points[1].y - points[0].y) / 4 };\r\n        B[0] = returnBControl(points, 0);\r\n        A[points.length - 2] = returnAControl(points, points.length - 2);\r\n        B[points.length - 2] = {\r\n            x: points[points.length - 1].x - (points[points.length - 1].x - points[points.length - 2].x) / 4,\r\n            y: points[points.length - 1].y - (points[points.length - 1].y - points[points.length - 2].y) / 4\r\n        };\r\n        for (var i = 1; i < points.length - 2; i++) {\r\n            A[i] = returnAControl(points, i);\r\n            B[i] = returnBControl(points, i);\r\n        }\r\n        return { A: A, B: B };\r\n    }\r\n}\r\nfunction returnAControl(points, i) {\r\n    var x = points[i].x + (points[i + 1].x - points[i - 1].x) / 4;\r\n    var y = points[i].y + (points[i + 1].y - points[i - 1].y) / 4;\r\n    return { x: x, y: y };\r\n}\r\nfunction returnBControl(points, i) {\r\n    var x = points[i + 1].x - (points[i + 2].x - points[i].x) / 4;\r\n    var y = points[i + 1].y - (points[i + 2].y - points[i].y) / 4;\r\n    return { x: x, y: y };\r\n}\r\n\r\n//例子\r\nfunction setPath(ctx, type) {\r\n    var points = [\r\n        { x: 0, y: 0 },\r\n        { x: 30, y: 0 },\r\n        { x: 30, y: -30 },\r\n        { x: 60, y: -30 },\r\n        { x: 60, y: 0 },\r\n        { x: 90, y: 0 }];\r\n    var AB, A, B;\r\n    if (points.length > 2) {\r\n        AB = bezierCurveControlPoint(points);\r\n        A = AB.A;\r\n        B = AB.B;\r\n    }\r\n    ctx.moveTo(points[0].x, points[0].y);\r\n    for (var i = 1; i < points.length; i++) {\r\n        if (points.length <= 2) {\r\n            ctx.lineTo(points[i].x, points[i].y);\r\n        } else {\r\n            ctx.bezierCurveTo(A[i - 1].x, A[i - 1].y, B[i - 1].x, B[i - 1].y, points[i].x, points[i].y);\r\n        }\r\n    }\r\n}","import Texture from \"../texture/Texture\";\r\nimport { SCALE_MODES, LINE_CAP, LINE_JOIN } from \"../const\";\r\nimport { Rectangle, Point } from \"../math\";\r\nimport { DisplayObject } from \"../display/DisplayObject\";\r\nimport { hex2string, getRGBA, getGradientColor, getBackupCanvasCtx, getCanvasBitmapStyle, createCanvas, string2hex } from \"../utils\";\r\nimport Sprite from \"../display/Sprite\";\r\n\r\n/**\r\n * 容器级的shape，和shape区别，继承sprite，hittest重写\r\n * 矢量对象，\r\n * 记录指令，对于复杂的不常绘制的图形，用canvas上下文的指令比较方便，比如消消乐项目时的格子地图\r\n * 复杂路径，自己没法确定哪些区域该填充的时候，用canvas的api\r\n * 支持pattern和渐变填充，与Graphic的纹理填充区分，不一致\r\n * 不能用于webgl遮罩，暂不与gra做兼容，canvas形式可以\r\n * 待测试\r\n * anchorTexture被使用，尽量不手动修改\r\n * 如要改锚点，用anchor\r\n * @class Shape\r\n * @extends Sprite\r\n */\r\nexport class Shape extends Sprite {\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n    dirty: boolean;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    constructor() {\r\n        super();\r\n        this._instanceType = \"Shape\";\r\n        var canvas = createCanvas();\r\n        canvas.width = 3;\r\n        canvas.height = 3;\r\n        this.texture = Texture.fromCanvas(canvas, 'shapeCanvas');\r\n\r\n        //baseTexture已自动缓存，把texture也缓存，key textCanvas+num  和baseTexture的一致\r\n        Texture.addToCache(this.texture, this.texture.baseTexture.textureCacheIds[0]);\r\n        this.canvas = canvas;\r\n        this.context = canvas.getContext(\"2d\");\r\n        this.dirty = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * 一个数组，每个元素也是一个数组[类型 0是属性,1是方法,名字 执行的属性或方法名,参数]\r\n     * \r\n     * @property _command\r\n     * @private\r\n     * @since 1.0.0\r\n     * @type {Array}\r\n     * @default []\r\n     */\r\n    private _command: any = [];\r\n\r\n    /**\r\n     * @property _isBitmapStroke\r\n     * @private\r\n     * @since 1.0.0\r\n     */\r\n    private _isBitmapStroke: Array<number>;\r\n    /**\r\n     * @property _isBitmapFill\r\n     * @private\r\n     * @since 1.0.0\r\n     */\r\n    private _isBitmapFill: Array<number>;\r\n    /**\r\n     * 是否对矢量使用像素碰撞 默认开启\r\n     * @property hitTestByPixel\r\n     * @type {boolean}\r\n     * @default true\r\n     * @since 1.1.0\r\n     */\r\n    public hitTestByPixel: boolean = true;\r\n\r\n\r\n    /**\r\n     * 画一个带圆角的矩形\r\n     * @method drawRoundedRect\r\n     * @param {number} x 点x值\r\n     * @param {number} y 点y值\r\n     * @param {number} w 宽\r\n     * @param {number} h 高\r\n     * @param {number} rTL 左上圆角半径\r\n     * @param {number} rTR 右上圆角半径\r\n     * @param {number} rBL 左下圆角半径\r\n     * @param {number} rBR 右上圆角半径\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public drawRoundedRect(\r\n        x: number,\r\n        y: number,\r\n        w: number,\r\n        h: number,\r\n        rTL: number = 0,\r\n        rTR?: number,\r\n        rBL?: number,\r\n        rBR?: number\r\n    ): this {\r\n        let max = (w < h ? w : h) / 2;\r\n        let mTL = 0, mTR = 0, mBR = 0, mBL = 0;\r\n        if (rTR == undefined) rTR = rTL;\r\n        if (rBL == undefined) rBL = rTL;\r\n        if (rBR == undefined) rBR = rTL;\r\n        if (rTL < 0) {\r\n            rTL *= (mTL = -1);\r\n        }\r\n        if (rTL > max) {\r\n            rTL = max;\r\n        }\r\n        if (rTR < 0) {\r\n            rTR *= (mTR = -1);\r\n        }\r\n        if (rTR > max) {\r\n            rTR = max;\r\n        }\r\n        if (rBR < 0) {\r\n            rBR *= (mBR = -1);\r\n        }\r\n        if (rBR > max) {\r\n            rBR = max;\r\n        }\r\n        if (rBL < 0) {\r\n            rBL *= (mBL = -1);\r\n        }\r\n        if (rBL > max) {\r\n            rBL = max;\r\n        }\r\n        let c = this._command;\r\n        c[c.length] = [1, \"moveTo\", [x + w - rTR, y]];\r\n        c[c.length] = [1, \"arcTo\", [x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR]];\r\n        c[c.length] = [1, \"lineTo\", [x + w, y + h - rBR]];\r\n        c[c.length] = [1, \"arcTo\", [x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR]];\r\n        c[c.length] = [1, \"lineTo\", [x + rBL, y + h]];\r\n        c[c.length] = [1, \"arcTo\", [x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL]];\r\n        c[c.length] = [1, \"lineTo\", [x, y + rTL]];\r\n        c[c.length] = [1, \"arcTo\", [x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL]];\r\n        c[c.length] = [1, \"closePath\", []];\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 绘画时移动到某一点\r\n     * @method moveTo\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public moveTo(x: number, y: number): this {\r\n        this._command[this._command.length] = [1, \"moveTo\", [x, y]];\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从上一点画到某一点,如果没有设置上一点，则上一点默认为(0,0)\r\n     * @method lineTo\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public lineTo(x: number, y: number): this {\r\n        this._command[this._command.length] = [1, \"lineTo\", [x, y]];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * https://www.jianshu.com/p/e8ea5996cd79\r\n     * @method arcTo\r\n     * @param {number} x1 圆弧外一点，由它连接两切点\r\n     * @param {number} y1\r\n     * @param {number} x2 结束点 没啥用，设啥都是那个切点\r\n     * @param {number} y2 \r\n     * @param {number} radius 半径\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): this {\r\n        this._command[this._command.length] = [1, \"arcTo\", [x1, y1, x2, y2, radius]];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 二次贝赛尔曲线\r\n     * 从上一点画二次贝赛尔曲线到某一点,如果没有设置上一点，则上一占默认为(0,0)\r\n     * @method quadraticCurveTo\r\n     * @param {number} cpX 控制点X\r\n     * @param {number} cpX 控制点Y\r\n     * @param {number} x 终点X\r\n     * @param {number} y 终点Y\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public quadraticCurveTo(cpX: number, cpY: number, x: number, y: number): this {\r\n        this._command[this._command.length] = [1, \"quadraticCurveTo\", [cpX, cpY, x, y]];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 三次贝赛尔曲线\r\n     * 从上一点画二次贝赛尔曲线到某一点,如果没有设置上一点，则上一占默认为(0,0)\r\n     * @method bezierCurveTo\r\n     * @param {number} cp1X 1控制点X\r\n     * @param {number} cp1Y 1控制点Y\r\n     * @param {number} cp2X 2控制点X\r\n     * @param {number} cp2Y 2控制点Y\r\n     * @param {number} x 终点X\r\n     * @param {number} y 终点Y\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public bezierCurveTo(cp1X: number, cp1Y: number, cp2X: number, cp2Y: number, x: number, y: number): this {\r\n        this._command[this._command.length] = [1, \"bezierCurveTo\", [cp1X, cp1Y, cp2X, cp2Y, x, y]];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 闭合一个绘画路径\r\n     * @method closePath\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public closePath(): this {\r\n        this._command[this._command.length] = [1, \"closePath\", []];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 画一个矩形\r\n     * @method drawRect\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public drawRect(x: number, y: number, w: number, h: number): this {\r\n        let c = this._command;\r\n        c[c.length] = [1, \"moveTo\", [x, y]];\r\n        c[c.length] = [1, \"lineTo\", [x + w, y]];\r\n        c[c.length] = [1, \"lineTo\", [x + w, y + h]];\r\n        c[c.length] = [1, \"lineTo\", [x, y + h]];\r\n        c[c.length] = [1, \"closePath\", []];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 画一个弧形\r\n     * https://www.w3school.com.cn/tags/canvas_arc.asp\r\n     * \r\n     * @method drawArc\r\n     * @param {number} x 起始点x\r\n     * @param {number} y 起始点y\r\n     * @param {number} radius 半径\r\n     * @param {number} start 开始角度 弧度\r\n     * @param {number} end 结束角度 弧度\r\n     * @param {number} counterclockwise False = 顺时针，true = 逆时针\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public arc(\r\n        x: number,\r\n        y: number,\r\n        radius: number,\r\n        startAngle: number,\r\n        endAngle: number,\r\n        counterclockwise: boolean = false\r\n    ): this {\r\n        this._command[this._command.length] = [1, \"arc\", [x, y, radius, startAngle, endAngle, counterclockwise]];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 画一个圆\r\n     * @method drawCircle\r\n     * @param {number} x 圆心x\r\n     * @param {number} y 圆心y\r\n     * @param {number} radius 半径\r\n     * @param {boolean} counterclockwise 半径\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public drawCircle(x: number, y: number, radius: number, counterclockwise: boolean = false): this {\r\n        this._command[this._command.length] = [1, \"arc\", [x, y, radius, 0, 2 * Math.PI, counterclockwise]];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 画一个椭圆\r\n     * @method drawEllipse\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public drawEllipse(x: number, y: number, w: number, h: number): this {\r\n        let k = 0.5522848;\r\n        let ox = (w / 2) * k;\r\n        let oy = (h / 2) * k;\r\n        let xe = x + w;\r\n        let ye = y + h;\r\n        let xm = x + w / 2;\r\n        let ym = y + h / 2;\r\n        let c = this._command;\r\n        c[c.length] = [1, \"moveTo\", [x, ym]];\r\n        c[c.length] = [1, \"bezierCurveTo\", [x, ym - oy, xm - ox, y, xm, y]];\r\n        c[c.length] = [1, \"bezierCurveTo\", [xm + ox, y, xe, ym - oy, xe, ym]];\r\n        c[c.length] = [1, \"bezierCurveTo\", [xe, ym + oy, xm + ox, ye, xm, ye]];\r\n        c[c.length] = [1, \"bezierCurveTo\", [xm - ox, ye, x, ym + oy, x, ym]];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 清除掉之前所有绘画的东西\r\n     * @method clear\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public clear(): this {\r\n        let s = this;\r\n        s._command = [];\r\n        s.dirty = true;\r\n        return s;\r\n    }\r\n\r\n    /**\r\n     * 开始绘画填充,如果想画的东西有颜色填充,一定要从此方法开始\r\n     * @method beginFill\r\n     * @param {number|string} color 颜色值 单色和RGBA格式\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public beginFill(color: number | string = 0, alpha: number = 1): this {\r\n        //颜色做个兼容\r\n        if (typeof (color) == \"string\") color = string2hex(color);\r\n        \r\n        var sColor = getRGBA(hex2string(color), alpha);\r\n        this._fill(sColor);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 线性或径向渐变填充\r\n     * @method beginGradientFill\r\n     * @param {Array} points 四个数字表示线性渐变参考createLinearGradient，六个数字表示径向渐变参考createRadialGradient\r\n     * @param {Array} colors [系数, #式颜色值, 透明度]的数组，比如[[0, \"#ff0000\", 1],[0.5, \"#00ff00\", 1],[1, \"#0000ff\", 1]]\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public beginGradientFill(points: number[], colors: [number, string, number][]): this {\r\n        this._fill(getGradientColor(points, colors));\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * 位图填充\r\n     * @method beginBitmapFill\r\n     * @param {Image} image\r\n     * @param { Array} matrix\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public beginBitmapFill(image: any, matrix: Array<number>): this {\r\n        let s = this;\r\n        if (matrix) {\r\n            s._isBitmapFill = matrix;\r\n        }\r\n        s._fill(getCanvasBitmapStyle(image));\r\n        return s;\r\n    }\r\n\r\n    private _fill(fillStyle: any): void {\r\n        let c = this._command;\r\n        c[c.length] = [0, \"fillStyle\", fillStyle];\r\n        c[c.length] = [1, \"beginPath\", []];\r\n        this.dirty = true;\r\n    }\r\n\r\n    /**\r\n     * 给线条着色\r\n     * @method beginStroke\r\n     * @param {number} color  颜色值\r\n     * @param {number} lineWidth 宽度\r\n     * @param {number} cap 线头的形状 0 butt 1 round 2 square 默认 butt\r\n     * @param {number} join 线与线之间的交接处形状 0 miter 1 bevel 2 round  默认miter\r\n     * @param {number} miter 正数,规定最大斜接长度,如果斜接长度超过 miterLimit 的值，边角会以 lineJoin 的 \"bevel\" 类型来显示 默认10\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public beginStroke(\r\n        color: number,\r\n        lineWidth: number = 1,\r\n        cap: LINE_CAP = LINE_CAP.BUTT,\r\n        join: LINE_JOIN = LINE_JOIN.MITER,\r\n        miter: number = 0,\r\n        alpha: number = 1\r\n    ): this {\r\n        var sColor = getRGBA(hex2string(color), alpha);\r\n        this._stroke(sColor, lineWidth, cap, join, miter);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 画线性或径向渐变的线条\r\n     * @method beginGradientStroke\r\n     * @param {Array} points 四个数字表示线性渐变参考createLinearGradient，六个数字表示径向渐变参考createRadialGradient\r\n     * @param {Array} colors [系数, #式颜色值, 透明度]的数组，比如[[0, \"#ff0000\", 1],[0.5, \"#00ff00\", 1],[1, \"#0000ff\", 1]]\r\n     * @param {number} lineWidth\r\n     * @param {number} cap 线头的形状 0 butt 1 round 2 square 默认 butt\r\n     * @param {number} join 线与线之间的交接处形状 0 miter 1 bevel 2 round  默认miter\r\n     * @param {number} miter 正数,规定最大斜接长度,如果斜接长度超过 miterLimit 的值，边角会以 lineJoin 的 \"bevel\" 类型来显示 默认10\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public beginGradientStroke(\r\n        points: Array<number>,\r\n        colors: any,\r\n        lineWidth: number = 1,\r\n        cap: LINE_CAP = LINE_CAP.BUTT,\r\n        join: LINE_JOIN = LINE_JOIN.MITER,\r\n        miter: number = 10\r\n    ): this {\r\n        this._stroke(getGradientColor(points, colors), lineWidth, cap, join, miter);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 线条位图填充 一般给Flash2x用\r\n     * @method beginBitmapStroke\r\n     * @param {Image} image\r\n     * @param {Array} matrix\r\n     * @param {number} lineWidth\r\n     * @param {string} cap 线头的形状 butt round square 默认 butt\r\n     * @param {string} join 线与线之间的交接处形状 bevel round miter 默认miter\r\n     * @param {number} miter 正数,规定最大斜接长度,如果斜接长度超过 miterLimit 的值，边角会以 lineJoin 的 \"bevel\" 类型来显示 默认10\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public beginBitmapStroke(\r\n        image: any,\r\n        matrix: Array<number>,\r\n        lineWidth: number = 1,\r\n        cap: LINE_CAP = LINE_CAP.BUTT,\r\n        join: LINE_JOIN = LINE_JOIN.MITER,\r\n        miter: number = 10\r\n    ): this {\r\n        let s = this;\r\n        if (matrix) {\r\n            s._isBitmapStroke = matrix;\r\n        }\r\n        s._stroke(getCanvasBitmapStyle(image), lineWidth, cap, join, miter);\r\n        return s;\r\n    }\r\n\r\n    /**\r\n     * @method _stroke\r\n     * @param strokeStyle\r\n     * @param {number} width\r\n     * @param {number} cap\r\n     * @param {number} join\r\n     * @param {number} miter\r\n     * @private\r\n     * @since 1.0.0\r\n     */\r\n    private _stroke(strokeStyle: any, width: number, cap: LINE_CAP, join: LINE_JOIN, miter: number): void {\r\n        let c = this._command;\r\n        c[c.length] = [0, \"lineWidth\", width];\r\n        c[c.length] = [0, \"lineCap\", cap];\r\n        c[c.length] = [0, \"lineJoin\", join];\r\n        c[c.length] = [0, \"miterLimit\", miter];\r\n        c[c.length] = [0, \"strokeStyle\", strokeStyle];\r\n        c[c.length] = [1, \"beginPath\", []];\r\n        this.dirty = true;\r\n    }\r\n\r\n    /**\r\n     * 结束填充\r\n     * @method endFill\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public endFill(): this {\r\n        let s = this;\r\n        let c = s._command;\r\n        let m = s._isBitmapFill;\r\n        if (m) {\r\n            c[c.length] = [2, \"setTransform\", m];\r\n        }\r\n        c[c.length] = ([1, \"fill\", []]);\r\n        if (m) {\r\n            s._isBitmapFill = null;\r\n        }\r\n        return s;\r\n    }\r\n    // protected isUsedToMask: boolean = false;\r\n    /**\r\n     * 结束画线\r\n     * @method endStroke\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public endStroke(): this {\r\n        let s = this;\r\n        let c = s._command;\r\n        let m = s._isBitmapStroke;\r\n        if (m) {\r\n            //如果为2则还需要特别处理\r\n            c[c.length] = [2, \"setTransform\", m];\r\n        }\r\n        c[c.length] = ([1, \"stroke\", []]);\r\n        if (m) {\r\n            s._isBitmapStroke = null;\r\n        }\r\n        return s;\r\n    }\r\n\r\n    /**\r\n     * 重写刷新\r\n     * @method update\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public updateShape(): void {\r\n        let s: Shape = this;\r\n        if (!s.visible) return;\r\n        if (!s.dirty) return;\r\n        s.dirty = false;\r\n        s._boundsID++;//为了Container里calculateBounds的判断;\r\n        //更新缓存\r\n        let cLen: number = s._command.length;\r\n        let leftX: number;\r\n        let leftY: number;\r\n        let buttonRightX: number;\r\n        let buttonRightY: number;\r\n        let i: number;\r\n        //确定是否有数据,如果有数据的话就计算出缓存图的宽和高\r\n        let data: any;\r\n        let lastX = 0;\r\n        let lastY = 0;\r\n        let lineWidth = 0;\r\n        for (i = 0; i < cLen; i++) {\r\n            data = s._command[i];\r\n            if (data[0] == 1) {\r\n                if (data[1] == \"moveTo\" || data[1] == \"lineTo\" || data[1] == \"arcTo\" || data[1] == \"bezierCurveTo\") {\r\n                    if (leftX == undefined) {\r\n                        leftX = data[2][0];\r\n                    }\r\n                    if (leftY == undefined) {\r\n                        leftY = data[2][1];\r\n                    }\r\n                    if (buttonRightX == undefined) {\r\n                        buttonRightX = data[2][0];\r\n                    }\r\n                    if (buttonRightY == undefined) {\r\n                        buttonRightY = data[2][1];\r\n                    }\r\n\r\n                    if (data[1] == \"bezierCurveTo\") {\r\n                        leftX = Math.min(leftX, data[2][0], data[2][2], data[2][4]);\r\n                        leftY = Math.min(leftY, data[2][1], data[2][3], data[2][5]);\r\n                        buttonRightX = Math.max(buttonRightX, data[2][0], data[2][2], data[2][4]);\r\n                        buttonRightY = Math.max(buttonRightY, data[2][1], data[2][3], data[2][5]);\r\n                        lastX = data[2][4];\r\n                        lastY = data[2][5];\r\n                    } else {\r\n                        leftX = Math.min(leftX, data[2][0]);\r\n                        leftY = Math.min(leftY, data[2][1]);\r\n                        buttonRightX = Math.max(buttonRightX, data[2][0]);\r\n                        buttonRightY = Math.max(buttonRightY, data[2][1]);\r\n                        lastX = data[2][0];\r\n                        lastY = data[2][1];\r\n                    }\r\n                } else if (data[1] == \"quadraticCurveTo\") {\r\n                    //求中点\r\n                    let mid1X = (lastX + data[2][0]) * 0.5;\r\n                    let mid1Y = (lastY + data[2][1]) * 0.5;\r\n                    let mid2X = (data[2][0] + data[2][2]) * 0.5;\r\n                    let mid2Y = (data[2][1] + data[2][3]) * 0.5;\r\n                    if (leftX == undefined) {\r\n                        leftX = mid1X;\r\n                    }\r\n                    if (leftY == undefined) {\r\n                        leftY = mid1Y;\r\n                    }\r\n                    if (buttonRightX == undefined) {\r\n                        buttonRightX = mid1X;\r\n                    }\r\n                    if (buttonRightY == undefined) {\r\n                        buttonRightY = mid1Y;\r\n                    }\r\n                    leftX = Math.min(leftX, mid1X, mid2X, data[2][2]);\r\n                    leftY = Math.min(leftY, mid1Y, mid2Y, data[2][3]);\r\n                    buttonRightX = Math.max(buttonRightX, mid1X, mid2X, data[2][2]);\r\n                    buttonRightY = Math.max(buttonRightY, mid1Y, mid2Y, data[2][3]);\r\n                    lastX = data[2][2];\r\n                    lastY = data[2][3];\r\n                } else if (data[1] == \"arc\") {\r\n                    let yuanPointX = data[2][0];\r\n                    let yuanPointY = data[2][1];\r\n                    let radio = data[2][2];\r\n                    let yuanLeftX = yuanPointX - radio;\r\n                    let yuanLeftY = yuanPointY - radio;\r\n                    let yuanBRX = yuanPointX + radio;\r\n                    let yuanBRY = yuanPointY + radio;\r\n                    if (leftX == undefined) {\r\n                        leftX = yuanLeftX;\r\n                    }\r\n                    if (leftY == undefined) {\r\n                        leftY = yuanLeftY;\r\n                    }\r\n                    if (buttonRightX == undefined) {\r\n                        buttonRightX = yuanBRX;\r\n                    }\r\n                    if (buttonRightY == undefined) {\r\n                        buttonRightY = yuanBRY;\r\n                    }\r\n                    leftX = Math.min(leftX, yuanLeftX);\r\n                    leftY = Math.min(leftY, yuanLeftY);\r\n                    buttonRightX = Math.max(buttonRightX, yuanBRX);\r\n                    buttonRightY = Math.max(buttonRightY, yuanBRY);\r\n                }\r\n            } else {\r\n                if (data[1] == \"lineWidth\") {\r\n                    if (lineWidth < data[2]) {\r\n                        lineWidth = data[2];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (leftX != undefined || lineWidth > 0) {\r\n            if (leftX == undefined) {\r\n                leftX = 0;\r\n                leftY = 0;\r\n            }\r\n            leftX -= 20 + lineWidth >> 1;\r\n            leftY -= 20 + lineWidth >> 1;\r\n            buttonRightX += 20 + lineWidth >> 1;\r\n            buttonRightY += 20 + lineWidth >> 1;\r\n            let w = buttonRightX - leftX;\r\n            let h = buttonRightY - leftY;\r\n            s.offsetX = leftX;\r\n            s.offsetY = leftY;\r\n            s._localBoundsSelf.x = leftX + 10;\r\n            s._localBoundsSelf.y = leftY + 10;\r\n            s._localBoundsSelf.width = w - 20;\r\n            s._localBoundsSelf.height = h - 20;\r\n            let _canvas: any = s.canvas;\r\n            let ctx = s.context;\r\n            _canvas.width = w;\r\n            _canvas.height = h;\r\n            ctx.clearRect(0, 0, w, h);\r\n            ctx.setTransform(1, 0, 0, 1, -leftX, -leftY);\r\n            s._drawShape(ctx);\r\n            //贴图锚点修改\r\n            s.anchorTexture.set(-leftX / w, -leftY / h) //= { x: -leftX / w, y: -leftY / h };\r\n        } else {\r\n            s.canvas.width = 0;\r\n            s.canvas.height = 0;\r\n            s.offsetX = 0;\r\n            s.offsetY = 0;\r\n            s._localBoundsSelf.clear();\r\n            s.anchorTexture.set(0, 0) //= { x: 0, y: 0 };\r\n        }\r\n        //更新贴图\r\n        s.texture.update();\r\n        //这个先不管,上面的_localBoundsSelf等都已计算\r\n        s._onTextureUpdate();//更新回去anchorTexture修改时更新了用的时原先的canvas尺寸\r\n    }\r\n\r\n    /**\r\n     * @method _drawShape\r\n     * @param ctx\r\n     * @private\r\n     * @return {void}\r\n     */\r\n    private _drawShape(ctx: any): void {\r\n        let s = this;\r\n        let com = s._command;\r\n        let cLen = com.length;\r\n        let data: any;\r\n        let leftX: number = s.offsetX;\r\n        let leftY: number = s.offsetY;\r\n        for (let i = 0; i < cLen; i++) {\r\n            data = com[i];\r\n            if (data[0] > 0) {\r\n                let paramsLen = data[2].length;\r\n                if (paramsLen == 0) {\r\n                    ctx[data[1]]();\r\n                } else if (paramsLen == 2) {\r\n                    ctx[data[1]](data[2][0], data[2][1]);\r\n                } else if (paramsLen == 4) {\r\n                    ctx[data[1]](data[2][0], data[2][1], data[2][2], data[2][3]);\r\n                } else if (paramsLen == 5) {\r\n                    ctx[data[1]](data[2][0], data[2][1], data[2][2], data[2][3], data[2][4]);\r\n                } else if (paramsLen == 6) {\r\n                    let lx = data[2][4];\r\n                    let ly = data[2][5];\r\n                    if (data[0] == 2) {\r\n                        //位图填充\r\n                        lx -= leftX;\r\n                        ly -= leftY;\r\n                    }\r\n                    ctx[data[1]](data[2][0], data[2][1], data[2][2], data[2][3], lx, ly);\r\n                }\r\n            } else {\r\n                ctx[data[1]] = data[2];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重写hitTestPoint\r\n     * @method  hitTestPoint\r\n     * @param {Point} globalPoint\r\n     * @param {boolean} isMouseEvent\r\n     * @return {any}\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public hitTestPoint(globalPoint: Point, isMouseEvent: boolean = false): DisplayObject {\r\n        let s: Shape = this;\r\n        this.updateShape();//需要更新shape先\r\n        //直接继承\r\n        var hitResult = super.hitTestPoint(globalPoint, isMouseEvent)\r\n        //如果这样返回都没有，直接返回null\r\n        if (!hitResult) return null;\r\n        //如果不是自己，是子级的。直接返回子级\r\n        if (hitResult != s) return hitResult;\r\n        //如果不是像素级碰撞 直接返回自己\r\n        if (!s.hitTestByPixel) return s;\r\n        let p: Point = globalPoint;\r\n        //p要用到获取像素\r\n        if (isMouseEvent) p = s.globalToLocal(globalPoint);\r\n        let image = s._texture;\r\n        //无图数据返回null\r\n        if (!image || image.width == 0 || image.height == 0) return null;\r\n        // var backupCanvas = getBackupCanvas();\r\n        // backupCanvas.width = 1;\r\n        // backupCanvas.height = 1;\r\n        p.x -= s.offsetX;\r\n        p.y -= s.offsetY;\r\n        let ctx = getBackupCanvasCtx() //backupCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);//先移动位置，否则颜色清除有问题,原先修改尺寸就不用\r\n        ctx.clearRect(0, 0, 1, 1);\r\n        ctx.setTransform(1, 0, 0, 1, -p.x, -p.y);\r\n        ctx.drawImage(s.canvas, 0, 0);\r\n        //取imageData对象\r\n        var imageData = ctx.getImageData(0, 0, 1, 1);\r\n        //容错处理(暂时淘宝小程序bug，安卓有可能取到的imageData是undefined)，按照点击了返回\r\n        if (!imageData || !imageData.data) return s;\r\n        //像素透明度不为0；返回自己\r\n        if (imageData.data[3] > 0) return s;\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * 如果有的话,改变矢量对象的边框或者填充的颜色.\r\n     * @method changeColor\r\n     * @param {Object} infoObj\r\n     * @param {string|any} infoObj.fillColor 填充颜色值，如\"#fff\" 或者 \"rgba(255,255,255,1)\"或者是Shape.getGradientColor()方法返回的渐变对象;\r\n     * @param {string} infoObj.strokeColor 线条颜色值，如\"#fff\" 或者 \"rgba(255,255,255,1)\";\r\n     * @param {number} infoObj.lineWidth 线条的粗细，如\"1,2,3...\";\r\n     * @public\r\n     * @since 1.0.2\r\n     */\r\n    public changeColor(infoObj: any): void {\r\n        let s: Shape = this;\r\n        let cLen: number = s._command.length;\r\n        let c = s._command;\r\n        for (let i = 0; i < cLen; i++) {\r\n            if (c[i][0] == 0) {\r\n                if (c[i][1] == \"fillStyle\" && infoObj.fillColor && c[i][2] != infoObj.fillColor) {\r\n                    c[i][2] = infoObj.fillColor;\r\n                    s.dirty = true;\r\n                }\r\n                if (c[i][1] == \"strokeStyle\" && infoObj.strokeColor && c[i][2] != infoObj.strokeColor) {\r\n                    c[i][2] = infoObj.strokeColor;\r\n                    s.dirty = true;\r\n                }\r\n                if (c[i][1] == \"lineWidth\" && infoObj.lineWidth && c[i][2] != infoObj.lineWidth) {\r\n                    c[i][2] = infoObj.lineWidth;\r\n                    s.dirty = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 计算自身盒子前要更新shape\r\n     */\r\n    // _calculateBounds() {\r\n    //     this.updateShape();\r\n    //     super._calculateBounds();\r\n    // }\r\n    //为了updateShape里的_boundId++不会影响calculateBounds里的判断，用不带_的继承，TODO待测试\r\n    calculateBounds() {\r\n        this.updateShape();\r\n        super.calculateBounds();\r\n    }\r\n\r\n    _renderCanvas(renderer) {\r\n        this.updateShape();\r\n        super._renderCanvas(renderer);\r\n    }\r\n    _renderWebGL(renderer) {\r\n        this.updateShape();\r\n        super._renderWebGL(renderer)\r\n    }\r\n\r\n\r\n    public destroy(): void {\r\n        //清除相应的数据引用\r\n        let s = this;\r\n        s._command = null;\r\n        s._isBitmapStroke = null;\r\n        s._isBitmapFill = null;\r\n        super.destroy();\r\n    }\r\n}\r\n","import { Plane, calculatePlaneIndices } from './Plane';\nimport { Texture } from '../texture';\nimport {CanvasRenderer} from '../renderers/CanvasRenderer';\nimport { Mesh } from './Mesh';\n\n//提前计算好的索引\nconst indicesNN = calculatePlaneIndices(4, 4)\n/**\n * The NineSlicePlane allows you to stretch a texture using 9-slice scaling. The corners will remain unscaled (useful\n * for buttons with rounded corners for example) and the other areas will be scaled horizontally and or vertically\n *\n *```js\n * let Plane9 = new NineSlicePlane(Texture.fromImage('BoxWithRoundedCorners.png'), 15, 15, 15, 15);\n *  ```\n * <pre>\n *      A                          B\n *    +---+----------------------+---+\n *  C | 1 |          2           | 3 |\n *    +---+----------------------+---+\n *    |   |                      |   |\n *    | 4 |          5           | 6 |\n *    |   |                      |   |\n *    +---+----------------------+---+\n *  D | 7 |          8           | 9 |\n *    +---+----------------------+---+\n\n *  When changing this objects width and/or height:\n *     areas 1 3 7 and 9 will remain unscaled.\n *     areas 2 and 8 will be stretched horizontally\n *     areas 4 and 6 will be stretched vertically\n *     area 5 will be stretched both horizontally and vertically\n * </pre>\n *\n * @class\n * @extends Mesh 继承MESH\n *\n */\nexport class NineSlicePlane extends Mesh {\n    /**\n     * 原始宽度\n     */\n    private _origWidth: number;\n    /**\n     * 原始高度\n     */\n    private _origHeight: number;\n    /**\n     * 左边宽度\n     */\n    private _leftWidth: number;\n    /**\n     * 右边宽度\n     */\n    private _rightWidth: number;\n    /**\n     * 上边高度\n     */\n    private _topHeight: number;\n    /**\n     * 下边高度\n     */\n    private _bottomHeight: number;\n\n    /**\n     * @param {Texture} texture - The texture to use on the NineSlicePlane.\n     * @param {int} [leftWidth=10] size of the left vertical bar (A)\n     * @param {int} [topHeight=10] size of the top horizontal bar (C)\n     * @param {int} [rightWidth=10] size of the right vertical bar (B)\n     * @param {int} [bottomHeight=10] size of the bottom horizontal bar (D)\n     */\n    constructor(texture: Texture, leftWidth: number = 10, topHeight: number = 10, rightWidth: number = 10, bottomHeight: number = 10) {\n        super(texture);\n        //考虑对于未加载好的图片怎么处理吧，肯定需要加在onTextureUpdate的\n        this._origWidth = texture.orig.width;\n        this._origHeight = texture.orig.height;\n\n        this._width = this._origWidth;\n\n        this._height = this._origHeight;\n\n        this._leftWidth = leftWidth;\n\n        this._rightWidth = rightWidth;\n\n        this._topHeight = topHeight;\n\n        this._bottomHeight = bottomHeight;\n\n        //计算索引，完全不用变，所以提前计算\n        this._indices = indicesNN;\n        //顶点数量长度可以确定先\n        this._vertices = new Float32Array(4 * 4 * 2);\n        //uv长度也可以确定先\n        this._uvs = new Float32Array(4 * 4 * 2);\n\n        this.refresh(true);\n    }\n\n    /**\n     * Updates the horizontal vertices.\n     *\n     */\n    private updateHorizontalVertices() {\n        const vertices = this._vertices;\n\n        const h = this._topHeight + this._bottomHeight;\n        const scale = this._height > h ? 1.0 : this._height / h;\n\n        vertices[9] = vertices[11] = vertices[13] = vertices[15] = this._topHeight * scale;\n        vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - (this._bottomHeight * scale);\n        vertices[25] = vertices[27] = vertices[29] = vertices[31] = this._height;\n    }\n\n    /**\n     * Updates the vertical vertices.\n     *\n     */\n    private updateVerticalVertices() {\n        const vertices = this._vertices;\n\n        const w = this._leftWidth + this._rightWidth;\n        const scale = this._width > w ? 1.0 : this._width / w;\n\n        vertices[2] = vertices[10] = vertices[18] = vertices[26] = this._leftWidth * scale;\n        vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - (this._rightWidth * scale);\n        vertices[6] = vertices[14] = vertices[22] = vertices[30] = this._width;\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     * 考虑是否用缓存，不然每次相当于9次绘制，到时应该是集成到一个插件里的\n     * @private\n     * @param {CanvasRenderer} renderer - The canvas renderer to render with.\n     */\n    _renderCanvas(renderer: CanvasRenderer) {\n        const context = renderer.context;\n        context.globalAlpha = this._worldAlpha;\n        renderer.setBlendMode(this.blendMode);\n        const transform = this.worldMatrix;\n        context.setTransform(\n            transform.a,\n            transform.b,\n            transform.c,\n            transform.d,\n            transform.tx,\n            transform.ty\n        );\n        const base = this.texture.baseTexture;\n        const textureSource = base.source;\n        const w = base.width;\n        const h = base.height;\n\n        this.drawSegment(context, textureSource, w, h, 0, 1, 10, 11);\n        this.drawSegment(context, textureSource, w, h, 2, 3, 12, 13);\n        this.drawSegment(context, textureSource, w, h, 4, 5, 14, 15);\n        this.drawSegment(context, textureSource, w, h, 8, 9, 18, 19);\n        this.drawSegment(context, textureSource, w, h, 10, 11, 20, 21);\n        this.drawSegment(context, textureSource, w, h, 12, 13, 22, 23);\n        this.drawSegment(context, textureSource, w, h, 16, 17, 26, 27);\n        this.drawSegment(context, textureSource, w, h, 18, 19, 28, 29);\n        this.drawSegment(context, textureSource, w, h, 20, 21, 30, 31);\n    }\n\n    /**\n     * Renders one segment of the plane.\n     * to mimic the exact drawing behavior of stretching the image like WebGL does, we need to make sure\n     * that the source area is at least 1 pixel in size, otherwise nothing gets drawn when a slice size of 0 is used.\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} context - The context to draw with.\n     * @param {CanvasImageSource} textureSource - The source to draw.\n     * @param {number} w - width of the texture\n     * @param {number} h - height of the texture\n     * @param {number} x1 - x index 1\n     * @param {number} y1 - y index 1\n     * @param {number} x2 - x index 2\n     * @param {number} y2 - y index 2\n     */\n    private drawSegment(context, textureSource, w, h, x1, y1, x2, y2) {\n        // otherwise you get weird results when using slices of that are 0 wide or high.\n        const uvs = this._uvs;\n        const vertices = this._vertices;\n\n        let sw = (uvs[x2] - uvs[x1]) * w;\n        let sh = (uvs[y2] - uvs[y1]) * h;\n        let dw = vertices[x2] - vertices[x1];\n        let dh = vertices[y2] - vertices[y1];\n\n        // make sure the source is at least 1 pixel wide and high, otherwise nothing will be drawn.\n        if (sw < 1) {\n            sw = 1;\n        }\n\n        if (sh < 1) {\n            sh = 1;\n        }\n\n        // make sure destination is at least 1 pixel wide and high, otherwise you get\n        // lines when rendering close to original size.\n        if (dw < 1) {\n            dw = 1;\n        }\n\n        if (dh < 1) {\n            dh = 1;\n        }\n\n        context.drawImage(textureSource, uvs[x1] * w, uvs[y1] * h, sw, sh, vertices[x1], vertices[y1], dw, dh);\n    }\n\n    /**\n     * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     * \n     * @member {number}\n     */\n    get width() {\n        return this._width;\n    }\n\n    /**\n     * 不再修改缩放，修改uv和顶点\n     */\n    set width(value) {\n        this._width = value;\n        this._needRefresh = true;\n    }\n\n    /**\n     * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     */\n    get height() {\n        return this._height;\n    }\n\n    set height(value) {\n        this._height = value;\n        this._needRefresh = true;\n    }\n\n    /**\n     * The width of the left column\n     *\n     * @member {number}\n     */\n    get leftWidth() {\n        return this._leftWidth;\n    }\n\n    set leftWidth(value) {\n        this._leftWidth = value;\n        this._needRefresh = true;\n    }\n\n    /**\n     * The width of the right column\n     *\n     * @member {number}\n     */\n    get rightWidth() {\n        return this._rightWidth;\n    }\n\n    set rightWidth(value) {\n        this._rightWidth = value;\n        this._needRefresh = true;\n    }\n\n    /**\n     * The height of the top row\n     *\n     * @member {number}\n     */\n    get topHeight() {\n        return this._topHeight;\n    }\n\n    set topHeight(value) {\n        this._topHeight = value;\n        this._needRefresh = true;\n    }\n\n    /**\n     * The height of the bottom row\n     *\n     * @member {number}\n     */\n    get bottomHeight() {\n        return this._bottomHeight;\n    }\n\n    set bottomHeight(value) {\n        this._bottomHeight = value;\n        this._needRefresh = true;\n    }\n\n    /**\n     * Refreshes NineSlicePlane coords. All of them.\n     */\n    _refresh() {\n\n        const uvs = this._uvs;\n        const texture = this.texture;\n\n        this._origWidth = texture.orig.width;\n        this._origHeight = texture.orig.height;\n\n        const _uvw = 1.0 / this._origWidth;\n        const _uvh = 1.0 / this._origHeight;\n\n        uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n        uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n        uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n        uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n\n        uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n        uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - (_uvw * this._rightWidth);\n        uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n        uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - (_uvh * this._bottomHeight);\n\n        this.updateHorizontalVertices();\n        this.updateVerticalVertices();\n\n        this._vertexDirty++;\n\n        this.multiplyUvs();\n    }\n}\n","import { Mesh } from './Mesh';\nimport { Texture } from '../texture';\nimport { Point } from '../math';\n\n//  function testRope() {\n//     let count = 0;\n//     // build a rope!\n//     const ropeLength = 918 / 20;\n//     const points = [];\n//     for (let i = 0; i < 20; i++) {\n//         points.push(new Point(i * ropeLength, 0));\n//     }\n\n//     const strip = new Rope(Texture.fromImage(\"snake.png\"), points);\n\n//     strip.x = -459;\n\n//     const snakeContainer = new Container();\n//     snakeContainer.x = 400;\n//     snakeContainer.y = 300;\n\n//     snakeContainer.scale.set(800 / 1100, 800 / 1100);\n//     this.addChild(snakeContainer);\n\n//     snakeContainer.addChild(strip);\n//     this.addEventListener(Event.ENTER_FRAME, () => {\n//         count += 0.1;\n//         for (let i = 0; i < points.length; i++) {\n//             points[i].y = Math.sin((i * 0.5) + count) * 30;\n//             points[i].x = i * ropeLength + Math.cos((i * 0.3) + count) * 20;\n//         }\n//         strip.refreshVertices()\n//     }, this)\n// }\n/**\n * 为了能加入批处理，不用TRIANGLE_STRIP方式渲染(有需要看v4版本的pixi)，还是用TRIANGLE\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new Point(i * 50, 0));\n * };\n * let rope = new Rope(Texture.fromImage(\"snake.png\"), points);\n *  ```\n *\n *\n */\nexport class Rope extends Mesh {\n    /**\n     * 一组点\n     */\n    points: Point[];\n    /**\n     * 是否自动更新顶点，为true,自动更新顶点，否则在points里顶点修改后，自行refreshVertices\n     */\n    autoUpdateVertices: boolean;\n\n    /**\n     * 以横向的为基准，纹理高度\n     */\n    private textureHeight: number;\n    /**\n     * @param {Texture} texture\n     * @param {Point[]} points\n     */\n    constructor(texture: Texture, points: Point[]) {\n        super(texture);\n\n        this.points = points;\n\n        this._vertices = new Float32Array(points.length * 4);\n\n        this._uvs = new Float32Array(points.length * 4);\n\n        this._indices = new Uint16Array((points.length - 1) * 6);\n\n        this.textureHeight = texture.height;\n\n        this.refresh(true);\n        this.refreshVertices();\n    }\n\n    /**\n     * 计算索引和uv，和顶点计算的要分开\n     */\n    _refresh() {\n        const points = this.points;\n\n        //没点，或贴图uv为空\n        if (points.length < 1 || !this.texture._uvs) return;\n\n        //如果顶点数量有变\n        if (this._vertices.length / 4 !== points.length) {\n            this._vertices = new Float32Array(points.length * 4);\n            this._uvs = new Float32Array(points.length * 4);\n            this._indices = new Uint16Array((points.length - 1) * 6);\n        }\n\n        const uvs = this._uvs;\n\n        const indices = this._indices;\n\n        uvs[0] = 0;\n        uvs[1] = 0;\n        uvs[2] = 0;\n        uvs[3] = 1;\n\n        // indices[0] = 0;\n        // indices[1] = 1;\n\n        const total = points.length;\n\n        for (let i = 1; i < total; i++) {\n            // time to do some smart drawing!\n            let index = i * 4;\n            const amount = i / (total - 1);\n\n            uvs[index] = amount;\n            uvs[index + 1] = 0;\n\n            uvs[index + 2] = amount;\n            uvs[index + 3] = 1;\n        }\n\n        let indexCount = 0;\n\n        for (let i = 0; i < total - 1; i++) {\n            const index = i * 2;\n\n            indices[indexCount++] = index;\n            indices[indexCount++] = index + 1;\n            indices[indexCount++] = index + 2;\n\n            indices[indexCount++] = index + 2;\n            indices[indexCount++] = index + 1;\n            indices[indexCount++] = index + 3;\n        }\n\n        this.multiplyUvs();\n        // this.refreshVertices();\n    }\n\n    /**\n     * 根据points刷新顶点\n     */\n    refreshVertices() {\n        const points = this.points;\n\n        //\n        if (points.length < 1) return;\n\n        //如果points数量修改过，去执行_refresh\n        if (this._vertices.length / 4 !== points.length) {\n            this._refresh();//里面肯定会把_vertices的长度矫正\n            this.refreshVertices();\n            return;\n        }\n\n        let lastPoint = points[0];\n        let nextPoint;\n        let perpX = 0;\n        let perpY = 0;\n\n        // this.count -= 0.2;\n\n        const vertices = this._vertices;\n        const total = points.length;\n\n        for (let i = 0; i < total; i++) {\n            const point = points[i];\n            const index = i * 4;\n\n            if (i < points.length - 1) {\n                nextPoint = points[i + 1];\n            }\n            else {\n                nextPoint = point;\n            }\n\n            perpY = -(nextPoint.x - lastPoint.x);\n            perpX = nextPoint.y - lastPoint.y;\n\n            let ratio = (1 - (i / (total - 1))) * 10;\n\n            if (ratio > 1) {\n                ratio = 1;\n            }\n\n            const perpLength = Math.sqrt((perpX * perpX) + (perpY * perpY));\n            const num = this.textureHeight / 2; // (20 + Math.abs(Math.sin((i + this.count) * 0.3) * 50) )* ratio;\n\n            perpX /= perpLength;\n            perpY /= perpLength;\n\n            perpX *= num;\n            perpY *= num;\n\n            vertices[index] = point.x + perpX;\n            vertices[index + 1] = point.y + perpY;\n            vertices[index + 2] = point.x - perpX;\n            vertices[index + 3] = point.y - perpY;\n\n            lastPoint = point;\n        }\n        //标记修改\n        this._vertexDirty++;\n    }\n\n    update() {\n        super.update();\n        //自动更新顶点，或者纹理高度有修改\n        if (this.autoUpdateVertices || this.textureHeight !== this.texture.height) {\n            this.textureHeight = this.texture.height\n            this.refreshVertices();\n        }\n    }\n}\n","export * from \"./EditableText\";//淘宝不可用\r\nexport * from \"./InputText\";//问题有点多，先不用\r\nexport * from \"./TextField\";\r\nexport * from \"./BitmapText\";","import { TextField } from \"./TextField\";\nimport { MouseEvent } from \"../events\";\nimport { osType } from \"../const\";\n\n\n/**\n * 这是最新的20200918；到时放到引擎里去\n */\nexport class EditableText extends TextField {\n\n    htmlElement: any;\n    private _prompt: string = \"\";\n    /**\n     * 未输入文本时显示的文字\n     */\n    get prompt() {\n        return this._prompt\n    }\n    set prompt(value: string) {\n        if (this._prompt != value) {\n            this._prompt = value;\n            this[\"dirty\"] = true;\n            //如果无文本直接修改\n            if (!this.htmlElement || !this.htmlElement.value) {\n                this.text = this._prompt;\n            }\n        }\n    }\n    private _promptColor: string = \"#eeeeee\";\n    /**\n     * 未输入文本时显示文字的颜色\n     */\n    get promptColor() {\n        return this._promptColor\n    }\n    set promptColor(value: string) {\n        if (this._promptColor != value) {\n            this._promptColor = value;\n            this[\"dirty\"] = true;\n            //如果无文本直接修改\n            if (!this.htmlElement || !this.htmlElement.value) {\n                this.fillColor = this._promptColor;\n            }\n        }\n    }\n\n    private _textColor: string = \"#000000\";\n    /**\n     * 文本颜色，不用fillColor为了和父类区分\n     */\n    get textColor() {\n        return this._textColor\n    }\n    set textColor(value: string) {\n        if (this._textColor != value) {\n            this._textColor = value;\n            this[\"dirty\"] = true;\n            //如果又文本直接修改\n            if (this.htmlElement && this.htmlElement.value) {\n                this.fillColor = this._textColor;\n            }\n        }\n    }\n    /**\n     * 获取输入框内容\n     */\n    get inputValue(): string {\n        return this.htmlElement && this.htmlElement.value || (this.text != this._prompt ? this.text : \"\")\n    }\n    set inputValue(v: string) {\n        if (this.htmlElement) this.htmlElement.value = v;\n        this.text = v;\n        this.fillColor = this.textColor;\n    }\n\n    public constructor() {\n        super();\n        this._instanceType = \"EditableText\";\n        var s: EditableText = this;\n        var remove = function () {\n            //失去焦点\n            s.htmlElement && s.htmlElement.blur();\n            //隐藏\n            s.htmlElement.style.display = \"none\";\n            //赋值\n            if (s.htmlElement.value) {\n                s.text = s.htmlElement.value;\n                s.fillColor = s.textColor;\n            } else {\n                s.text = s.prompt;\n                s.fillColor = s.promptColor;\n            }\n            window.scrollTo(0, 0)\n        };\n\n        this.addEventListener(MouseEvent.CLICK, function (e: Event) {\n            s.initElement()\n            //font包括字体和大小\n            s.htmlElement.style.font = s.size + \"px \" + this.font;\n            s.htmlElement.style.color = s.textColor;\n            s.htmlElement.style.textAlign = s.textAlign;\n            //     s.htmlElement.setAttribute(\"class\", \"inputTextFor\");\n            //    .inputTextFor:: -webkit - input - placeholder {\n            //         text - align: center;\n            //     }\n            s.htmlElement.style.height = s.textHeight + \"px\";\n            s.htmlElement.style.width = s.textWidth + \"px\";\n            //如果文案不是默认的\n            if (s.text !== s.prompt) s.htmlElement.value = s.text;//这样判断还是可能有问题，TODO\n            s.text = \"\";\n            s.htmlElement.style.display = \"block\";\n            s.htmlElement.focus();\n\n            let mtx = s.transform.worldMatrix;\n            let d = s.stage[\"_dpi\"] || s.stage[\"dpi\"]//devicePixelRatio || 1;//用舞台的,能点击肯定有舞台,所以不做存在判断\n            // console.log(mtx)\n            //位置\n            s.htmlElement.style.transform = s.htmlElement.style.webkitTransform = \"matrix(\" + (mtx.a / d).toFixed(4) + \",\" + (mtx.b / d).toFixed(4) + \",\" + (mtx.c / d).toFixed(4) + \",\" + (mtx.d / d).toFixed(4) + \",\" + (mtx.tx / d).toFixed(4) + \",\" + (mtx.ty / d).toFixed(4) + \")\";\n\n            s.stage.once(MouseEvent.MOUSE_UP, remove);\n        });\n\n    }\n    private initElement() {\n        let s: EditableText = this;\n        if (s.htmlElement) return;\n        s.htmlElement = document.createElement(\"input\");\n        let htmlElement: HTMLInputElement = s.htmlElement, style = htmlElement.style;\n        htmlElement.type = \"input\";\n        style.position = \"absolute\";\n        style.display = \"none\";\n        //@ts-ignore\n        style.transformOrigin = style.WebkitTransformOrigin = style.webkitTransformOrigin = \"0 0 0\";\n\n        style.outline = \"none\";\n        style.borderWidth = \"thin\";\n        style.borderColor = \"#000\";\n        //默认文案\n        htmlElement.placeholder = \"\";\n\n        /////////////////////设置边框//////////////\n        style.borderStyle = \"none\";\n        style.backgroundColor = \"transparent\";\n        // s.htmlElement.style.borderStyle = \"inset\";\n        // s.htmlElement.style.backgroundColor = \"#fff\";\n\n        //color:blue; text-align:center\"\n        // if (this.inputType == 2) {\n        //     this.htmlElement.style.lineHeight = lineSpacing + \"px\";\n        // }\n        // s.stage.rootDiv.insertBefore(s.htmlElement, s.stage.rootDiv.childNodes[0]);\n        //TODO到时需要修改，记录下,stage加上canvas索引，\n        var divParent = s.stage[\"canvas\"].parentNode;\n        if (divParent) {\n            divParent.insertBefore(htmlElement, divParent.childNodes[0])\n        } else {\n            document.body.appendChild(htmlElement)\n        }\n        //添加\n        htmlElement.onblur = function () {\n            if (osType == \"ios\") {\n                window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n            }\n        };\n    }\n}\n","import { osType, TEXT_lINETYPE } from \"../const\";\nimport { Event } from \"../events/Event\";\nimport { MouseEvent } from \"../events/MouseEvent\";\nimport { FloatDisplay } from \"../display/FloatDisplay\";\nimport { TextField } from \"./TextField\";\n\n/**\n * 纯dom的输入文本,待测试\n * 输入,密码,文本区域\n */\nexport class InputText extends FloatDisplay {\n    /**\n     * 输入文本的类型.\n     * @property inputType\n     * @public\n     * @since 1.0.0\n     * @type {number} 0 input 1 password 2 mulit\n     * @default 0\n     */\n    public inputType: number = 0;\n\n    /**\n     * 在手机端是否需要自动收回软键盘，在pc端此参数无效\n     * @property isAutoDownKeyBoard\n     * @type {boolean}\n     * @since 1.0.3\n     * @default true\n     */\n    public isAutoDownKeyBoard: boolean = true;\n    /**\n     * @property _inputTypeList\n     * @static\n     * @type {string[]}\n     * @private\n     * @since 2.0.0\n     */\n    private static _inputTypeList: Array<string> = [\"input\", \"password\", \"textarea\"];\n    /**\n     * @method InputText\n     * @public\n     * @since 1.0.0\n     * @param {number} inputType 0 input 1 password 2 multiline\n     * @example\n     *      var inputText=new InputText();\n     *      inputText.initInfo('aa','#ffffff','left',14,'微软雅黑',100,20);\n     */\n    public constructor(inputType: number = 0) {\n        super();\n        var input: any = null;\n        let s: InputText = this;\n        s._instanceType = \"InputText\";\n        if (inputType < 2) {\n            input = document.createElement(\"input\");\n            input.type = InputText._inputTypeList[inputType];\n        } else {\n            input = document.createElement(\"textarea\");\n            input.style.resize = \"none\";\n            input.style.overflow = \"hidden\";\n        }\n        s.inputType = inputType;\n        var remove = function () {\n            if (s.isAutoDownKeyBoard && osType != \"pc\") {\n                s.htmlElement && s.htmlElement.blur();\n                window.scrollTo(0, 0)\n            }\n        }.bind(s);\n        s.addEventListener(Event.REMOVED_FROM_STAGE, function (e: Event) {\n            s.stage.removeEventListener(MouseEvent.MOUSE_UP, remove);\n        });\n        s.addEventListener(Event.ADDED_TO_STAGE, function (e: Event) {\n            //点击stage任何地方都失去焦点\n            s.stage.addEventListener(MouseEvent.MOUSE_UP, remove);\n\n        });\n        s.init(input);\n    }\n\n    /**\n     * 初始化输入文本\n     * @method init\n     * @param htmlElement\n     * @public\n     * @return {void}\n     * @since 1.0.0\n     */\n    public init(htmlElement: any): void {\n        super.init(htmlElement);\n        //默认设置\n        let s = this;\n        s.htmlElement.style.outline = \"none\";\n        s.htmlElement.style.borderWidth = \"thin\";\n        s.htmlElement.style.borderColor = \"#000\";\n    }\n    /**\n     * 被始化输入文件的一些属性\n     * @method initInfo\n     * @public\n     * @since 1.0.0\n     * @param {string} text 默认文字\n     * @param {string}color 文字颜色\n     * @param {string}align 文字的对齐方式\n     * @param {number}size  文字大小\n     * @param {string}font  文字所使用的字体\n     * @param {number}textWidth 文本宽\n     * @param {number}textHeight 文本高\n     * @param {number}lineHeight 如果是多行,请设置行高\n     * @param {boolean}showBorder 是否需要显示边框\n     */\n    public initInfo(\n        text: string,\n        color: string,\n        align: string,\n        size: number,\n        font: string,\n        textWidth: number,\n        textHeight: number,\n        lineHeight?: number,\n        showBorder: boolean = false,\n    ): void {\n        let s: InputText = this;\n        s.htmlElement.placeholder = text;\n        //font包括字体和大小\n        s.htmlElement.style.font = size + \"px \" + (font || \"微软雅黑\");\n        s.htmlElement.style.color = color;\n        s.htmlElement.style.textAlign = align;\n        /////////////////////设置边框//////////////\n        s.border = showBorder;\n        //color:blue; text-align:center\"\n        s.textWidth = textWidth;\n        s.textHeight = textHeight;\n        if (s.inputType == 2) {\n            s.htmlElement.style.lineHeight = lineHeight + \"px\";\n        }\n    }\n\n    /**\n     * @property lineSpacing\n     * @public\n     * @since 2.0.0\n     * @param {number} value\n     */\n    public set lineSpacing(value: number) {\n        this.htmlElement.style.lineHeight = value + \"px\";\n    }\n    public get lineSpacing(): number {\n        return parseInt(this.htmlElement.style.lineHeight);\n    }\n    /**\n     * 设置文本是否为粗体\n     * @property bold\n     * @param {boolean} bold true或false\n     * @public\n     * @since 1.0.3\n     */\n    public set bold(bold: boolean) {\n        let ss = this.htmlElement.style;\n        if (bold) {\n            ss.fontWeight = \"bold\";\n        } else {\n            ss.fontWeight = \"normal\";\n        }\n    }\n\n    public get bold(): boolean {\n        return this.htmlElement.style.fontWeight == \"bold\";\n    }\n\n    /**\n     * 设置文本是否倾斜\n     * @property italic\n     * @param {boolean} italic true或false\n     * @public\n     * @since 1.0.3\n     */\n    public set italic(italic: boolean) {\n        let s = this.htmlElement.style;\n        if (italic) {\n            s.fontStyle = \"italic\";\n        } else {\n            s.fontStyle = \"normal\";\n        }\n    }\n\n    public get italic(): boolean {\n        return this.htmlElement.style.fontStyle == \"italic\"\n    }\n    /**\n     * 文本的行高\n     * @property textHeight\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     * @default 0\n     */\n    public set textHeight(value: number) {\n        this.htmlElement.style.height = value + \"px\";\n    }\n\n    public get textHeight(): number {\n        return parseInt(this.htmlElement.style.height);\n    }\n    /**\n     * 文本的宽\n     * @property textWidth\n     * @public\n     * @since 1.0.0\n     * @type {number}\n     * @default 0\n     */\n    public set textWidth(value: number) {\n        this.htmlElement.style.width = value + \"px\";\n    }\n\n    public get textWidth(): number {\n        return parseInt(this.htmlElement.style.width);\n    }\n    /**\n     * 设置文本颜色\n     * @property color\n     * @param {boolean} italic true或false\n     * @public\n     * @since 1.0.3\n     */\n    public set color(value: string) {\n        var ss = this.htmlElement.style;\n        ss.color = value;\n    }\n\n    public get color(): string {\n        return this.htmlElement.style.color;\n    }\n\n    /**\n     * 设置或获取是否有边框\n     * @property property\n     * @param {boolean} show true或false\n     * @public\n     * @since 1.0.3\n     */\n    public set border(show: boolean) {\n        let s = this;\n        if (show) {\n            s.htmlElement.style.borderStyle = \"inset\";\n            s.htmlElement.style.backgroundColor = \"#fff\";\n        } else {\n            s.htmlElement.style.borderStyle = \"none\";\n            s.htmlElement.style.backgroundColor = \"transparent\";\n        }\n    }\n\n    public get border(): boolean {\n        return this.htmlElement.style.borderStyle != \"none\";\n    }\n\n    /**\n     * 获取或设置输入文本的值\n     * 之前的getText 和setText 已废弃\n     * @property text\n     * @public\n     * @since 1.0.3\n     * @return {string}\n     */\n    public get text(): string {\n        let s = this;\n        if (s.htmlElement) {\n            return s.htmlElement.value;\n        }\n    }\n\n    public set text(value: string) {\n        let s = this;\n        if (s.htmlElement) {\n            s.htmlElement.value = value;\n        }\n    }\n\n    /**\n     * 输入文本的最大输入字数\n     * @public\n     * @since 1.1.0\n     * @property maxCharacters\n     * @return {number}\n     */\n    public get maxCharacters(): number {\n        let l: any = this.htmlElement.getAttribute(\"maxlength\");\n        if (l === null) {\n            return 0;\n        } else {\n            return l;\n        }\n    }\n    public set maxCharacters(value: number) {\n        this.htmlElement.setAttribute(\"maxlength\", value);\n    }\n\n    /**\n     * 转换为动态文本，位置上下会有偏差，再说，基本用于截图时，需要截到输入文本时\n     * @param textField \n     */\n    public convertToTextField(textField?: TextField): TextField {\n        if (!this.htmlElement || !this.text) return null;\n        textField = textField || new TextField();\n        textField.fillColor = this.color;\n        textField.text = this.text;\n        textField.size = parseInt(this.htmlElement.style.font.split(\"px\")[0]);\n        textField.textAlign = this.htmlElement.style.textAlign;\n        textField.bold = this.bold;\n        textField.italic = this.italic;\n        textField.textWidth = this.textWidth;\n        textField.lineType = this.inputType == 2 ? TEXT_lINETYPE.MULTI : TEXT_lINETYPE.SINGLE;\n        textField.position.copy(this.position);\n        textField.scale.copy(this.scale);\n        textField.rotation = this.rotation;\n        return textField\n    }\n}\n","\r\n\r\nimport { TEXT_ALIGN, VERTICAL_ALIGN } from \"../const\";\r\nimport Texture from \"../texture/Texture\";\r\nimport { Sprite, Container } from \"../display\";\r\n\r\n/**\r\n * 单位图字缓存\r\n */\r\nconst bitmapTextSinglePool: BitmapTextSingle[] = []\r\n\r\n/**\r\n * 位图文字\r\n * 暂不做通用，以后再说，否则回收问题\r\n */\r\nexport class BitmapText extends Container {\r\n    private textures: { [text: string]: Texture }\r\n    /**\r\n     * 水平对齐方式，默认居中\r\n     * 改变x坐标原点\r\n     */\r\n    get textAlign() {\r\n        return this._textAlign\r\n    }\r\n    set textAlign(value: TEXT_ALIGN) {\r\n        if (this._textAlign !== value) {\r\n            this._textAlign = value;\r\n            this.adaptate();\r\n        }\r\n    }\r\n    private _textAlign: TEXT_ALIGN = TEXT_ALIGN.CENTER;\r\n    /**\r\n     * 垂直居中方式，默认居中\r\n     * 改变y坐标原点\r\n     */\r\n    get verticalAlign() {\r\n        return this._verticalAlign\r\n    }\r\n    set verticalAlign(value: VERTICAL_ALIGN) {\r\n        if (this._verticalAlign !== value) {\r\n            this._verticalAlign = value;\r\n            this.adaptate();\r\n        }\r\n    }\r\n    private _verticalAlign: VERTICAL_ALIGN = VERTICAL_ALIGN.MIDDLE;\r\n    /**\r\n     * 文字间隙，为了有些文本不能紧贴（切图问题），可设置负数解决\r\n     */\r\n    get gap(): number {\r\n        return this._gap;\r\n    };\r\n    set gap(value: number) {\r\n        if (this._gap != value) {\r\n            this._gap = value;\r\n            this.adaptate();\r\n        }\r\n    };\r\n    private _gap: number = 0;\r\n    /**\r\n     * 文本\r\n     */\r\n    private _text: string;\r\n    get text(): string {\r\n        return this._text\r\n    }\r\n    /**\r\n     * 设置文本\r\n     */\r\n    set text(value: string) {\r\n        if (value === this._text) return;\r\n        this._text = value;\r\n        var arr = value || [];\r\n        //\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (this.children[i]) {\r\n                //先用完原先$children里的\r\n                this.children[i][\"text\"] = arr[i];\r\n            } else {\r\n                //如果没有就\r\n                let o: BitmapTextSingle = bitmapTextSinglePool.shift();\r\n                if (!o) {\r\n                    o = new BitmapTextSingle(this.textures);\r\n                } else {\r\n                    o.reset(this.textures)\r\n                }\r\n                o.text = arr[i];\r\n                this.addChild(o)\r\n            }\r\n        }\r\n        //如果多了，去掉后面的，回收\r\n        if (this.children.length > arr.length) {\r\n            //移除后序\r\n            for (var i = this.children.length - 1; i >= arr.length; i--) {\r\n                let c = this.children[i] as BitmapTextSingle;\r\n                this.removeChild(c);\r\n                bitmapTextSinglePool.push(c);\r\n            }\r\n        }\r\n        //适配\r\n        this.adaptate()\r\n    }\r\n    /**\r\n     * \r\n     * @param textures 0到9的贴图\r\n     */\r\n    constructor(textures: { [text: string]: Texture }) {\r\n        super();\r\n        this.textures = textures;\r\n    }\r\n\r\n    /**\r\n     * 适配，\r\n     */\r\n    private adaptate() {\r\n        if (!this.children.length) return\r\n        var len = this.children.length;\r\n        //算总长度\r\n        var sum = 0;\r\n        for (var m = 0; m < len; m++) {\r\n            sum += this.children[m].width;\r\n        }\r\n        sum += (len - 1) * this._gap;\r\n        //算出左边第一个元素的位置\r\n        var left: number;\r\n        if (this._textAlign == TEXT_ALIGN.LEFT) {\r\n            left = 0\r\n        }\r\n        else if (this._textAlign == TEXT_ALIGN.RIGHT) {\r\n            left = -sum\r\n        } else {\r\n            left = -sum / 2\r\n        }\r\n        var temSum = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            this.children[i].x = left + temSum\r\n            temSum += this.children[i].width + this._gap;\r\n        }\r\n        //垂直居中，找出高度最大的图片\r\n        // var maxH = 0;\r\n        // for (var m = 0; m < len; m++) {\r\n        //     maxH = Math.max(maxH, this.children[m].height)\r\n        // }\r\n        // var up: number;\r\n        // if (this._verticalAlign == VERTICAL_ALIGN.UP) {\r\n        //     up = 0\r\n        // }\r\n        // else if (this._verticalAlign == VERTICAL_ALIGN.DOWN) {\r\n        //     up = -maxH\r\n        // } else {\r\n        //     up = -maxH / 2\r\n        // }\r\n        // for (var i = 0; i < this.children.length; i++)this.children[i].y = up;\r\n        var up: number = 0;\r\n        if (this._verticalAlign == VERTICAL_ALIGN.DOWN) {\r\n            up = -1;\r\n        } else if (this._verticalAlign == VERTICAL_ALIGN.MIDDLE) {\r\n            up = -1 / 2;\r\n        }\r\n        this.children.forEach((c) => {\r\n            c.y = c.height * up;\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 位图字，单个\r\n */\r\nclass BitmapTextSingle extends Sprite {\r\n    /**\r\n     * 文字表\r\n     */\r\n    private textures: {\r\n        [text: string]: Texture\r\n    };\r\n    /**\r\n     * 单字\r\n     */\r\n    private _text: string;\r\n    get text(): string {\r\n        return this._text\r\n    }\r\n    set text(value: string) {\r\n        // if (value == this._text) return;\r\n        this._text = value;\r\n        this.texture = this.textures[this._text];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param textures 贴图表，{\"0\":texture1,\"1\":texture2,\".\":texture3}\r\n     */\r\n    constructor(textures: { [text: string]: Texture }) {\r\n        super();\r\n        this.textures = textures;\r\n    }\r\n\r\n    /**\r\n     * 替换资源，基本不用吧应该\r\n     * @param textures \r\n     */\r\n    reset(textures: { [text: string]: Texture }) {\r\n        this.textures = textures\r\n    }\r\n}","import BaseTexture from \"./BaseTexture\";\r\nimport { Rectangle } from \"../math\";\r\nimport Texture from \"./Texture\";\r\n\r\ninterface dataTm {\r\n    x: number,  //x,y,w,h为图集上的切图位置数据\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n    ox: number,  //ox,oy为偏移数据，trim裁剪的数据，在orig上的偏移{x:0,y:0,width:200,height:200}\r\n    oy: number,\r\n    sw: number, //sw,sh为原始宽高\r\n    sh: number,\r\n    ro: boolean, //是否旋转\r\n}\r\n//简化后的格式\r\nvar expData = {\r\n    \"actOverTitle.png\": { \"x\": 1, \"y\": 1, \"w\": 474, \"h\": 172, \"ox\": 0, \"oy\": 0, \"sw\": 474, \"sh\": 172, \"ro\": false },\r\n    \"hasActOverLotBtn.png\": { \"x\": 1, \"y\": 175, \"w\": 259, \"h\": 85, \"ox\": 0, \"oy\": 0, \"sw\": 259, \"sh\": 85, \"ro\": false }\r\n}\r\n\r\n/**\r\n * \r\n * @param baseTexture \r\n * @param altaData \r\n * @return 返回贴图集。不常用\r\n */\r\nexport function createTextureSheet(baseTexture: BaseTexture, altaData): { [key: string]: Texture } {\r\n    var frames = altaData;\r\n    var frameKeys = Object.keys(frames);\r\n    let frameIndex = 0;\r\n    //要返回的贴图集合\r\n    var textures: { [key: string]: Texture } = {};\r\n\r\n    while (frameIndex < frameKeys.length) {\r\n        //名字\r\n        const i = frameKeys[frameIndex];\r\n        //数据\r\n        const data: dataTm = frames[i];\r\n        //切图上的数据\r\n        let frame: Rectangle = null;\r\n        //裁切的数据\r\n        let trim: Rectangle = null;\r\n        //贴图原始尺寸\r\n        const orig = new Rectangle(\r\n            0,\r\n            0,\r\n            Math.floor(data.sw),\r\n            Math.floor(data.sh)\r\n        );\r\n\r\n        //如果旋转过\r\n        if (data.ro) {\r\n            frame = new Rectangle(\r\n                Math.floor(data.x),\r\n                Math.floor(data.y),\r\n                Math.floor(data.h),\r\n                Math.floor(data.w)\r\n            );\r\n        } else {\r\n            frame = new Rectangle(\r\n                Math.floor(data.x),\r\n                Math.floor(data.y),\r\n                Math.floor(data.w),\r\n                Math.floor(data.h)\r\n            );\r\n        }\r\n        //如果是被截掉过透明边界的 ,,加上如果和原始尺寸不一致也是裁切\r\n        if (data.ox || data.oy || data.w != data.sw || data.h != data.sh) {\r\n            //其实就是在orig上切图，偏移\r\n            trim = new Rectangle(\r\n                Math.floor(data.ox),\r\n                Math.floor(data.oy),\r\n                Math.floor(data.w),\r\n                Math.floor(data.h)\r\n            );\r\n        }\r\n\r\n        var texture = new Texture(\r\n            baseTexture,\r\n            frame,\r\n            orig,\r\n            trim,\r\n            data.ro ? 2 : 0,\r\n            // data.anchor\r\n        );\r\n        //缓存下\r\n        Texture.addToCache(texture, i);\r\n        textures[i] = texture;\r\n        frameIndex++;\r\n    }\r\n\r\n    return textures;\r\n}","export * from \"./Button\";\r\nexport * from \"./FrameAni\";\r\nexport * from \"./ScrollPage\";\r\nexport * from \"./ScrollList\";\r\nexport * from \"./ShowWord\";\r\n\r\nexport * from \"./MovieClip\";\r\n\r\nexport * from \"./Lottie\";","import Container from \"../display/Container\";\r\nimport Sprite from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\nimport { MouseEvent } from \"../events/MouseEvent\";\r\nimport Texture from \"../texture/Texture\";\r\nimport Tween from \"../../tween/Tween\";\r\n\r\nexport class Button extends Sprite {\r\n    private textureUp: Texture;\r\n    private textureDown: Texture;\r\n    private textureDisable: Texture;\r\n    constructor(tUp: Texture, tDown?: Texture, tDisable?: Texture) {\r\n        super(tUp);\r\n        this._instanceType = \"Button\";\r\n\r\n        this.textureUp = tUp;\r\n        this.textureDown = tDown === tUp ? null : tDown;\r\n        this.textureDisable = tDisable || tUp;\r\n\r\n        //直接设置纹理的中心点为锚点，传入有纹理才设置，以防止报错\r\n        if (this.textureUp) {\r\n            this.anchorX = this.textureUp.width / 2;\r\n            this.anchorY = this.textureUp.height / 2;\r\n        }\r\n        this.initButton();\r\n    }\r\n    /**\r\n     * 修改纹理\r\n     * @param tUp \r\n     * @param tDown \r\n     * @param tDisable \r\n     */\r\n    changeTexture(tUp: Texture, tDown?: Texture, tDisable?: Texture) {\r\n        this.textureUp = tUp;\r\n        this.textureDown = tDown === tUp ? null : tDown;\r\n        this.textureDisable = tDisable || tUp;\r\n\r\n        if (this.textureUp) {//传入有纹理才设置，以防止报错\r\n            this.anchorX = this.textureUp.width / 2;\r\n            this.anchorY = this.textureUp.height / 2;\r\n        }\r\n        //如果是点击状态时且有down\r\n        if (this._clicked && this.textureDown) {\r\n            this.texture = this.textureDown;\r\n        }\r\n        //禁用状态时\r\n        else if (!this.mouseEnable && !this.textureStatusEnable) {\r\n            this.texture = this.textureDisable;\r\n        } else {\r\n            this.texture = this.textureUp;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method  _mouseEvent\r\n     * @param e\r\n     * @private\r\n     */\r\n    private _mouseEvent(e: any): void {\r\n        let s = this;\r\n        if (!s._clicked) {\r\n            if (e.type == MouseEvent.MOUSE_DOWN) {\r\n                //如果是点下\r\n                if (s.textureDown) {\r\n                    s.texture = s.textureDown\r\n                } else {\r\n                    this[\"frames\"] = null\r\n                    // s.scale.x = s.scale.y = 0.9\r\n                    Tween.removeTweens(this);\r\n                    Tween.get(this).to({ scaleX: 0.9, scaleY: 0.9 }, 50);\r\n                }\r\n            } else {\r\n                if (s.textureDown) {\r\n                    s.texture = s.textureUp\r\n                } else {\r\n                    this[\"frames\"] = this[\"framesOri\"]\r\n                    // s.scale.x = s.scale.y = 1\r\n                    Tween.removeTweens(this);\r\n                    Tween.get(this).to({ scaleX: 1, scaleY: 1 }, 50);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    public initButton(): void {\r\n        let s: any = this;\r\n        s.mouseChildren = false;\r\n        s.addEventListener(\"onMouseDown\", s._mouseEvent, s);\r\n        s.addEventListener(\"onMouseUp\", s._mouseEvent, s);\r\n        s.addEventListener(\"onMouseOut\", s._mouseEvent, s);\r\n        s.texture = s.textureUp\r\n    }\r\n\r\n    /**\r\n     * 设置是否为点击状态\r\n     * @property clicked\r\n     * @param {boolean} value\r\n     * @public\r\n     * @since 2.0.0\r\n     * @default false\r\n     */\r\n    public set clicked(value: boolean) {\r\n        let s = this;\r\n        if (value != s._clicked) {\r\n            if (value) {\r\n                s._mouseEvent({ type: \"onMouseDown\" });\r\n            }\r\n            s._clicked = value;\r\n        }\r\n    }\r\n\r\n    public get clicked(): boolean {\r\n        return this._clicked;\r\n    }\r\n\r\n    private _clicked = false;\r\n\r\n    //设置texture状态textureUp和textureDisable\r\n    set textureStatusEnable(value: boolean) {\r\n        if (value) {\r\n            this.texture = this.textureUp\r\n        } else {\r\n            if (this.textureDisable) {\r\n                this.texture = this.textureDisable;\r\n                this[\"frames\"] = null\r\n            }\r\n        }\r\n    }\r\n\r\n    set enabled(value: boolean) {\r\n        this.mouseEnable = value;\r\n        this.textureStatusEnable = value;\r\n    }\r\n\r\n    destroy() {\r\n        this.textureUp = null;\r\n        this.textureDown = null;\r\n        this.textureDisable = null;\r\n        Tween.removeTweens(this);\r\n        super.destroy();\r\n    }\r\n}","import Texture from \"../texture/Texture\";\r\nimport { Event } from \"../events/Event\";\r\nimport Sprite from \"../display/Sprite\";\r\nimport { Container } from \"../display\";\r\n\r\n/**\r\n * 直接通过替换texture替换图片的动画帧\r\n * 暂时这些动画帧只播放一次，所以简化,要循环时再修改\r\n * 默认按时间间隔播放\r\n * 图片都以素材为中心为原点\r\n */\r\nexport class FrameAni extends Container {\r\n    private showImage: Sprite\r\n    /**\r\n     * 所有的纹理\r\n     */\r\n    private texturesAll: Texture[];\r\n    /**\r\n     * 从0开始 锁步会跳帧\r\n     * 每一帧就是一张图片，从0开始\r\n     */\r\n    // private _currentFrame: number;//暂时只有不锁步时才需要，但是已经注释，需要时加get方法\r\n\r\n    private set currentFrame(value: number) {\r\n        if (this.texturesAll[value]) {\r\n            this.showImage.texture = this.texturesAll[value];\r\n        } else {\r\n            this.showImage.texture = null;\r\n        }\r\n    }\r\n    /**\r\n     * 不开放currentFrame的get方法，因为权限要一致的话set也要变public，\r\n     * 但其实外部set赋值是无效的，用reset才有效，所以这里同步给一个方法\r\n     * 返回0到totalFrames-1\r\n     */\r\n    getCurrentFrame(): number {\r\n        return this.texturesAll.indexOf(this.showImage.texture)\r\n    }\r\n    /**\r\n     * 所有帧数\r\n     */\r\n    get totalFrames(): number {\r\n        return this.texturesAll.length\r\n    };\r\n    /**\r\n     * 是否运行中\r\n     */\r\n    private isPlay: boolean;\r\n    /**\r\n     * 循环次数\r\n     */\r\n    private loop: number = 1;\r\n    /**\r\n     * 开始时间\r\n     */\r\n    private startTime: number\r\n    /**\r\n     * 所有时间,播完所用时间\r\n     */\r\n    private allTime: number\r\n    /**\r\n     * 播放完的回调\r\n     */\r\n    private callback: Function;\r\n    /**\r\n     * 每秒的帧数，默认30帧\r\n     */\r\n    private _frameRate: number;\r\n    get frameRate() {\r\n        return this._frameRate\r\n    }\r\n    set frameRate(value: number) {\r\n        // if (value == this._frameRate) return//注释掉吧，否则frameRate修改相同，但是texturesAll变了就执行不到了\r\n        this._frameRate = value;\r\n        this.allTime = this.texturesAll.length / this._frameRate * 1000;\r\n    }\r\n    /**\r\n     * \r\n     * @param texturesAll 所有的资源数组\r\n     */\r\n    constructor(texturesAll: Texture[]) {\r\n        super()\r\n        this.showImage = new Sprite();\r\n        this.showImage.anchorTexture.set(0.5, 0.5);\r\n        this.addChild(this.showImage);\r\n        this.texturesAll = texturesAll;\r\n        this.currentFrame = 0;\r\n        this.addEventListener(Event.ENTER_FRAME, this.onEnterFrame, this)\r\n        this.frameRate = 30;\r\n    }\r\n    //需要做锁步\r\n    private count = 0;\r\n    private onEnterFrame() {\r\n        if (!this.isPlay) {\r\n            // this.count = 0\r\n            return\r\n        }\r\n        // this.count++;\r\n        // if (this.count % 2 == 0) {\r\n        //     this.currentFrame++;\r\n        //     if (this.currentFrame == this.totalFrames/*-1*/) {\r\n        //         this.currentFrame = 0;\r\n        //         this.isPlay = false\r\n        //         this.callback && this.callback();\r\n        //     }\r\n        //     this.texture = RES.getRes(this.sourceAll[this.currentFrame])\r\n        //     this.x = -this.texture.textureWidth / 2;\r\n        //     this.y = -this.texture.textureHeight / 2;\r\n        // }\r\n        var dataNow = Date.now();\r\n        var deltaTime = dataNow - this.startTime;\r\n        var scale = deltaTime / this.allTime;\r\n        if (scale >= 1) {\r\n            this.loop--;\r\n            if (this.loop == 0) {\r\n                this.isPlay = false\r\n                this.callback && this.callback();\r\n            } else {\r\n                this.startTime = Date.now()\r\n                this.currentFrame = 0;\r\n            }\r\n        } else {\r\n            this.currentFrame = (scale * this.texturesAll.length) >> 0;\r\n        }\r\n    }\r\n    /**\r\n     * 从0开始播放\r\n     */\r\n    play(loop: number = 1, callback?: Function) {\r\n        this.startTime = Date.now();\r\n        this.isPlay = true;\r\n        this.currentFrame = 0;\r\n        this.loop = loop;\r\n        this.callback = callback;\r\n    }\r\n    /**\r\n     * 重置为frame，不播放\r\n     */\r\n    reset(frame: number = 0) {\r\n        this.isPlay = false;\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n\r\n    /**\r\n     * 重置所有贴图，会置0停止，不设置播放，否则原先的play里的startTime及loop不好维护\r\n     * @param texturesAll \r\n     */\r\n    resetTexturesAll(texturesAll: Texture[]) {\r\n        this.texturesAll = texturesAll;\r\n        this.currentFrame = 0;\r\n        this.frameRate = 30;\r\n    }\r\n}","\n\nexport class Ease {\n    /**\n     * @version  \n     * @platform Web,Native\n     */\n    constructor() {\n    }\n\n    /**\n     * get.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static get(amount: number) {\n        if (amount < -1) {\n            amount = -1;\n        }\n        if (amount > 1) {\n            amount = 1;\n        }\n        return function (t: number) {\n            if (amount == 0) {\n                return t;\n            }\n            if (amount < 0) {\n                return t * (t * -amount + 1 + amount);\n            }\n            return t * ((2 - t) * amount + (1 - amount));\n        }\n    }\n\n    /**\n     * get pow in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get pow in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getPowIn(pow: number) {\n        return function (t: number) {\n            return Math.pow(t, pow);\n        }\n    }\n\n    /**\n     * get pow out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get pow out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getPowOut(pow: number) {\n        return function (t: number) {\n            return 1 - Math.pow(1 - t, pow);\n        }\n    }\n\n    /**\n     * get pow in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get pow in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getPowInOut(pow: number) {\n        return function (t: number) {\n            if ((t *= 2) < 1) return 0.5 * Math.pow(t, pow);\n            return 1 - 0.5 * Math.abs(Math.pow(2 - t, pow));\n        }\n    }\n\n    /**\n     * quad in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quad in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quadIn = Ease.getPowIn(2);\n    /**\n     * quad out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quad out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quadOut = Ease.getPowOut(2);\n    /**\n     * quad in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quad in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quadInOut = Ease.getPowInOut(2);\n    /**\n     * cubic in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * cubic in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static cubicIn = Ease.getPowIn(3);\n    /**\n     * cubic out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * cubic out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static cubicOut = Ease.getPowOut(3);\n    /**\n     * cubic in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * cubic in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static cubicInOut = Ease.getPowInOut(3);\n    /**\n     * quart in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quart in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quartIn = Ease.getPowIn(4);\n    /**\n     * quart out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quart out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quartOut = Ease.getPowOut(4);\n    /**\n     * quart in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quart in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quartInOut = Ease.getPowInOut(4);\n    /**\n     * quint in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quint in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quintIn = Ease.getPowIn(5);\n    /**\n     * quint out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quint out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quintOut = Ease.getPowOut(5);\n    /**\n     * quint in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * quint in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static quintInOut = Ease.getPowInOut(5);\n\n    /**\n     * sine in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * sine in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static sineIn(t: number) {\n        return 1 - Math.cos(t * Math.PI / 2);\n    }\n\n    /**\n     * sine out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * sine out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static sineOut(t: number) {\n        return Math.sin(t * Math.PI / 2);\n    }\n\n    /**\n     * sine in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * sine in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static sineInOut(t: number) {\n        return -0.5 * (Math.cos(Math.PI * t) - 1)\n    }\n\n    /**\n     * get back in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get back in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getBackIn(amount: number) {\n        return function (t: number) {\n            return t * t * ((amount + 1) * t - amount);\n        }\n    }\n\n    /**\n     * back in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * back in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static backIn = Ease.getBackIn(1.7);\n\n    /**\n     * get back out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get back out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getBackOut(amount: number) {\n        return function (t) {\n            return (--t * t * ((amount + 1) * t + amount) + 1);\n        }\n    }\n\n    /**\n     * back out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * back out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static backOut = Ease.getBackOut(1.7);\n\n    /**\n     * get back in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get back in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getBackInOut(amount: number) {\n        amount *= 1.525;\n        return function (t: number) {\n            if ((t *= 2) < 1) return 0.5 * (t * t * ((amount + 1) * t - amount));\n            return 0.5 * ((t -= 2) * t * ((amount + 1) * t + amount) + 2);\n        }\n    }\n\n    /**\n     * back in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * back in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static backInOut = Ease.getBackInOut(1.7);\n\n    /**\n     * circ in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * circ in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static circIn(t: number) {\n        return -(Math.sqrt(1 - t * t) - 1);\n    }\n\n    /**\n     * circ out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * circ out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static circOut(t: number) {\n        return Math.sqrt(1 - (--t) * t);\n    }\n\n    /**\n     * circ in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * circ in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static circInOut(t: number) {\n        if ((t *= 2) < 1) {\n            return -0.5 * (Math.sqrt(1 - t * t) - 1);\n        }\n        return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    }\n\n    /**\n     * bounce in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * bounce in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static bounceIn(t: number) {\n        return 1 - Ease.bounceOut(1 - t);\n    }\n\n    /**\n     * bounce out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * bounce out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static bounceOut(t: number) {\n        if (t < 1 / 2.75) {\n            return (7.5625 * t * t);\n        } else if (t < 2 / 2.75) {\n            return (7.5625 * (t -= 1.5 / 2.75) * t + 0.75);\n        } else if (t < 2.5 / 2.75) {\n            return (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375);\n        } else {\n            return (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);\n        }\n    }\n\n    /**\n     * bounce in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * bounce in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static bounceInOut(t: number) {\n        if (t < 0.5) return Ease.bounceIn(t * 2) * .5;\n        return Ease.bounceOut(t * 2 - 1) * 0.5 + 0.5;\n    }\n\n    /**\n     * get elastic in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get elastic in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getElasticIn(amplitude: number, period: number) {\n        let pi2 = Math.PI * 2;\n        return function (t: number) {\n            if (t == 0 || t == 1) return t;\n            let s = period / pi2 * Math.asin(1 / amplitude);\n            return -(amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period));\n        }\n    }\n\n    /**\n     * elastic in.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * elastic in。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static elasticIn = Ease.getElasticIn(1, 0.3);\n\n    /**\n     * get elastic out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get elastic out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getElasticOut(amplitude: number, period: number) {\n        let pi2 = Math.PI * 2;\n        return function (t: number) {\n            if (t == 0 || t == 1) return t;\n            let s = period / pi2 * Math.asin(1 / amplitude);\n            return (amplitude * Math.pow(2, -10 * t) * Math.sin((t - s) * pi2 / period) + 1);\n        }\n    }\n\n    /**\n     * elastic out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * elastic out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static elasticOut = Ease.getElasticOut(1, 0.3);\n\n    /**\n     * get elastic in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * get elastic in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static getElasticInOut(amplitude: number, period: number) {\n        let pi2 = Math.PI * 2;\n        return function (t: number) {\n            let s = period / pi2 * Math.asin(1 / amplitude);\n            if ((t *= 2) < 1) return -0.5 * (amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period));\n            return amplitude * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * pi2 / period) * 0.5 + 1;\n        }\n    }\n\n    /**\n     * elastic in out.See example.\n     * @version  \n     * @platform Web,Native\n     * @language en_US\n     */\n    /**\n     * elastic in out。请查看示例\n     * @version  \n     * @platform Web,Native\n     * @language zh_CN\n     */\n    public static elasticInOut = Ease.getElasticInOut(1, 0.3 * 1.5);\n}\n","import { ScrollPage } from \"./ScrollPage\";\r\nimport { DisplayObject } from \"../display/DisplayObject\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n\r\n/**\r\n * 滚动类的Item类接口\r\n * @class IScrollListItem\r\n * @public\r\n * @extends DisplayObject\r\n * @since 1.0.9\r\n */\r\nexport interface IScrollListItem extends DisplayObject {\r\n    initData(id: number, data: any): void;\r\n\r\n    id: number;\r\n    data: number;\r\n}\r\n\r\n/**\r\n * 滚动列表\r\n * @class ScrollList\r\n * @public\r\n * @extends ScrollPage\r\n * @since 1.0.9\r\n */\r\nexport class ScrollList extends ScrollPage {\r\n    private _items: Array<IScrollListItem> = null;\r\n    private _itemW: number;\r\n    private _itemH: number;\r\n    private _itemRow: number;\r\n    private _itemCol: number;\r\n    private _itemCount: number;\r\n    private _itemClass: any;\r\n    private _isInit: number = 0;\r\n    public data: Array<any> = [];\r\n    private downL: DisplayObject = null;\r\n    private _cols: number;\r\n    private _disParam: string;\r\n    private _lastFirstId: number = -1;\r\n\r\n    /**\r\n     * 获取下拉滚动的loadingView对象\r\n     * @property loadingView\r\n     * @since 1.0.9\r\n     * @return {DisplayObject}\r\n     */\r\n    public get loadingView(): DisplayObject {\r\n        return this.downL;\r\n    }\r\n\r\n    /**\r\n     * 构造函数\r\n     * @method ScrollList\r\n     * @param {Class} itemClassName 可以做为Item的类\r\n     * @param {number} itemWidth item宽\r\n     * @param {number} itemHeight item高\r\n     * @param {number} vW 列表的宽\r\n     * @param {number} vH 列表的高\r\n     * @param {boolean} isVertical 是横向滚动还是纵向滚动 默认是纵向\r\n     * @param {number} cols 分几列，默认是1列\r\n     * @since 1.0.9\r\n     */\r\n    constructor(itemClassName: any, itemWidth: number, itemHeight: number, vW: number, vH: number, isVertical: boolean = true, cols: number = 1) {\r\n        super(vW, vH, 0, isVertical);\r\n        let s = this;\r\n        s._instanceType = \"ScrollList\";\r\n        s._itemW = itemWidth;\r\n        s._itemH = itemHeight;\r\n        s._items = [];\r\n        s._itemClass = itemClassName;\r\n        s._itemCount = 0;\r\n        s._cols = cols;\r\n        s._updateViewRect();\r\n        s.addEventListener(Event.ENTER_FRAME, s.flushData.bind(s));\r\n    }\r\n\r\n    /**\r\n     * 更新列表数据\r\n     * @method updateData\r\n     * @param {Array} data\r\n     * @param {boolean} isReset 是否重围数据列表。默认为true\r\n     * @since 1.0.9\r\n     */\r\n    public updateData(data: Array<any>, isReset: boolean = true): void {\r\n        let s: any = this;\r\n        if (!s._isInit || isReset) {\r\n            s.data = data;\r\n        } else {\r\n            s.data = s.data.concat(data);\r\n        }\r\n        s._isInit = 1;\r\n        s._lastFirstId = -1;\r\n        s._updateId = -1;//确保会刷新\r\n        s.maxDistance = Math.ceil(s.data.length / s._cols) * s._itemRow;\r\n        if (s.downL) {\r\n            s.downL[s.paramXY] = Math.max(s.distance, s.maxDistance);\r\n            var wh = s.downL.getWH();\r\n            s.maxDistance += (s.paramXY == \"x\" ? wh.width : wh.height);\r\n        }\r\n    }\r\n    private _updateId: number = -1;\r\n    private flushData() {\r\n        let s: ScrollList = this;\r\n        if (s._isInit > 0) {\r\n            if (s._updateId != s.view.transform._localID) {\r\n                s._updateId = s.view.transform._localID\r\n                let id: number = s.view[s.paramXY] > 0 ? 0 : (Math.abs(Math.floor(s.view[s.paramXY] / s._itemRow)) - 1) * s._cols;\r\n                id = id < 0 ? 0 : id;\r\n                if (id != s._lastFirstId) {\r\n                    s._lastFirstId = id;\r\n                    if (id != s._items[0].id) {\r\n                        for (let r = 0; r < s._cols; r++) {\r\n                            if (s.speed > 0) {\r\n                                s._items.unshift(s._items.pop());\r\n                            } else {\r\n                                s._items.push(s._items.shift());\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < s._itemCount; i++) {\r\n                    let item: any = s._items[i];\r\n                    if (s._isInit == 1) {\r\n                        item.sli_id = -1;\r\n                    }\r\n                    if (item.sli_id != id) {\r\n                        item.initData(s.data[id] ? id : -1, s.data[id]);\r\n                        item[s.paramXY] = Math.floor(id / s._cols) * s._itemRow;\r\n                        item[s._disParam] = (id % s._cols) * s._itemCol;\r\n                        //如果没有数据则隐藏\r\n                        if (s.data[id]) {\r\n                            item.sli_id = id;\r\n                            item.visible = true;\r\n                        } else {\r\n                            item.sli_id = -1;\r\n                            item.visible = false;\r\n                        }\r\n                    }\r\n                    id++;\r\n                }\r\n                s._isInit = 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置可见区域，可见区域的坐标始终在本地坐标中0,0点位置\r\n     * @method setViewRect\r\n     * @param {number}w 设置可见区域的宽\r\n     * @param {number}h 设置可见区域的高\r\n     * @param {boolean} isVertical 方向\r\n     * @public\r\n     * @since 1.1.1\r\n     */\r\n    public setViewRect(w: number, h: number, isVertical: boolean): void {\r\n        super.setViewRect(w, h, isVertical);\r\n        let s = this;\r\n        if (s._itemRow && s._itemCol) {\r\n            s._updateViewRect();\r\n        }\r\n    }\r\n\r\n    private _updateViewRect() {\r\n        let s: any = this;\r\n        if (s.isVertical) {\r\n            s._disParam = \"x\";\r\n            s._itemRow = s._itemH;\r\n            s._itemCol = s._itemW;\r\n        } else {\r\n            s._disParam = \"y\";\r\n            s._itemRow = s._itemW;\r\n            s._itemCol = s._itemH;\r\n        }\r\n        let newCount: number = (Math.ceil(s.distance / s._itemRow) + 1) * s._cols;\r\n        if (newCount != s._itemCount) {\r\n            if (newCount > s._itemCount) {\r\n                for (let i = s._itemCount; i < newCount; i++) {\r\n                    let item = new s._itemClass();\r\n                    item.id = -1;\r\n                    item.data = null;\r\n                    s._items.push(item);\r\n                    s.view.addChild(item);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < s._itemCount - newCount; i++) {\r\n                    s.view.removeChild(s._items.pop());\r\n                }\r\n            }\r\n            s._itemCount = newCount;\r\n            s._lastFirstId = -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置加载数据时显示的loading对象\r\n     * @since 1.0.9\r\n     * @method setLoading\r\n     * @param {DisplayObject} downLoading\r\n     */\r\n    public setLoading(downLoading: DisplayObject): void {\r\n        let s: any = this;\r\n        if (s.downL) {\r\n            s.view.removeChild(s.downL);\r\n            let wh = s.downL.getWH();\r\n            s.maxDistance -= (s.paramXY == \"x\" ? wh.width : wh.height);\r\n            s.downL = null;\r\n        }\r\n        if (downLoading) {\r\n            s.downL = downLoading;\r\n            s.view.addChild(downLoading);\r\n            s.downL[s.paramXY] = Math.max(s.distance, s.maxDistance);\r\n            let wh = s.downL.getWH();\r\n            s.maxDistance += (s.paramXY == \"x\" ? wh.width : wh.height);\r\n        } else {\r\n            s.isStop = false;\r\n        }\r\n    }\r\n\r\n    public destroy(): void {\r\n        let s = this;\r\n        s._items = null;\r\n        s._itemClass = null;\r\n        s.data = null;\r\n        s.downL = null;\r\n        super.destroy();\r\n    }\r\n}\r\n","\r\nimport { TextField } from \"../text/TextField\";\r\n\r\n/**\r\n * 文字一个一个出现\r\n */\r\nexport class ShowWord extends TextField {\r\n    /**\r\n     * \r\n     * @param text 文本 例子：这里是生命值，闯关失败后\\n都会扣除一点生命值\r\n     * @param deltaTime 文字间隔时间，毫秒计\r\n     * @param callback 播放完后的回调\r\n     */\r\n    playWords(text: string, deltaTime: number = 100, callback?: Function) {\r\n        var spiltStrs = text.split(\"\\n\");\r\n        //拆分文本\r\n        let strs: string[] = []\r\n        for (var i = 0; i < spiltStrs.length; i++) {\r\n            var spiltStr: string = spiltStrs[i];\r\n            var ori: string = \"\";\r\n            var index = 0;\r\n            while (index < i) {\r\n                ori += spiltStrs[index];\r\n                ori += \"\\n\";\r\n                index++;\r\n            }\r\n            for (var j = 0; j < spiltStr.length; j++) {\r\n                var str = \"\" + ori;\r\n                str += spiltStr.substring(0, j + 1)\r\n                strs.push(str)\r\n            }\r\n        }\r\n        // console.log(strs)\r\n        //轮流替换文本\r\n        for (let m = 0; m < strs.length; m++) {\r\n            let str = strs[m];\r\n            setTimeout(() => {\r\n                this.text = str;\r\n                if (m == strs.length - 1) {\r\n                    callback && callback();\r\n                }\r\n            }, deltaTime * m)\r\n        }\r\n    }\r\n}","import Container from \"../display/Container\";\r\nimport Texture from \"../texture/Texture\";\r\nimport Sprite from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\n\r\nimport { TextureCache, createImage, createCanvas } from \"../utils\";\r\nimport { RAD_TO_DEG } from \"../const\";\r\nimport { Matrix } from \"../math\";\r\nimport { BaseTexture } from \"../texture\";\r\nimport { Shape } from \"../graphics\";\r\n\r\n/**\r\n * 用于播放动画\r\n * 帧数监听，已ued给的文件为主，不做补间增加帧数，\r\n * 暂无setImage,setText再加\r\n * 暂时无矢量图和遮罩解析\r\n * 暂不支持加快播放，\r\n * 暂不支持loops循环次数\r\n * 考虑是否支持加快播放，如果能加速，中间帧数监听会出问题\r\n * 考虑是否帧率锁步，同上问题,锁步后会可能失效currentFrame判断\r\n * s.addEventListener(Event.ENTER_FRAME, func = (e) => {\r\n *      //这个判断如果只希望执行一次得多加一个条件isInTimeFrame为true，或者及时移除\r\n *      if (e.target.currentFrame == 66&&e.target.isInTimeFrame) {\r\n *         e.target.removeEventListener(Event.ENTER_FRAME, func);\r\n *    }\r\n * });\r\n * 锁步时的每帧监听，用>或<判断，及时移除\r\n * @class MovieClip\r\n * @since 1.0.0\r\n * @public\r\n * @extends Container\r\n */\r\nexport class MovieClip extends Container {\r\n    /**\r\n     * 原始数据，接口在解析类上，不搞先\r\n     */\r\n    private rawData\r\n    /**\r\n     * 锁步将按时间间隔来执行动画\r\n     */\r\n    public lockStep: boolean = false;\r\n    /**\r\n     * mc的当前帧,从1开始\r\n     * @property currentFrame\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     * @default 1\r\n     * @readonly\r\n     */\r\n    public get currentFrame(): number {\r\n        return this._curFrame;\r\n    }\r\n\r\n    /**\r\n     * @property _curFrame\r\n     * @type {number}\r\n     * @private\r\n     * @since 2.0.0\r\n     * @default 1\r\n     */\r\n    private _curFrame: number = 1;\r\n\r\n    /**\r\n     * 当前动画是否处于播放状态\r\n     * @property isPlaying\r\n     * @readOnly\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {boolean}\r\n     * @default true\r\n     * @readonly\r\n     */\r\n    public get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @property _isPlaying\r\n     * @type {boolean}\r\n     * @private\r\n     * @since 2.0.0\r\n     * @default true\r\n     */\r\n    private _isPlaying: boolean = true;\r\n\r\n    /**\r\n     * 动画的播放方向,是顺着播还是在倒着播\r\n     * @property isFront\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {boolean}\r\n     * @default true\r\n     * @readonly\r\n     */\r\n    get isFront(): boolean {\r\n        return this._isFront;\r\n    }\r\n\r\n    /**\r\n     * @property _isFront\r\n     * @type {boolean}\r\n     * @private\r\n     * @default true\r\n     */\r\n    private _isFront: boolean = true;\r\n\r\n    /**\r\n     * 当前动画的总帧数\r\n     * @property totalFrames\r\n     * @public\r\n     * @since 1.0.0\r\n     * @type {number}\r\n     * @default 0\r\n     * @readonly\r\n     */\r\n    get totalFrames(): number {\r\n        return this.rawData && this.rawData.frames || 0;\r\n    }\r\n    get videoWidth(): number {\r\n        return this.rawData && this.rawData.videoSize.width;\r\n    };\r\n    get videoHeight(): number {\r\n        return this.rawData && this.rawData.videoSize.height;\r\n    };\r\n    /**\r\n     * 锁步的时间间隔，按fps定,毫秒\r\n     */\r\n    private timeInterval;\r\n\r\n    /**\r\n     * 前提引擎按60设置\r\n     */\r\n    private deltaFrame: number;\r\n    /**\r\n     * 中间帧计时\r\n     */\r\n    private frameCount: number = 0;\r\n    /**\r\n     * 构造函数\r\n     * @method MovieClip\r\n     * @public\r\n     * @param mv VideoEntity格式，这里不给了\r\n     */\r\n    public constructor(mv?) {\r\n        super();\r\n        let s: any = this;\r\n        s._instanceType = \"MovieClip\";\r\n        //初始化\r\n        if (mv) s.init(mv);\r\n    }\r\n\r\n    /**\r\n     * 可以手动用init，\r\n     * @param mv \r\n     */\r\n    init(mv) {\r\n        if (!mv) return;\r\n        //移除所有子级\r\n        this.removeAllChildren();\r\n        //移除循环监听事件;\r\n        if (this.startAniRangeFun) this.removeEventListener(Event.ENTER_FRAME, this.startAniRangeFun, this);\r\n        //记录源数据\r\n        this.rawData = mv;\r\n        //记录基本信息，fps，每秒输出帧数，frames，总帧数，videoSize暂时不管\r\n        //如果fps小于60怎么处理。update时怎么处理\r\n        this.timeInterval = 1000 / mv.FPS;\r\n        this.startTime = Date.now();\r\n        this.startFrame = 1;\r\n        //间隔帧数，\r\n        this.deltaFrame = 60 / mv.FPS;\r\n        this.frameCount = this.deltaFrame;\r\n        this._curFrame = 1;\r\n\r\n        //考虑是否要加遮罩，用videoSize，暂时不用，为了性能\r\n        // var mask = new Graphics();\r\n        // mask.beginFill(0xffffff, 1);\r\n        // mask.drawRect(0, 0, mv.videoSize.width, mv.videoSize.height);\r\n        // mask.endFill();\r\n        // this.mask = mask;\r\n\r\n        //缓存图片\r\n        if (mv.images && !mv.textures) {//带图片数据的待测试\r\n            mv.textures = {};\r\n            for (var key in mv.images) {\r\n                var src = mv.images[key];\r\n                if (src.indexOf(\"iVBO\") === 0 || src.indexOf(\"/9j/2w\") === 0) {\r\n                    src = 'data:image/png;base64,' + src;\r\n                }//图片链接时的宽高适配再说，暂时没有遇到过\r\n                let imgTag = createImage();\r\n                imgTag.src = src;\r\n                mv.textures[key] = new Texture(new BaseTexture(imgTag));//这种方法不会缓存进全局\r\n            }\r\n        }\r\n        this.initChildren(mv.sprites);\r\n\r\n        //缓存所有图片\r\n        // const images = mv.images;\r\n        // if (mv.hasBeenCached) {\r\n        //     //如已被缓存，则直接取了赋值\r\n        //     for (var keyName in images) {\r\n\r\n        //         this.textures[keyName] = TextureCache[keyName];\r\n        //     }\r\n        //     this.initChildren(mv.sprites)\r\n        // } else {\r\n        //     //合图有bug，先不合了\r\n        //     // if (GlobalPro.stageRenderType == RENDERER_TYPE.WEBGL) {\r\n        //     //     //缓存成一张canvas，考虑要不要把所有资源搞成图集\r\n        //     //     DrawAllToCanvas(images, (t) => {\r\n        //     //         this.textures = t;\r\n        //     //         this.initChildren(mv.sprites)\r\n        //     //         //缓存\r\n        //     //         for (var key in this.textures) {\r\n        //     //             Texture.addToCache(this.textures[key], key)\r\n        //     //         }\r\n        //     //         mv.hasBeenCached = true;\r\n        //     //     })\r\n        //     // } else {\r\n        //     //canvas直接缓存\r\n        //     for (var key in images) {\r\n        //         var bitmap = images[key];\r\n        //         // let imgTag = document.createElement('img');\r\n\r\n        //         let imgTag = getCreateImage()();\r\n        //         let backCanvas;\r\n        //         if (bitmap.indexOf(\"iVBO\") === 0 || bitmap.indexOf(\"/9j/2w\") === 0) {\r\n        //             imgTag.src = 'data:image/png;base64,' + bitmap;\r\n        //         }\r\n        //         else {\r\n        //             imgTag.src = bitmap;\r\n        //             //这里有问题，再说//这里估计是直接用图片链接的，为了适配画在canvas，以后遇到再说\r\n        //             // if (frames[0] && frames[0].layout) {\r\n        //             //     backCanvas = document.createElement('canvas');\r\n        //             //     backCanvas.width = frames[0].layout.width\r\n        //             //     backCanvas.height = frames[0].layout.height\r\n        //             //     imgTag.onload = function () {\r\n        //             //         backCanvas.getContext('2d').drawImage(imgTag, 0, 0, frames[0].layout.width, frames[0].layout.height)\r\n        //             //     }\r\n        //             // }\r\n        //         }\r\n        //         this.textures[key] = Texture.from(backCanvas || imgTag);\r\n        //         // this.textures[key].once(\"loaded\",()=>{\r\n        //         //     是否监听加载完成？\r\n        //         // })\r\n        //         //考虑到key和已有缓存冲突，svga的都单独自己缓存，外部不可用，以后有时间搞\r\n        //         Texture.addToCache(this.textures[key], key)\r\n        //     }\r\n        //     mv.hasBeenCached = true;\r\n        //     this.initChildren(mv.sprites)\r\n        //     // }\r\n        // }\r\n    }\r\n\r\n    private initChildren(sprites) {\r\n        for (var i = 0, len = sprites.length; i < len; i++) {\r\n            var ele = sprites[i];\r\n            if (ele.imageKey) {\r\n                // var child = new Sprite(this.textures[ele.imageKey]);\r\n                var child = this.addChild(new Sprite(\r\n                    this.rawData.textures ?\r\n                        this.rawData.textures[ele.imageKey] ://自身没存的，取全局的，有图片单独处理出去\r\n                        TextureCache[ele.imageKey] ||\r\n                        TextureCache[ele.imageKey + \".png\"] || null\r\n                ));\r\n                //直接赋值矩阵\r\n                child[\"frames\"] = ele.frames;\r\n                //透明度处理\r\n                if (ele.frames[0].alpha < 0.05) {\r\n                    // child.visible = false;\r\n                    child.alpha = 0;\r\n                } else {\r\n                    child.alpha = ele.frames[0].alpha;\r\n                    //透明度不为0才赋值吧\r\n                    child.transform.localMatrix.copy(ele.frames[0].transform);\r\n                    child.transform._parentID = -1;\r\n                }\r\n                //记录一个源数据\r\n                child[\"framesOri\"] = ele.frames;\r\n                //记录一个源imageKey\r\n                child[\"imageKey\"] = ele.imageKey;\r\n                //记录一个标识\r\n                // child[\"matteKey\"] = ele.matteKey;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param imagekey 对应的imagekey\r\n     * @param imageUrl 图片路径，以后考虑支持多种形式\r\n     */\r\n    setImage(imagekey: string, imageUrl: string) {//新修改，待测试TODO\r\n        //先获取原先贴图，为了宽高适配，，这种如何保证base64已经加载完毕，考虑lottie的图片宽高信息存过来？\r\n        let cs: Sprite[] = [];//找都找了，就全记录吧\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i][\"imageKey\"] == imagekey) {\r\n                cs.push(this.children[i] as Sprite)\r\n            }\r\n        }\r\n        if (!cs.length) return;\r\n        var texture: Texture = cs[0].texture;\r\n        var width = texture.width;\r\n        var height = texture.height;\r\n        let image = createImage();\r\n        var self = this;\r\n        image.onload = function () {\r\n            let newTexture: Texture\r\n            if (image.width == width && image.height == height) {\r\n                newTexture = Texture.from(image);\r\n            } else {\r\n                var canvas = createCanvas()//document.createElement(\"canvas\");\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var ctx = canvas.getContext(\"2d\")\r\n                //适配绘制,为了全部显示在canvas中\r\n                var scaleCan = width / height;\r\n                var scale = image.width / image.height;\r\n                if (scaleCan > scale) {\r\n                    //定高\r\n                    ctx.drawImage(image, 0, 0, image.width, image.height\r\n                        , (width - scale * height) / 2, 0, scale * height, height)\r\n                } else {\r\n                    //定宽\r\n                    ctx.drawImage(image, 0, 0, image.width, image.height\r\n                        , 0, (height - width / scale) / 2, width, width / scale)\r\n                }\r\n                newTexture = Texture.fromCanvas(canvas)\r\n            }\r\n            //修改相应sprite\r\n            cs.forEach((c) => { c.texture = newTexture; })\r\n        }\r\n        image.src = imageUrl;\r\n    }\r\n\r\n    /**\r\n     * 调用止方法将停止当前帧\r\n     * @method stop\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public stop(): void {\r\n        let s = this;\r\n        s._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * 将播放头向后移一帧并停在下一帧,如果本身在最后一帧则不做任何反应\r\n     * @method nextFrame\r\n     * @since 1.0.0\r\n     * @public\r\n     */\r\n    public nextFrame(): void {\r\n        let s = this;\r\n        if (s._curFrame < s.totalFrames) {\r\n            s._curFrame++;\r\n        }\r\n        s._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * 将播放头向前移一帧并停在下一帧,如果本身在第一帧则不做任何反应\r\n     * @method prevFrame\r\n     * @since 1.0.0\r\n     * @public\r\n     */\r\n    public prevFrame(): void {\r\n        let s = this;\r\n        if (s._curFrame > 1) {\r\n            s._curFrame--;\r\n        }\r\n        s._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * 将播放头跳转到指定帧并停在那一帧,如果本身在第一帧则不做任何反应\r\n     * @method gotoAndStop\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {number} frameIndex 批定帧的帧数或指定帧的标签名\r\n     */\r\n    public gotoAndStop(frameIndex: number): void {\r\n        let s: any = this;\r\n        s._isPlaying = false;\r\n        if (frameIndex > s.totalFrames) {\r\n            frameIndex = s.totalFrames;\r\n        }\r\n        if (frameIndex < 1) {\r\n            frameIndex = 1;\r\n        }\r\n        s._curFrame = <number>frameIndex;\r\n    }\r\n\r\n    /**\r\n     * 如果当前时间轴停在某一帧,调用此方法将继续播放.\r\n     * @method play\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public play(isFront: boolean = true): void {\r\n        let s = this;\r\n        s.frameCount = s.deltaFrame;\r\n        s.startTime = Date.now();\r\n        s.startFrame = s._curFrame;\r\n        s._isPlaying = true;\r\n        s._isFront = isFront;\r\n    }\r\n\r\n    /**\r\n     * @property _lastFrame\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     */\r\n    private _lastFrame: number = 0;\r\n\r\n    /**\r\n     * 刚执行到的帧数，用于帧监听时判断用，刚好执行到当前帧，而不是之前保留的状态\r\n     * 不是60fps的videoItem的中间有几帧curFrame会不变，判断只执行一次监听时会出错，刚好动画满帧60fps时就无所谓\r\n     */\r\n    public get isInTimeFrame(): boolean {\r\n        //相等时就是刚开始的curFrame\r\n        return this.frameCount == this.deltaFrame;\r\n    }\r\n\r\n\r\n    /**\r\n     * 将播放头跳转到指定帧并从那一帧开始继续播放\r\n     * @method gotoAndPlay\r\n     * @public\r\n     * @since 1.0.0\r\n     * @param {number} frameIndex 批定帧的帧数或指定帧的标签名\r\n     * @param {boolean} isFront 跳到指定帧后是向前播放, 还是向后播放.不设置些参数将默认向前播放\r\n     */\r\n    public gotoAndPlay(frameIndex: number, isFront: boolean = true): void {\r\n        let s: any = this;\r\n        s._isFront = isFront;\r\n        s._isPlaying = true;\r\n        if (frameIndex > s.totalFrames) {\r\n            frameIndex = s.totalFrames;\r\n        }\r\n        if (frameIndex < 1) {\r\n            frameIndex = 1;\r\n        }\r\n        s.frameCount = s.deltaFrame;\r\n        s.startTime = Date.now();\r\n        s._curFrame = <number>frameIndex;\r\n        s.startFrame = s._curFrame;\r\n    }\r\n\r\n    /**\r\n     * 记录的startAniRange对应的fun\r\n     */\r\n    private startAniRangeFun: Function\r\n    /**\r\n     * 优先级最高，会覆盖\r\n     * @param beginFrame 默认1\r\n     * @param endFrame 默认 this.totalFrames\r\n     * @param loops 默认1 小于等于0为无线循环，\r\n     * @param callback 动画循环次数播放结束时回调，无限循环时不会有回调\r\n     */\r\n    public startAniRange(\r\n        beginFrame: number = 1,\r\n        endFrame: number = this.totalFrames,\r\n        loops: number = 1,\r\n        callback?: Function\r\n    ) {\r\n        //兼容下传0或null等等\r\n        beginFrame = beginFrame || 1;\r\n        endFrame = endFrame || this.totalFrames;\r\n        loops = loops || 0;\r\n        loops = Math.max(0, loops);//去掉负数\r\n\r\n        if (beginFrame < 1) {\r\n            beginFrame = 1;\r\n        }\r\n        if (beginFrame > this.totalFrames) {\r\n            beginFrame = this.totalFrames;\r\n        }\r\n        if (endFrame < 1) {\r\n            endFrame = 1;\r\n        }\r\n        if (endFrame > this.totalFrames) {\r\n            endFrame = this.totalFrames;\r\n        }\r\n        if (beginFrame === endFrame) {\r\n            this.gotoAndStop(beginFrame)\r\n            //如果相等\r\n            return\r\n        } else if (beginFrame < endFrame) {\r\n            this._isFront = true;\r\n\r\n        } else {\r\n            this._isFront = false;\r\n            // var temp = beginFrame;//不能颠倒，待测试\r\n            // beginFrame = endFrame;\r\n            // endFrame = temp;\r\n        }\r\n        //移除原先的绑定吧\r\n        if (this.startAniRangeFun) this.removeEventListener(Event.ENTER_FRAME, this.startAniRangeFun, this)\r\n        this._curFrame = beginFrame;\r\n        //赋值count最大\r\n        this.frameCount = this.deltaFrame;\r\n        this.startTime = Date.now();\r\n        this.startFrame = this._curFrame;\r\n        this._isPlaying = true;\r\n\r\n        let loopCount = loops ? (loops + 0.5 >> 0) : Infinity;\r\n        this.addEventListener(Event.ENTER_FRAME, this.startAniRangeFun = (e) => {\r\n            if (e.target._isFront) {\r\n                //用大于等于可以避免锁步时出现的问题\r\n                if (e.target.currentFrame >= endFrame || e.target._endMark) {\r\n                    loopCount--;\r\n                    if (loopCount <= 0) {\r\n                        e.target.gotoAndStop(endFrame);\r\n                        e.target.removeEventListener(Event.ENTER_FRAME, this.startAniRangeFun, this);\r\n                        this.startAniRangeFun = null;\r\n                        callback && callback();\r\n                    } else {\r\n                        e.target.gotoAndPlay(beginFrame);\r\n                    }\r\n                }\r\n            } else {\r\n                if (e.target.currentFrame <= beginFrame || e.target._endMark) {\r\n                    loopCount--\r\n                    if (loopCount <= 0) {\r\n                        e.target.gotoAndStop(beginFrame);\r\n                        e.target.removeEventListener(Event.ENTER_FRAME, this.startAniRangeFun, this);\r\n                        this.startAniRangeFun = null;\r\n                        callback && callback();\r\n                    } else {\r\n                        e.target.gotoAndPlay(endFrame, false);\r\n                    }\r\n                }\r\n            }\r\n        }, this)\r\n    }\r\n\r\n    /**\r\n     * 开始时间，每次有play的时候就需要重置now\r\n     * 锁步思想，设置开始时间，后面每帧实际时间与开始时间相减，得到当前帧数\r\n     * \r\n     */\r\n    private startTime: number;\r\n    /**\r\n     * 开始时的frame\r\n     */\r\n    private startFrame: number;\r\n\r\n    /**\r\n     * 与startFrame相间隔的帧数量，绝对值\r\n     */\r\n    private lastDeltaFrame: number\r\n    /**\r\n     * 锁步时的每次end的标识\r\n     */\r\n    private _endMark: boolean\r\n\r\n    commonDeltaTime = 1000 / 60;\r\n    updateFrame() {\r\n        var s = this;\r\n        //1帧的时候也有相应的frameCount，无用，return\r\n        if (s.totalFrames == 0 || s.totalFrames == 1) return;\r\n        let isNeedUpdate = false;\r\n        if (s._lastFrame != s._curFrame) {\r\n            //帧不相等\r\n            isNeedUpdate = true;\r\n            s._lastFrame = s._curFrame;\r\n\r\n            //锁步的时候\r\n            s.startTime = Date.now();\r\n            s.startFrame = s._curFrame;\r\n\r\n            s._endMark = false;\r\n        } else {\r\n            if (s._isPlaying) {\r\n                if (s.lockStep) {\r\n                    isNeedUpdate = s.getCurFrameWhenLockStep();\r\n                } else {\r\n                    if (--s.frameCount == 0) {\r\n                        s.frameCount = s.deltaFrame;\r\n                        isNeedUpdate = true;\r\n                        if (s._isFront) {\r\n                            s._curFrame++;\r\n                            if (s._curFrame > s.totalFrames) {\r\n                                s._curFrame = 1;\r\n                            }\r\n                        } else {\r\n                            s._curFrame--;\r\n                            if (s._curFrame < 1) {\r\n                                s._curFrame = s.totalFrames;\r\n                            }\r\n                        }\r\n                        s._lastFrame = s._curFrame;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //如果需要更新\r\n        if (isNeedUpdate) {\r\n            //对每个child还原对应的transform，alpha为0的默认visible设为false,避免计算\r\n            for (var i = 0, len = s.children.length; i < len; i++) {\r\n                var child = s.children[i]\r\n                //只修改动画加入的child，不修改手动加入的，,所以想要修改动画中的元素属性，直接去掉frames属性，将不会执行动画\r\n                if (child[\"frames\"] && child[\"frames\"][s._curFrame - 1]) {\r\n                    var frame = child[\"frames\"][s._curFrame - 1];\r\n                    //layout不晓得干嘛用，暂不管\r\n                    if (frame.alpha < 0.05) {\r\n                        // child.visible = false;\r\n                        child.alpha = 0;\r\n                    } else {\r\n                        // child.visible = true;\r\n                        child.alpha = frame.alpha;\r\n                        //先判断transform是否相等\r\n                        if (!Matrix.isEqual(child.transform.localMatrix, frame.transform)) {\r\n                            child.transform.localMatrix.copy(frame.transform)\r\n                            child.transform._parentID = -1;\r\n                        }\r\n                        //遮罩\r\n                        if (frame.maskPath) {\r\n                            if (!child[\"cusMask\"]) child[\"cusMask\"] = new Shape();\r\n                            //@ts-ignore ，需要记载child里\r\n                            if (!child.mask) child.mask = child.addChild(child[\"cusMask\"]);\r\n                            let mask = child.mask;\r\n                            this.updateMask(mask, frame.maskPath);\r\n                        } else if (child.mask) {\r\n                            //@ts-ignore移除\r\n                            child.removeChild(child.mask)\r\n                            child.mask = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //事件播放结束监听\r\n            if (!s.lockStep) {\r\n                if (((s._curFrame == 1 && !s._isFront) || (s._curFrame == s.totalFrames && s._isFront)) && s.hasEventListener(Event.END_FRAME)) {\r\n                    s.dispatchEvent(Event.END_FRAME, {\r\n                        frameIndex: s._curFrame,\r\n                        frameName: \"endFrame\"\r\n                    });\r\n                }\r\n            } else {\r\n                //锁步的时候另外判断\r\n                if (s._endMark && s.hasEventListener(Event.END_FRAME)) {\r\n                    s.dispatchEvent(Event.END_FRAME, {\r\n                        frameIndex: s._curFrame,\r\n                        frameName: \"endFrame\"\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private getCurFrameWhenLockStep() {\r\n        var dateNow = Date.now()\r\n        //相差\r\n        var deltaFrame = ((dateNow - this.startTime) / this.timeInterval) >> 0;\r\n        //间隔帧数与上一帧一致，就不执行\r\n        if (deltaFrame == this.lastDeltaFrame) {\r\n            //设置不等\r\n            this.frameCount = 0;\r\n            return false\r\n        }\r\n        this._endMark = false;\r\n        //相等，刚好执行切换\r\n        this.frameCount = this.deltaFrame;\r\n        this.lastDeltaFrame = deltaFrame\r\n        if (this._isFront) {\r\n            //取余数\r\n            this._curFrame = (this.startFrame + deltaFrame) % this.totalFrames;\r\n            if (this._curFrame == 0) {\r\n                this._curFrame = this.totalFrames;\r\n                this._endMark = true;\r\n            }\r\n            //当上一帧大于_curFrame,并且上一帧不是totalFrames时，说明跳过了最后一帧\r\n            else if (this._lastFrame > this._curFrame &&\r\n                this._lastFrame != this.totalFrames) {\r\n                this._endMark = true;\r\n            }\r\n        } else {\r\n            this._curFrame = (this.startFrame - deltaFrame) % this.totalFrames;\r\n            if (this._curFrame == 0) {\r\n                this._curFrame = this.totalFrames;\r\n            } else if (this._curFrame < 0) {\r\n                this._curFrame += this.totalFrames;\r\n            }\r\n            if (this._curFrame == 1) {\r\n                this._endMark = true;\r\n            }\r\n            //当上一帧小于_curFrame,并且上一帧不是1时，说明跳过了第一帧\r\n            else if (this._lastFrame < this._curFrame &&\r\n                this._lastFrame != 1) {\r\n                this._endMark = true;\r\n            }\r\n        }\r\n        this._lastFrame = this._curFrame;\r\n        return true\r\n    }\r\n    /**\r\n     * 重写刷新\r\n     * @method update\r\n     * @public\r\n     * @since 1.0.0\r\n     */\r\n    public update(): void {\r\n        //更新帧数据\r\n        this.updateFrame();\r\n        super.update();\r\n    }\r\n\r\n    public destroy(): void {\r\n        //todo-清除相应的数据引用\r\n        this.rawData = null;\r\n        super.destroy();\r\n    }\r\n\r\n    private updateMask(mask: Shape, data: { _d: string, _style: any, _transform: any }) {\r\n        mask.clear();\r\n        //会用到的，再说TODO\r\n        if (data._transform) {\r\n\r\n        }\r\n        let currentPoint = { x: 0, y: 0, x1: 0, y1: 0, x2: 0, y2: 0 }\r\n        //暂时不需要绘制的东西\r\n        mask.beginFill();\r\n        const validMethods = 'MLHVCSQRZmlhvcsqrz'\r\n        const d = data._d.replace(/([a-zA-Z])/g, '|||$1 ').replace(/,/g, ' ');\r\n        d.split('|||').forEach(segment => {\r\n            if (segment.length == 0) return;\r\n            const firstLetter = segment.substr(0, 1);\r\n            if (validMethods.indexOf(firstLetter) >= 0) {\r\n                const args = segment.substr(1).trim().split(\" \");\r\n                switch (firstLetter) {\r\n                    case 'M':\r\n                        currentPoint.x = Number(args[0]);\r\n                        currentPoint.y = Number(args[1]);\r\n                        mask.moveTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'm':\r\n                        currentPoint.x += Number(args[0]);\r\n                        currentPoint.y += Number(args[1]);\r\n                        mask.moveTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'L':\r\n                        currentPoint.x = Number(args[0]);\r\n                        currentPoint.y = Number(args[1]);\r\n                        mask.lineTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'l':\r\n                        currentPoint.x += Number(args[0]);\r\n                        currentPoint.y += Number(args[1]);\r\n                        mask.lineTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'H':\r\n                        currentPoint.x = Number(args[0]);\r\n                        mask.lineTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'h':\r\n                        currentPoint.x += Number(args[0]);\r\n                        mask.lineTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'V':\r\n                        currentPoint.y = Number(args[0]);\r\n                        mask.lineTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'v':\r\n                        currentPoint.y += Number(args[0]);\r\n                        mask.lineTo(currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'C':\r\n                        currentPoint.x1 = Number(args[0]);\r\n                        currentPoint.y1 = Number(args[1]);\r\n                        currentPoint.x2 = Number(args[2]);\r\n                        currentPoint.y2 = Number(args[3]);\r\n                        currentPoint.x = Number(args[4]);\r\n                        currentPoint.y = Number(args[5]);\r\n                        mask.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'c':\r\n                        currentPoint.x1 = currentPoint.x + Number(args[0]);\r\n                        currentPoint.y1 = currentPoint.y + Number(args[1]);\r\n                        currentPoint.x2 = currentPoint.x + Number(args[2]);\r\n                        currentPoint.y2 = currentPoint.y + Number(args[3]);\r\n                        currentPoint.x += Number(args[4]);\r\n                        currentPoint.y += Number(args[5]);\r\n                        mask.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'S':\r\n                        if (currentPoint.x1 && currentPoint.y1 && currentPoint.x2 && currentPoint.y2) {\r\n                            currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\r\n                            currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\r\n                            currentPoint.x2 = Number(args[0]);\r\n                            currentPoint.y2 = Number(args[1]);\r\n                            currentPoint.x = Number(args[2]);\r\n                            currentPoint.y = Number(args[3]);\r\n                            mask.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\r\n                        } else {\r\n                            currentPoint.x1 = Number(args[0]);\r\n                            currentPoint.y1 = Number(args[1]);\r\n                            currentPoint.x = Number(args[2]);\r\n                            currentPoint.y = Number(args[3]);\r\n                            mask.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\r\n                        }\r\n                        break;\r\n                    case 's':\r\n                        if (currentPoint.x1 && currentPoint.y1 && currentPoint.x2 && currentPoint.y2) {\r\n                            currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\r\n                            currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\r\n                            currentPoint.x2 = currentPoint.x + Number(args[0]);\r\n                            currentPoint.y2 = currentPoint.y + Number(args[1]);\r\n                            currentPoint.x += Number(args[2]);\r\n                            currentPoint.y += Number(args[3]);\r\n                            mask.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\r\n                        } else {\r\n                            currentPoint.x1 = currentPoint.x + Number(args[0]);\r\n                            currentPoint.y1 = currentPoint.y + Number(args[1]);\r\n                            currentPoint.x += Number(args[2]);\r\n                            currentPoint.y += Number(args[3]);\r\n                            mask.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\r\n                        }\r\n                        break;\r\n                    case 'Q':\r\n                        currentPoint.x1 = Number(args[0]);\r\n                        currentPoint.y1 = Number(args[1]);\r\n                        currentPoint.x = Number(args[2]);\r\n                        currentPoint.y = Number(args[3]);\r\n                        mask.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'q':\r\n                        currentPoint.x1 = currentPoint.x + Number(args[0]);\r\n                        currentPoint.y1 = currentPoint.y + Number(args[1]);\r\n                        currentPoint.x += Number(args[2]);\r\n                        currentPoint.y += Number(args[3]);\r\n                        mask.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\r\n                        break;\r\n                    case 'A':\r\n                        break;\r\n                    case 'a':\r\n                        break;\r\n                    case 'Z':\r\n                    case 'z':\r\n                        mask.closePath();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        })\r\n        //暂时没有其他绘制，直接endFill\r\n        mask.endFill();\r\n    }\r\n    /**\r\n     * 用源数据拷贝一份，用相应参数\r\n     * @param frames 源数据\r\n     * @param x 偏移x，默认0\r\n     * @param y 偏移y，默认0\r\n     * @param scaleX 相对缩放x，默认1\r\n     * @param scaleY 相对缩放y，默认1\r\n     * @param rotation 相对旋转,角度制，默认0\r\n     * @param anchorX 相对锚点x，默认0\r\n     * @param anchorY 相对锚点y，默认0\r\n     */\r\n    static deepCopyFrames(\r\n        frames,\r\n        x: number = 0,\r\n        y: number = 0,\r\n        scaleX: number = 1,\r\n        scaleY: number = 1,\r\n        rotation: number = 0,\r\n        anchorX: number = 0,\r\n        anchorY: number = 0\r\n    ) {\r\n        var cf = [];\r\n        rotation *= Math.PI / 180;\r\n        //@ts-ignore\r\n        var lt: Matrix = {};\r\n        lt.a = Math.cos(rotation) * scaleX;\r\n        lt.b = Math.sin(rotation) * scaleX;\r\n        lt.c = -Math.sin(rotation) * scaleY;\r\n        lt.d = Math.cos(rotation) * scaleY;\r\n        lt.tx = x + anchorX - ((anchorX * lt.a) + (anchorY * lt.c));\r\n        lt.ty = y + anchorY - ((anchorX * lt.b) + (anchorY * lt.d));\r\n        for (var j = 0; j < frames.length; j++) {\r\n            var frame = frames[j];\r\n            const pt = frame.transform;\r\n            var f = { alpha: 0, transform: null };\r\n            //透明度\r\n            f.alpha = frame.alpha;\r\n            f.transform = {\r\n                a: (lt.a * pt.a) + (lt.b * pt.c),\r\n                b: (lt.a * pt.b) + (lt.b * pt.d),\r\n                c: (lt.c * pt.a) + (lt.d * pt.c),\r\n                d: (lt.c * pt.b) + (lt.d * pt.d),\r\n                tx: (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx,\r\n                ty: (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty,\r\n            };\r\n            cf.push(f)\r\n        }\r\n        return cf;\r\n    }\r\n}","import { TextureCache, createImage } from \"../utils\";\r\nimport { Tween } from \"../../tween\";\r\nimport { Texture, BaseTexture } from \"../texture\";\r\nimport { Container, Sprite, DisplayObject } from \"../display\";\r\n\r\nimport { getBezierEasing } from \"./forLottie/BezierEaser\";\r\nimport { buildBezierProps } from \"./forLottie/buildBezierProps\";\r\nimport { buildBezierEaserProps } from \"./forLottie/buildBezierEaserProps\";\r\n\r\ninterface LottieData {\r\n    \"fr\": number,//珍露  30  60等\r\n    \"ip\": number,//开始帧\r\n    \"op\": number,//结束帧\r\n    \"w\": number,//宽度\r\n    \"h\": number,//高度\r\n    \"nm\": string,//名字\r\n    \"layers\": LayerData[],\r\n    \"assets\"?: {\r\n        \"id\": string,//图片id，与layers里的refId对应\r\n        \"w\": number,\r\n        \"h\": number,\r\n        \"p\": string,//base64数据\r\n    }[],\r\n    \"textures\"?: { [key: string]: Texture }//缓存的贴图，为了上面的assets里的图片数据，不进全局缓存，\r\n\r\n    svgaData?: any //数据生成后存入\r\n}\r\ninterface LayerData {\r\n    \"ind\": number,//id唯一\r\n    \"ty\": number,//类型，暂时只有2\r\n    \"nm\": string//\"owl_sleep.png\",//暂时就是图片\r\n    \"refId\": string,\r\n    \"parent\"?: number,//父级id\r\n    \"ks\": KsData;\r\n    \"ip\": number,//开始帧\r\n    \"op\": number,//结束帧\r\n\r\n\r\n    transformDatas?: TansformData[];\r\n}\r\ninterface KsData {\r\n    o: KeyData //透明度\r\n    r: KeyData //旋转\r\n    p: KeyData //位置\r\n    a: KeyData //锚点\r\n    s: KeyData //缩放\r\n}\r\ninterface KeyData {\r\n    a: number,\r\n    k: KeyAniData[] | number[] | number,\r\n    x: string,//可能有表达式\r\n\r\n    // frames?: KeyFrameInt[],//注意根据表达式还要添加\r\n    props?: number[][],//记录所有的属性，每一帧的\r\n}\r\n\r\ninterface KeyAniData {\r\n    t: number,\r\n    s: number[],\r\n\r\n    i: { x: number | number[], y: number | number[] },\r\n    o: { x: number | number[], y: number | number[] },\r\n\r\n    to: number[],\r\n    ti: number[],\r\n\r\n    h: number\r\n}\r\n\r\n/**\r\n * 记录的Tween数据\r\n */\r\ninterface TweenData {\r\n    /**\r\n     * 属性对象\r\n     */\r\n    obj: any,\r\n    deltaTime: number,\r\n    deltaT: number,\r\n    isSet?: boolean,\r\n    /**\r\n     * 原始帧数据，算pingpong的时间差值用\r\n     */\r\n    timeOri?: number,\r\n}\r\n\r\n/**\r\n * 每一个属性在总帧数上每个关键点的数据\r\n * 挂在每个层级的的ks的各个属性上，到时直接计算出所有的x,y,sx,sy,r,alpha,  ax和ay固定，注意xy都得减axy\r\n * 第一步只处理ks里面的数据\r\n */\r\ninterface KeyFrameInt {\r\n    /**\r\n     * 数值\r\n     */\r\n    value: number[],\r\n    /**\r\n     * 第几帧\r\n     */\r\n    frame: number,\r\n\r\n    // type: \"stay\" | \"tween\",//stay停留不变，到下一个状态时硬切  ，\r\n    /**\r\n     * 为了计算贝塞尔补间数据 ,有io或toti才有缓动\r\n     */\r\n    i?: { x: number | number[], y: number | number[] };\r\n    o?: { x: number | number[], y: number | number[] };\r\n    /**\r\n     * 为了计算贝塞尔补间数据\r\n     */\r\n    to?: number[],\r\n    ti?: number[],\r\n    //不知道干嘛用的，但是有用\r\n    h?: boolean,\r\n}\r\n\r\ninterface TansformData {\r\n    alpha: number;\r\n    transform?: {\r\n        a: number,\r\n        b: number,\r\n        c: number,\r\n        d: number,\r\n        tx: number,\r\n        ty: number,\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 用Tween拼，后续计算帧数据记录\r\n * 临时写的，真尼玛乱得很，以后再说\r\n */\r\nexport class Lottie extends Container {\r\n    /**\r\n     * 原始数据，尽量只获取，不修改\r\n     */\r\n    private rawData: LottieData;\r\n    /**\r\n     * 总帧数\r\n     */\r\n    get totalFrames(): number {\r\n        return this.rawData && (this.rawData.op - this.rawData.ip) || 0;\r\n    };\r\n    /**\r\n     * 锁步的时间间隔，按fps定,毫秒\r\n     */\r\n    private timeInterval;\r\n    /**\r\n     * 按帧率计算，60为1，30为2，\r\n     */\r\n    private deltaFrame: number = 1;\r\n\r\n    get videoWidth(): number {\r\n        return this.rawData && this.rawData.w || 0;\r\n    };\r\n    get videoHeight(): number {\r\n        return this.rawData && this.rawData.h || 0;\r\n    };\r\n    /**\r\n     * 供循环用\r\n     */\r\n    private loops: number\r\n    private callback: () => void\r\n\r\n    constructor(data) {\r\n        super()\r\n        this._instanceType = \"Lottie\";\r\n        //初始化\r\n        if (data) {\r\n            this.init(data);\r\n        }\r\n        // else {\r\n        //     this.totalFrames = 0;\r\n        // }\r\n    }\r\n    /**\r\n     * 暂时不考虑重复init\r\n     * @param data \r\n     */\r\n    init(data: LottieData) {\r\n        if (!data) return\r\n        this.rawData = data;\r\n        this.timeInterval = 1000 / data.fr;\r\n        // this.totalFrames = data.op - data.ip\r\n        //间隔帧数，\r\n        this.deltaFrame = 60 / data.fr;\r\n        this.name = data.nm;\r\n\r\n        //初始化图片 有assets但无textures\r\n        if (data.assets && !data.textures) {//带图片数据的待测试\r\n            data.textures = {};\r\n            data.assets.forEach((a) => {\r\n                let imgTag = createImage();\r\n                imgTag.src = a.p;\r\n                data.textures[a.id] = new Texture(new BaseTexture(imgTag));\r\n            })\r\n        }\r\n        this.initChildren();\r\n    }\r\n    private initChildren() {\r\n        //初始化内容吧，假设所有资源已经加载好额\r\n        var layers = this.rawData.layers.slice();\r\n        //先筛选出所有不带parents,说明是顶级容器\r\n        for (var i = layers.length - 1; i >= 0; i--) {\r\n            let layer = layers[i];\r\n            // if (!layer.refId) console.log(layer)\r\n            let c = this.addChild(new Sprite(\r\n                // RES.getRes(layer.nm) ||\r\n                layer.refId ?\r\n                    this.rawData.textures ?\r\n                        this.rawData.textures[layer.refId] :\r\n                        TextureCache[layer.refId] ||\r\n                        TextureCache[layer.refId + \".png\"] : null\r\n            ));\r\n            //记录一下数据\r\n            c[\"layerData\"] = layer;\r\n        }\r\n        this.initState()\r\n    }\r\n    private initState(con = this.children) {\r\n        for (var i = 0; i < con.length; i++) {\r\n            var c = con[i] as Sprite;\r\n            if (c[\"layerData\"]) {\r\n                //取第一个数据\r\n                let data: LayerData = c[\"layerData\"];\r\n                //@ts-ignore 透明度\r\n                c.alpha = data.ks.o.k[0] ? data.ks.o.k[0].s[0] / 100 : data.ks.o.k / 100;\r\n                // c.alpha = c.alpha === 0.01 ? 1 : c.alpha;\r\n                //@ts-ignore 选转\r\n                c.rotation = data.ks.r.k[0] ? data.ks.r.k[0].s[0] : data.ks.r.k;\r\n                //锚点，用贴图锚点\r\n                var ad = typeof data.ks.a.k[0] == \"number\" ? data.ks.a.k : data.ks.a.k[0].s;\r\n                c.anchor.set(ad[0], ad[1])\r\n                //位置\r\n                var ad = typeof data.ks.p.k[0] == \"number\" ? data.ks.p.k : data.ks.p.k[0].s;\r\n                c.position.set(ad[0] - c.anchorX, ad[1] - c.anchorY)\r\n                //缩放\r\n                var ad = typeof data.ks.s.k[0] == \"number\" ? data.ks.s.k : data.ks.s.k[0].s;\r\n                c.scale.set(ad[0] / 100, ad[1] / 100)\r\n\r\n                //如果入场不在的\r\n                c.visible = data.ip <= 0\r\n                // if (data.ip > 0) {\r\n                //     c.visible = false\r\n                // } else {\r\n                //     c.visible = true\r\n                // }\r\n            }\r\n            if (c.children.length) this.initState(c.children)\r\n        }\r\n    }\r\n    /**\r\n     * 为了那啥 修改 loop默认0\r\n     */\r\n    play(loop: number = 0, callback?: () => void) {\r\n        // this.initState();\r\n        this.stop(true);//需要回到初始状态再开始\r\n        this.loops = loop;\r\n        this.callback = callback;\r\n        this.addTweens();\r\n    }\r\n\r\n    /**\r\n     * 移除所有的Tween，临时方法\r\n     * @param isReset 是否回到初始状态，默认否\r\n     */\r\n    stop(isReset: boolean = false) {\r\n        //tween要去掉\r\n        Tween.removeTweens(this)\r\n        this.children.forEach((c) => { Tween.removeTweens(c) })\r\n        isReset && this.initState();\r\n    }\r\n\r\n    private addTweens(con = this.children) {\r\n        for (var i = 0; i < con.length; i++) {\r\n            let c = con[i] as Sprite;\r\n            if (c[\"layerData\"]) {\r\n                //取第一个数据\r\n                let data: LayerData = c[\"layerData\"];\r\n                //@ts-ignore 透明度，如果k是数组，肯定有帧数据\r\n                if (data.ks.o.k.length) this.addTween(c, \"o\");\r\n                //@ts-ignore 旋转\r\n                if (data.ks.r.k.length) this.addTween(c, \"r\");\r\n                //位置，得是对象\r\n                if (typeof data.ks.p.k[0] != \"number\") this.addTween(c, \"p\");\r\n                //缩放\r\n                if (typeof data.ks.s.k[0] != \"number\") this.addTween(c, \"s\");\r\n\r\n                //显示隐藏统一这里处理，还有个循环的，如何计算显示隐藏再说\r\n                var t = Tween.get(c, { loop: true })\r\n                if (data.ip > 0 || data.op < this.rawData.op) {\r\n                    var aa = data.ip < 0 ? 0 : data.ip;\r\n                    var bb = data.op > this.rawData.op ? this.rawData.op : data.op\r\n                    t.wait(aa * this.timeInterval)\r\n                        .call(() => { c.visible = true; })\r\n                        .wait((bb - aa) * this.timeInterval)\r\n                        .call(() => { c.visible = false; })\r\n                        .wait((this.rawData.op - bb) * this.timeInterval)\r\n                }\r\n\r\n            }\r\n            //其实不会有\r\n            if (c.children.length) this.addTweens(c.children)\r\n        }\r\n        //考虑回调\r\n        Tween.get(this, { loop: true })\r\n            .wait((this.rawData.op - this.rawData.ip) * this.timeInterval)\r\n            .call(() => {\r\n                if (--this.loops == 0) {\r\n                    this.stop();\r\n                    this.callback && this.callback();\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 来吧重写，，。专干loopOut和loopIn\r\n     * @param dis \r\n     * @param type \r\n     */\r\n    private addTween(dis: DisplayObject, type: \"r\" | \"o\" | \"s\" | \"p\") {\r\n        const data: { \"t\": number, \"s\": number[], \"h\": number }[] = dis[\"layerData\"].ks[type].k\r\n        let tween = Tween.get(dis, { loop: true })\r\n        let countTime = 0;\r\n\r\n        //有表达式的，先随便写，到时整理\r\n        if (dis[\"layerData\"].ks[type].x) {\r\n            var xs = dis[\"layerData\"].ks[type].x;\r\n            //取数字\r\n            var rr = +xs.replace(/[^0-9]/ig, \"\");\r\n            //loopOut后续循环，补齐从最后一个数据的t到dis[\"layerData\"].op的间隔，不足一个的情况需要单独计算\r\n            if (xs.indexOf(\"loopOut\") >= 0) {\r\n                //先走完一次整的，反正补后面的\r\n                let objArr: { obj: any, deltaTime: number, deltaT: number, isSet?: boolean }[] = [];\r\n                let curT = 0;\r\n                for (let i = 0; i < data.length; i++) {\r\n                    let d = data[i];\r\n                    //如果超过op的\r\n                    if (d.t > dis[\"layerData\"].op) break;\r\n                    let deltaT = d.t - curT;\r\n                    let deltaTime = deltaT * this.timeInterval;\r\n                    let obj = getTweenObj(d);\r\n                    //如果第一帧不是0，需要等待\r\n                    if (i == 0 && d.t > 0) {\r\n                        tween.wait(deltaTime)\r\n                        countTime += deltaTime\r\n                        // console.log(\"asdffff\",countALL,d.t)\r\n                        //需加set,但是时间0，暂时别加吧，tween会自行记录初始值\r\n                        // objArr.push({ obj, deltaT:0, deltaTime:0, isSet: true })\r\n                    }\r\n                    //从0开始，但是t为0，用set\r\n                    else if (i == 0 && d.t == 0) { //考虑下是否需要，deltaTime也是0\r\n                        tween.set(obj);\r\n                        objArr.push({ obj, deltaT, deltaTime, isSet: true })\r\n                    } else {\r\n                        //一帧当作set\r\n                        if (d.t - curT == 1 || d.h === 1) {//1.5.0新增或者h==1\r\n                            tween.wait(deltaTime)\r\n                                .set(obj);\r\n                            objArr.push({ obj, deltaT, deltaTime, isSet: true })\r\n                            countTime += deltaTime\r\n                            // console.log(\"asdff\",countALL)\r\n                        } else {\r\n                            tween.to(obj, deltaTime);\r\n                            objArr.push({ obj, deltaT, deltaTime })\r\n                            countTime += deltaTime\r\n                            // console.log(\"asdff\",countALL)\r\n                        }\r\n                    }\r\n                    //赋值\r\n                    curT = d.t;\r\n                }\r\n                // if (dis[\"layerData\"].ind == \"1\") console.log(45445456, objArr)\r\n                // console.log(\"asdf\",countALL)\r\n                //pingpong先不考虑次数，还没遇到\r\n                if (xs.indexOf(\"pingpong\") >= 0 && data[data.length - 1].t < dis[\"layerData\"].op) {\r\n                    // Math.floor((dis[\"layerData\"].op - data[0].t))\r\n                    var round = Math.round(\r\n                        (dis[\"layerData\"].op - data[data.length - 1].t) / //其实op可能超过rawData的op所以这样有问题\r\n                        (data[data.length - 1].t - data[0].t) //不一定所有\r\n                    )\r\n                    curT += round * (data[data.length - 1].t - data[0].t) //不一定所有\r\n                    var dir = false;\r\n                    while (--round) {//居然没判断set的，遇到问题再说TODO\r\n                        if (dir) {\r\n                            for (var o = 0; o < objArr.length; o++) {\r\n                                tween.to(objArr[o].obj, objArr[o].deltaTime);\r\n                                countTime += objArr[o].deltaTime;\r\n                            }\r\n                        } else {\r\n                            for (var o = objArr.length - 1; o >= 1; o--) {\r\n                                tween.to(objArr[o - 1].obj, objArr[o].deltaTime);\r\n                                countTime += objArr[o].deltaTime;\r\n                            }\r\n                        }\r\n                        dir = !dir;\r\n                    }\r\n                }\r\n                //循环，先floor，多余的重走一次，估计不能用dis[\"layerData\"].op，得用this.rawData.op，loopOut到时也得单独计算\r\n                else if (xs.indexOf(\"cycle\") >= 0 && data[data.length - 1].t < dis[\"layerData\"].op) {\r\n                    var lastIndex = data.length - 1;\r\n                    var num = Math.floor(\r\n                        (dis[\"layerData\"].op - data[lastIndex].t) / //其实op可能超过rawData的op所以这样有问题\r\n                        (data[lastIndex].t - data[lastIndex - (rr || lastIndex)].t)\r\n                    );\r\n                    // console.log(\"asd\",num,data[lastIndex].t - data[lastIndex - (rr || lastIndex)].t)\r\n                    //取一部分\r\n                    let objArrC = objArr.slice(-rr);\r\n                    while (num) {\r\n                        num--;\r\n                        //补满\r\n                        for (var o = 0; o < objArrC.length; o++) {\r\n                            if (objArrC[o].isSet) {\r\n                                tween.wait(objArrC[o].deltaTime)\r\n                                    .set(objArrC[o].obj);\r\n                            } else {\r\n                                tween.to(objArrC[o].obj, objArrC[o].deltaTime);\r\n                            }\r\n                            countTime += objArrC[o].deltaTime\r\n                        }\r\n                    }\r\n                    // console.log(\"asd\",countALL)\r\n                    //补剩下的，跑一部分\r\n                    var left = (dis[\"layerData\"].op - data[lastIndex].t) % (data[lastIndex].t - data[lastIndex - (rr || lastIndex)].t);\r\n                    //   if(dis[\"layerData\"].ind==\"1\")  console.log(45445456,left)\r\n                    for (var o = 0; o < objArrC.length; o++) {\r\n                        if (objArrC[o].deltaT <= left) {\r\n                            if (objArrC[o].isSet) {\r\n                                tween.wait(objArrC[o].deltaTime)\r\n                                    .set(objArrC[o].obj);\r\n                            } else {\r\n                                tween.to(objArrC[o].obj, objArrC[o].deltaTime);\r\n                            }\r\n                            left -= objArrC[o].deltaT\r\n                            countTime += objArrC[o].deltaTime\r\n                        } else {\r\n                            if (left > 0) {//这种情况不会是set，再调吧，这样算补间有问题\r\n                                // console.log(o,left, objArrC.length)\r\n                                // if(o == 0)console.log(left, objArrC[o].deltaT)\r\n                                var ooo = o == 0 ?\r\n                                    calculateInterpolation(\r\n                                        /*objArrC[0].obj,*/ copyProps(objArrC[o].obj, tween[\"_initQueueProps\"]),//初始值用tween记录的\r\n                                        objArrC[o].obj,\r\n                                        left / objArrC[o].deltaT\r\n                                    ) : calculateInterpolation(\r\n                                        objArrC[o - 1].obj,\r\n                                        objArrC[o].obj,\r\n                                        left / objArrC[o].deltaT\r\n                                    )\r\n                                tween.to(\r\n                                    ooo,\r\n                                    left * this.timeInterval\r\n                                );\r\n                                countTime += left * this.timeInterval\r\n\r\n                                // console.log(countALL)\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            //前面循环，先取所有的tween序列，初始状态要改\r\n            else if (xs.indexOf(\"loopIn\") >= 0) {\r\n                let objArr: TweenData[] = [];\r\n                let curT = 0;\r\n                for (let i = 0; i < data.length; i++) {\r\n                    let d = data[i];\r\n                    //不能去掉，有可能需要用到\r\n                    // if (d.t > dis[\"layerData\"].op) break;\r\n                    let deltaT = d.t - curT;\r\n                    let deltaTime = deltaT * this.timeInterval;\r\n                    let obj = getTweenObj(d);\r\n                    //一帧当作set\r\n                    if (d.t - curT == 1 || d.h === 1) {//1.5.0新增或者h==1\r\n                        objArr.push({ obj, deltaT, deltaTime, isSet: true, timeOri: d.t })\r\n                    } else {\r\n                        objArr.push({ obj, deltaT, deltaTime, timeOri: d.t })\r\n                    }\r\n                    //赋值\r\n                    curT = d.t;\r\n                }\r\n                //pingpong再loopIn暂时没有,用到时再写,还真尼玛下个就是\r\n                if (xs.indexOf(\"pingpong\") >= 0 && data[0].t > 0) {\r\n                    objArr = getLoopInPingpongTween(objArr, rr, dis[\"layerData\"].op)\r\n                    // if (dis[\"layerData\"].ind == 8) console.log(\"asdf\", objArr);\r\n                    for (var o = 0; o < objArr.length; o++) {\r\n                        // if (dis[\"layerData\"].ind == 8) console.log(\"asdf\", objArrC[o]);\r\n                        if (objArr[o].isSet) {\r\n                            tween.wait(objArr[o].deltaTime)\r\n                                .set(objArr[o].obj);\r\n                        } else {\r\n                            tween.to(objArr[o].obj, objArr[o].deltaTime);\r\n                        }\r\n                        countTime += objArr[o].deltaTime\r\n                    }\r\n                }\r\n                //循环，其实应该用dis[\"layerData\"].ip判断\r\n                else if (xs.indexOf(\"cycle\") >= 0 && data[0].t > 0) {//不考虑不整的，直接从0开始，算出整的，然后自然过度到最后一个\r\n                    //可能入场的时间不能算\r\n                    // if (dis[\"layerData\"].ip > 0) tween.wait(dis[\"layerData\"].ip * this.timeInterval)\r\n\r\n                    objArr = getLoopInCycleTween(objArr, rr, dis[\"layerData\"].op, dis[\"layerData\"].ip);\r\n                    if (dis[\"layerData\"].ip) {\r\n                        // console.log(5464,dis[\"layerData\"].ip,countTime)\r\n                        tween.wait(dis[\"layerData\"].ip * this.timeInterval)//以后改\r\n                        countTime += dis[\"layerData\"].ip * this.timeInterval\r\n                    }\r\n                    for (var o = 0; o < objArr.length; o++) {\r\n                        if (objArr[o].isSet) {\r\n                            tween.wait(objArr[o].deltaTime)\r\n                                .set(objArr[o].obj);\r\n                        } else {\r\n                            tween.to(objArr[o].obj, objArr[o].deltaTime);\r\n                        }\r\n                        countTime += objArr[o].deltaTime\r\n                    }\r\n                }\r\n                // if (dis[\"layerData\"].ind == 1) console.log(\"asd\", countTime);\r\n                //多余的时间\r\n                var op = Math.min(dis[\"layerData\"].op, this.rawData.op)\r\n                if (countTime < op * this.timeInterval) {\r\n                    var dd = op * this.timeInterval - countTime;\r\n                    tween.wait(dd)\r\n                    countTime += dd\r\n                }\r\n                // console.log(countTime)\r\n                // if (dis[\"layerData\"].ind == 1) console.log(\"asde\", countTime);\r\n            }\r\n\r\n            //还有一部分   dis[\"layerData\"].op 到 this.rawData.op \r\n            if (dis[\"layerData\"].op < this.rawData.op) {\r\n                tween.wait((this.rawData.op - dis[\"layerData\"].op) * this.timeInterval)\r\n                countTime += (this.rawData.op - dis[\"layerData\"].op) * this.timeInterval\r\n            }\r\n            //查看所有时间\r\n            // console.log(countTime)\r\n        }\r\n        //没表达式的，用wait补满前面的和后面的\r\n        else {\r\n            let curT = 0;\r\n            for (let i = 0; i < data.length; i++) {\r\n                let d = data[i],\r\n                    obj = getTweenObj(d),\r\n                    deltaTime;\r\n                //判断是否小于0,小于0需要和下一帧算补间\r\n\r\n                if (d.t < 0) {\r\n                    //下一帧不存在或也小于0\r\n                    if (!data[i + 1] || data[i + 1].t < 0) break;\r\n                    obj = calculateInterpolation(\r\n                        obj,\r\n                        getTweenObj(data[i + 1]),\r\n                        -d.t / (data[i + 1].t - d.t)\r\n                    );\r\n                    // if (d.t == -35) console.log(123)\r\n                    tween.set(obj);\r\n                    curT = 0;\r\n                }\r\n                //如果超过op的，和上一帧算补间\r\n                else if (d.t > this.rawData.op) {\r\n                    if (!data[i - 1] || data[i - 1].t > this.rawData.op) break;\r\n                    let dt = this.rawData.op - data[i - 1].t;\r\n                    deltaTime = dt * this.timeInterval;\r\n                    obj = calculateInterpolation(\r\n                        getTweenObj(data[i - 1]),\r\n                        obj,\r\n                        dt / (d.t - data[i - 1].t)\r\n                    );\r\n                    // if (dis[\"layerData\"].ind == 7) console.log(999, d.t, data[i - 1].t, getTweenObj(data[i - 1]), obj)\r\n                    tween.to(obj, deltaTime);\r\n                    //累计时间\r\n                    countTime += deltaTime;\r\n                    //没必要记了。最后一帧了\r\n                    curT = this.rawData.op;\r\n                }\r\n                else {\r\n                    deltaTime = (d.t - curT) * this.timeInterval\r\n                    //如果第一帧不是0，需要等待\r\n                    if (i == 0 && d.t > 0) {\r\n                        tween.wait(deltaTime)\r\n                    }\r\n                    //从0开始，但是t为0，用set\r\n                    else if (i == 0 && d.t == 0) {\r\n                        tween.set(obj);\r\n                    } else {\r\n                        tween.to(obj, deltaTime);\r\n                    }\r\n                    countTime += deltaTime\r\n                    //赋值\r\n                    curT = d.t;\r\n                }\r\n            }\r\n            //考虑还有部分时间，等待\r\n            if (this.rawData.op > curT) {\r\n                tween.wait((this.rawData.op - curT) * this.timeInterval)\r\n            }\r\n        }\r\n        // console.log(countTime)\r\n        //结束的操作\r\n        // tween.call(() => {\r\n        //     if (--this.loops == 0) {\r\n        //         this.stop();\r\n        //         this.callback && this.callback();\r\n        //     }\r\n        // })\r\n\r\n        /**\r\n         * type和dis主参数里取\r\n         * @param d 循环里取\r\n         */\r\n        function getTweenObj(d: { \"t\": number; \"s\": number[] }) {\r\n            let obj;\r\n            switch (type) {\r\n                case \"r\":\r\n                    obj = { rotation: d.s[0] }\r\n                    break;\r\n                case \"o\":\r\n                    obj = { alpha: d.s[0] / 100 }\r\n                    break;\r\n                case \"s\":\r\n                    obj = { scaleX: d.s[0] / 100, scaleY: d.s[1] / 100 }\r\n                    break;\r\n                case \"p\":\r\n                    obj = { x: d.s[0] - dis.anchorX, y: d.s[1] - dis.anchorY }\r\n                    break;\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对所有的进行刷新，，根据cParent进行迭代刷新\r\n     * 层级有问题，只能平铺，手动计算矩阵\r\n     * 因为要平铺，所以记录cParent和ind  从1开始，也许只需要+1就行，还是用ind记录查找吧\r\n     * 遍历找\r\n     */\r\n    updateTransform() {\r\n        //super不行，到时查\r\n        this.displayObjectUpdateTransform();\r\n        this.children.forEach((c) => {\r\n            this._recursivePostUpdateTransformAA(c);\r\n        })\r\n        this.children.forEach((c) => {\r\n            c[\"mark\"] = false;\r\n        })\r\n    }\r\n\r\n    private findChildByInd(ind: number) {\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i][\"layerData\"] &&\r\n                this.children[i][\"layerData\"].ind === ind\r\n            ) return this.children[i]\r\n        }\r\n        return null\r\n    }\r\n\r\n    private _recursivePostUpdateTransformAA(c) {\r\n        if (c.layerData && c.layerData.parent) {\r\n            //ind从1开始，所以不用考虑0，且不应该存在 p没有的情况\r\n            var p = this.findChildByInd(c.layerData.parent)\r\n            this._recursivePostUpdateTransformAA(p);\r\n            if (!c.mark) {\r\n                c.mark = true;\r\n                c.transform.updateWorldMatrix(p.transform);\r\n                //透明度单独计算，不跟cParent保持\r\n                c._worldAlpha = c.alpha * c.parent._worldAlpha;\r\n            }\r\n        }\r\n        //直接进行tans\r\n        else if (!c.mark) {\r\n            c.updateTransform();//alpha跟父级有关\r\n            c.mark = true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加个方法，前两个参数都没用，为了一头牛\r\n     * @param beginFrame \r\n     * @param endFrame \r\n     * @param loops \r\n     * @param callback \r\n     */\r\n    public startAniRange(\r\n        beginFrame: number = 1,\r\n        endFrame: number = this.totalFrames,\r\n        loops: number = 1,\r\n        callback?: () => void\r\n    ) {\r\n        this.play(loops, callback)\r\n    }\r\n\r\n    destroy() {\r\n        //tween要去掉\r\n        Tween.removeTweens(this);\r\n        this.children.forEach((c) => { Tween.removeTweens(c) })\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n\r\nfunction calculateInterpolation(\r\n    d1: any,\r\n    d2: any,\r\n    scale: number //时间比例 t/(t2-t1)\r\n) {\r\n    let obj = {};\r\n    // for (let key in d1) obj[key] = Math.abs(d1[key] - d2[key]) * scale + d1[key]\r\n    //之前为何要加绝对值\r\n    for (let key in d1) obj[key] = (d2[key] - d1[key]) * scale + d1[key]\r\n    return obj\r\n}\r\n\r\n/**\r\n * 返回一个带obj里所有的key的对象，但是key值为sObj里的\r\n * @param obj 取里面的key\r\n * @param sObj 取里面的key值\r\n */\r\nfunction copyProps(obj, sObj) {\r\n    var o = {};\r\n    if (!obj) return o;\r\n    for (let key in obj) o[key] = sObj[key];\r\n    return o;\r\n}\r\n\r\n/**\r\n * 以后可能还会改，以后整理吧，以后可能要计算补间，现在先不管\r\n * @param objArr \r\n * @param time 第一帧的时间间隔\r\n * @param round 循环索引 \r\n */\r\nfunction getLoopInCycleTween(objArr: TweenData[], round: number, op: number, ip: number = 0) {\r\n    var time = objArr[0].deltaT - ip;//以后算插值时再说\r\n    //这样是否合理，也可能是objArrC的length下标，超出一个\r\n    if (round >= objArr.length) round = 0;\r\n    var objArrC = objArr.slice(0, round ? round + 1 : objArr.length)\r\n\r\n    // var lastDeltaT = objArrC[objArrC.length - 1].deltaT;\r\n    // if (objArrC.length > 2) {//如果长度大于2，首帧和尾帧是一致的，默认，所以不取最后一帧\r\n    //     //去掉最后一帧\r\n    //     objArrC.pop();\r\n    // }\r\n    // console.log(objArrC.length, objArr.length)\r\n    var tweenArr: TweenData[] = [];\r\n    var curIndex = 0;\r\n\r\n    while (time > 0) {\r\n        curIndex--;\r\n        //超出就是最后一帧\r\n        if (curIndex < 0) curIndex = objArrC.length - 1;\r\n\r\n        //第0帧是set\r\n        if (!curIndex) {\r\n            tweenArr.unshift({\r\n                obj: objArrC[0].obj,\r\n                deltaT: 0,\r\n                deltaTime: 0,\r\n                timeOri: objArrC[0].timeOri,\r\n                isSet: true\r\n            })\r\n        }\r\n        //其他的都是终点\r\n        else {\r\n            tweenArr.unshift(objArrC[curIndex])\r\n            time -= objArrC[curIndex].deltaT\r\n        }\r\n\r\n    }\r\n    //第一帧加上\r\n    tweenArr.unshift({\r\n        obj: objArrC[0].obj,\r\n        deltaT: 0,\r\n        deltaTime: 0,\r\n        timeOri: objArrC[0].timeOri,\r\n        isSet: true\r\n    })\r\n    //把剩下的，第一项要变成set，再加后面的所有\r\n    tweenArr.push({\r\n        obj: objArrC[0].obj,\r\n        deltaT: 0,\r\n        deltaTime: 0,\r\n        isSet: true\r\n    })\r\n    for (var i = 1; i < objArr.length; i++) {\r\n        if (objArr[i].timeOri > op) break;\r\n        tweenArr.push(objArr[i]);\r\n    }\r\n    // console.log(tweenArr)\r\n    return tweenArr\r\n}\r\n\r\n\r\nfunction getLoopInCycleTween11(objArr: TweenData[], time: number, round: number) {\r\n    //这样是否合理，也可能是objArrC的length下标，超出一个\r\n    if (round >= objArr.length) round = 0;\r\n    var lastDeltaT = objArr[round || objArr.length - 1].deltaT;\r\n    var lastDeltaTime = objArr[round || objArr.length - 1].deltaTime;\r\n    objArr[0].deltaT = lastDeltaT;\r\n    objArr[0].deltaTime = lastDeltaTime;\r\n    var objArrC = objArr.slice(0, round || objArr.length)\r\n    var tweenArr: TweenData[] = [];\r\n    var curT = 0;\r\n    //从0开始，一般就是初始未知，不做任何处理，不考虑插值\r\n    for (var i = 1; i < objArrC.length; i++) {\r\n        tweenArr.push(objArrC[i]);//不做拷贝应该也没事\r\n        curT += objArrC[i].deltaT;\r\n    }\r\n    time -= curT;\r\n    while (time > lastDeltaT) {\r\n        for (var i = 0; i < objArrC.length; i++) {\r\n            tweenArr.push(objArrC[i]);//不做拷贝应该也没事\r\n            time -= objArrC[i].deltaT\r\n        }\r\n    }\r\n    //接上最后一组\r\n    tweenArr = tweenArr.concat(objArr)\r\n    return tweenArr\r\n}\r\n\r\n/**\r\n * pingpong的，取首尾相接的循环\r\n * @param objArr \r\n * @param time \r\n * @param round \r\n */\r\nfunction getLoopInPingpongTween(objArr: TweenData[], round: number, op: number) {\r\n    var time = objArr[0].deltaT;\r\n\r\n    if (round >= objArr.length) round = 0;\r\n    var objArrC = objArr.slice(0, round ? round + 1 : objArr.length)\r\n\r\n    var timeInterval = objArr[0].deltaTime / objArr[0].deltaT;\r\n    // var allTime = 0;\r\n    // objArrC.forEach((o, i) => { if (i != 0) allTime += o.deltaT })\r\n\r\n    var tweenArr: TweenData[] = [];\r\n    var dir: boolean = true// = (time / allTime) % 2 == 0;\r\n    var curIndex = 0;\r\n    var lastIndex = 0;\r\n    while (time > 0) {\r\n        dir ? curIndex++ : curIndex--;\r\n        //如果超了，就反向\r\n        if (curIndex > objArrC.length - 1) {\r\n            dir = false;\r\n            curIndex -= 2\r\n        }\r\n        else if (curIndex < 0) {\r\n            dir = true;\r\n            curIndex += 2\r\n        }\r\n        var deltaT = Math.abs(objArrC[lastIndex].timeOri - objArrC[curIndex].timeOri);\r\n        tweenArr.unshift({\r\n            obj: objArrC[lastIndex].obj,\r\n            deltaT,\r\n            deltaTime: deltaT * timeInterval,\r\n            timeOri: objArrC[lastIndex].timeOri,\r\n            isSet: objArrC[lastIndex].isSet\r\n        })\r\n        lastIndex = curIndex;\r\n        time -= deltaT\r\n    }\r\n    //塞入\r\n    tweenArr.unshift({\r\n        obj: objArrC[lastIndex].obj,\r\n        deltaT: 0,\r\n        deltaTime: 0,\r\n        timeOri: objArrC[lastIndex].timeOri,\r\n        isSet: true\r\n    })\r\n    //把剩下的，除了第一项不要\r\n    //得考虑超出的op\r\n    for (var i = 1; i < objArr.length; i++) {\r\n        if (objArr[i].timeOri > op) break;\r\n        tweenArr.push(objArr[i]);\r\n    }\r\n    // objArr.forEach((o, i) => {\r\n    //     if (i) tweenArr.push(o)\r\n    // })\r\n\r\n\r\n\r\n    return tweenArr\r\n}\r\n\r\n\r\n//动画总ip必须为0，否则修改\r\n\r\nlet totalOp: number = 0;\r\nlet lottieData: LottieData\r\nexport function lottieToSvgaData(data: LottieData) {\r\n    //已经计算过了就直接返回了\r\n    if (data.svgaData) return data.svgaData;\r\n    //存一下，全局用\r\n    totalOp = data.op;//最后一帧估计不算\r\n    lottieData = data;\r\n    //是否需要深拷贝\r\n    // data = JSON.parse(JSON.stringify(data))\r\n    //最终返回的数据 \r\n    var videoEntity: any = {};\r\n    //一些简单的先设置了\r\n    videoEntity.videoSize = {\r\n        width: data.w,\r\n        height: data.h\r\n    }\r\n    videoEntity.FPS = data.fr;\r\n    videoEntity.frames = data.op - data.ip;\r\n    //图片还在的时\r\n    if (data.assets) {//注意这时不能把素材干进全局。单独存在自己的数据中\r\n        videoEntity.images = {};\r\n        data.assets.forEach((a) => {\r\n            videoEntity.images[a.id] = a.p.replace(\"data:image/png;base64,\", \"\")//去掉相同的前缀\r\n        })\r\n    }\r\n    for (var i = 0; i < data.layers.length; i++) {\r\n        var layerData = data.layers[i];\r\n        var ks = layerData.ks;\r\n        //锚点是不变的，先写\r\n        var ad: [number, number] = typeof layerData.ks.a.k[0] == \"number\" ? layerData.ks.a.k : layerData.ks.a.k[0].s;\r\n        // ks.a.frames = [{ value: ad, frame: 0 }];\r\n        //@ts-ignore\r\n        ks.a.props = fillUp(ad);\r\n        //其他的\r\n        addFrames(layerData);\r\n    }\r\n    //开始计算每帧矩阵，注意父级，循环每帧，必须上面的先执行完毕\r\n    data.layers.forEach((l) => {\r\n        l.transformDatas = fillUp({\r\n            alpha: 0,\r\n            // transform: {\r\n            //     a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0\r\n            // }\r\n        });\r\n    })\r\n\r\n    for (var i = 0; i < totalOp; i++) {\r\n        data.layers.forEach((l) => {\r\n            var ks = l.ks;\r\n            var ip = l.ip;\r\n            var op = l.op;\r\n            if (i >= ip && i <= op) {\r\n                // if()\r\n                // console.log(ks.o.props[i], l.nm, ks.o.props.length, i)\r\n                l.transformDatas[i].alpha = ks.o.props[i][0];\r\n            }\r\n            recursiveUpdateTransform(l, i);\r\n        })\r\n    }\r\n    //sprites最重要的东西,里面有imageKey和frames,TODO\r\n    videoEntity.sprites = [];\r\n    for (var i = 0; i < data.layers.length; i++) {\r\n        var layerData = data.layers[i];\r\n        if (layerData.refId)//有图片的才存下，因为全部已经转换成世界矩阵。容器已经没有意义\r\n            videoEntity.sprites.push({\r\n                imageKey: layerData.refId,\r\n                frames: layerData.transformDatas\r\n            })\r\n    }\r\n    videoEntity.sprites.reverse()\r\n    return lottieData.svgaData = videoEntity\r\n}\r\n\r\nfunction addFrames(layerData: LayerData) {\r\n    var ks = layerData.ks;\r\n    var ip = layerData.ip;\r\n    var op = layerData.op;\r\n    //@ts-ignore透明度\r\n    if (ks.o.k.length) {\r\n        addFrame(layerData, \"o\");\r\n    } else {//没有直接取首诊数据，且根据ip op处理显隐 具体怎么处理好点\r\n        //@ts-ignore 透明度决定显隐，最后根据ip和op来重新修正alpha 注意ip有可能小于0，op可能大于totalOp，所以注意判断   TODO\r\n        var alpha = ks.o.k / 100;\r\n        // ks.o.frames = [{ value: alpha, frame: 0 }]\r\n        //@ts-ignore\r\n        ks.o.props = fillUp([alpha]);\r\n    }\r\n\r\n    //@ts-ignore 旋转\r\n    if (ks.r.k.length) {\r\n        addFrame(layerData, \"r\");\r\n    } else {\r\n        //@ts-ignore\r\n        // ks.r.frames = [{ value: ks.r.k, frame: 0 }]\r\n        //@ts-ignore\r\n        ks.r.props = fillUp([ks.r.k]);\r\n    }\r\n\r\n\r\n    //位置，得是对象\r\n    if (typeof ks.p.k[0] != \"number\") {\r\n        addFrame(layerData, \"p\");\r\n    } else {\r\n        var anchor: [number, number] = typeof ks.a.k[0] == \"number\" ? ks.a.k : ks.a.k[0].s;\r\n        //@ts-ignore\r\n        var p = ks.p.k;\r\n        // ks.p.frames = [{ value: [p[0] - anchor[0], p[1] - anchor[1]], frame: 0 }]\r\n        //@ts-ignore\r\n        ks.p.props = fillUp([p[0] - anchor[0], p[1] - anchor[1]]);\r\n    }\r\n\r\n    //缩放\r\n    if (typeof ks.s.k[0] != \"number\") {\r\n        addFrame(layerData, \"s\");\r\n    } else {\r\n        //@ts-ignore\r\n        var s = ks.s.k;\r\n        // ks.s.frames = [{ value: [s[0] / 100, s[1] / 100], frame: 0 }]\r\n        //@ts-ignore\r\n        ks.s.props = fillUp([s[0] / 100, s[1] / 100]);\r\n    }\r\n}\r\n\r\nfunction addFrame(layerData: LayerData, type: \"o\" | \"r\" | \"p\" | \"s\") {\r\n    //@ts-ignore\r\n    var data: KeyAniData[] = layerData.ks[type].k;\r\n    var ip = layerData.ip; //有小于0的情况\r\n    var op = layerData.op; //有大于totalOp的情况\r\n    var ks = layerData.ks;\r\n    var anchor: [number, number] = typeof ks.a.k[0] == \"number\" ? ks.a.k : ks.a.k[0].s;\r\n    var frames: KeyFrameInt[] = [];\r\n    var props: number[][] = ks[type].props = [];\r\n    props.length = totalOp + 1;\r\n    for (let i = 0; i < data.length; i++) {\r\n        let d = data[i];\r\n        let value: number[];\r\n        switch (type) {\r\n            case \"r\":\r\n                value = [d.s[0]];\r\n                break;\r\n            case \"o\":\r\n                value = [d.s[0] / 100];\r\n                break;\r\n            case \"s\":\r\n                value = [d.s[0] / 100, d.s[1] / 100, 0]\r\n                break;\r\n            case \"p\":\r\n                value = [d.s[0] - anchor[0], d.s[1] - anchor[1], 0]\r\n                break;\r\n        }\r\n        frames.push({\r\n            i: d.i, o: d.o, ti: d.ti, to: d.to,\r\n            h: d.h === 1,\r\n            value,\r\n            frame: d.t\r\n        })\r\n    }\r\n\r\n    //把已有的干一边\r\n    for (var i = 0; i < frames.length - 1; i++) {//最后一个数据不用\r\n        let f = frames[i], nextF = frames[i + 1];\r\n        if (f.to) {\r\n            //把函数也传进去吧，用来处理\r\n            var fnc = getBezierEasing(f.o.x, f.o.y, f.i.x, f.i.y).get;\r\n            buildBezierProps(\r\n                f.value,\r\n                nextF.value,\r\n                f.to,//.map((e, index) => e - anchor[index] || 0),\r\n                f.ti,//.map((e, index) => e - anchor[index] || 0),\r\n                f.frame,\r\n                nextF.frame,\r\n                props,\r\n                fnc,\r\n                ks[type].x ? undefined : totalOp  //没有表达式时直接加限制\r\n            );\r\n        }\r\n        //没有路径，只有缓动\r\n        else {\r\n            buildBezierEaserProps(\r\n                f.value,\r\n                nextF.value,\r\n                f.o,\r\n                f.i,\r\n                f.frame,\r\n                nextF.frame,\r\n                props,\r\n                f.h,\r\n                ks[type].x ? undefined : totalOp,\r\n            )\r\n        }\r\n    }\r\n    //如果是h==1的，把最后的数据加上\r\n    if (frames[frames.length - 1].h) {\r\n        props[frames[frames.length - 1].frame] = frames[frames.length - 1].value.slice();\r\n    }\r\n\r\n\r\n    //有表达式的，把最后一帧数据加上，循环有用\r\n    if (ks[type].x && (ks[type].x.indexOf(\"loopOut\") >= 0 || ks[type].x.indexOf(\"loopIn\") >= 0)) {\r\n        var xs = ks[type].x;\r\n        var loopOut = xs.indexOf(\"loopOut\") >= 0;\r\n        var loopIn = xs.indexOf(\"loopIn\") >= 0;\r\n        //取数字\r\n        var rr = +xs.replace(/[^0-9]/ig, \"\");\r\n        if (rr > frames.length - 1) rr = 0;\r\n        var propsClone = props.slice();\r\n        var isCycle = xs.indexOf(\"cycle\") >= 0;\r\n        var isPingpong = xs.indexOf(\"pingpong\") >= 0;\r\n\r\n        var dir = false;\r\n        var lastIndex = frames.length - 1;\r\n        var startIndex = 0;\r\n        var count = loopOut ? frames[lastIndex].frame ://开始接的那一帧\r\n            frames[0].frame;//往前的从0开始\r\n        var stepOffset = loopOut ? frames[lastIndex - (rr || lastIndex)].frame :\r\n            // frames[0 + (rr || lastIndex)].frame;//循环帧数起点索引，往后补和往前补的\r\n            frames[0].frame\r\n        // frames[lastIndex - (rr || lastIndex)].frame\r\n        var stepAll = loopOut ? frames[lastIndex].frame - stepOffset :\r\n            // stepOffset - frames[0].frame; //总循环数每次，拐点只算一次,多一帧应该也计算了\r\n            // frames[lastIndex].frame - stepOffset\r\n            frames[0 + (rr || lastIndex)].frame - stepOffset;\r\n\r\n        while (loopOut ?\r\n            (/*count <= op &&*/ count <= totalOp) ://op也可能大于totalOp;\r\n            (/*count >= ip &&*/ count >= 0)//ip他妈有可能是负的\r\n        ) {//到op为止，其他的不算\r\n            if (isPingpong) {\r\n                if (dir) {//正向，第一帧不算\r\n                    funLoop((index) => {\r\n                        if (loopOut) {\r\n                            props[++count] = propsClone[index + 1 + stepOffset].slice();\r\n                        } else {\r\n                            props[--count] = propsClone[stepAll - 1 - index + stepOffset].slice();\r\n                        }\r\n                    }, stepAll)\r\n                } else {//反向，从最后一帧(不算)开始往前加剩下的\r\n                    funLoop((index) => {\r\n                        if (loopOut) {\r\n                            props[++count] = propsClone[stepAll - 1 - index + stepOffset].slice();\r\n                        } else {//从起始点参考其实是正向\r\n                            // props[--count] = propsClone[index + 1 + stepOffset].slice();\r\n                            props[--count] = propsClone[index + 1 + stepOffset].slice();\r\n                        }\r\n                    }, stepAll)\r\n                }\r\n                dir = !dir;\r\n            } else if (isCycle) {\r\n                funLoop((index) => {\r\n                    if (loopOut) {\r\n                        props[++count] = propsClone[index + 1 + stepOffset].slice()\r\n                    } else {\r\n                        props[--count] = propsClone[stepAll - 1 - index + stepOffset].slice();\r\n                    }\r\n                }, stepAll)\r\n            } else {//其他情况暂时不管\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    var arr = returnEmpty(props);\r\n    if (arr[0] !== null) {//前面补齐\r\n        var countFront = arr[0]\r\n        var startValue = props[countFront];\r\n        while (countFront--) {\r\n            props[countFront] = startValue.slice();\r\n        }\r\n    }\r\n    // console.log(layerData.nm, arr)\r\n    if (arr[1] !== null) {\r\n        // console.log(layerData.nm, arr, arr[1])\r\n        var countAfter = arr[1];\r\n        var endValue = props[countAfter];\r\n        while (countAfter++ <= totalOp) {\r\n            props[countAfter] = endValue.slice();\r\n        }\r\n    }\r\n}\r\nfunction findLayerByInd(ind: number): LayerData {\r\n    for (var i = 0; i < lottieData.layers.length; i++) {\r\n        if (lottieData.layers[i].ind === ind) return lottieData.layers[i]\r\n    }\r\n    //貌似layer是按顺序的，TMD有些中间的ind是没有的，还是找吧\r\n    // return lottieData.layers[ind - 1];\r\n}\r\n\r\nfunction recursiveUpdateTransform(l: LayerData, index: number) {\r\n    if (l.parent !== undefined) {\r\n        //ind从1开始，所以不用考虑0，且不应该存在 p没有的情况\r\n        var p = findLayerByInd(l.parent)\r\n        recursiveUpdateTransform(p, index);\r\n        if (!l.transformDatas[index].transform) {\r\n            //计算自己的先\r\n            var lt = l.transformDatas[index];\r\n            lt.transform = createWorldMatrix(\r\n                createLocalMatrix(l, index),\r\n                p.transformDatas[index].transform\r\n            );\r\n        }\r\n    }\r\n    //直接进行tans\r\n    else if (!l.transformDatas[index].transform) {\r\n        //计算顶级的自己的世界矩阵\r\n        var lt = l.transformDatas[index];\r\n        lt.transform = createLocalMatrix(l, index);\r\n    }\r\n}\r\n//不用Matrix类，担心属性太多，直接用函数\r\nfunction createLocalMatrix(l: LayerData, index: number) {\r\n    var ks = l.ks;\r\n    var x = 0, y = 0, scaleX = 1, scaleY = 1, rotation = 0;\r\n    var anchorX = ks.a.props[0][0], anchorY = ks.a.props[0][1];\r\n    if (ks.p.props[index]) {\r\n        x = ks.p.props[index][0];\r\n        y = ks.p.props[index][1];\r\n    }\r\n    if (ks.s.props[index]) {\r\n        scaleX = ks.s.props[index][0];\r\n        scaleY = ks.s.props[index][1];\r\n    }\r\n    if (ks.r.props[index]) {\r\n        rotation = ks.r.props[index][0];\r\n    }\r\n    var lt: any = {};\r\n    rotation *= Math.PI / 180;\r\n    lt.a = Math.cos(rotation) * scaleX;\r\n    lt.b = Math.sin(rotation) * scaleX;\r\n    lt.c = -Math.sin(rotation) * scaleY;\r\n    lt.d = Math.cos(rotation) * scaleY;\r\n    lt.tx = x + anchorX - ((anchorX * lt.a) + (anchorY * lt.c));\r\n    lt.ty = y + anchorY - ((anchorX * lt.b) + (anchorY * lt.d));\r\n    return lt;\r\n}\r\n\r\n//不用Matrix类，担心属性太多，直接用函数\r\nfunction createWorldMatrix(lt, pt) {\r\n    return {\r\n        a: (lt.a * pt.a) + (lt.b * pt.c),\r\n        b: (lt.a * pt.b) + (lt.b * pt.d),\r\n        c: (lt.c * pt.a) + (lt.d * pt.c),\r\n        d: (lt.c * pt.b) + (lt.d * pt.d),\r\n        tx: (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx,\r\n        ty: (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty,\r\n    }\r\n}\r\n\r\nfunction returnEmpty(arr: any[]): [number, number] {\r\n    var front = null, after = null;\r\n    var last = !!arr[0];\r\n    for (var i = 1; i < arr.length; i++) {\r\n        if (!last) {\r\n            if (arr[i] !== undefined) {\r\n                front = i;\r\n            }\r\n        } else {\r\n            if (arr[i] === undefined) {\r\n                after = i - 1;\r\n                break\r\n            }\r\n        }\r\n        last = !!arr[i]\r\n    }\r\n    return [front, after]\r\n}\r\n\r\nfunction funLoop(fun: (index: number) => void, times: number) {\r\n    if (times <= 0) return;\r\n    let count = times;\r\n    // while (count--) fun(count);//刚好索引从times-1开始，到0结束\r\n    while (count--) fun(times - count - 1);//刚好索引从0开始，到times-1结束\r\n}\r\n\r\nfunction fillUp<T>(value: T): T[] {//最后一个数据应该用不到吧\r\n    return Array(...Array(totalOp)).map((a, i) => JSON.parse(JSON.stringify(value)));\r\n}","\r\n\r\nexport function buildBezierProps(pt1, pt2, pt3, pt4, startIndex, endIndex, points, fnc, limit?: number) {\r\n    var bezierData = buildBezierData(pt1, pt2, pt3, pt4);\r\n    //处理完所有的点\r\n    for (var i = startIndex; i <= endIndex; i++) {\r\n        if (limit) {\r\n            //小于0的不算了，浪费时间\r\n            if (i < 0) continue;\r\n            //超出的也不要了\r\n            if (i >= limit) break;//遇到那种\r\n        }\r\n        var perc = fnc((i - startIndex) / (endIndex - startIndex));\r\n        var distanceInLine = bezierData.segmentLength * perc;\r\n        if (perc == 0) {\r\n            points[i] = bezierData.points[0].point;\r\n            continue;\r\n        }\r\n        if (perc == 1) {\r\n            points[i] = bezierData.points[bezierData.points.length - 1].point;\r\n            continue;\r\n        }\r\n        //找最近的点\r\n        points[i] = findNearest(distanceInLine, bezierData.points);\r\n    }\r\n}\r\n\r\nfunction findNearest(distanceInLine: number, bezierDataPoints: PointData[]) {\r\n    for (var i = 0; i < bezierDataPoints.length; i++) {\r\n        var preLength = bezierDataPoints[i].preLength;\r\n        if (distanceInLine < preLength) {//前一帧后当前帧做补间，且i肯定不会为0，因为distanceInLine不会小于0；\r\n            var segmentPerc = (distanceInLine - bezierDataPoints[i - 1].preLength) / bezierDataPoints[i].partialLength;\r\n            var kLen = bezierDataPoints[i - 1].point.length;\r\n            var newValue = [];\r\n            for (var k = 0; k < kLen; k += 1) {\r\n                newValue[k] = bezierDataPoints[i - 1].point[k] + (bezierDataPoints[i].point[k] - bezierDataPoints[i - 1].point[k]) * segmentPerc;\r\n            }\r\n            return newValue;//取补间\r\n        }\r\n    }\r\n    //没有返回最后一个\r\n    return bezierDataPoints[bezierDataPoints.length - 1].point;\r\n}\r\n\r\nvar storedData = {};\r\nfunction buildBezierData(pt1, pt2, pt3, pt4): BezierData {\r\n    var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\r\n    if (!storedData[bezierName]) {\r\n        var curveSegments = 150//defaultCurveSegments;\r\n        var k, i, len;\r\n        var ptCoord, perc, addedLength = 0;\r\n        var ptDistance;\r\n        var point, lastPoint = null;\r\n        if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\r\n            curveSegments = 2;\r\n            //这种情况只会生成两个点\r\n        }\r\n        var bezierData = {\r\n            segmentLength: 0,\r\n            points: new Array(curveSegments)\r\n        }\r\n        len = pt3.length;\r\n        for (k = 0; k < curveSegments; k += 1) {\r\n            point = new Array(len);\r\n            perc = k / (curveSegments - 1);\r\n            ptDistance = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                ptCoord = Math.pow(1 - perc, 3) * pt1[i] + 3 * Math.pow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * Math.pow(perc, 2) * (pt2[i] + pt4[i]) + Math.pow(perc, 3) * pt2[i];\r\n                point[i] = ptCoord;\r\n                if (lastPoint !== null) {\r\n                    ptDistance += Math.pow(point[i] - lastPoint[i], 2);\r\n                }\r\n            }\r\n            ptDistance = Math.sqrt(ptDistance);\r\n            addedLength += ptDistance;\r\n            bezierData.points[k] = {\r\n                partialLength: ptDistance,\r\n                preLength: addedLength,//记录一下前面所有的总长\r\n                point\r\n            }\r\n            lastPoint = point;\r\n        }\r\n        bezierData.segmentLength = addedLength;\r\n        storedData[bezierName] = bezierData;\r\n    }\r\n    return storedData[bezierName];\r\n}\r\n\r\ninterface PointData {\r\n    point: number[],\r\n    partialLength: number,\r\n    preLength: number,\r\n}\r\n\r\ninterface BezierData {\r\n    segmentLength: number,\r\n    points: PointData[]\r\n}\r\n\r\nfunction pointOnLine2D(x1, y1, x2, y2, x3, y3) {\r\n    var det1 = (x1 * y2) + (y1 * x3) + (x2 * y3) - (x3 * y2) - (y3 * x1) - (x2 * y1);\r\n    return det1 > -0.001 && det1 < 0.001;\r\n}","import { getBezierEasing } from \"./BezierEaser\";\r\n\r\n\r\nexport function buildBezierEaserProps(\r\n    startValue: number[],\r\n    endValue: number[],\r\n    outV,\r\n    inV,\r\n    startIndex: number,\r\n    endIndex: number,\r\n    points,\r\n    useH:boolean,\r\n    limit?: number\r\n) {\r\n    if(useH){\r\n        for (var k = startIndex; k < endIndex; k++) {//这时不算最后一个\r\n            points[k] = startValue.slice();\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n    var outX, outY, inX, inY, keyValue, perc;\r\n    var len = startValue.length;\r\n\r\n    var fncts, fnc;\r\n    if (outV.x.constructor === Array) {\r\n        fncts = [];\r\n        for (var i = 0; i < len; i++) {\r\n            outX = (typeof outV.x[i] === 'undefined') ? outV.x[0] : outV.x[i];\r\n            outY = (typeof outV.y[i] === 'undefined') ? outV.y[0] : outV.y[i];\r\n            inX = (typeof inV.x[i] === 'undefined') ? inV.x[0] : inV.x[i];\r\n            inY = (typeof inV.y[i] === 'undefined') ? inV.y[0] : inV.y[i];\r\n            fncts[i] = getBezierEasing(outX, outY, inX, inY).get;\r\n        }\r\n    } else {\r\n        outX = outV.x;\r\n        outY = outV.y;\r\n        inX = inV.x;\r\n        inY = inV.y;\r\n        fnc = getBezierEasing(outX, outY, inX, inY).get;\r\n    }\r\n    var delta = endIndex - startIndex\r\n    for (var k = startIndex; k <= endIndex; k++) {\r\n        if (limit) {\r\n            //小于0的不算了，浪费时间\r\n            if (k < 0) continue;\r\n            //超出的也不要了\r\n            if (k >= limit) break;//遇到那种\r\n        }\r\n        var frameNum = k;\r\n        var newValue = [];\r\n        for (var i = 0; i < len; i += 1) {\r\n            if (frameNum == endIndex) {\r\n                perc = 1;\r\n            } else if (frameNum == startIndex) {\r\n                perc = 0;\r\n            } else {\r\n                if (fncts) {\r\n                    perc = fncts[i]((frameNum - startIndex) / delta);\r\n                } else {\r\n                    perc = fnc((frameNum - startIndex) / delta);\r\n                }\r\n            }\r\n            keyValue = startValue[i] + (endValue[i] - startValue[i]) * perc;\r\n            newValue[i] = keyValue;\r\n        }\r\n        points[k] = newValue\r\n    }\r\n}","import { Object3D } from \"../Object3D\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\n\r\n\r\n\r\nexport class Camera extends Object3D {\r\n\r\n\r\n\tworldMatrixInverse: Matrix4;\r\n\tprojectionMatrix: Matrix4;\r\n\tprojectionMatrixInverse: Matrix4;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._instanceType = 'Camera';\r\n\r\n\t\tthis.worldMatrixInverse = new Matrix4();\r\n\r\n\t\tthis.projectionMatrix = new Matrix4();\r\n\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\t}\r\n\r\n\t/**\r\n\t * 重写\r\n\t * @param recursive \r\n\t */\r\n\tclone() {\r\n\t\treturn new Camera().copy(this);\r\n\t}\r\n\r\n\tcopy(source, recursive?) {\r\n\t\tsuper.copy(source, recursive)\r\n\t\t// Object3D.prototype.copy.call(this, source, recursive);\r\n\t\tthis.worldMatrixInverse.copy(source.matrixWorldInverse);\r\n\t\tthis.projectionMatrix.copy(source.projectionMatrix);\r\n\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tgetWorldDirection(target:Vector3) {\r\n\r\n\t\tthis.updateWorldMatrix();\r\n\r\n\t\tvar e = this._worldMatrix.elements;\r\n\r\n\t\treturn target.set(- e[8], - e[9], - e[10]).normalize();\r\n\r\n\t}\r\n\r\n\tupdateWorldMatrix() {\r\n        super.updateWorldMatrix()\r\n\t\t\r\n\t\tthis.worldMatrixInverse.setInverseOf(this._worldMatrix);\r\n\t}\r\n}","import { Ray } from './math/Ray';\r\nimport { Vector2 } from './math/Vector2';\r\nimport { Vector3 } from \"./math/Vector3\"\r\nimport { Camera } from './cameras/Camera';\r\nimport { Object3D } from './Object3D';\r\nimport { Mesh3D } from './Mesh3D';\r\n\r\n//射线检测工具，暂时不对外导了\r\n\r\nexport class Raycaster {\r\n\tpublic ray: Ray\r\n\tconstructor(\r\n\t\torigin?: Vector3,\r\n\t\tdirection?: Vector3,\r\n\t\tpublic near: number = 0,\r\n\t\tpublic far: number = Infinity\r\n\t) {\r\n\t\tthis.ray = new Ray(origin, direction);\r\n\t}\r\n\tset(origin: Vector3, direction: Vector3) {\r\n\t\tthis.ray.set(origin, direction);\r\n\t}\r\n\tsetFromCamera(coords: Vector3, camera: Camera) {\r\n\r\n\t\t// if ( ( camera && camera.isPerspectiveCamera ) ) {\r\n\r\n\t\tthis.ray.origin.setFromMatrixPosition(camera._worldMatrix);\r\n\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\r\n\r\n\t\t// } else if ( ( camera && camera.isOrthographicCamera ) ) {\r\n\r\n\t\t// \tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n\t\t// \tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t// } else {\r\n\r\n\t\t// \tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t// }\r\n\r\n\t};\r\n\r\n\tintersectObject(object: Object3D, optionalTarget?: IntersectData[]) {\r\n\r\n\t\tvar intersects = optionalTarget || [];\r\n\r\n\t\tintersectObject(object, this, intersects);\r\n\r\n\t\tintersects.sort(ascSort);\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n}\r\n\r\nfunction ascSort(a: IntersectData, b: IntersectData) {\r\n\treturn a.distance - b.distance;\r\n}\r\n\r\nfunction intersectObject(object: Object3D, raycaster: Raycaster, intersects: IntersectData[]) {\r\n\r\n\tif (object.visible === false) return;\r\n\r\n\tif (object.mouseEnable) object.raycast(raycaster, intersects);\r\n\r\n\tif (object.mouseChildren) {\r\n\t\tvar children = object.children;\r\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\r\n\t\t\tintersectObject(children[i], raycaster, intersects);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface IntersectData {\r\n\tdistance: number,\r\n\tpoint?: Vector3,\r\n\tobject: Object3D,\r\n\tuv?: Vector2,//以后再说\r\n\t// face?:Face3,\r\n}\r\n","\r\nexport * from \"./SphereGeometry\"\r\n\r\nexport * from \"./BoxGeometry\"\r\n\r\nexport * from \"./PlaneGeometry\"\r\n\r\nexport * from \"./CircleGeometry\"\r\n\r\nexport * from \"./CylinderGeometry\"\r\n\r\nexport * from \"./RingGeometry\"\r\n\r\nexport * from \"./TorusGeometry\"","import { Geometry } from \"../Geometry\";\r\nimport { Vector3 } from \"..\";\r\nimport { Sphere } from \"../math/Sphere\";\r\n\r\n/**\r\n * 球形几何\r\n * 直接参考three的计算方式\r\n */\r\nexport class SphereGeometry extends Geometry {\r\n    constructor(\r\n        radius: number = 1,\r\n        widthSegments: number = 8,\r\n        heightSegments: number = 6,\r\n        phiStart: number = 0,\r\n        phiLength: number = Math.PI * 2,\r\n        thetaStart: number = 0,\r\n        thetaLength: number = Math.PI,\r\n    ) {\r\n        //处理分段，必须正整数\r\n        widthSegments = Math.max(3, Math.floor(widthSegments));\r\n        heightSegments = Math.max(2, Math.floor(heightSegments));\r\n        //计算所有顶点，及索引及法线\r\n        var thetaEnd = thetaStart + thetaLength;\r\n\r\n        var ix: number, iy: number;\r\n\r\n        var index = 0;\r\n        var grid = [];\r\n\r\n        var vertex = new Vector3();\r\n        var normal = new Vector3();\r\n\r\n        // buffers\r\n        var indices = [];\r\n        var vertices = [];\r\n        var normals = [];\r\n        var uvs = [];\r\n\r\n        // generate vertices, normals and uvs\r\n\r\n        for (iy = 0; iy <= heightSegments; iy++) {\r\n\r\n            var verticesRow = [];\r\n\r\n            var v = iy / heightSegments;\r\n\r\n            for (ix = 0; ix <= widthSegments; ix++) {\r\n\r\n                var u = ix / widthSegments;\r\n\r\n                // vertex\r\n\r\n                vertex.x = - radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n                vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\r\n                vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\r\n                vertices.push(vertex.x, vertex.y, vertex.z);\r\n\r\n                // normal\r\n                normal.set(vertex.x, vertex.y, vertex.z).normalize();\r\n                normals.push(normal.x, normal.y, normal.z);\r\n\r\n                // uv\r\n                // uvs.push(u, 1 - v);\r\n                uvs.push(u, v);//2d里面颠倒过贴图的y轴（其实是矫正）。所以v统统不用1-\r\n\r\n                verticesRow.push(index++);\r\n            }\r\n\r\n            grid.push(verticesRow);\r\n\r\n        }\r\n\r\n        // indices\r\n        for (iy = 0; iy < heightSegments; iy++) {\r\n            for (ix = 0; ix < widthSegments; ix++) {\r\n                var a = grid[iy][ix + 1];\r\n                var b = grid[iy][ix];\r\n                var c = grid[iy + 1][ix];\r\n                var d = grid[iy + 1][ix + 1];\r\n                if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\r\n                if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\r\n            }\r\n        }\r\n        super(vertices, indices, normals, null, uvs);\r\n\r\n        //直接计算包围球\r\n        this.boundingSphere = new Sphere(\r\n            new Vector3(),\r\n            radius\r\n        )\r\n    }\r\n}","import { Geometry } from \"../Geometry\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Box3 } from \"../math/Box3\";\r\nimport { Sphere } from \"../math/Sphere\";\r\n\r\n\r\n/**\r\n * 顶点创建方式直接用three的\r\n * 以后记录长宽高属性，标记是否更新顶点等数据\r\n */\r\nexport class BoxGeometry extends Geometry {\r\n    /**\r\n     * \r\n     * @param width x\r\n     * @param height y\r\n     * @param depth z\r\n     * @param widthSegments \r\n     * @param heightSegments \r\n     * @param depthSegments \r\n     */\r\n    constructor(\r\n        width: number = 1,\r\n        height: number = 1,\r\n        depth: number = 1,\r\n        widthSegments: number = 1,\r\n        heightSegments: number = 1,\r\n        depthSegments: number = 1,\r\n    ) {\r\n        // segments\r\n        widthSegments = Math.floor(widthSegments) || 1;\r\n        heightSegments = Math.floor(heightSegments) || 1;\r\n        depthSegments = Math.floor(depthSegments) || 1;\r\n\r\n        // buffers\r\n        var indices = [];\r\n        var vertices = [];\r\n        var normals = [];\r\n        var uvs = [];\r\n\r\n        // helper variables\r\n        var numberOfVertices = 0;\r\n        var groupStart = 0;\r\n\r\n        // build each side of the box geometry\r\n\r\n        buildPlane('z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0); // px\r\n        buildPlane('z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1); // nx\r\n        buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\r\n        buildPlane('x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3); // ny\r\n        buildPlane('x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4); // pz\r\n        buildPlane('x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5); // nz\r\n\r\n\r\n        function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\r\n\r\n            var segmentWidth = width / gridX;\r\n            var segmentHeight = height / gridY;\r\n\r\n            var widthHalf = width / 2;\r\n            var heightHalf = height / 2;\r\n            var depthHalf = depth / 2;\r\n\r\n            var gridX1 = gridX + 1;\r\n            var gridY1 = gridY + 1;\r\n\r\n            var vertexCounter = 0;\r\n            var groupCount = 0;\r\n\r\n            var ix, iy;\r\n\r\n            var vector = new Vector3();\r\n\r\n            // generate vertices, normals and uvs\r\n\r\n            for (iy = 0; iy < gridY1; iy++) {\r\n\r\n                var y = iy * segmentHeight - heightHalf;\r\n\r\n                for (ix = 0; ix < gridX1; ix++) {\r\n\r\n                    var x = ix * segmentWidth - widthHalf;\r\n\r\n                    // set values to correct vector component\r\n\r\n                    vector[u] = x * udir;\r\n                    vector[v] = y * vdir;\r\n                    vector[w] = depthHalf;\r\n\r\n                    // now apply vector to vertex buffer\r\n\r\n                    vertices.push(vector.x, vector.y, vector.z);\r\n\r\n                    // set values to correct vector component\r\n\r\n                    vector[u] = 0;\r\n                    vector[v] = 0;\r\n                    vector[w] = depth > 0 ? 1 : - 1;\r\n\r\n                    // now apply vector to normal buffer\r\n\r\n                    normals.push(vector.x, vector.y, vector.z);\r\n\r\n                    // uvs\r\n\r\n                    uvs.push(ix / gridX);\r\n                    // uvs.push(1 - (iy / gridY));\r\n                    uvs.push(iy / gridY);//2D里面颠倒过贴图\r\n\r\n                    // counters\r\n\r\n                    vertexCounter += 1;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // indices\r\n\r\n            // 1. you need three indices to draw a single face\r\n            // 2. a single segment consists of two faces\r\n            // 3. so we need to generate six (2*3) indices per segment\r\n\r\n            for (iy = 0; iy < gridY; iy++) {\r\n\r\n                for (ix = 0; ix < gridX; ix++) {\r\n\r\n                    var a = numberOfVertices + ix + gridX1 * iy;\r\n                    var b = numberOfVertices + ix + gridX1 * (iy + 1);\r\n                    var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\r\n                    var d = numberOfVertices + (ix + 1) + gridX1 * iy;\r\n\r\n                    // faces\r\n\r\n                    indices.push(a, b, d);\r\n                    indices.push(b, c, d);\r\n\r\n                    // increase counter\r\n\r\n                    groupCount += 6;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // add a group to the geometry. this will ensure multi material support\r\n\r\n            //每个面当作独立的组，为了能各自改变，暂时不管\r\n            // scope.addGroup(groupStart, groupCount, materialIndex);\r\n\r\n            // calculate new start value for groups\r\n\r\n            groupStart += groupCount;\r\n\r\n            // update total number of vertices\r\n\r\n            numberOfVertices += vertexCounter;\r\n\r\n        }\r\n        //传入数据\r\n        super(vertices, indices, normals, null, uvs)\r\n\r\n        //直接计算包围盒\r\n        this.boundingBox = new Box3(\r\n            new Vector3(-width / 2, -height / 2, -depth / 2),\r\n            new Vector3(width / 2, height / 2, depth / 2)\r\n        )\r\n        //直接计算包围球\r\n        this.boundingSphere = new Sphere(\r\n            new Vector3(),\r\n            Math.sqrt(width * width + height * height + depth * depth)\r\n        )\r\n    }\r\n}","import { Geometry } from \"../Geometry\";\r\n\r\n\r\nexport class PlaneGeometry extends Geometry {\r\n    constructor(\r\n        width: number = 1,\r\n        height: number = 1,\r\n        widthSegments: number = 1,\r\n        heightSegments: number = 1\r\n    ) {\r\n        var width_half = width / 2;\r\n        var height_half = height / 2;\r\n\r\n        var gridX = Math.floor(widthSegments);\r\n        var gridY = Math.floor(heightSegments);\r\n\r\n        var gridX1 = gridX + 1;\r\n        var gridY1 = gridY + 1;\r\n\r\n        var segment_width = width / gridX;\r\n        var segment_height = height / gridY;\r\n\r\n        var ix, iy;\r\n        // buffers\r\n\r\n        var indices = [];\r\n        var vertices = [];\r\n        var normals = [];\r\n        var uvs = [];\r\n\r\n        // generate vertices, normals and uvs\r\n\r\n        for (iy = 0; iy < gridY1; iy++) {\r\n\r\n            var y = iy * segment_height - height_half;\r\n\r\n            for (ix = 0; ix < gridX1; ix++) {\r\n\r\n                var x = ix * segment_width - width_half;\r\n\r\n                vertices.push(x, - y, 0);\r\n\r\n                normals.push(0, 0, 1);\r\n\r\n                uvs.push(ix / gridX);\r\n                // uvs.push(1 - (iy / gridY));\r\n                uvs.push(iy / gridY);\r\n            }\r\n\r\n        }\r\n\r\n        // indices\r\n\r\n        for (iy = 0; iy < gridY; iy++) {\r\n\r\n            for (ix = 0; ix < gridX; ix++) {\r\n\r\n                var a = ix + gridX1 * iy;\r\n                var b = ix + gridX1 * (iy + 1);\r\n                var c = (ix + 1) + gridX1 * (iy + 1);\r\n                var d = (ix + 1) + gridX1 * iy;\r\n\r\n                // faces\r\n\r\n                indices.push(a, b, d);\r\n                indices.push(b, c, d);\r\n\r\n            }\r\n\r\n        }\r\n        super(vertices, indices, normals, null, uvs)\r\n    }\r\n}","import { Geometry } from \"../Geometry\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Vector2 } from \"../math/Vector2\";\r\n\r\n\r\nexport class CircleGeometry extends Geometry {\r\n    constructor(\r\n        radius: number = 1,\r\n        segments: number = 8,\r\n        thetaStart: number = 0,\r\n        thetaLength: number = Math.PI * 2\r\n    ) {\r\n        segments = Math.max(3, segments);\r\n\r\n        var indices = [];\r\n        var vertices = [];\r\n        var normals = [];\r\n        var uvs = [];\r\n\r\n        var i, s;\r\n        var vertex = new Vector3();\r\n        var uv = new Vector2();\r\n\r\n        // center point\r\n\r\n        vertices.push(0, 0, 0);\r\n        normals.push(0, 0, 1);\r\n        uvs.push(0.5, 0.5);\r\n\r\n        for (s = 0, i = 3; s <= segments; s++, i += 3) {\r\n\r\n            var segment = thetaStart + s / segments * thetaLength;\r\n\r\n            // vertex\r\n\r\n            vertex.x = radius * Math.cos(segment);\r\n            vertex.y = radius * Math.sin(segment);\r\n\r\n            vertices.push(vertex.x, vertex.y, vertex.z);\r\n\r\n            // normal\r\n\r\n            normals.push(0, 0, 1);\r\n\r\n            // uvs\r\n\r\n            uv.x = (vertices[i] / radius + 1) / 2;\r\n            // uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\r\n            uv.y = 1 - (vertices[i + 1] / radius + 1) / 2;\r\n\r\n            uvs.push(uv.x, uv.y);\r\n\r\n        }\r\n\r\n        // indices\r\n\r\n        for (i = 1; i <= segments; i++) {\r\n\r\n            indices.push(i, i + 1, 0);\r\n\r\n        }\r\n\r\n        super(vertices, indices, normals, null, uvs)\r\n    }\r\n}","import { Geometry } from \"../Geometry\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector3 } from \"../math/Vector3\";\n\nexport class CylinderGeometry extends Geometry {\n\tconstructor(\n\t\t/**\n\t\t * 上圆半径，默认1\n\t\t */\n\t\tradiusTop: number = 1,\n\t\t/**\n\t\t * 下圆半径，默认1\n\t\t */\n\t\tradiusBottom: number = 1,\n\t\t/**\n\t\t * 高度，默认1\n\t\t */\n\t\theight: number = 1,\n\t\t/**\n\t\t * 径向分段数，整数，默认8\n\t\t */\n\t\tradialSegments: number = 8,\n\t\t/**\n\t\t * 高度分段数，整数，默认1\n\t\t */\n\t\theightSegments: number = 1,\n\t\t/**\n\t\t * 是否开口，默认false\n\t\t */\n\t\topenEnded = false,\n\t\t/**\n\t\t * 圆柱开始角度，默认0\n\t\t */\n\t\tthetaStart: number = 0,\n\t\t/**\n\t\t * 圆柱结束角度，默认Math.PI * 2\n\t\t */\n\t\tthetaLength: number = Math.PI * 2\n\t) {\n\t\t//避免小数和0\n\t\tradialSegments = Math.floor(radialSegments) || 8;\n\t\theightSegments = Math.floor(heightSegments) || 1;\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif (!openEnded) {\n\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t}\n\n\t\t// build geometry\n\n\t\t// this.setIndex(indices);\n\t\t// this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t// this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t// this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = (radiusBottom - radiusTop) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor (y = 0; y <= heightSegments; y++) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\tfor (x = 0; x <= radialSegments; x++) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin(theta);\n\t\t\t\t\tvar cosTheta = Math.cos(theta);\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z);\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\t// uvs.push(u, 1 - v);\n\t\t\t\t\tuvs.push(u, v);\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push(index++);\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push(indexRow);\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor (x = 0; x < radialSegments; x++) {\n\n\t\t\t\tfor (y = 0; y < heightSegments; y++) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[y][x];\n\t\t\t\t\tvar b = indexArray[y + 1][x];\n\t\t\t\t\tvar c = indexArray[y + 1][x + 1];\n\t\t\t\t\tvar d = indexArray[y][x + 1];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\t//以后考虑每个面能各自改变\n\t\t\t// scope.addGroup(groupStart, groupCount, 0);\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap(top) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = (top === true) ? radiusTop : radiusBottom;\n\t\t\tvar sign = (top === true) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor (x = 1; x <= radialSegments; x++) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push(0, halfHeight * sign, 0);\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push(0, sign, 0);\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor (x = 0; x <= radialSegments; x++) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos(theta);\n\t\t\t\tvar sinTheta = Math.sin(theta);\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push(0, sign, 0);\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = (cosTheta * 0.5) + 0.5;\n\t\t\t\tuv.y = (sinTheta * 0.5 * sign) + 0.5;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor (x = 0; x < radialSegments; x++) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif (top === true) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push(i, i + 1, c);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push(i + 1, i, c);\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t// scope.addGroup(groupStart, groupCount, top === true ? 1 : 2);\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tsuper(vertices, indices, normals, null, uvs)\n\t}\n}","/*\n * RingGeometry.ts\n * Created by 还有醋v on 2021/4/15.\n * Copyright © 2021 haiyoucuv. All rights reserved.\n */\n\nimport { Geometry } from \"../Geometry\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector3 } from \"../math/Vector3\";\n\nexport class RingGeometry extends Geometry {\n    constructor(\n        innerRadius = 0.5,\n        outerRadius = 1,\n        thetaSegments = 8,\n        phiSegments = 1,\n        thetaStart = 0,\n        thetaLength = Math.PI * 2\n    ) {\n\n        thetaSegments = Math.max(3, thetaSegments);\n        phiSegments = Math.max(1, phiSegments)\n\n        // buffers\n        const indices = [];\n        const vertices = [];\n        const normals = [];\n        const uvs = [];\n\n        // some helper variables\n        let segment;\n        let radius = innerRadius;\n        const radiusStep = ((outerRadius - innerRadius) / phiSegments);\n        const vertex = new Vector3();\n        const uv = new Vector2();\n        let j, i;\n\n        // generate vertices, normals and uvs\n        for (j = 0; j <= phiSegments; j++) {\n\n            for (i = 0; i <= thetaSegments; i++) {\n\n                // values are generate from the inside of the ring to the outside\n                segment = thetaStart + i / thetaSegments * thetaLength;\n\n                // vertex\n                vertex.x = radius * Math.cos(segment);\n                vertex.y = radius * Math.sin(segment);\n\n                vertices.push(vertex.x, vertex.y, vertex.z);\n\n                // normal\n                normals.push(0, 0, 1);\n\n                // uv\n                uv.x = (vertex.x / outerRadius + 1) / 2;\n                uv.y = 1 - (vertex.y / outerRadius + 1) / 2;\n\n                uvs.push(uv.x, uv.y);\n\n            }\n\n            // increase the radius for next row of vertices\n            radius += radiusStep;\n\n        }\n\n        // indices\n        for (j = 0; j < phiSegments; j++) {\n\n            const thetaSegmentLevel = j * (thetaSegments + 1);\n\n            for (i = 0; i < thetaSegments; i++) {\n\n                segment = i + thetaSegmentLevel;\n\n                const a = segment;\n                const b = segment + thetaSegments + 1;\n                const c = segment + thetaSegments + 2;\n                const d = segment + 1;\n\n                // faces\n                indices.push(a, b, d);\n                indices.push(b, c, d);\n\n            }\n\n        }\n\n        super(vertices, indices, normals, null, uvs);\n    }\n\n}\n","/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { Geometry } from \"../Geometry\";\nimport { Vector3 } from \"../math/Vector3\";\n\nexport class TorusGeometry extends Geometry {\n\tconstructor(\n\t\tradius = 1,\n\t\ttube = 0.4,\n\t\tradialSegments = 8,\n\t\ttubularSegments = 6,\n\t\tarc = Math.PI * 2\n\t) {\n\n\t\tradialSegments = Math.floor(radialSegments);\n\t\ttubularSegments = Math.floor(tubularSegments);\n\n\t\t// buffers\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tlet j, i;\n\n\t\t// generate vertices, normals and uvs\n\t\tfor (j = 0; j <= radialSegments; j++) {\n\n\t\t\tfor (i = 0; i <= tubularSegments; i++) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\tvertex.z = tube * Math.sin(v);\n\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\n\t\t\t\t// normal\n\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\n\t\t\t\tnormals.push(normal.x, normal.y, normal.z);\n\n\t\t\t\t// uv\n\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\tuvs.push(1 - j / radialSegments);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\t\tfor (j = 1; j <= radialSegments; j++) {\n\n\t\t\tfor (i = 1; i <= tubularSegments; i++) {\n\n\t\t\t\t// indices\n\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\n\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\n\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\n\t\t\t\tconst d = (tubularSegments + 1) * j + i;\n\n\t\t\t\t// faces\n\t\t\t\tindices.push(a, b, d);\n\t\t\t\tindices.push(b, c, d);\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper(vertices, indices, normals, null, uvs);\n\t}\n}\n\n","\r\nimport { DEG_TO_RAD, RAD_TO_DEG } from \"../../2d/const\";\r\nimport { WebglRenderer } from \"../../2d/renderers/WebglRenderer\";\r\nimport { Texture } from \"../../2d/texture\";\r\nimport { GLShader } from \"../../glCore\";\r\nimport { Vector2 } from \"../math/Vector2\";\r\nimport { ShaderMaterial, UniformType } from \"./ShaderMaterial\";\r\n\r\nconst sprite3dVertexShader =\r\n    `precision mediump float;\r\nattribute vec3 aPosition;\r\nattribute vec2 aTextureCoord;\r\nvarying vec2 vTextureCoord;\r\nuniform mat4 uViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uModelMatrix;\r\n\r\nuniform vec2 center;\r\n\r\nuniform float rotation;\r\n\r\nvoid main() {\r\n    vTextureCoord = aTextureCoord;\r\n    vec4 mvPosition = uViewMatrix * uModelMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\r\n    vec2 scale;\r\n\tscale.x = length( vec3( uModelMatrix[ 0 ].x, uModelMatrix[ 0 ].y, uModelMatrix[ 0 ].z ) );\r\n\tscale.y = length( vec3( uModelMatrix[ 1 ].x, uModelMatrix[ 1 ].y, uModelMatrix[ 1 ].z ) );\r\n    \r\n    #ifndef USE_SIZEATTENUATION\r\n        bool isPerspective = ( uProjectionMatrix[ 2 ][ 3 ] == - 1.0 );\r\n        if ( isPerspective ) scale *= - mvPosition.z;\r\n    #endif\r\n\r\n    vec2 alignedPosition = ( aPosition.xy - ( center - vec2( 0.5 ) ) ) * scale;\r\n\r\n\tvec2 rotatedPosition;\r\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\r\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\r\n\r\n\tmvPosition.xy += rotatedPosition;\r\n\r\n\tgl_Position = uProjectionMatrix * mvPosition;\r\n}`;\r\nconst sprite3dFragmentShader =\r\n    `precision mediump float;\r\nuniform vec3 color;\r\nuniform float alpha;\r\nuniform sampler2D map;\r\nvarying vec2 vTextureCoord;\r\nvoid main() {\r\n    vec4 mapColor = texture2D( map, vTextureCoord );\r\n    gl_FragColor = vec4( color, alpha )*mapColor;\r\n}`;\r\n\r\nexport class Sprite3dMaterial extends ShaderMaterial {\r\n    sizeAttenuation: boolean = true;\r\n    constructor() {\r\n        super(sprite3dVertexShader, sprite3dFragmentShader, {\r\n            center: { type: UniformType.vector2, value: new Vector2(0.5, 0.5) },\r\n            rotation: { type: UniformType.float, value: 0.0 },\r\n            color: { type: UniformType.color, value: 0xffffff },\r\n            alpha: { type: UniformType.float, value: 1.0 },\r\n            map: { type: UniformType.texture, value: Texture.WHITE },\r\n        });\r\n        this._instanceType = \"Sprite3dMaterial\";\r\n    }\r\n    getShader(renderer: WebglRenderer): GLShader {\r\n        const id = \"\" + renderer.CONTEXT_UID + this.sizeAttenuation;\r\n        if (!this.shaders[id]) {\r\n            //生成\r\n            this.shaders[id] = new GLShader(\r\n                renderer.gl,\r\n                (this.sizeAttenuation ? '#define USE_SIZEATTENUATION\\n' : \"\") + this.vertexShader,\r\n                this.fragmentShader\r\n            );\r\n            this.shaders[id][\"_glShaderKey\"] = `customShader${\"id\" + id}${\"instanceId\" + this.instanceId}${\"sizeAttenuation\" + this.sizeAttenuation}`;\r\n        };\r\n        return this.shaders[id];\r\n    }\r\n    get center() {\r\n        return this.uniforms.center.value;\r\n    }\r\n    set center(v: Vector2) {\r\n        this.uniforms.center.value = v;\r\n    }\r\n    get rotation() {\r\n        return this.uniforms.rotation.value * RAD_TO_DEG;\r\n    }\r\n    set rotation(v: number) {\r\n        this.uniforms.rotation.value = v * DEG_TO_RAD;\r\n    }\r\n    get color() {\r\n        return this.uniforms.color.value;\r\n    }\r\n    set color(v: number) {\r\n        this.uniforms.color.value = v;\r\n    }\r\n    get alpha() {\r\n        return this.uniforms.alpha.value;\r\n    }\r\n    set alpha(v: number) {\r\n        this.uniforms.alpha.value = v;\r\n    }\r\n    get map() {\r\n        return this.uniforms.map.value;\r\n    }\r\n    set map(v: Texture) {\r\n        this.uniforms.map.value = v;\r\n    }\r\n}","export * from \"./AmbientLight\"\r\n\r\nexport * from \"./DirectionalLight\"\r\n\r\nexport * from \"./PointLight\"","\r\nimport { Vector3 } from '../math/Vector3';\r\nimport { Light } from './Light';\r\n\r\nexport class AmbientLight extends Light {\r\n\tconstructor(color: number, intensity: number) {\r\n\t\tsuper(color, intensity);\r\n\t\tthis._instanceType = \"AmbientLight\"\r\n\t}\r\n}\r\n\r\n\r\n","\r\nimport { Object3D } from '../Object3D';\r\nimport { Light } from './Light';\r\nimport { Vector3 } from '../math/Vector3';\r\n\r\n\r\n\r\n\r\nexport class DirectionalLight extends Light {\r\n\t/**\r\n\t * 目标对象\r\n\t */\r\n\ttarget: Object3D;\r\n\r\n\tconstructor(color: number, intensity: number) {\r\n\t\tsuper(color, intensity)\r\n\t\tthis._instanceType = \"DirectionalLight\";\r\n\t\t//位置默认一个\r\n\t\tthis.position.copy(Object3D.DefaultUp);\r\n\t\t// this.updateMatrix();\r\n\t\tthis.updateLocalMatrix();\r\n\t\t//目标默认一个，算方向用\r\n\t\tthis.target = new Object3D();\r\n\t}\r\n\tcopy(directionalLight: DirectionalLight) {\r\n\t\tsuper.copy(directionalLight);\r\n\t\tthis.target = directionalLight.target.clone();\r\n\t\treturn this\r\n\t}\r\n\r\n}\r\n","import { Light } from \"./Light\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\n\r\n\r\n\r\n\r\nexport class PointLight extends Light {\r\n    /**\r\n     * \r\n     * @param color 颜色值，0到1的矢量\r\n     * @param intensity 强度\r\n     * @param distance 最大影响距离\r\n     * @param decay 衰减系数，//多试试2\r\n     */\r\n    constructor(\r\n        color: number,\r\n        intensity: number,\r\n        public distance: number = 0,\r\n        public decay: number = 1\r\n    ) {\r\n        super(color, intensity);\r\n        this._instanceType = \"PointLight\";\r\n    }\r\n\r\n    get power(): number {\r\n        return this.intensity * 4 * Math.PI;\r\n    }\r\n    set power(value: number) {\r\n        this.intensity = value / (4 * Math.PI);\r\n    }\r\n    copy(pointLight: PointLight) {\r\n        super.copy(pointLight);\r\n        this.distance = pointLight.distance;\r\n        this.decay = pointLight.decay;\r\n        return this\r\n    }\r\n}","\r\n\r\nexport * from \"./AxesHelper\"\r\n\r\nexport * from \"./GridHelper\"\r\n\r\nexport * from \"./Box3Helper\"","import { Mesh3D } from \"../Mesh3D\";\r\nimport { Geometry } from \"../Geometry\";\r\nimport { BaseMaterial } from \"../materials\";\r\n\r\n\r\nexport class AxesHelper extends Mesh3D {\r\n\tconstructor(size: number = 1) {\r\n\t\tvar vertices = [\r\n\t\t\t0, 0, 0, size, 0, 0,\r\n\t\t\t0, 0, 0, 0, size, 0,\r\n\t\t\t0, 0, 0, 0, 0, size\r\n\t\t];\r\n\t\tvar colors = [\r\n\t\t\t1, 0, 0, 1, 0.6, 0,\r\n\t\t\t0, 1, 0, 0.6, 1, 0,\r\n\t\t\t0, 0, 1, 0, 0.6, 1\r\n\t\t];\r\n\r\n\t\tvar geometry = new Geometry(vertices, null, null, colors)\r\n\t\tvar material = new BaseMaterial({ wireframe: true,useVertexColor:true })\r\n\r\n\t\tsuper(geometry,material)\r\n\t}\r\n}\r\n\r\n","import { Geometry } from \"../Geometry\";\r\nimport { Mesh3D } from \"../Mesh3D\";\r\nimport { BaseMaterial } from \"../materials\";\r\nimport { hex2rgb } from \"../../2d/utils\";\r\n\r\n\r\nexport class GridHelper extends Mesh3D {\r\n\r\n\tconstructor(\r\n\t\tsize: number = 10,\r\n\t\tdivisions: number = 10,\r\n\t\tcolor1: number = 0x444444,\r\n\t\tcolor2: number = 0x888888\r\n\t) {\r\n\t\tvar center = divisions / 2;\r\n\t\tvar step = size / divisions;\r\n\t\tvar halfSize = size / 2;\r\n\t\tvar colorArr1 = hex2rgb(color1);\r\n\t\tvar colorArr2 = hex2rgb(color2);\r\n\r\n\t\tvar vertices = [], colors = [];\r\n\r\n\t\tfor (var i = 0, j = 0, k = - halfSize; i <= divisions; i++, k += step) {\r\n\r\n\t\t\tvertices.push(- halfSize, 0, k, halfSize, 0, k);\r\n\t\t\tvertices.push(k, 0, - halfSize, k, 0, halfSize);\r\n\r\n\t\t\tvar color = i === center ? colorArr1 : colorArr2;\r\n\r\n\t\t\tlet count = 4;\r\n\t\t\twhile (count--) {\r\n\t\t\t\tcolors.push(color[0], color[1], color[2])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar geometry = new Geometry(vertices, null, null, colors)\r\n\r\n\t\tvar material = new BaseMaterial({ wireframe: true,useVertexColor:true });\r\n\r\n\t\tsuper(geometry, material)\r\n\t}\r\n\r\n}\r\n","import { Mesh3D } from '../Mesh3D';\nimport { Box3 } from '../math/Box3';\nimport { Geometry } from '../Geometry';\nimport { BaseMaterial } from '../materials';\n\nexport class Box3Helper extends Mesh3D {\n\tpublic box: Box3\n\tconstructor(box: Box3, color: number = 0xffff00) {\n\t\tvar indices = [0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7];\n\t\tvar positions = [1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1];\n\t\tsuper(new Geometry(positions, indices), new BaseMaterial({ wireframe: true, color }))\n\t\tthis.box = box;\n\t\tthis.mouseChildren = this.mouseEnable = false;\n\t}\n\tupdateWorldMatrix(updateParents: boolean = false, updateChildren: boolean = true) {\n\t\tvar box = this.box;\n\t\tif (box.isEmpty()) return;\n\t\tbox.getCenter(this.position);\n\t\tbox.getSize(this.scale);\n\t\tthis.scale.multiplyScalar(0.5);\n\t\tsuper.updateWorldMatrix(updateParents, updateChildren)\n\t}\n}\n","import ObjectRenderer from \"../2d/renderers/webgl/ObjectRenderer\";\r\nimport { WebglRenderer } from \"../2d/renderers/WebglRenderer\";\r\nimport { Camera } from \"./cameras/Camera\";\r\nimport { LightsConfig } from \"./Scene3D\";\r\nimport { GLShader, GLBuffer, VertexArrayObject } from \"../glCore\";\r\nimport { Mesh3D } from \"./Mesh3D\";\r\nimport { BaseShader } from \"./shaders/BaseShader\";\r\nimport { LightShader } from \"./shaders/LightShader\";\r\nimport { hex2rgb, rgb2hex } from \"../2d/utils\";\r\nimport { Matrix4 } from \"./math/Matrix4\";\r\nimport { BLEND_MODES } from \"../2d/const\";\r\nimport { BatchBuffer } from \"../2d/renderers/webgl/BatchBuffer\";\r\nimport { BaseMaterial, RenderSideType } from \"./materials/BaseMaterial\";\r\nimport { getCusShader } from \"./shaders/getCusShader\";\r\nimport { Geometry, VaoBufferInt } from \".\";\r\nimport { SkinnedMesh3D } from \"./bones/SkinnedMesh3D\";\r\nimport { nextPow2 } from \"../2d/utils\"\r\nimport { BaseTexture } from \"../2d/texture\";\r\nimport { Vector3 } from \"./math/Vector3\";\r\nimport { UniformType } from \"./materials/ShaderMaterial\";\r\nimport RenderTarget from \"../2d/renderers/renderTarget/RenderTarget\";\r\nimport { ShadowShader } from \"./shaders/ShadowShader\";\r\nimport BaseRenderTexture from \"../2d/texture/BaseRenderTexture\";\r\nimport RenderTexture from \"../2d/texture/RenderTexture\";\r\nimport { OrthographicCamera } from \"./cameras/OrthographicCamera\";\r\n\r\nlet tempVec3 = new Vector3()\r\nlet tempMatrix4 = new Matrix4();\r\n//需要管理渲染的状态 resetToDefault  resetTo3D\r\nexport class D3Renderer extends ObjectRenderer {\r\n    /**\r\n     * 赋值的相机，需要里面的worldMatrixInverse和projectionMatrix\r\n     */\r\n    camera: Camera;\r\n    /**\r\n     * 灯光数据，用来初始化着色器和着色器传值\r\n     */\r\n    lightsConfig: LightsConfig;\r\n    /**\r\n     * 雾化参数\r\n     */\r\n    fog: { color: Float32Array, near: number, far: number /*density: number*/ };\r\n    /**\r\n     * 顶点着色器可传的最大uniform通道\r\n     */\r\n    maxVertexUniforms: number\r\n    floatVertexTextures: boolean;\r\n    private curLightkey: string;\r\n    constructor(renderer: WebglRenderer) {\r\n        super(renderer);\r\n    }\r\n    onContextChange() {\r\n        var gl = this.renderer.gl;\r\n        this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n        var maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\n        var vertexTextures = maxVertexTextures > 0;\r\n        var floatFragmentTextures = !!gl.getExtension(\"OES_texture_float\");\r\n        //传入的数据纹理暂时有问题，是UNPACK_ALIGNMENT还是UNPACK_FLIP_Y_WEBGL的问题未知，所以不管先\r\n        this.floatVertexTextures = false//vertexTextures && floatFragmentTextures;\r\n    }\r\n    start() {\r\n        //设置3d状态机属性\r\n        // this.renderer.state.resetTo3D();\r\n        //自行设置状态机，原先的有太多问题\r\n        //允许深度检测\r\n        this.renderer.state.setDepthTest(1);\r\n        //混色模式重新设置\r\n        this.renderer.state.setBlendMode(BLEND_MODES.NORMAL_NPM);\r\n        //设置逆时针为正面，下面根据材质自行设置\r\n        //this.renderer.state.setFrontFace(0);\r\n        //设置剔除，下面根据材质自行设置\r\n        //this.setCullFace(1);\r\n    }\r\n    stop() {\r\n        this.flush();\r\n        //原先的视窗需要重新//讲道理应该渲染器自己搞，算了\r\n        this.renderer._activeRenderTarget.activate();\r\n        // this.renderer.rootRenderTarget.activate();\r\n\r\n        this.renderer.state.setState(this.renderer.state.defaultState)\r\n    }\r\n\r\n    private meshes: Mesh3D[] = [];\r\n    //继续需要的数据\r\n    render(obj: Mesh3D) {\r\n        if (!obj.geometry || !obj.material) return;\r\n        var mat = obj.material;\r\n        var geo = obj.geometry;\r\n        //提取渲染对象及材质，分组渲染，怎么考虑同一个geometry只需要处理一次attr，\r\n        //分组按\r\n        // if (!this.meshes.length) {\r\n        //     this.meshes.push(obj);\r\n        // } else {\r\n        for (var i = 0; i < this.meshes.length; i++) {\r\n            if (this.meshes[i].material == mat) {//没啥软用\r\n                this.meshes.splice(i, 0, obj)\r\n                return\r\n            }\r\n        }\r\n        // }\r\n        this.meshes.push(obj);\r\n    }\r\n    flush() {\r\n        //生成一张阴影的深度贴图\r\n\r\n\r\n        //同一材质的模型一起处理，同一个着色器，webglRenderer里会判断，不会重复绑定\r\n        var curShader: GLShader = null;\r\n        var pointLightNum = this.lightsConfig.pointLights.length;\r\n        var dirLightNum = this.lightsConfig.directionalLights.length;\r\n        var gl: WebGLRenderingContext = this.renderer.gl;\r\n        var textureManager = this.renderer.textureManager;\r\n        for (var i = 0; i < this.meshes.length; i++) {\r\n            let mesh = this.meshes[i];//怎么判断是否要重新绑定\r\n            let mat: BaseMaterial = mesh.material;\r\n            let geo = mesh.geometry;\r\n            //自定义着色器用自行处理uniform;\r\n            if (mat[\"isShaderMaterial\"]) {\r\n                let customShader = mat[\"getShader\"](this.renderer);\r\n                let uniforms = customShader.uniforms;\r\n                let cusUniforms = mat[\"uniforms\"];\r\n                if (curShader !== customShader) {\r\n                    curShader = customShader;\r\n                    this.renderer.bindShader(curShader, false);\r\n                    //这两个默认得加上\r\n                    if (uniforms[\"uViewMatrix\"]) uniforms[\"uViewMatrix\"] = this.camera.worldMatrixInverse.toArray();\r\n                    if (uniforms[\"uProjectionMatrix\"]) uniforms[\"uProjectionMatrix\"] = this.camera.projectionMatrix.toArray();\r\n                }\r\n                //模型矩阵也默认加上\r\n                if (uniforms[\"uModelMatrix\"]) uniforms[\"uModelMatrix\"] = mesh._worldMatrix.toArray();\r\n                //处理所有自定义属性\r\n                for (let u in cusUniforms) {\r\n                    let uniform = cusUniforms[u];\r\n                    let type: UniformType = uniform.type;\r\n                    let value = uniform.value;\r\n                    switch (type) {\r\n                        case UniformType.texture:\r\n                            uniforms[u] = textureManager.bindTexture(value, undefined, false);\r\n                            break;\r\n                        case UniformType.color:\r\n                            uniforms[u] = hex2rgb(value)\r\n                            break;\r\n                        case UniformType.vector2:\r\n                        case UniformType.vector3:\r\n                        case UniformType.vector4:\r\n                        case UniformType.matrix4:\r\n                            uniforms[u] = value.toArray();\r\n                            break;\r\n                        default:\r\n                            uniforms[u] = value;\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                let maxBones = this.getMaxBones(mesh);\r\n                let shader = getCusShader(this.renderer, mat, this.lightsConfig, mesh, maxBones, this.floatVertexTextures, this.fog);\r\n                let uniforms = shader.uniforms;\r\n                if (curShader !== shader) {//同一着色器只需要传一次相机参数和光照参数（因为都是场景全局）\r\n                    curShader = shader;\r\n                    //先绑定着色器，project不设置\r\n                    this.renderer.bindShader(curShader, false);\r\n                    //相机\r\n                    uniforms[\"uViewMatrix\"] = this.camera.worldMatrixInverse.toArray();\r\n                    uniforms[\"uProjectionMatrix\"] = this.camera.projectionMatrix.toArray();\r\n                    //光照\r\n                    if (mat._lightAffect) {\r\n                        //只能给当前绑定的shader传值，否则location不存在\r\n                        for (var j = 0; j < pointLightNum; j++) {\r\n                            let key = \"pointLights[\" + j + \"]\";\r\n                            uniforms[key].color = this.lightsConfig.pointLights[j].color;\r\n                            uniforms[key].position = this.lightsConfig.pointLights[j].position;\r\n                            uniforms[key].distance = this.lightsConfig.pointLights[j].distance;\r\n                            uniforms[key].decay = this.lightsConfig.pointLights[j].decay;\r\n                        }\r\n                        for (var j = 0; j < dirLightNum; j++) {\r\n                            let key = \"directionalLights[\" + j + \"]\";\r\n                            uniforms[key].color = this.lightsConfig.directionalLights[j].color;\r\n                            uniforms[key].direction = this.lightsConfig.directionalLights[j].direction;\r\n                        }\r\n                        uniforms.uAmbientLightColor = this.lightsConfig.ambientLightColor;\r\n                    }\r\n                }\r\n                //是否带贴图\r\n                if (mat.map) {\r\n                    //找纹理，绑定纹理，多个纹理也是一样的方法\r\n                    uniforms[\"uMap\"] = textureManager.bindTexture(mat.map, undefined, false);\r\n                }\r\n                //是否带环境贴图\r\n                if (mat.envMap) {\r\n                    //找纹理，绑定纹理，多个纹理也是一样的方法\r\n                    uniforms[\"uEnvMap\"] = textureManager.bindTexture(mat.envMap, undefined, false);;\r\n                    //反射率\r\n                    uniforms[\"uReflectivity\"] = mat.reflectivity;\r\n                    //传相机位置\r\n                    uniforms[\"uCameraPosition\"] = tempVec3.setFromMatrixPosition(this.camera._worldMatrix).toArray();\r\n                }\r\n                //uniform参数修改，好像目前就几个，且固定的，以后得仿three建数组\r\n                uniforms[\"uMatColor\"] = mat.colorArr;\r\n                uniforms[\"uMatAlpha\"] = mat.alpha;\r\n                //带雾化的\r\n                if (mat.useFog && this.fog) {\r\n                    uniforms[\"uFogColor\"] = this.fog.color;\r\n                    // uniforms[\"uFogDensity\"] = this.fog.density;\r\n                    uniforms[\"uFogNear\"] = this.fog.near;\r\n                    uniforms[\"uFogFar\"] = this.fog.far;\r\n                }\r\n                //mesh的模型矩阵\r\n                uniforms[\"uModelMatrix\"] = mesh._worldMatrix.toArray();\r\n                //法线矩阵\r\n                if (uniforms.uNormalMatrix) {\r\n                    var modelViewMatrix = tempMatrix4.multiplyMatrices(this.camera.worldMatrixInverse, mesh._worldMatrix)\r\n                    var normalMatrix = modelViewMatrix.invert().transpose();\r\n                    // var normalMatrix = mesh._worldMatrix.invert().transpose();\r\n                    uniforms[\"uNormalMatrix\"] = normalMatrix.toArray()\r\n                    // this.setShaderUniform(curShader, \"uNormalMatrix\", normalMatrix.toArray());\r\n                }\r\n                //骨骼需要的uniform\r\n                if (mat.skinning && maxBones > 0) {\r\n                    //@ts-ignore\r\n                    let sMesh: SkinnedMesh3D = mesh;\r\n                    uniforms[\"uBindMatrix\"] = sMesh.bindMatrix.toArray();\r\n                    uniforms[\"uBindMatrixInverse\"] = sMesh.bindMatrixInverse.toArray();\r\n                    // sMesh.skeleton.update()\r\n                    var skeleton = sMesh.skeleton;\r\n                    if (skeleton) {\r\n                        var bones = skeleton.bones;\r\n                        if (this.floatVertexTextures) {\r\n                            if (!skeleton.boneTexture) {\r\n                                // layout (1 matrix = 4 pixels)\r\n                                //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n                                //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n                                //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n                                //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n                                //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n                                var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\r\n                                size = (function (value) {\r\n                                    return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n                                })(size);\r\n                                size = Math.max(size, 4);\r\n                                var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\r\n                                boneMatrices.set(skeleton.boneMatrices); // copy current values\r\n                                var boneTexture = new BaseTexture({ data: boneMatrices, width: size, height: size });\r\n                                boneTexture.mipmap = false;\r\n                                skeleton.boneMatrices = boneMatrices;\r\n                                skeleton.boneTexture = boneTexture;\r\n                                skeleton.boneTextureSize = size;\r\n                            }\r\n                            let location: number = textureManager.bindTexture(skeleton.boneTexture, undefined, false);\r\n                            uniforms[\"uBoneTexture\"] = location;\r\n                            uniforms[\"uBoneTextureSize\"] = skeleton.boneTextureSize;\r\n                        } else {\r\n                            uniforms[\"uBoneMatrices\"] = sMesh.skeleton.boneMatrices;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            //几何属性\r\n            var glVaoBuffer = geo._glVaoBuffer[this.renderer.CONTEXT_UID];\r\n            if (!glVaoBuffer) {\r\n                glVaoBuffer = geo._glVaoBuffer[this.renderer.CONTEXT_UID] = {\r\n                    // indexBuffer: GLBuffer.createIndexBuffer(gl, null, gl.STATIC_DRAW),\r\n                    attrBuffer: GLBuffer.createVertexBuffer(gl, null, gl.STATIC_DRAW),\r\n                    vaos: {}\r\n                }\r\n                //有索引\r\n                if (geo._indices) glVaoBuffer.indexBuffer = GLBuffer.createIndexBuffer(gl, null, gl.STATIC_DRAW);\r\n                //TODO 有变形顶点，数据直接干进去，有性能问题再说 ，还是先不绑了，影响下面的vao\r\n                if (geo._morphPositions) {//长度可以根据位置，还是根据，可能很多，用到时再建\r\n                    glVaoBuffer.morphTargetBuffers = []; //mesh.morphTargetInfluences.length\r\n                    // for (let m = 0; m < geo._morphPositions.length; m++) {\r\n                    //     glVaoBuffer.morphTargetBuffers.push(\r\n                    //         GLBuffer.createVertexBuffer(gl, /*geo._morphPositions[m]*/null, gl.STATIC_DRAW)\r\n                    //     )\r\n                    // }\r\n                }\r\n                //有变形法线\r\n                if (geo._morphNormals) {\r\n                    glVaoBuffer.morphNormalBuffers = [];\r\n                    // for (let m = 0; m < geo._morphNormals.length; m++) {\r\n                    //     glVaoBuffer.morphNormalBuffers.push(\r\n                    //         GLBuffer.createVertexBuffer(gl, /*geo._morphNormals[m]*/null, gl.STATIC_DRAW)\r\n                    //     )\r\n                    // }\r\n                }\r\n                //骨骼\r\n                if (geo._skinWeight) glVaoBuffer.skinWeightBuffer = GLBuffer.createVertexBuffer(gl, null, gl.STATIC_DRAW);\r\n                if (geo._skinIndex) glVaoBuffer.skinIndexBuffer = GLBuffer.createVertexBuffer(gl, null, gl.STATIC_DRAW);\r\n\r\n                //计算一次，打包所有的顶点属性，位置，颜色，uv，法线\r\n                packGeometry(geo);\r\n            }\r\n            //@ts-ignore\r\n            var vao = glVaoBuffer.vaos[curShader._glShaderKey];\r\n            var attrs = curShader.attributes;\r\n            if (!vao) {\r\n                //@ts-ignore vao添加各种attribute\r\n                vao = glVaoBuffer.vaos[curShader._glShaderKey] = this.renderer.createVao()\r\n                    //索引\r\n                    // .addIndex(glVaoBuffer.indexBuffer)\r\n                    //顶点\r\n                    .addAttribute(glVaoBuffer.attrBuffer, attrs.aPosition, gl.FLOAT, false, geo._vertByteSize, 0 * 4)\r\n                //颜色\r\n                // .addAttribute(glVaoBuffer.attrBuffer, attrs.aColor, gl.FLOAT, true, geo._vertByteSize, 3 * 4)\r\n                //uv\r\n                // .addAttribute(glVaoBuffer.attrBuffer, attrs.aTextureCoord, gl.FLOAT, true, geo._vertByteSize, 6 * 4)\r\n                //法线\r\n                // .addAttribute(glVaoBuffer.attrBuffer, attrs.aNormal, gl.FLOAT, false, geo._vertByteSize, 8 * 4);\r\n                //颜色不一定有\r\n                if (attrs.aColor) vao.addAttribute(glVaoBuffer.attrBuffer, attrs.aColor, gl.FLOAT, true, geo._vertByteSize, 3 * 4)\r\n                //uv不一定有\r\n                if (attrs.aTextureCoord) vao.addAttribute(glVaoBuffer.attrBuffer, attrs.aTextureCoord, gl.FLOAT, true, geo._vertByteSize, 6 * 4)\r\n                //法线不一定有\r\n                if (attrs.aNormal) vao.addAttribute(glVaoBuffer.attrBuffer, attrs.aNormal, gl.FLOAT, false, geo._vertByteSize, 8 * 4);\r\n\r\n                //索引看情况加\r\n                if (geo._indices) vao.addIndex(glVaoBuffer.indexBuffer);\r\n                //骨骼的\r\n                if (attrs.aSkinWeight) vao.addAttribute(glVaoBuffer.skinWeightBuffer, attrs.aSkinWeight, gl.FLOAT, false, 0, 0);\r\n                if (attrs.aSkinIndex) vao.addAttribute(glVaoBuffer.skinIndexBuffer, attrs.aSkinIndex, gl.UNSIGNED_BYTE, false, 0, 0);\r\n                //变形数据，首次直接addAttribute\r\n                var uploadBufferDatas: UploadBufferData[];\r\n                if (mesh.morphTargetInfluences && mat.morphTargets) {\r\n                    uploadBufferDatas = addMorphtargetsAttr(\r\n                        mesh.morphTargetInfluences,\r\n                        geo,\r\n                        glVaoBuffer,\r\n                        vao,\r\n                        curShader,\r\n                        gl\r\n                    )\r\n                }\r\n                // 首次需要绑定buffer到vao，先绑定vao再绑定buffer和上传数据（upload里传false）,其实bindVao貌似已经绑定过了，再说吧\r\n                this.renderer.bindVao(vao);\r\n                //所有数据绑定buffer，其实可以在上面构造GLBuffer里传数据，现在还是单独处理吧，这样判断比较多\r\n                //需要分别绑定\r\n                glVaoBuffer.attrBuffer.upload(geo._attrBuffer.vertices, 0, false);//首次还是bind吧，必须bind，否则buffer溢出\r\n                //有索引才改\r\n                if (geo._indices) glVaoBuffer.indexBuffer.upload(geo._indices, 0, false);//首次还是bind吧\r\n                //骨骼的\r\n                if (attrs.aSkinWeight) glVaoBuffer.skinWeightBuffer.upload(new Float32Array(geo._skinWeight), 0, false)\r\n                if (attrs.aSkinIndex) glVaoBuffer.skinIndexBuffer.upload(new Uint8Array(geo._skinIndex), 0, false)\r\n                //还得在这里做数据的变形\r\n                if (uploadBufferDatas) uploadBufferDatas.forEach((e) => {\r\n                    e.buffer.upload(e.data, 0, false);\r\n                })\r\n            } else {\r\n                //变形数据，暂时只有这个要做改变，其他的估计到时也要搞，TODO\r\n                var uploadBufferDatas: UploadBufferData[];\r\n                if (mesh.morphTargetInfluences && mat.morphTargets) {\r\n                    uploadBufferDatas = addMorphtargetsAttr(\r\n                        mesh.morphTargetInfluences,\r\n                        geo,\r\n                        glVaoBuffer,\r\n                        vao,\r\n                        curShader,\r\n                        gl\r\n                    )\r\n                }\r\n                //进过上面判断，必有uploadBufferDatas，TODO,到时考虑不传force，用vao.dirty判断是否bind\r\n                this.renderer.bindVao(vao, !!uploadBufferDatas);\r\n                //不修改，估计都不要变，需要修改时候TODO.好多数据，包括vao可能也需要重新bind\r\n                // glVaoBuffer.attrBuffer.upload(glVaoBuffer._attrBuffer.vertices, 0, true)\r\n                // glVaoBuffer.indexBuffer.upload(glVaoBuffer._indexBuffer, 0, true)\r\n\r\n                //变形的数据可能传入的会改变，所以需要upload，还要重新修改数据，有removeAttribute的情况，TODO\r\n                //还得在这里做数据的变形，不绑定\r\n                if (uploadBufferDatas) uploadBufferDatas.forEach((e) => {\r\n                    e.buffer.upload(e.data, 0, false/*true*/);//貌似里面有修改的Attribute队列，所以还是绑定下buffer\r\n                })\r\n            }\r\n            //根据材质切换渲染面\r\n            if (mat.side == RenderSideType.DoubleSide) {\r\n                this.renderer.state.setCullFace(0)//不开启剔除\r\n            } else {\r\n                this.renderer.state.setCullFace(1)\r\n                //设置剔除面\r\n                this.renderer.state.setFrontFace(mat.side)\r\n            }\r\n            //绘制\r\n            vao.draw(mat.wireframe ? gl.LINES : gl.TRIANGLES);\r\n        }\r\n        this.meshes.length = 0\r\n    }\r\n\r\n    private getMaxBones(object) {\r\n        if (object.instanceType !== \"SkinnedMesh3D\") return 0;\r\n        if (this.floatVertexTextures) return 1024;\r\n        var skeleton = object.skeleton;\r\n        var bones = skeleton.bones;\r\n        var nVertexMatrices = Math.floor((this.maxVertexUniforms - 20) / 4);\r\n        var maxBones = Math.min(nVertexMatrices, bones.length);\r\n        if (maxBones < bones.length) {\r\n            console.warn('Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\r\n            return 0;\r\n        }\r\n        return maxBones;\r\n    }\r\n}\r\n\r\n/**\r\n * 组转集合的所有属性到一个_attrBuffer\r\n * @param geo \r\n */\r\nfunction packGeometry(geo: Geometry): void {\r\n    const float32View = geo._attrBuffer.float32View;\r\n    var count = 0;\r\n    for (var j = 0; j < geo._vertices.length / 3; j++) {\r\n        //顶点\r\n        float32View[count++] = geo._vertices[j * 3];\r\n        float32View[count++] = geo._vertices[j * 3 + 1];\r\n        float32View[count++] = geo._vertices[j * 3 + 2];\r\n        //@ts-ignore 颜色，以后搞成一位，现在有bug\r\n        // geo._attrBuffer.uint32View[count++] = rgb2hex(geo._colors.slice(j * 3, j * 3 + 3)) + (1 * 255 << 24)\r\n        float32View[count++] = geo._colors[j * 3];\r\n        float32View[count++] = geo._colors[j * 3 + 1];\r\n        float32View[count++] = geo._colors[j * 3 + 2];\r\n        // float32View[count++] = 1;\r\n        //uv\r\n        float32View[count++] = geo._uvs[j * 2];\r\n        float32View[count++] = geo._uvs[j * 2 + 1];\r\n        //法线,可能不需要法线的情况，也加上先\r\n        float32View[count++] = geo._normals[j * 3];\r\n        float32View[count++] = geo._normals[j * 3 + 1];\r\n        float32View[count++] = geo._normals[j * 3 + 2];\r\n    }\r\n}\r\n\r\ninterface UploadBufferData {\r\n    //几何上的GLbuffer的索引\r\n    buffer: GLBuffer,\r\n    //几何上buffer的数据\r\n    data: any//Float32Array | number[],\r\n    //是否要绑定\r\n    // dontBind: boolean,\r\n}\r\n\r\n//每个几何的权重缓存\r\nconst influencesList = {};\r\n//每个几何的通道对应数据索引\r\nconst attrChannelHash = {}\r\n//给uniform传值用\r\nvar morphInfluences = new Float32Array(8);\r\n\r\n/**\r\n * 更新变形数据，考虑是否要变动attribute，只有\r\n * 返回要upload的数据\r\n * @param objectInfluences mesh上的权重数组\r\n * @param geo 几何\r\n * @param vao \r\n */\r\nfunction addMorphtargetsAttr(\r\n    objectInfluences: number[],\r\n    geo: Geometry,\r\n    glVaoBuffer: VaoBufferInt,\r\n    vao: VertexArrayObject,\r\n    shader: GLShader,\r\n    gl: WebGLRenderingContext,\r\n): UploadBufferData[] {\r\n    var morphTargets = geo._morphPositions;\r\n    var morphNormals = geo._morphNormals;\r\n\r\n    var length = objectInfluences.length;//权重数据总长度，基本不会被手动修改，到时排序只取权重大的，最多8\r\n    //记录需要修改的数据\r\n    var uploadBufferDatas: UploadBufferData[] = [];\r\n\r\n    //原来几何上的权重，第一个元素标识数据索引，第二个元素标识值，第三个标识现在用的通道\r\n    var influences: [number, number][] = influencesList[geo.instanceId];\r\n    //如果原先不存在\r\n    if (!influences) {\r\n        influences = [];\r\n        for (var i = 0; i < length; i++) {\r\n            influences[i] = [i, 0];\r\n        }\r\n        influencesList[geo.instanceId] = influences;\r\n    }\r\n    //通道对应的数据，确定哪些通道的数据要重新upload\r\n    var attrChannel: number[] = attrChannelHash[geo.instanceId];\r\n    if (!attrChannel) {\r\n        attrChannel = [];//通道对应，数据索引\r\n        attrChannel.length = 8;\r\n        attrChannelHash[geo.instanceId] = attrChannel;\r\n    }\r\n\r\n    //vao上挂着有变形数据的移除，讲道理也是最多8\r\n    for (var i = 0; i < 8/*length*/; i++) {\r\n        var influence = influences[i];\r\n        if (influence && influence[1] !== 0) {\r\n            if (morphTargets) vao.removeAttribute('morphTarget' + i);\r\n            if (morphNormals && i < 4) vao.removeAttribute('morphNormal' + i);\r\n        }\r\n    }\r\n    //重新处理变形数据，这个得排所有的\r\n    for (var i = 0; i < length; i++) {\r\n        var influence = influences[i];\r\n        influence[0] = i;\r\n        influence[1] = objectInfluences[i];\r\n    }\r\n    //按权重大小排序，大的优先\r\n    influences.sort(absNumericalSort);\r\n\r\n\r\n    var attrs = shader.attributes;\r\n    //只取8个，不传着色器里计算并不会报错\r\n    //有法线时只用4个，\r\n    var attrLen = morphNormals ? 4 : 8;\r\n    for (var i = 0; i < attrLen; i++) {\r\n        var influence = influences[i];\r\n        if (influence) {\r\n            //索引\r\n            var index = influence[0];\r\n            var value = influence[1];\r\n            if (value) {\r\n                if (morphTargets && morphTargets[index]) {\r\n                    //buffer没有就加\r\n                    let targetBuffer = glVaoBuffer.morphTargetBuffers[index];\r\n                    if (!targetBuffer) {\r\n                        targetBuffer = glVaoBuffer.morphTargetBuffers[index] = GLBuffer.createVertexBuffer(gl, null, gl.STATIC_DRAW)\r\n                    }\r\n                    //记录需要修改传数据，通道值对应的buffer值不一致时，需要upload\r\n                    if (attrChannel[i] !== index) {\r\n                        attrChannel[i] = index;\r\n                        uploadBufferDatas.push({\r\n                            buffer: targetBuffer,\r\n                            data: new Float32Array(morphTargets[index]) //data.vertices\r\n                        })\r\n                    }\r\n                    vao.addAttribute(\r\n                        targetBuffer,\r\n                        attrs['morphTarget' + i],\r\n                        gl.FLOAT,\r\n                        false,\r\n                        0,//3 * 4,\r\n                        0 * 4,\r\n                        'morphTarget' + i,\r\n                    )\r\n                }\r\n                if (morphNormals && morphNormals[index]) {//法线只有4个\r\n                    //buffer没有就加\r\n                    let normalBuffer = glVaoBuffer.morphNormalBuffers[index];\r\n                    if (!normalBuffer) {\r\n                        normalBuffer = glVaoBuffer.morphNormalBuffers[index] = GLBuffer.createVertexBuffer(gl, null, gl.STATIC_DRAW)\r\n                    }\r\n                    //记录需要修改传数据，通道值对应的buffer值不一致时，需要upload，用后四个记录\r\n                    if (attrChannel[i + 4] !== index) {\r\n                        attrChannel[i + 4] = index;\r\n                        uploadBufferDatas.push({\r\n                            buffer: normalBuffer,\r\n                            data: new Float32Array(morphNormals[index])\r\n                        })\r\n                    }\r\n                    vao.addAttribute(\r\n                        glVaoBuffer.morphNormalBuffers[index],\r\n                        attrs['morphNormal' + i],\r\n                        gl.FLOAT,\r\n                        false,\r\n                        0,// 3 * 4,\r\n                        0 * 4,\r\n                        'morphNormal' + i,\r\n                    )\r\n                }\r\n                morphInfluences[i] = value;\r\n                continue;\r\n            }\r\n        }\r\n        morphInfluences[i] = 0;\r\n    }\r\n    //着色器修改\r\n    shader.uniforms[\"morphTargetInfluences\"] = morphInfluences;\r\n    //需要修改数据的\r\n    return uploadBufferDatas\r\n}\r\n\r\nfunction absNumericalSort(a: [number, number], b: [number, number]) {\r\n    return Math.abs(b[1]) - Math.abs(a[1]);\r\n}\r\n\r\ninterface renderObjInt {\r\n\r\n\r\n\r\n}\r\n\r\nWebglRenderer.registerPlugin('d3', D3Renderer);\r\n\r\n\r\n\r\nlet shadowMap: RenderTexture;\r\nlet shadowShaders: { [key: string]: ShadowShader } = {};\r\nlet shadowCamera: OrthographicCamera;\r\n\r\n/**\r\n * 生成影子深度图\r\n * @param lights \r\n * @param meshes \r\n * @param renderer \r\n */\r\nfunction getShadowMap(lights: LightsConfig, meshes: Mesh3D[], renderer: WebglRenderer) {\r\n    //找直线光，就一个，设置了castShadow的\r\n    var dirLight = (() => {\r\n        if (!lights || !lights.directionalLights || !lights.directionalLights.length) return null\r\n        for (var d of lights.directionalLights) {\r\n            if (d.castShadow) return d;\r\n        }\r\n        return null\r\n    })();\r\n    if (!dirLight) return null;\r\n    var castMeshes: Mesh3D[] = [], receiveMeshes: Mesh3D[] = [];\r\n    if (meshes && meshes.length) {\r\n        for (let m of meshes) {\r\n            //找设置了投影的物体，且是有光感材质的\r\n            if (m.castShadow && m.material._lightAffect) castMeshes.push(m);\r\n            //找设置了接收影子的物体\r\n            if (m.receiveShadow) receiveMeshes.push(m);\r\n        }\r\n    }\r\n    if (!castMeshes.length || !receiveMeshes.length) return null;\r\n    var gl = renderer.gl;\r\n    //建一个帧缓存\r\n    shadowMap = shadowMap || new RenderTexture(new BaseRenderTexture(512, 512));\r\n    //然后就可以根据直线光生成光照矩阵的深度贴图了\r\n    //绑定帧缓存\r\n    renderer.bindRenderTexture(shadowMap, null);\r\n    //绑定着色器\r\n    var shadowShader =\r\n        shadowShaders[renderer.CONTEXT_UID] ||\r\n        (shadowShaders[renderer.CONTEXT_UID] = new ShadowShader(renderer.gl));\r\n    renderer.bindShader(shadowShader, false);\r\n\r\n    //赋值uniform\r\n    var uniforms = shadowShader.uniforms;\r\n\r\n    //计算光照空间矩阵\r\n    // shadowCamera = shadowCamera || new OrthographicCamera(- 5, 5, 5, - 5, 0.5, 500);\r\n    // _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\r\n    // shadowCamera.position.copy(_lightPositionWorld);\r\n    // _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\r\n    // shadowCamera.lookAt(_lookTarget);\r\n    // shadowCamera.updateMatrixWorld();\r\n\r\n    // // compute shadow matrix\r\n\r\n    // shadowMatrix.set(\r\n    //     0.5, 0.0, 0.0, 0.5,\r\n    //     0.0, 0.5, 0.0, 0.5,\r\n    //     0.0, 0.0, 0.5, 0.5,\r\n    //     0.0, 0.0, 0.0, 1.0\r\n    // );\r\n\r\n    // shadowMatrix.multiply(shadowCamera.projectionMatrix);\r\n    // shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\r\n\r\n    uniforms[\"uLightSpaceMatrix\"] = 1\r\n\r\n    receiveMeshes.forEach((m) => {\r\n        uniforms[\"uModelMatrix\"] = m._worldMatrix.toArray();\r\n        //vao及\r\n        //顶点属性通道\r\n\r\n        // vao.draw()\r\n    })\r\n\r\n    //纹理绑定回去\r\n    renderer.bindRenderTexture(null, null);\r\n    //还有viewport还原回场景的，这部分放在flush吧\r\n\r\n\r\n    return shadowMap\r\n}","import { GLShader, defaultValue } from \"../../glCore\";\r\nimport { WebglRenderer } from \"../../2d/renderers/WebglRenderer\";\r\nimport { BaseMaterial, EnvBlendType } from \"../materials/BaseMaterial\";\r\nimport { LightsConfig } from \"../Scene3D\"\r\nimport { generateUniformAccessObject, mapType } from \"../../glCore/shader\";\r\nimport { Mesh3D } from \"..\";\r\n\r\n\r\n/**\r\n * 根据渲染器，材质，灯光获取着色器\r\n * @param render \r\n * @param material \r\n * @param lights \r\n */\r\nexport function getCusShader(\r\n    render: WebglRenderer,\r\n    material: BaseMaterial,\r\n    lights: LightsConfig,\r\n    mesh: Mesh3D,\r\n    maxBones?: number,\r\n    useVertexTexture?: boolean,\r\n    fog?: any\r\n) {\r\n    //所有参数\r\n    var parameters: ShaderParametersInt = {\r\n        glUid: render.CONTEXT_UID,\r\n        precision: getMaxPrecision(render),//也可能是材质上传的，再说了TODO\r\n        pointLightsNum: lights.pointLights.length,\r\n        dirLightsNum: lights.directionalLights.length,\r\n        morphTargets: mesh.morphTargetInfluences && material.morphTargets,\r\n        morphNormals: mesh.morphTargetInfluences && material.morphTargets && material.morphNormals,\r\n\r\n        skinning: material.skinning && maxBones > 0,\r\n        maxBones: maxBones || 0,\r\n        useVertexTexture: useVertexTexture,\r\n\r\n        lightAffect: material._lightAffect,\r\n\r\n        useMap: !!material.map,\r\n        useEnvMap: !!material.envMap,\r\n        combine: material.combine,\r\n\r\n        useVertexColor: !!material.useVertexColor,\r\n\r\n        useFog: fog && material.useFog,\r\n    }\r\n    //计算code，\r\n    var shaderKey = getShaderKey(parameters);\r\n    var cusShader: CusShader;\r\n\r\n    for (var i = 0; i < cacheShaders.length; i++) {\r\n        if (cacheShaders[i]._glShaderKey === shaderKey) {\r\n            cusShader = cacheShaders[i];\r\n            ++cusShader.usedTimes;\r\n            break;\r\n        }\r\n    }\r\n    if (!cusShader) {\r\n        cusShader = new CusShader(render.gl, parameters)\r\n        cusShader._glShaderKey = shaderKey;\r\n        //存下\r\n        cacheShaders.push(cusShader)\r\n    }\r\n    return cusShader\r\n}\r\n\r\n/**\r\n * 根据参数获取shaderKey\r\n * @param parameters \r\n */\r\nfunction getShaderKey(parameters: ShaderParametersInt) {\r\n    var array = [];\r\n    for (var i = 0; i < parameterNames.length; i++) {\r\n        array.push(parameters[parameterNames[i]]);\r\n    }\r\n    return array.join();\r\n}\r\n\r\n//根据渲染器的上下文id缓存的最大精度\r\nconst maxPrecisionCache: { [key: number]: string } = {}\r\n/**\r\n * 获取最大精度，暂时不考虑缓存，性能有问题再说TODO\r\n * @param gl \r\n */\r\nfunction getMaxPrecision(render: WebglRenderer) {\r\n    if (!maxPrecisionCache[render.CONTEXT_UID]) {\r\n        maxPrecisionCache[render.CONTEXT_UID] = (() => {\r\n            const gl = render.gl;\r\n            if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 &&\r\n                gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\r\n                return 'highp';\r\n            }\r\n            if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 &&\r\n                gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\r\n                return 'mediump';\r\n            }\r\n            return 'lowp';\r\n        })()\r\n    }\r\n    return maxPrecisionCache[render.CONTEXT_UID];\r\n}\r\n\r\n\r\nclass CusShader extends GLShader {\r\n    /**\r\n     * 以后回收时用TODO\r\n     */\r\n    usedTimes: number;\r\n    /**\r\n     * 作为该着色器的标识\r\n     */\r\n    _glShaderKey: string;\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param parameters \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        parameters: ShaderParametersInt\r\n    ) {\r\n        //预处理参数\r\n        var frontVert = [\r\n            'precision ' + parameters.precision + ' float;',\r\n            'precision ' + parameters.precision + ' int;',\r\n            parameters.lightAffect ? '#define USE_LIGHT' : '',\r\n            parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n            parameters.morphNormals ? '#define USE_MORPHNORMALS' : '',\r\n            parameters.skinning ? '#define USE_SKINNING' : '',\r\n            parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n            '#define MAX_BONES ' + parameters.maxBones,\r\n            parameters.useMap ? '#define USE_MAP' : '',\r\n            parameters.useEnvMap ? '#define USE_ENVMAP' : '',\r\n            parameters.useVertexColor ? '#define USE_VERTEXCOLOR' : '',\r\n            parameters.useFog ? '#define USE_FOG' : '',\r\n        ].filter(e => e !== '').join('\\n');\r\n        //不为空加个换行\r\n        if (frontVert) frontVert += \"\\n\";\r\n\r\n        var frontFrag = [\r\n            'precision ' + parameters.precision + ' float;',\r\n            'precision ' + parameters.precision + ' int;',\r\n            parameters.lightAffect ? '#define USE_LIGHT' : '',\r\n            parameters.useMap ? '#define USE_MAP' : '',\r\n            parameters.useEnvMap ? '#define USE_ENVMAP' : '',\r\n            parameters.useEnvMap ? '#define ' + parameters.combine : '',\r\n            parameters.useVertexColor ? '#define USE_VERTEXCOLOR' : '',\r\n            parameters.useFog ? '#define USE_FOG' : '',\r\n        ].filter(e => e !== '').join('\\n');\r\n        if (frontFrag) frontFrag += \"\\n\";\r\n\r\n        var frag = FRAG\r\n            .replace(new RegExp(shaderReplaceStr.POINT_LIGHTS_NUM, \"gm\"), parameters.pointLightsNum + \"\")\r\n            .replace(new RegExp(shaderReplaceStr.DIR_LIGHTS_NUM, \"gm\"), parameters.dirLightsNum + \"\")\r\n\r\n        super(gl, frontVert + VERT, frontFrag + frag)\r\n\r\n        //这两个需要重写下\r\n        //修改uniform\r\n        this.uniformData = extractUniforms(gl, this.program);\r\n        //是否需要按照链式的点下去，链式的能点下去吧，但是数组索引自己拼字段\r\n        this.uniforms = generateUniformAccessObject(gl, this.uniformData);\r\n\r\n        //以后用\r\n        this.usedTimes = 0;\r\n    }\r\n}\r\n\r\n//部分属性不清除中括号（比如光照数据，链式结构赋值），\r\n//有些清掉中括号，传纯数字数组（比如纹理通道数量uSamplers，变形权重morphTargetInfluences）\r\n\r\n//复制一个不清除中括号的\r\nfunction extractUniforms(gl: WebGLRenderingContext, program: WebGLProgram) {\r\n    var uniforms = {};\r\n\r\n    var totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    for (var i = 0; i < totalUniforms; i++) {//morphTargetInfluences\r\n        var uniformData: WebGLActiveInfo = gl.getActiveUniform(program, i);\r\n\r\n        //morphTargetInfluences直接传一个数组吧，还是说不区分，也直接按morphTargetInfluences[0]传\r\n        var name = (uniformData.name.indexOf(\"morphTargetInfluences\") == 0 || uniformData.name.indexOf(\"uBoneMatrices\") == 0) ?\r\n            uniformData.name.replace(/\\[.*?\\]/, \"\") : uniformData.name;\r\n        var type = mapType(gl, uniformData.type);\r\n\r\n        // console.log(name)\r\n        uniforms[name] = {\r\n            type: type,\r\n            size: uniformData.size,\r\n            location: gl.getUniformLocation(program, name),\r\n            value: defaultValue(type, uniformData.size)\r\n        };\r\n    }\r\n\r\n    return uniforms;\r\n};\r\n\r\n\r\n/**\r\n * 存储用过着色器程序\r\n * 根据自己的code取，code根据参数拼\r\n * 用数组吧，考虑为啥不用对象键值\r\n */\r\nconst cacheShaders: CusShader[] = [];\r\n\r\n\r\n//////////////ShaderParametersInt和parameterNames这两个要对应的，否则缓存会出问题\r\n\r\n/**\r\n * 影响着色器编译的所有的参数\r\n * \r\n * 正反面影响法线和光照，还需要定义正反面光照及两面光照，以后再说\r\n * 环境贴图也需要法线，不止是光照需要，以后再说，到时normal必传吧\r\n */\r\nconst parameterNames = [\r\n    \"glUid\",\r\n    \"precision\",\r\n    \"pointLightsNum\",\r\n    \"dirLightsNum\",\r\n    \"morphTargets\",\r\n    \"morphNormals\",\r\n    \"skinning\",\r\n    \"maxBones\",\r\n    \"useVertexTexture\",\r\n    \"lightAffect\",\r\n    \"useMap\",\r\n    \"useEnvMap\",\r\n    \"combine\",\r\n    \"useVertexColor\",\r\n    \"useFog\",\r\n]\r\n\r\n/**\r\n * 着色器编译参数接口\r\n */\r\ninterface ShaderParametersInt {\r\n    glUid: number,\r\n    precision: string,\r\n    pointLightsNum: number,\r\n    dirLightsNum: number,\r\n    morphTargets: boolean,\r\n    morphNormals: boolean,\r\n    skinning: boolean,\r\n    maxBones: number,\r\n    useVertexTexture: boolean,\r\n    lightAffect: boolean,\r\n    useMap: boolean,\r\n    useEnvMap: boolean,\r\n    combine: EnvBlendType,\r\n    useVertexColor: boolean,\r\n    useFog: boolean\r\n}\r\n\r\n/**\r\n * 着色器替换的一些文案\r\n */\r\nenum shaderReplaceStr {\r\n    POINT_LIGHTS_NUM = \"POINT_LIGHTS_NUM\",\r\n    DIR_LIGHTS_NUM = \"DIR_LIGHTS_NUM\",\r\n}\r\n\r\nconst VERT = [\r\n    \"attribute vec3 aPosition;\",//顶点位置信息\r\n    // \"attribute vec3 aColor;\",//顶点颜色数据\r\n    // \"attribute vec2 aTextureCoord;\",//纹理坐标，\r\n    // 'attribute vec3 aNormal;',//法线数据会和上述三个放在同一个数组里，但是不一定进attribute通道\r\n\r\n    \"uniform mat4 uViewMatrix;\",//视图矩阵，camera的worldMatrixInverse\r\n    \"uniform mat4 uProjectionMatrix;\",//投影矩阵，camera的projectionMatrix\r\n    \"uniform mat4 uModelMatrix;\",//模型矩阵\r\n    // \"uniform mat4 uNormalMatrix;\",//模型矩阵uModelMatrix的逆的转置，若正交就是模型矩阵，估计还要乘上视图举证，外面乘，先乘再逆转置\r\n\r\n    \"#ifdef USE_VERTEXCOLOR\",\r\n    \"   attribute vec3 aColor;\",//顶点颜色数据\r\n    \"   varying vec3 vColor;\",//只有颜色数据需要传，或者考虑是否放材质里\r\n    \"#endif\",\r\n    //是否使用贴图\r\n    \"#ifdef USE_MAP\",//有贴图才用到纹理坐标\r\n    \"   attribute vec2 aTextureCoord;\",//纹理坐标，\r\n    \"   varying vec2 vTextureCoord;\",//传到着色器的纹理坐标\r\n    \"#endif\",\r\n    //使用环境贴图或灯光\r\n    '#if defined( USE_ENVMAP ) || defined( USE_LIGHT )',\r\n    '   attribute vec3 aNormal;',//法线数据会和上述三个放在同一个数组里，但是不一定进attribute通道\r\n    \"   uniform mat4 uNormalMatrix;\",//模型矩阵uModelMatrix的逆的转置，若正交就是模型矩阵，估计还要乘上视图举证，外面乘，先乘再逆转置\r\n    \"   varying vec3 vNormal;\",//计算所得法向量，已标准化，顶点着色器里计算少\r\n    \"   varying vec3 vWorldPosition;\",//每个顶点的光线方向\r\n    \"   varying vec3 vViewPosition;\", //传入计算镜面光\r\n    '#endif',\r\n    //环境贴图需要变量\r\n    \"#ifdef USE_ENVMAP\",\r\n    \"   varying vec3 vReflect;\",//反射向量\r\n    \"   uniform vec3 uCameraPosition;\",//相机位置\r\n    '#endif',\r\n\r\n    //使用骨骼蒙皮\r\n    \"#ifdef USE_SKINNING\",\r\n    \"   uniform mat4 uBindMatrix;\",\r\n    \"   uniform mat4 uBindMatrixInverse;\",\r\n    \"   #ifdef BONE_TEXTURE\",\r\n    \"      uniform sampler2D uBoneTexture;\",\r\n    \"      uniform int uBoneTextureSize;\",\r\n    \"      mat4 getBoneMatrix( const in float i ) {\",\r\n    \"         float j = i * 4.0;\",\r\n    \"         float x = mod( j, float( uBoneTextureSize ) );\",\r\n    \"         float y = floor( j / float( uBoneTextureSize ) );\",\r\n    \"         float dx = 1.0 / float( uBoneTextureSize );\",\r\n    \"         float dy = 1.0 / float( uBoneTextureSize );\",\r\n    \"         y = dy * ( y + 0.5 );\",\r\n    \"         vec4 v1 = texture2D( uBoneTexture, vec2( dx * ( x + 0.5 ), y ) );\",\r\n    \"         vec4 v2 = texture2D( uBoneTexture, vec2( dx * ( x + 1.5 ), y ) );\",\r\n    \"         vec4 v3 = texture2D( uBoneTexture, vec2( dx * ( x + 2.5 ), y ) );\",\r\n    \"         vec4 v4 = texture2D( uBoneTexture, vec2( dx * ( x + 3.5 ), y ) );\",\r\n    \"         mat4 bone = mat4( v1, v2, v3, v4 );\",\r\n    \"         return bone;\",\r\n    \"      }\",\r\n    \"   #else\",\r\n    \"      uniform mat4 uBoneMatrices[ MAX_BONES ];\",\r\n    \"      mat4 getBoneMatrix( const in float i ) {\",\r\n    \"         mat4 bone = uBoneMatrices[ int(i) ];\",\r\n    \"         return bone;\",\r\n    \"      }\",\r\n    \"   #endif\",\r\n    '\tattribute vec4 aSkinIndex;',\r\n    '\tattribute vec4 aSkinWeight;',\r\n    \"#endif\",\r\n\r\n    //变形顶点数据，单独建数组传，还是放入vao\r\n    '#ifdef USE_MORPHTARGETS',\r\n    '\tattribute vec3 morphTarget0;',\r\n    '\tattribute vec3 morphTarget1;',\r\n    '\tattribute vec3 morphTarget2;',\r\n    '\tattribute vec3 morphTarget3;',\r\n    '\t#ifdef USE_MORPHNORMALS',\r\n    '\t\tattribute vec3 morphNormal0;',\r\n    '\t\tattribute vec3 morphNormal1;',\r\n    '\t\tattribute vec3 morphNormal2;',\r\n    '\t\tattribute vec3 morphNormal3;',\r\n    \"       uniform float morphTargetInfluences[ 4 ];\",\r\n    '\t#else',\r\n    '\t\tattribute vec3 morphTarget4;',\r\n    '\t\tattribute vec3 morphTarget5;',\r\n    '\t\tattribute vec3 morphTarget6;',\r\n    '\t\tattribute vec3 morphTarget7;',\r\n    \"       uniform float morphTargetInfluences[ 8 ];\",\r\n    '\t#endif',\r\n    '#endif',\r\n\r\n    //雾化\r\n    '#ifdef USE_FOG',\r\n    '    varying float vFogDepth;',\r\n    '#endif',\r\n\r\n    \"void main() {\",\r\n    //赋值顶点坐标\r\n    \"   vec3 transformed = vec3( aPosition );\",\r\n    //考虑变形,顶点位置\r\n    \"   #ifdef USE_MORPHTARGETS\",\r\n    \"      transformed += ( morphTarget0 - aPosition ) * morphTargetInfluences[ 0 ];\",\r\n    \"      transformed += ( morphTarget1 - aPosition ) * morphTargetInfluences[ 1 ];\",\r\n    \"      transformed += ( morphTarget2 - aPosition ) * morphTargetInfluences[ 2 ];\",\r\n    \"      transformed += ( morphTarget3 - aPosition ) * morphTargetInfluences[ 3 ];\",\r\n    \"      #ifndef USE_MORPHNORMALS\",\r\n    \"         transformed += ( morphTarget4 - aPosition ) * morphTargetInfluences[ 4 ];\",\r\n    \"         transformed += ( morphTarget5 - aPosition ) * morphTargetInfluences[ 5 ];\",\r\n    \"         transformed += ( morphTarget6 - aPosition ) * morphTargetInfluences[ 6 ];\",\r\n    \"         transformed += ( morphTarget7 - aPosition ) * morphTargetInfluences[ 7 ];\",\r\n    \"      #endif\",\r\n    \"   #endif\",\r\n    //使用蒙皮骨骼\r\n    \"   #ifdef USE_SKINNING\",\r\n    \"      mat4 boneMatX = getBoneMatrix( aSkinIndex.x );\",\r\n    \"      mat4 boneMatY = getBoneMatrix( aSkinIndex.y );\",\r\n    \"      mat4 boneMatZ = getBoneMatrix( aSkinIndex.z );\",\r\n    \"      mat4 boneMatW = getBoneMatrix( aSkinIndex.w );\",\r\n    \"      vec4 skinVertex = uBindMatrix * vec4( transformed, 1.0 );\",\r\n    \"      vec4 skinned = vec4( 0.0 );\",\r\n    \"      skinned += boneMatX * skinVertex * aSkinWeight.x;\",\r\n    \"      skinned += boneMatY * skinVertex * aSkinWeight.y;\",\r\n    \"      skinned += boneMatZ * skinVertex * aSkinWeight.z;\",\r\n    \"      skinned += boneMatW * skinVertex * aSkinWeight.w;\",\r\n    \"      transformed = ( uBindMatrixInverse * skinned ).xyz;\",\r\n    \"   #endif\",\r\n    //常规的\r\n    \"   vec4 mvPosition = uViewMatrix * uModelMatrix * vec4( transformed, 1.0 );\",\r\n    \"   gl_Position = uProjectionMatrix * mvPosition;\",\r\n    //使用顶点颜色\r\n    \"   #ifdef USE_VERTEXCOLOR\",\r\n    \"      vColor = aColor;\",\r\n    \"   #endif\",\r\n    //纹理坐标\r\n    \"   #ifdef USE_MAP\",\r\n    \"      vTextureCoord = aTextureCoord;\",\r\n    \"   #endif\",\r\n    //使用环境贴图或灯光\r\n    '   #if defined( USE_ENVMAP ) || defined( USE_LIGHT )',\r\n    \"      vec3 objectNormal = vec3( aNormal );\",\r\n    //考虑变形，法线\r\n    \"      #ifdef USE_MORPHNORMALS\",\r\n    \"         objectNormal += ( morphNormal0 - aNormal ) * morphTargetInfluences[ 0 ];\",\r\n    \"         objectNormal += ( morphNormal1 - aNormal ) * morphTargetInfluences[ 1 ];\",\r\n    \"         objectNormal += ( morphNormal2 - aNormal ) * morphTargetInfluences[ 2 ];\",\r\n    \"         objectNormal += ( morphNormal3 - aNormal ) * morphTargetInfluences[ 3 ];\",\r\n    \"      #endif\",\r\n    //骨骼蒙皮\r\n    \"      #ifdef USE_SKINNING\",\r\n    \"         mat4 skinMatrix = mat4( 0.0 );\",\r\n    \"         skinMatrix += aSkinWeight.x * boneMatX;\",\r\n    \"         skinMatrix += aSkinWeight.y * boneMatY;\",\r\n    \"         skinMatrix += aSkinWeight.z * boneMatZ;\",\r\n    \"         skinMatrix += aSkinWeight.w * boneMatW;\",\r\n    \"         skinMatrix  = uBindMatrixInverse * skinMatrix * uBindMatrix;\",\r\n    \"         objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\",\r\n    \"      #endif\",\r\n\r\n    \"      vViewPosition = -mvPosition.xyz;\",\r\n    \"      vWorldPosition = vec3(uModelMatrix * vec4(transformed,1.0));\",\r\n    \"      vec3 vTransformedNormal = vec3(uNormalMatrix * vec4(objectNormal,1.0));\",\r\n    \"      vNormal = normalize(vTransformedNormal);\",//标准化\r\n    //环境贴图\r\n    \"      #ifdef USE_ENVMAP\",\r\n    \"         vec3 cameraToVertex = normalize( vWorldPosition.xyz - uCameraPosition );\",\r\n    \"         vec3 worldNormal = normalize( ( vec4( vTransformedNormal, 0.0 ) * uViewMatrix ).xyz );\",\r\n    \"         vReflect = reflect(cameraToVertex, worldNormal);\",\r\n    '      #endif',\r\n    '   #endif',\r\n    //雾化深度\r\n    '   #ifdef USE_FOG',\r\n    '      vFogDepth = -mvPosition.z;',\r\n    '   #endif',\r\n    \"}\"\r\n].join(\"\\n\")\r\n\r\n\r\nconst FRAG = [\r\n    //材质通用参数\r\n    \"uniform vec3 uMatColor;\", //材质上的颜色，以后区分发散颜色等等\r\n    \"uniform float uMatAlpha;\", //材质上的透明度\r\n    \"#ifdef USE_MAP\",\r\n    '   uniform sampler2D uMap;',//纹理\r\n    \"   varying vec2 vTextureCoord;\",//传到着色器的纹理坐标\r\n    \"#endif\",\r\n\r\n    \"#ifdef USE_VERTEXCOLOR\",\r\n    \"   varying vec3 vColor;\",\r\n    \"#endif\",\r\n\r\n    '#if defined( USE_ENVMAP ) || defined( USE_LIGHT )',\r\n    \"   varying vec3 vNormal;\",\r\n    \"   varying vec3 vWorldPosition;\",\r\n    \"   varying vec3 vViewPosition;\",\r\n    \"#endif\",\r\n\r\n    \"#ifdef USE_ENVMAP\",\r\n    \"   uniform sampler2D uEnvMap;\",//环境贴图\r\n    \"   uniform float uReflectivity;\",//反射率\r\n    \"   uniform mat4 uViewMatrix;\",//环境贴图片元里也需要\r\n    \"   varying vec3 vReflect;\",\r\n    '#endif',\r\n\r\n\r\n    //灯光参数\r\n    '#ifdef USE_LIGHT',\r\n    //计算镜面反射系数，前两个参数都应该是标准化过的\r\n    \"   float calcSpecular(vec3 lightDir, vec3 viewDir, vec3 normal) {\",\r\n    \"      vec3 halfwayDir = normalize(lightDir + viewDir);\",//用半程向量\r\n    \"      float spec = pow(max(dot(normal, halfwayDir), 0.0), 32.0);\",\r\n    \"      return spec;\",\r\n    \"   }\",\r\n    //点光源参数\r\n    `   #if ${shaderReplaceStr.POINT_LIGHTS_NUM} > 0`,\r\n    \"      #define saturate(a) clamp( a, 0.0, 1.0 )\",\r\n    \"      float calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\",\r\n    \"         if ( decayExponent > 0.0 ) {\",\r\n    \"            return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\",\r\n    \"         }\",\r\n    \"         return 1.0;\",\r\n    \"      }\",\r\n\r\n    \"      struct PointLight {\",\r\n    \"         vec3 color;\",//光源颜色\r\n    \"         vec3 position;\",//点光源位置\r\n    \"         float distance;\",//最大光源距离\r\n    \"         float decay;\",//衰减系数，默认1，最佳2\r\n    \"      };\",\r\n    `      uniform PointLight pointLights[${shaderReplaceStr.POINT_LIGHTS_NUM}];`,\r\n    \"   #endif\",\r\n\r\n    //方向光参数\r\n    `   #if ${shaderReplaceStr.DIR_LIGHTS_NUM} > 0`,\r\n    \"      struct DirectionalLight {\",//反向光不会衰减\r\n    \"         vec3 direction;\",\r\n    \"         vec3 color;\",\r\n    \"      };\",\r\n    `      uniform DirectionalLight directionalLights[${shaderReplaceStr.DIR_LIGHTS_NUM}];`,\r\n    \"   #endif\",\r\n\r\n    //环境光\r\n    \"   uniform vec3 uAmbientLightColor;\",//环境光颜色，多个环境光都是一起计算好传入的，不循环计算\r\n\r\n    '#endif',\r\n\r\n    //雾化声明量\r\n    '#ifdef USE_FOG',\r\n    '   uniform vec3 uFogColor;',\r\n    '   varying float vFogDepth;',\r\n    // '   uniform float uFogDensity;',\r\n    '   uniform float uFogNear;',\r\n    '   uniform float uFogFar;',\r\n    '#endif',\r\n\r\n    \"void main() {\",\r\n    //颜色计算，通用\r\n    \"   vec4 color = vec4( uMatColor, uMatAlpha );\",\r\n    //纹理颜色\r\n    \"   #ifdef USE_MAP\",\r\n    \"      vec4 mapColor = texture2D( uMap, vTextureCoord );\",\r\n    \"      color *= mapColor;\",\r\n    \"   #endif\",\r\n    //计算顶点颜色\r\n    \"   #ifdef USE_VERTEXCOLOR\",\r\n    \"      color *= vec4(vColor,1.0);\",\r\n    \"   #endif\",\r\n\r\n    \"   vec3 colorRgb = color.rgb;\",\r\n    //光照颜色计算\r\n    '   #ifdef USE_LIGHT',\r\n    \"      vec3 totalDiffuseLight = vec3( 0.0 );\",\r\n    \"      vec3 totalSpecularLight = vec3( 0.0 );\",\r\n    \"      vec3 viewDir = normalize(vViewPosition);\",// 计算观察方向向量\r\n    \"      vec3 lightDirection;\",//光照方向\r\n    \"      float diffuse;\",//漫反射系数\r\n    \"      float specular;\",//镜面反射系数  //到时改成乘自己的镜面反射颜色\r\n    //计算点光源\r\n    `      #if ${shaderReplaceStr.POINT_LIGHTS_NUM} > 0`,\r\n    \"         float attenuation;\",//\r\n    `         for ( int i = 0; i < ${shaderReplaceStr.POINT_LIGHTS_NUM}; i ++ ) {`,\r\n    //漫反射\r\n    \"            lightDirection = pointLights[i].position + vViewPosition;\", //-vWorldPosition\r\n    \"            attenuation = calcLightAttenuation( length( lightDirection ), pointLights[ i ].distance, pointLights[ i ].decay );\",\r\n    \"            lightDirection = normalize(lightDirection);\",\r\n    \"            diffuse = max( dot( vNormal, lightDirection ), 0.0 );\",\r\n    // \"            float pointDiffuseWeightHalf = max( 0.5 * dot( vNormal, lightDirection ) + 0.5, 0.0 );\",\r\n    // \"            vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), vec3(0.75, 0.375, 0.1875) );\",\r\n    \"            totalDiffuseLight += pointLights[i].color * (diffuse * attenuation);\",\r\n\r\n    //镜面反射\r\n    // \"            vec3 reflectDir = reflect(-lightDirection, vNormal);\",// 计算反射方向向量\r\n    // \"            float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32.0);\",//发散系数待定\r\n    \"            specular = calcSpecular(lightDirection,viewDir,vNormal);\",\r\n    \"            totalSpecularLight += pointLights[i].color *(specular * attenuation);\",//反射强度系数待定\r\n    \"         }\",\r\n    \"      #endif\",\r\n\r\n    //计算方向光\r\n    `      #if ${shaderReplaceStr.DIR_LIGHTS_NUM} > 0`,\r\n    `         for( int i = 0; i < ${shaderReplaceStr.DIR_LIGHTS_NUM}; i++ ) {`,\r\n    //漫反射\r\n    \"            lightDirection = directionalLights[ i ].direction;\",\r\n    \"            diffuse = max( dot( vNormal, lightDirection ), 0.0 );\",\r\n    // \"            float dirDiffuseWeightHalf = max( 0.5 * dot( vNormal, dirVector ) + 0.5, 0.0 );\",\r\n    // \"            vec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), vec3(0.75, 0.375, 0.1875) );\",\r\n    \"            totalDiffuseLight += directionalLights[ i ].color * diffuse;\",\r\n\r\n    //镜面反射，貌似没有，\r\n    // \"            vec3 reflectDir1 = reflect(-directionalLights[ i ].direction, vNormal);\",//待测试，是否加负号\r\n    // \"            float spec1 = pow(max(dot(viewDir, reflectDir1), 0.0), 32.0);\",\r\n    \"            specular = calcSpecular(lightDirection,viewDir,vNormal);\",\r\n    \"            totalSpecularLight += directionalLights[i].color * specular;\",\r\n\r\n    \"         }\",\r\n    \"      #endif\",\r\n\r\n    //计算环境光颜色，是否要乘材质本身颜色，待定，效果待调整，镜面反射是否要乘color.rgb，\r\n    \"      colorRgb = (totalDiffuseLight + uAmbientLightColor + totalSpecularLight) * colorRgb;\",\r\n    '   #endif',\r\n    //计算环境贴图\r\n    '   #ifdef USE_ENVMAP',\r\n    //这种情况，环境贴图有问题，不随相机改变\r\n    // '\t   vec3 reflectView = normalize( ( uViewMatrix * vec4( normalize( vReflect ), 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );',\r\n    // '\t   vec2 envUv =  reflectView.xy * 0.5 + 0.5;',\r\n    // '      envUv.y = 1.0- envUv.y;',//需要倒一下y\r\n    //换种方式计算\r\n    '      vec2 envUv;',\r\n    \"      vec3 reflectVec = normalize( vReflect );\",\r\n    \"      envUv.y =0.5 - asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * 0.31830988618;\",//1/PI\r\n    \"      envUv.x = atan( reflectVec.z, reflectVec.x ) * 0.15915494 + 0.5;\",//1/PI/2\r\n    //按照球坐标系计算，也正确，但是上面更简洁\r\n    // 'vec3  rn=  normalize( vReflect );',\r\n    // 'float l= atan(rn.x/rn.z);',//经度\r\n    // 'float b = atan(rn.y/pow(1.0-rn.y*rn.y+0.001,0.5));',//纬度\r\n    // \"const float pp = 3.1415926;\",\r\n    // \"if(rn.z == 0.0){\",\r\n    //    \"l = sign(rn.x)*pp*0.5;\",\r\n    // \"}else if(rn.z<0.0){\",\r\n    //    \" l+= sign(rn.x)*pp;\",\r\n    // '}',\r\n    // 'l = l/pp*0.5+0.25;',\r\n    // 'l += step(0.0,-l);',\r\n    // 'vec2 envUv = vec2(l,1.0-(b/3.1415926+0.5));',\r\n\r\n    '\t   vec4 envColor = texture2D( uEnvMap, envUv );',\r\n    '      #ifdef ENVMAP_BLENDING_MULTIPLY',\r\n    '         colorRgb = mix(colorRgb, colorRgb * envColor.xyz,  uReflectivity);',\r\n    '      #elif defined( ENVMAP_BLENDING_MIX )',\r\n    '         colorRgb = mix( colorRgb, envColor.xyz,   uReflectivity );',\r\n    '      #elif defined( ENVMAP_BLENDING_ADD )',\r\n    '         colorRgb += envColor.xyz  * uReflectivity;',\r\n    '      #endif',\r\n    '   #endif',\r\n    '   gl_FragColor = vec4( colorRgb, color.a );',\r\n    //雾化处理\r\n    '#ifdef USE_FOG',\r\n    // '   float fogFactor = 1.0 - clamp( exp2( - uFogDensity * uFogDensity * vFogDepth * vFogDepth * 1.442695 ), 0.0, 1.0 );',\r\n    '   float fogFactor = smoothstep( uFogNear, uFogFar, vFogDepth );',\r\n    '   gl_FragColor.rgb = mix( gl_FragColor.rgb, uFogColor, fogFactor );',\r\n    '#endif',\r\n    \"}\"\r\n].join(\"\\n\")\r\n\r\n\r\n\r\n","\r\nexport { compileProgram } from './compileProgram';\r\nexport { defaultValue } from './defaultValue';\r\nexport { extractAttributes } from './extractAttributes';\r\nexport { extractUniforms } from './extractUniforms';\r\nexport { generateUniformAccessObject } from './generateUniformAccessObject';\r\nexport { setPrecision } from './setPrecision';\r\nexport { mapSize } from './mapSize';\r\nexport { mapType } from './mapType';\r\n\r\n\r\n","import { GLShader } from \"../../glCore\";\r\n\r\nexport const vertex =\r\n    `uniform mat4 uLightSpaceMatrix;\r\nuniform mat4 uModelMatrix;\r\nvoid main() {\r\n    gl_Position = uLightSpaceMatrix * uModelMatrix * vec4( aPosition, 1.0 );\r\n}`;\r\nexport const fragment =\r\n    `void main() {\r\n    // gl_FragDepth = gl_FragCoord.z;\r\n}`\r\n\r\nexport class ShadowShader extends GLShader {\r\n    constructor(gl: WebGLRenderingContext) {\r\n        super(gl, vertex, fragment)\r\n    }\r\n}","\r\n\r\nexport * from \"./GLTFLoader\";","import { EventDispatcher } from \"../../2d/events\";\r\nimport { GlobalLoader } from \"../../2d/loader\";\r\nimport { rgb2hex, getEnv, decodeText, ArrayBufferToBase64 } from \"../../2d/utils\";\r\nimport { LightMaterial } from \"../materials/LightMaterial\";\r\nimport { Geometry } from \"../Geometry\";\r\nimport { Texture } from \"../../2d/texture\";\r\nimport { Scene3D } from \"../Scene3D\";\r\nimport { Object3D } from \"../Object3D\";\r\nimport { BaseMaterial, BaseMaterialParamsInt, RenderSideType } from \"../materials/BaseMaterial\";\r\nimport { Mesh3D } from \"../Mesh3D\";\r\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\r\nimport { RAD_TO_DEG } from \"../../2d/const\";\r\nimport { Matrix4 } from \"..\";\r\nimport { arraySlice } from \"../animation/utils\";\r\nimport { InterpolateSmooth, InterpolateLinear, InterpolateDiscrete } from \"../animation/utils\";\r\n\r\nimport { AnimationType3D, AnimationTrack3D } from \"../animation/AnimationTrack3D\";\r\n// import { AnimationClip3D } from \"../animation/AnimationClip3D\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { SkinnedMesh3D } from \"../bones/SkinnedMesh3D\";\r\nimport { Skeleton3D } from \"../bones/Skeleton3D\";\r\nimport { Bone3D } from \"../bones/Bone3D\";\r\nimport { AnimationClip } from \"../../2d/AnimationClip\";\r\nimport { AnimationManager } from \"../../2d/AnimationManager\";\r\n\r\n// var THREE: any = {}\r\n/* BINARY EXTENSION */\r\n\r\nvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\nvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';//这个用到了\r\nvar BINARY_EXTENSION_HEADER_LENGTH = 12;\r\nvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\r\n\r\n/*********************************/\r\n/********** EXTENSIONS ***********/\r\n/*********************************/\r\n\r\nvar EXTENSIONS = {\r\n\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\r\n\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\r\n\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\r\n\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\r\n\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\r\n};\r\n\r\n/*********************************/\r\n/********** INTERNALS ************/\r\n/*********************************/\r\n\r\n/* CONSTANTS */\r\n\r\nvar WEBGL_CONSTANTS = {\r\n\tFLOAT: 5126,\r\n\t//FLOAT_MAT2: 35674,\r\n\tFLOAT_MAT3: 35675,\r\n\tFLOAT_MAT4: 35676,\r\n\tFLOAT_VEC2: 35664,\r\n\tFLOAT_VEC3: 35665,\r\n\tFLOAT_VEC4: 35666,\r\n\tLINEAR: 9729,\r\n\tREPEAT: 10497,\r\n\tSAMPLER_2D: 35678,\r\n\tPOINTS: 0,\r\n\tLINES: 1,\r\n\tLINE_LOOP: 2,\r\n\tLINE_STRIP: 3,\r\n\tTRIANGLES: 4,\r\n\tTRIANGLE_STRIP: 5,\r\n\tTRIANGLE_FAN: 6,\r\n\tUNSIGNED_BYTE: 5121,\r\n\tUNSIGNED_SHORT: 5123\r\n};\r\n\r\n\r\nvar WEBGL_COMPONENT_TYPES = {\r\n\t5120: Int8Array,\r\n\t5121: Uint8Array,\r\n\t5122: Int16Array,\r\n\t5123: Uint16Array,\r\n\t5125: Uint32Array,\r\n\t5126: Float32Array\r\n};\r\n\r\n\r\nvar WEBGL_TYPE_SIZES = {\r\n\t'SCALAR': 1,\r\n\t'VEC2': 2,\r\n\t'VEC3': 3,\r\n\t'VEC4': 4,\r\n\t'MAT2': 4,\r\n\t'MAT3': 9,\r\n\t'MAT4': 16\r\n};\r\n\r\n//暂时没用，以后改成和three一样的有用\r\nvar ATTRIBUTES = {\r\n\tPOSITION: 'position',\r\n\tNORMAL: 'normal',\r\n\tTEXCOORD_0: 'uv',\r\n\tTEXCOORD0: 'uv', // deprecated\r\n\tTEXCOORD: 'uv', // deprecated\r\n\tTEXCOORD_1: 'uv2',\r\n\tCOLOR_0: 'color',\r\n\tCOLOR0: 'color', // deprecated\r\n\tCOLOR: 'color', // deprecated\r\n\tWEIGHTS_0: 'skinWeight',\r\n\tWEIGHT: 'skinWeight', // deprecated\r\n\tJOINTS_0: 'skinIndex',\r\n\tJOINT: 'skinIndex' // deprecated\r\n};\r\n\r\n/**\r\n * 变形枚举\r\n */\r\nvar PATH_PROPERTIES = {\r\n\tscale: 'scale',\r\n\ttranslation: 'position',\r\n\trotation: 'quaternion',\r\n\tweights: 'morphTargetInfluences',\r\n\tposition: \"position\"\r\n};\r\n\r\n/**\r\n * 补间类型，暂时只有线性的InterpolateLinear\r\n */\r\nvar INTERPOLATION = {\r\n\tCUBICSPLINE: InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\r\n\t// KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\r\n\t// using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\r\n\t// See KeyframeTrack.optimize() for the detail.\r\n\tLINEAR: InterpolateLinear,\r\n\tSTEP: InterpolateDiscrete\r\n};\r\n\r\nexport interface GltfData {\r\n\tscene: Scene3D,\r\n\tscenes: Scene3D[],\r\n\tcameras: Camera[],\r\n\tanimations: AnimationClip[],\r\n\tanimationManager: AnimationManager,\r\n\tasset: { generator: string, version: string },\r\n\tparser: GLTFParser,\r\n\t// userData: {}\r\n}\r\n/**\r\n * 直接按函数导出，不用类，\r\n * TODO 后续是否考虑优化，gltf格式其实不需要用二进制解析，再说吧，就怕后缀能修改，\r\n * @param url \r\n * @param onLoad \r\n * @param onError \r\n */\r\nexport function loadGltf(\r\n\turl: string,\r\n\tonLoad: (gltf: GltfData) => void,\r\n\tonError: (err: any) => void\r\n) {\r\n\tlet callback = (s: boolean, res: any) => {\r\n\t\tif (s) {//得到二进制数据\r\n\t\t\ttry {\r\n\t\t\t\tvar content: string;\r\n\t\t\t\tvar extensions = {};\r\n\t\t\t\tif (typeof res === 'string') {\r\n\t\t\t\t\tcontent = res;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar magic = decodeText(new Uint8Array(res, 0, 4));\r\n\t\t\t\t\tif (magic === BINARY_EXTENSION_HEADER_MAGIC) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\textensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(res);\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tif (onError) onError(error);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontent = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontent = decodeText(new Uint8Array(res));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar json = JSON.parse(content);\r\n\t\t\t\t// console.log(json)\r\n\t\t\t\tif (json.asset === undefined || json.asset.version[0] < 2) {\r\n\t\t\t\t\tonError && onError(\"版本格式有问题\")\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar parser = new GLTFParser(json, extensions);\r\n\r\n\t\t\t\tparser.parse(function (scene, scenes, cameras, animations, json) {\r\n\t\t\t\t\tconst obj: any = {\r\n\t\t\t\t\t\tscene,\r\n\t\t\t\t\t\tscenes,\r\n\t\t\t\t\t\tcameras,\r\n\t\t\t\t\t\tanimations,\r\n\t\t\t\t\t\tasset: json.asset,\r\n\t\t\t\t\t\tparser,\r\n\t\t\t\t\t\t// userData: {}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//有动画，创建一个管理器\r\n\t\t\t\t\tif (animations && animations.length) obj.animationManager = new AnimationManager(animations);\r\n\t\t\t\t\tonLoad(obj)\r\n\t\t\t\t}, onError);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tonError && onError(e);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tonError && onError(res)\r\n\t\t}\r\n\t}\r\n\t// if (getEnv() == \"tb\") {\r\n\t// \tGlobalLoader.tbLoad(callback, url, \"ArrayBuffer\")\r\n\t// } else {\r\n\t// \tGlobalLoader.loadRawWeb(callback, url, \"arraybuffer\")\r\n\t// }\r\n\tGlobalLoader.loadAB(callback, url);\r\n}\r\n/**\r\n * 去掉了除mesh和node以外的所有东西（骨骼，线等都没有）\r\n * 动画需要烘焙打点\r\n */\r\n// export class GLTFLoader extends EventDispatcher {\r\n// \tconstructor() {//anonymous\r\n// \t\tsuper();\r\n// \t}\r\n// \tload(\r\n// \t\turl: string,\r\n// \t\tonLoad: (gltf) => void,\r\n// \t\tonError: (err: any) => void\r\n// \t) {\r\n// \t\tvar scope = this;\r\n\r\n// \t\tlet callback = (s: boolean, res: any) => {\r\n// \t\t\tif (s) {//得到二进制数据\r\n// \t\t\t\ttry {\r\n// \t\t\t\t\tscope.parse(res, function (gltf) {\r\n// \t\t\t\t\t\tonLoad(gltf);\r\n// \t\t\t\t\t}, onError);\r\n// \t\t\t\t} catch (e) {\r\n// \t\t\t\t\tonError(e);\r\n// \t\t\t\t}\r\n// \t\t\t} else {\r\n// \t\t\t\tonError && onError(res)\r\n// \t\t\t}\r\n// \t\t}\r\n// \t\tif (getEnv() == \"tb\") {\r\n// \t\t\tGlobalLoader.tbLoad(callback, url, \"ArrayBuffer\")\r\n// \t\t} else {\r\n// \t\t\tGlobalLoader.loadRawWeb(callback, url, \"arraybuffer\")\r\n// \t\t}\r\n// \t}\r\n\r\n// \tparse(data: any, onLoad: (res: any) => void, onError: (err: any) => void) {\r\n// \t\tvar content: string;\r\n// \t\tvar extensions = {};\r\n// \t\tif (typeof data === 'string') {\r\n// \t\t\tcontent = data;\r\n// \t\t} else {\r\n// \t\t\tvar magic = decodeText(new Uint8Array(data, 0, 4));\r\n// \t\t\tif (magic === BINARY_EXTENSION_HEADER_MAGIC) {\r\n// \t\t\t\ttry {\r\n// \t\t\t\t\textensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\r\n// \t\t\t\t} catch (error) {\r\n// \t\t\t\t\tif (onError) onError(error);\r\n// \t\t\t\t\treturn;\r\n// \t\t\t\t}\r\n// \t\t\t\tcontent = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\r\n// \t\t\t} else {\r\n// \t\t\t\tcontent = decodeText(new Uint8Array(data));\r\n// \t\t\t}\r\n// \t\t}\r\n\r\n// \t\tvar json = JSON.parse(content);\r\n\r\n// \t\t// console.log(json)\r\n\r\n// \t\tif (json.asset === undefined || json.asset.version[0] < 2) {\r\n// \t\t\tonError && onError(\"版本格式有问题\")\r\n// \t\t\treturn;\r\n// \t\t}\r\n\r\n\r\n// \t\tvar parser = new GLTFParser(json, extensions);\r\n\r\n// \t\tparser.parse(function (scene, scenes, cameras, animations, json) {\r\n\r\n// \t\t\tvar glTF = {\r\n// \t\t\t\tscene,\r\n// \t\t\t\tscenes,\r\n// \t\t\t\tcameras,\r\n// \t\t\t\tanimations,\r\n// \t\t\t\tasset: json.asset,\r\n// \t\t\t\tparser,\r\n// \t\t\t\tuserData: {}\r\n// \t\t\t};\r\n\r\n// \t\t\t// addUnknownExtensionsToUserData(extensions, glTF, json);\r\n// \t\t\t// console.log(22222)\r\n// \t\t\tonLoad(glTF);\r\n\r\n// \t\t}, onError);\r\n\r\n// \t}\r\n// }\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n */\r\nfunction createDefaultMaterial() {\r\n\t// return new THREE.MeshStandardMaterial({\r\n\t// \tcolor: 0xFFFFFF,\r\n\t// \temissive: 0x000000,\r\n\t// \tmetalness: 1,\r\n\t// \troughness: 1,\r\n\t// \ttransparent: false,\r\n\t// \tdepthTest: true,\r\n\t// \tside: THREE.FrontSide\r\n\t// });\r\n\treturn new LightMaterial({\r\n\t\tcolor: 0xFFFFFF,\r\n\t\tside: 0\r\n\t})\r\n\r\n}\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n *\r\n * @param {THREE.BufferGeometry} geometry\r\n * @param {Array<GLTF.Target>} targets\r\n * @param {Array<THREE.BufferAttribute>} accessors\r\n */\r\nfunction addMorphTargets(geometry: Geometry, targets, accessors) {\r\n\r\n\tvar hasMorphPosition = false;\r\n\tvar hasMorphNormal = false;\r\n\r\n\tfor (var i = 0, il = targets.length; i < il; i++) {\r\n\r\n\t\tvar target = targets[i];\r\n\r\n\t\tif (target.POSITION !== undefined) hasMorphPosition = true;\r\n\t\tif (target.NORMAL !== undefined) hasMorphNormal = true;\r\n\r\n\t\tif (hasMorphPosition && hasMorphNormal) break;\r\n\r\n\t}\r\n\r\n\tif (!hasMorphPosition && !hasMorphNormal) return;\r\n\r\n\tvar morphPositions = [];\r\n\tvar morphNormals = [];\r\n\r\n\tfor (var i = 0, il = targets.length; i < il; i++) {\r\n\r\n\t\tvar target = targets[i];\r\n\t\tvar attributeName = 'morphTarget' + i;\r\n\r\n\t\tif (hasMorphPosition) {\r\n\r\n\t\t\t// Three.js morph position is absolute value. The formula is\r\n\t\t\t//   basePosition\r\n\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\r\n\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\r\n\t\t\t//     ...\r\n\t\t\t// while the glTF one is relative\r\n\t\t\t//   basePosition\r\n\t\t\t//     + weight0 * glTFmorphPosition0\r\n\t\t\t//     + weight1 * glTFmorphPosition1\r\n\t\t\t//     ...\r\n\t\t\t// then we need to convert from relative to absolute here.\r\n\t\t\tlet mPostions;\r\n\t\t\tif (target.POSITION !== undefined) {\r\n\t\t\t\tmPostions = [];\r\n\t\t\t\t// Cloning not to pollute original accessor\r\n\t\t\t\tvar positionAttribute = cloneBufferAttribute(accessors[target.POSITION]);\r\n\t\t\t\tpositionAttribute.name = attributeName;\r\n\r\n\t\t\t\tvar position = geometry._vertices;\r\n\r\n\t\t\t\tfor (var j = 0, jl = positionAttribute.count; j < jl; j++) {\r\n\r\n\t\t\t\t\t// positionAttribute.setXYZ(\r\n\t\t\t\t\t// \tj,\r\n\t\t\t\t\t// \tpositionAttribute.getX(j) + position.getX(j),\r\n\t\t\t\t\t// \tpositionAttribute.getY(j) + position.getY(j),\r\n\t\t\t\t\t// \tpositionAttribute.getZ(j) + position.getZ(j)\r\n\t\t\t\t\t// );\r\n\r\n\t\t\t\t\tmPostions.push(\r\n\t\t\t\t\t\tpositionAttribute.getX(j) + position[j * 3],\r\n\t\t\t\t\t\tpositionAttribute.getY(j) + position[j * 3 + 1],\r\n\t\t\t\t\t\tpositionAttribute.getZ(j) + position[j * 3 + 2],\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//用同一个数组吧，一个修改都改\r\n\t\t\t\tmPostions = geometry._vertices;\r\n\t\t\t}\r\n\t\t\tmorphPositions.push(mPostions);\r\n\t\t}\r\n\r\n\t\tif (hasMorphNormal) {\r\n\r\n\t\t\t// see target.POSITION's comment\r\n\t\t\tlet mNormals;\r\n\t\t\t// var normalAttribute;\r\n\r\n\t\t\tif (target.NORMAL !== undefined) {\r\n\t\t\t\tmNormals = []\r\n\t\t\t\tvar normalAttribute = cloneBufferAttribute(accessors[target.NORMAL]);\r\n\t\t\t\tnormalAttribute.name = attributeName;\r\n\r\n\t\t\t\t// var normal = geometry.attributes.normal;\r\n\t\t\t\tvar normal = geometry._normals;\r\n\r\n\t\t\t\tfor (var j = 0, jl = normalAttribute.count; j < jl; j++) {\r\n\r\n\t\t\t\t\t// normalAttribute.setXYZ(\r\n\t\t\t\t\t// \tj,\r\n\t\t\t\t\t// \tnormalAttribute.getX(j) + normal.getX(j),\r\n\t\t\t\t\t// \tnormalAttribute.getY(j) + normal.getY(j),\r\n\t\t\t\t\t// \tnormalAttribute.getZ(j) + normal.getZ(j)\r\n\t\t\t\t\t// );\r\n\t\t\t\t\tmNormals.push(\r\n\t\t\t\t\t\tnormalAttribute.getX(j) + normal[j * 3],\r\n\t\t\t\t\t\tnormalAttribute.getY(j) + normal[j * 3 + 1],\r\n\t\t\t\t\t\tnormalAttribute.getZ(j) + normal[j * 3 + 2],\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmNormals = geometry._normals;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmorphNormals.push(mNormals);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t//morphPositions是个positionAttribute的数组，我那边应该只需要数据，步长啥的都自己干\r\n\tif (hasMorphPosition) geometry._morphPositions = morphPositions;\r\n\tif (hasMorphNormal) geometry._morphNormals = morphNormals;\r\n\r\n}\r\n\r\n\r\nfunction cloneBufferAttribute(attribute) {\r\n\r\n\tif (attribute.isInterleavedBufferAttribute) {\r\n\r\n\t\tvar count = attribute.count;\r\n\t\tvar itemSize = attribute.itemSize;\r\n\t\tvar array = attribute.array.slice(0, count * itemSize);\r\n\r\n\t\tfor (var i = 0; i < count; ++i) {\r\n\r\n\t\t\tarray[i * itemSize] = attribute.getX(i);\r\n\t\t\tif (itemSize >= 2) array[i * itemSize + 1] = attribute.getY(i);\r\n\t\t\tif (itemSize >= 3) array[i * itemSize + 2] = attribute.getZ(i);\r\n\t\t\tif (itemSize >= 4) array[i * itemSize + 3] = attribute.getW(i);\r\n\r\n\t\t}\r\n\r\n\t\treturn new BufferAttribute(array, itemSize, attribute.normalized);\r\n\r\n\t}\r\n\r\n\treturn attribute.clone();\r\n\r\n}\r\n\r\n/**\r\n * @param {THREE.Mesh} mesh\r\n * @param {GLTF.Mesh} meshDef\r\n */\r\nfunction updateMorphTargets(mesh, meshDef) {\r\n\r\n\tmesh.updateMorphTargets();\r\n\r\n\tif (meshDef.weights !== undefined) {\r\n\r\n\t\tfor (var i = 0, il = meshDef.weights.length; i < il; i++) {\r\n\r\n\t\t\tmesh.morphTargetInfluences[i] = meshDef.weights[i];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// .extras has user-defined data, so check that .extras.targetNames is an array.\r\n\tif (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\r\n\r\n\t\tvar targetNames = meshDef.extras.targetNames;\r\n\r\n\t\tif (mesh.morphTargetInfluences.length === targetNames.length) {\r\n\r\n\t\t\tmesh.morphTargetDictionary = {};\r\n\r\n\t\t\tfor (var i = 0, il = targetNames.length; i < il; i++) {\r\n\r\n\t\t\t\tmesh.morphTargetDictionary[targetNames[i]] = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction isPrimitiveEqual(a, b) {\r\n\r\n\tif (a.indices !== b.indices) {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\treturn isObjectEqual(a.attributes, b.attributes);\r\n\r\n}\r\n\r\nfunction isObjectEqual(a, b) {\r\n\r\n\tif (Object.keys(a).length !== Object.keys(b).length) return false;\r\n\r\n\tfor (var key in a) {\r\n\r\n\t\tif (a[key] !== b[key]) return false;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction isArrayEqual(a, b) {\r\n\r\n\tif (a.length !== b.length) return false;\r\n\r\n\tfor (var i = 0, il = a.length; i < il; i++) {\r\n\r\n\t\tif (a[i] !== b[i]) return false;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction getCachedGeometry(cache, newPrimitive) {\r\n\r\n\tfor (var i = 0, il = cache.length; i < il; i++) {\r\n\r\n\t\tvar cached = cache[i];\r\n\r\n\t\tif (isPrimitiveEqual(cached.primitive, newPrimitive)) return cached.promise;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\nfunction getCachedCombinedGeometry(cache, geometries) {\r\n\r\n\tfor (var i = 0, il = cache.length; i < il; i++) {\r\n\r\n\t\tvar cached = cache[i];\r\n\r\n\t\tif (isArrayEqual(geometries, cached.baseGeometries)) return cached.geometry;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\nfunction getCachedMultiPassGeometry(cache, geometry, primitives) {\r\n\r\n\tfor (var i = 0, il = cache.length; i < il; i++) {\r\n\r\n\t\tvar cached = cache[i];\r\n\r\n\t\tif (geometry === cached.baseGeometry && isArrayEqual(primitives, cached.primitives)) return cached.geometry;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n\r\n/**\r\n * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\r\n * Returns true if all primitives use the same attributes/morphAttributes/mode\r\n * and also have index. Otherwise returns false.\r\n *\r\n * @param {Array<GLTF.Primitive>} primitives\r\n * @return {Boolean}\r\n */\r\nfunction isMultiPassGeometry(primitives) {\r\n\r\n\tif (primitives.length < 2) return false;\r\n\r\n\tvar primitive0 = primitives[0];\r\n\tvar targets0 = primitive0.targets || [];\r\n\r\n\tif (primitive0.indices === undefined) return false;\r\n\r\n\tfor (var i = 1, il = primitives.length; i < il; i++) {\r\n\r\n\t\tvar primitive = primitives[i];\r\n\r\n\t\tif (primitive0.mode !== primitive.mode) return false;\r\n\t\tif (primitive.indices === undefined) return false;\r\n\t\tif (!isObjectEqual(primitive0.attributes, primitive.attributes)) return false;\r\n\r\n\t\tvar targets = primitive.targets || [];\r\n\r\n\t\tif (targets0.length !== targets.length) return false;\r\n\r\n\t\tfor (var j = 0, jl = targets0.length; j < jl; j++) {\r\n\r\n\t\t\tif (!isObjectEqual(targets0[j], targets[j])) return false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\n\r\nclass GLTFParser {\r\n\r\n\t//缓存\r\n\tcache = new GLTFRegistry();\r\n\t// BufferGeometry caching\r\n\tprimitiveCache = [];\r\n\tmultiplePrimitivesCache = [];\r\n\tmultiPassGeometryCache = [];\r\n\tconstructor(\r\n\t\tpublic json: any = {},\r\n\t\tpublic extensions = {},\r\n\t\tpublic options = {}\r\n\t) {\r\n\t\t//下面两个加载器暂时不需要\r\n\t\t// this.textureLoader = new THREE.TextureLoader(this.options.manager);\r\n\t\t// this.textureLoader.setCrossOrigin(this.options.crossOrigin);\r\n\r\n\t\t// this.fileLoader = new THREE.FileLoader(this.options.manager);\r\n\t\t// this.fileLoader.setResponseType('arraybuffer');\r\n\t}\r\n\tparse(onLoad, onError) {\r\n\t\tvar json = this.json;\r\n\r\n\t\t// Clear the loader cache\r\n\t\tthis.cache.removeAll();\r\n\r\n\t\t// Mark the special nodes/meshes in json for efficient parse\r\n\t\tthis.markDefs();\r\n\r\n\t\t// Fire the callback on complete\r\n\t\tthis.getMultiDependencies([\r\n\r\n\t\t\t'scene',\r\n\t\t\t'animation',//先去掉动画，加载模型\r\n\t\t\t'camera'\r\n\r\n\t\t]).then(function (dependencies) {\r\n\r\n\t\t\tvar scenes = dependencies.scenes || [];\r\n\t\t\tvar scene = scenes[json.scene || 0];\r\n\t\t\tvar animations = dependencies.animations || [];\r\n\t\t\tvar cameras = dependencies.cameras || [];\r\n\r\n\t\t\tonLoad(scene, scenes, cameras, animations, json);\r\n\r\n\t\t}).catch(onError);\r\n\t}\r\n\t/**\r\n\t * Marks the special nodes/meshes in json for efficient parse.\r\n\t */\r\n\tmarkDefs() {\r\n\t\tvar nodeDefs = this.json.nodes || [];\r\n\t\tvar skinDefs = this.json.skins || [];\r\n\t\tvar meshDefs = this.json.meshes || [];\r\n\r\n\t\tvar meshReferences = {};\r\n\t\tvar meshUses = {};\r\n\r\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\r\n\t\t// Object3D. Use the skins' joint references to mark bones.\r\n\t\tfor (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\r\n\r\n\t\t\tvar joints = skinDefs[skinIndex].joints;\r\n\r\n\t\t\tfor (var i = 0, il = joints.length; i < il; i++) {\r\n\r\n\t\t\t\tnodeDefs[joints[i]].isBone = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\r\n\t\t// avoid having more than one THREE.Mesh with the same name, count\r\n\t\t// references and rename instances below.\r\n\t\t//\r\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\r\n\t\tfor (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\r\n\r\n\t\t\tvar nodeDef = nodeDefs[nodeIndex];\r\n\r\n\t\t\tif (nodeDef.mesh !== undefined) {\r\n\r\n\t\t\t\tif (meshReferences[nodeDef.mesh] === undefined) {\r\n\r\n\t\t\t\t\tmeshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmeshReferences[nodeDef.mesh]++;\r\n\r\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\r\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\r\n\t\t\t\t// to mark SkinnedMesh if node has skin.\r\n\t\t\t\tif (nodeDef.skin !== undefined) {\r\n\r\n\t\t\t\t\tmeshDefs[nodeDef.mesh].isSkinnedMesh = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.json.meshReferences = meshReferences;\r\n\t\tthis.json.meshUses = meshUses;\r\n\r\n\t}\r\n\t/**\r\n\t * Requests the specified dependency asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @param {number} index\r\n\t * @return {Promise<Object>}\r\n\t */\r\n\tgetDependency(type: string, index: number): Promise<any> {\r\n\t\tvar cacheKey = type + ':' + index;\r\n\t\tvar dependency = this.cache.get(cacheKey);\r\n\t\tif (!dependency) {\r\n\t\t\tswitch (type) {\r\n\r\n\t\t\t\tcase 'scene':\r\n\t\t\t\t\tdependency = this.loadScene(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'node':\r\n\t\t\t\t\tdependency = this.loadNode(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'mesh':\r\n\t\t\t\t\tdependency = this.loadMesh(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'accessor':\r\n\t\t\t\t\tdependency = this.loadAccessor(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bufferView':\r\n\t\t\t\t\tdependency = this.loadBufferView(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'buffer':\r\n\t\t\t\t\tdependency = this.loadBuffer(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'material':\r\n\t\t\t\t\tdependency = this.loadMaterial(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'texture':\r\n\t\t\t\t\tdependency = this.loadTexture(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'skin':\r\n\t\t\t\t\tdependency = this.loadSkin(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'animation':\r\n\t\t\t\t\tdependency = this.loadAnimation(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'camera':\r\n\t\t\t\t\tdependency = this.loadCamera(index);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('Unknown type: ' + type);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cache.add(cacheKey, dependency);\r\n\r\n\t\t}\r\n\r\n\t\treturn dependency;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all dependencies of the specified type asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @return {Promise<Array<Object>>}\r\n\t */\r\n\tgetDependencies(type: string): Promise<any[]> {\r\n\r\n\t\tvar dependencies = this.cache.get(type);\r\n\r\n\t\tif (!dependencies) {\r\n\r\n\t\t\tvar parser = this;\r\n\t\t\tvar defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\r\n\r\n\t\t\tdependencies = Promise.all(defs.map(function (def, index) {\r\n\r\n\t\t\t\treturn parser.getDependency(type, index);\r\n\r\n\t\t\t}));\r\n\r\n\t\t\tthis.cache.add(type, dependencies);\r\n\r\n\t\t}\r\n\r\n\t\treturn dependencies;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n\t * @param {Array<string>} types\r\n\t * @return {Promise<Object<Array<Object>>>}\r\n\t */\r\n\tgetMultiDependencies(types): Promise<any> {\r\n\r\n\t\tvar results = {};\r\n\t\tvar pendings = [];\r\n\r\n\t\tfor (var i = 0, il = types.length; i < il; i++) {\r\n\r\n\t\t\tvar type = types[i];\r\n\t\t\tvar value = this.getDependencies(type);\r\n\r\n\t\t\tvalue = value.then(function (key, value) {\r\n\r\n\t\t\t\tresults[key] = value;\r\n\r\n\t\t\t}.bind(this, type + (type === 'mesh' ? 'es' : 's')));\r\n\r\n\t\t\tpendings.push(value);\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all(pendings).then(function () {\r\n\r\n\t\t\treturn results;\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * ok\r\n\t * @param {number} bufferIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tloadBuffer(bufferIndex: number): Promise<ArrayBuffer> {\r\n\t\t//基本只需要一次，而且没有bufferDef.uri\r\n\t\tvar bufferDef = this.json.buffers[bufferIndex];\r\n\t\t// var loader = this.fileLoader;\r\n\r\n\t\tif (bufferDef.type && bufferDef.type !== 'arraybuffer') {\r\n\r\n\t\t\tthrow new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\r\n\r\n\t\t}\r\n\r\n\t\t// If present, GLB container is required to be the first buffer.\r\n\t\tif (bufferDef.uri === undefined && bufferIndex === 0) {\r\n\r\n\t\t\treturn Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\r\n\r\n\t\t}\r\n\r\n\t\t//基本不用其他的加载\r\n\t\t// var options = this.options;\r\n\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t//考虑下base64的加载，其他路径的再说\r\n\t\t\t// if (/^data:.*,.*$/i.test(bufferDef.uri)) {\r\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\r\n\t\t\tvar dataUriRegexResult = bufferDef.uri.match(dataUriRegex);\r\n\t\t\tif (dataUriRegexResult) {\r\n\t\t\t\tvar mimeType = dataUriRegexResult[1];\r\n\t\t\t\tvar isBase64 = !!dataUriRegexResult[2];\r\n\t\t\t\tvar data = dataUriRegexResult[3];\r\n\t\t\t\tdata = decodeURIComponent(data);\r\n\t\t\t\tif (isBase64) data = atob(data);//考虑小程序兼容性\r\n\t\t\t\tvar view = new Uint8Array(data.length);\r\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\t\t\tview[i] = data.charCodeAt(i);\r\n\t\t\t\t}\r\n\t\t\t\tresolve(view.buffer)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t// };\r\n\t\t\treject(\"阿三的\")\r\n\t\t\t// loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\r\n\r\n\t\t\t// \treject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\r\n\r\n\t\t\t// });\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n\t * @param {number} bufferViewIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tloadBufferView(bufferViewIndex: number): Promise<ArrayBuffer> {\r\n\r\n\t\tvar bufferViewDef = this.json.bufferViews[bufferViewIndex];\r\n\r\n\t\treturn this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\r\n\r\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\r\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\r\n\t\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n\t * @param {number} accessorIndex\r\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\r\n\t */\r\n\tloadAccessor(accessorIndex: number): Promise<BufferAttribute | InterleavedBufferAttribute> {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar accessorDef = this.json.accessors[accessorIndex];\r\n\r\n\t\tif (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\r\n\r\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\r\n\t\t\t// information about attributes coming from another source (e.g. Draco\r\n\t\t\t// compression extension).\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar pendingBufferViews = [];\r\n\r\n\t\tif (accessorDef.bufferView !== undefined) {\r\n\r\n\t\t\tpendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpendingBufferViews.push(null);\r\n\r\n\t\t}\r\n\r\n\t\tif (accessorDef.sparse !== undefined) {\r\n\r\n\t\t\tpendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\r\n\t\t\tpendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all(pendingBufferViews).then(function (bufferViews) {\r\n\r\n\t\t\tvar bufferView = bufferViews[0];\r\n\r\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\r\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\r\n\r\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n\t\t\tvar itemBytes = elementBytes * itemSize;\r\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\r\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\r\n\t\t\tvar normalized = accessorDef.normalized === true;\r\n\t\t\tvar array, bufferAttribute: BufferAttribute //| InterleavedBufferAttribute;\r\n\r\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\r\n\t\t\tif (byteStride && byteStride !== itemBytes) {\r\n\r\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\r\n\t\t\t\tvar ib = parser.cache.get(ibCacheKey);\r\n\r\n\t\t\t\tif (!ib) {\r\n\r\n\t\t\t\t\t// Use the full buffer if it's interleaved.\r\n\t\t\t\t\tarray = new TypedArray(bufferView);\r\n\r\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\r\n\t\t\t\t\tib = new InterleavedBuffer(array, byteStride / elementBytes);\r\n\r\n\t\t\t\t\tparser.cache.add(ibCacheKey, ib);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// bufferAttribute = new InterleavedBufferAttribute(ib, itemSize, byteOffset / elementBytes, normalized)\r\n\t\t\t\tbufferAttribute = cloneBufferAttribute(new InterleavedBufferAttribute(ib, itemSize, byteOffset / elementBytes, normalized))\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (bufferView === null) {\r\n\r\n\t\t\t\t\tarray = new TypedArray(accessorDef.count * itemSize);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tarray = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbufferAttribute = new BufferAttribute(array, itemSize, normalized);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\r\n\t\t\tif (accessorDef.sparse !== undefined) {\r\n\r\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\r\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\r\n\r\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\r\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\r\n\r\n\t\t\t\tvar sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\r\n\t\t\t\tvar sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\r\n\r\n\t\t\t\tif (bufferView !== null) {\r\n\t\t\t\t\t//@ts-ignore Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\r\n\t\t\t\t\tbufferAttribute.setArray(bufferAttribute.array.slice());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (var i = 0, il = sparseIndices.length; i < il; i++) {\r\n\r\n\t\t\t\t\tvar index = sparseIndices[i];\r\n\r\n\t\t\t\t\tbufferAttribute.setX(index, sparseValues[i * itemSize]);\r\n\t\t\t\t\tif (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\r\n\t\t\t\t\tif (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\r\n\t\t\t\t\tif (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\r\n\t\t\t\t\tif (itemSize >= 5) throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bufferAttribute;\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * ok\r\n\t * @param {number} textureIndex\r\n\t * @return {Promise<Texture>}\r\n\t */\r\n\tloadTexture(textureIndex): Promise<Texture> {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar options = this.options;\r\n\t\t// var textureLoader = this.textureLoader;\r\n\r\n\t\t// var URL = window.URL// || window.webkitURL;\r\n\r\n\t\tvar textureDef = json.textures[textureIndex];\r\n\r\n\t\tvar textureExtensions = textureDef.extensions || {};\r\n\r\n\t\tvar source;\r\n\r\n\t\tif (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\r\n\r\n\t\t\tsource = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tsource = json.images[textureDef.source];\r\n\r\n\t\t}\r\n\r\n\t\tvar sourceURI = source.uri;\r\n\t\t// var isObjectURL = false;\r\n\r\n\t\tif (source.bufferView !== undefined) {\r\n\r\n\t\t\t// Load binary image data from bufferView, if provided.\r\n\r\n\t\t\tsourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\r\n\r\n\t\t\t\t// if (window.arrayBufferToBase64 != undefined) {\r\n\t\t\t\tvar base64 = ArrayBufferToBase64(bufferView);\r\n\t\t\t\tvar base64String = `data:${source.mimeType};base64,${base64}`;\r\n\t\t\t\treturn base64String;\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// isObjectURL = true;\r\n\t\t\t\t// var blob = new Blob([bufferView], { type: source.mimeType });\r\n\t\t\t\t// sourceURI = URL.createObjectURL(blob);\r\n\t\t\t\t// return sourceURI;\r\n\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve(sourceURI).then(function (sourceURI) {\r\n\r\n\t\t\t// Load Texture resource.\r\n\r\n\t\t\t// var loader = THREE.Loader.Handlers.get(sourceURI);\r\n\r\n\t\t\t// if (!loader) {\r\n\r\n\t\t\t// \tloader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\r\n\t\t\t// \t\t? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\r\n\t\t\t// \t\t: textureLoader;\r\n\r\n\t\t\t// }\r\n\r\n\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\tGlobalLoader.loadImage((s, image) => {\r\n\t\t\t\t\tif (s) {\r\n\t\t\t\t\t\tresolve(Texture.fromImage(image));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treject()\r\n\t\t\t\t\t}\r\n\t\t\t\t}, resolveURL(sourceURI, \"\"/*options.path*/))\r\n\t\t\t\t// loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\r\n\r\n\t\t\t});\r\n\r\n\t\t}).then(function (texture: Texture) {\r\n\r\n\t\t\t// Clean up resources and configure Texture.\r\n\r\n\t\t\t// if (isObjectURL === true) {\r\n\r\n\t\t\t// \tURL.revokeObjectURL(sourceURI);\r\n\r\n\t\t\t// }\r\n\r\n\t\t\t// texture.flipY = false;\r\n\r\n\t\t\tif (textureDef.name !== undefined) texture[\"name\"] = textureDef.name;\r\n\r\n\t\t\t// Ignore unknown mime types, like DDS files.\r\n\t\t\t// if (source.mimeType in MIME_TYPE_FORMATS) {\r\n\r\n\t\t\t// \ttexture.format = MIME_TYPE_FORMATS[source.mimeType];\r\n\r\n\t\t\t// }\r\n\r\n\t\t\t// var samplers = json.samplers || {};\r\n\t\t\t// var sampler = samplers[textureDef.sampler] || {};\r\n\r\n\t\t\t// texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || THREE.LinearFilter;\r\n\t\t\t// texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || THREE.LinearMipMapLinearFilter;\r\n\t\t\t// texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || THREE.RepeatWrapping;\r\n\t\t\t// texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || THREE.RepeatWrapping;\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Asynchronously assigns a texture to the given material parameters.\r\n\t * @param {Object} materialParams\r\n\t * @param {string} textureName\r\n\t * @param {number} textureIndex\r\n\t * @return {Promise}\r\n\t */\r\n\tassignTexture(materialParams, textureName, textureIndex) {\r\n\r\n\t\treturn this.getDependency('texture', textureIndex).then(function (texture) {\r\n\r\n\t\t\tmaterialParams[textureName] = texture;\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n\t * @param {number} materialIndex\r\n\t * @return {Promise<Material>}\r\n\t */\r\n\tloadMaterial(materialIndex: number): Promise<BaseMaterial> {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\t\tvar materialDef = json.materials[materialIndex];\r\n\r\n\t\tvar materialType;\r\n\t\tvar materialParams: BaseMaterialParamsInt = {};\r\n\t\tvar materialExtensions = materialDef.extensions || {};\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tif (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\r\n\r\n\t\t\t// var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\r\n\t\t\t// materialType = sgExtension.getMaterialType(materialDef);\r\n\t\t\t// pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\r\n\r\n\t\t\t//先将扩展简单处理\r\n\t\t\tmaterialType = LightMaterial;\r\n\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\r\n\t\t\tmaterialParams.color = 0xffffff;\r\n\t\t\tmaterialParams.alpha = 1.0;\r\n\t\t\tif (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\r\n\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\r\n\t\t\t\tmaterialParams.color = rgb2hex(array);\r\n\t\t\t\tmaterialParams.alpha = array[3];\r\n\t\t\t}\r\n\t\t\tif (pbrSpecularGlossiness.diffuseTexture !== undefined) {\r\n\t\t\t\tpending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture.index));\r\n\t\t\t}\r\n\t\t}\r\n\t\t// else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\r\n\r\n\t\t// \tvar kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\r\n\t\t// \tmaterialType = kmuExtension.getMaterialType(materialDef);\r\n\t\t// \tpending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\r\n\r\n\t\t// } //上面这种就简单点，加到下面\r\n\t\telse {\r\n\r\n\t\t\t// Specification:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n\r\n\t\t\tmaterialType = materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT] ? BaseMaterial : LightMaterial//THREE.MeshStandardMaterial;\r\n\r\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\r\n\r\n\t\t\tmaterialParams.color = 0xffffff;\r\n\t\t\tmaterialParams.alpha = 1.0;\r\n\r\n\t\t\t//颜色透明度\r\n\t\t\tif (Array.isArray(metallicRoughness.baseColorFactor)) {\r\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\r\n\t\t\t\tmaterialParams.color = rgb2hex(array)\r\n\t\t\t\tmaterialParams.alpha = array[3];\r\n\t\t\t}\r\n\t\t\t//贴图\r\n\t\t\tif (metallicRoughness.baseColorTexture !== undefined) {\r\n\t\t\t\tpending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture.index));\r\n\t\t\t}\r\n\r\n\t\t\t// materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n\t\t\t// materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n\r\n\t\t\t// if (metallicRoughness.metallicRoughnessTexture !== undefined) {\r\n\r\n\t\t\t// \tvar textureIndex = metallicRoughness.metallicRoughnessTexture.index;\r\n\t\t\t// \tpending.push(parser.assignTexture(materialParams, 'metalnessMap', textureIndex));\r\n\t\t\t// \tpending.push(parser.assignTexture(materialParams, 'roughnessMap', textureIndex));\r\n\r\n\t\t\t// }\r\n\r\n\t\t}\r\n\r\n\t\tif (materialDef.doubleSided === true) {\r\n\r\n\t\t\tmaterialParams.side = RenderSideType.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\t// var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\r\n\r\n\t\t// if (alphaMode === ALPHA_MODES.BLEND) {\r\n\r\n\t\t// \tmaterialParams.transparent = true;\r\n\r\n\t\t// } else {\r\n\r\n\t\t// \tmaterialParams.transparent = false;\r\n\r\n\t\t// \tif (alphaMode === ALPHA_MODES.MASK) {\r\n\r\n\t\t// \t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\r\n\r\n\t\t// \t}\r\n\r\n\t\t// }\r\n\r\n\t\t// if (materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\r\n\r\n\t\t// \tpending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture.index));\r\n\r\n\t\t// \tmaterialParams.normalScale = new THREE.Vector2(1, 1);\r\n\r\n\t\t// \tif (materialDef.normalTexture.scale !== undefined) {\r\n\r\n\t\t// \t\tmaterialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\r\n\r\n\t\t// \t}\r\n\r\n\t\t// }\r\n\r\n\t\t// if (materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\r\n\r\n\t\t// \tpending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture.index));\r\n\r\n\t\t// \tif (materialDef.occlusionTexture.strength !== undefined) {\r\n\r\n\t\t// \t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\r\n\r\n\t\t// \t}\r\n\r\n\t\t// }\r\n\r\n\t\t// if (materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial) {\r\n\r\n\t\t// \tmaterialParams.emissive = new THREE.Color().fromArray(materialDef.emissiveFactor);\r\n\r\n\t\t// }\r\n\r\n\t\t// if (materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\r\n\r\n\t\t// \tpending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture.index));\r\n\r\n\t\t// }\r\n\r\n\t\treturn Promise.all(pending).then(function () {\r\n\r\n\t\t\tvar material: BaseMaterial;\r\n\r\n\t\t\t// if (materialType === THREE.ShaderMaterial) {\r\n\r\n\t\t\t// \tmaterial = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\r\n\r\n\t\t\t// } else {\r\n\t\t\t//@ts-ignore\r\n\t\t\tmaterial = new materialType(materialParams);\r\n\r\n\t\t\t// }\r\n\t\t\t//@ts-ignore\r\n\t\t\tif (materialDef.name !== undefined) material.name = materialDef.name;\r\n\r\n\t\t\t// Normal map textures use OpenGL conventions:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\r\n\t\t\t// if (material.normalScale) {\r\n\r\n\t\t\t// \tmaterial.normalScale.y = - material.normalScale.y;\r\n\r\n\t\t\t// }\r\n\r\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\r\n\t\t\t// if (material.map) material.map.encoding = THREE.sRGBEncoding;\r\n\t\t\t// if (material.emissiveMap) material.emissiveMap.encoding = THREE.sRGBEncoding;\r\n\t\t\t// if (material.specularMap) material.specularMap.encoding = THREE.sRGBEncoding;\r\n\r\n\t\t\t// assignExtrasToUserData(material, materialDef);\r\n\r\n\t\t\t// if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n\t *\r\n\t * Creates BufferGeometries from primitives.\r\n\t * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\r\n\t * Otherwise, returns BufferGeometries without .groups as many as primitives.\r\n\t *\r\n\t * @param {Array<Object>} primitives\r\n\t * @return {Promise<Array<BufferGeometry>>}\r\n\t */\r\n\tloadGeometries(primitives): Promise<Geometry[]> {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar extensions = this.extensions;\r\n\t\tvar cache = this.primitiveCache;\r\n\r\n\t\t// var isMultiPass = isMultiPassGeometry(primitives);\r\n\t\t// var originalPrimitives;\r\n\r\n\t\t// if (isMultiPass) {\r\n\r\n\t\t// \toriginalPrimitives = primitives; // save original primitives and use later\r\n\r\n\t\t// \t// We build a single BufferGeometry with .groups from multiple primitives\r\n\t\t// \t// because all primitives share the same attributes/morph/mode and have indices.\r\n\r\n\t\t// \tprimitives = [primitives[0]];\r\n\r\n\t\t// \t// Sets .groups and combined indices to a geometry later in this method.\r\n\r\n\t\t// }\r\n\r\n\t\treturn this.getDependencies('accessor').then(function (accessors) {\r\n\r\n\t\t\tvar pending = [];\r\n\r\n\t\t\tfor (var i = 0, il = primitives.length; i < il; i++) {\r\n\r\n\t\t\t\tvar primitive = primitives[i];\r\n\r\n\t\t\t\t// See if we've already created this geometry\r\n\t\t\t\tvar cached = getCachedGeometry(cache, primitive);\r\n\r\n\t\t\t\tif (cached) {\r\n\r\n\t\t\t\t\t// Use the cached geometry if it exists\r\n\t\t\t\t\tpending.push(cached);\r\n\r\n\t\t\t\t} else if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\r\n\t\t\t\t\t//暂时没有扩展的\r\n\t\t\t\t\t// Use DRACO geometry if available\r\n\t\t\t\t\t// var geometryPromise = extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\r\n\t\t\t\t\t// \t.decodePrimitive(primitive, parser)\r\n\t\t\t\t\t// \t.then(function (geometry) {\r\n\r\n\t\t\t\t\t// \t\taddPrimitiveAttributes(geometry, primitive, accessors);\r\n\r\n\t\t\t\t\t// \t\treturn geometry;\r\n\r\n\t\t\t\t\t// \t});\r\n\r\n\t\t\t\t\t// cache.push({ primitive: primitive, promise: geometryPromise });\r\n\r\n\t\t\t\t\t// pending.push(geometryPromise);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Otherwise create a new geometry\r\n\t\t\t\t\t// var geometry = new Geometry();\r\n\r\n\t\t\t\t\tvar geometry = addPrimitiveAttributes(primitive, accessors);\r\n\r\n\t\t\t\t\tvar geometryPromise: any = Promise.resolve(geometry);\r\n\r\n\t\t\t\t\t// Cache this geometry\r\n\t\t\t\t\tcache.push({ primitive: primitive, promise: geometryPromise });\r\n\r\n\t\t\t\t\tpending.push(geometryPromise);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Promise.all(pending).then(function (geometries) {\r\n\r\n\t\t\t\t// if (isMultiPass) {\r\n\r\n\t\t\t\t// \tvar baseGeometry = geometries[0];\r\n\r\n\t\t\t\t// \t// See if we've already created this combined geometry\r\n\t\t\t\t// \tvar cache = parser.multiPassGeometryCache;\r\n\t\t\t\t// \tvar cached = getCachedMultiPassGeometry(cache, baseGeometry, originalPrimitives);\r\n\r\n\t\t\t\t// \tif (cached !== null) return [cached.geometry];\r\n\r\n\t\t\t\t// \t// Cloning geometry because of index override.\r\n\t\t\t\t// \t// Attributes can be reused so cloning by myself here.\r\n\r\n\t\t\t\t// \t// NORMAL: 2\r\n\t\t\t\t// \t// POSITION: 1\r\n\t\t\t\t// \t// TEXCOORD_0: 3\r\n\r\n\t\t\t\t// \t//顶点\r\n\t\t\t\t// \tvar _vertices = [];\r\n\r\n\r\n\t\t\t\t// \tvar geometry = new Geometry();\r\n\r\n\t\t\t\t// \tgeometry[\"name\"] = baseGeometry.name;\r\n\t\t\t\t// \tgeometry[\"userData\"] = baseGeometry.userData;\r\n\r\n\t\t\t\t// \tfor (var key in baseGeometry.attributes) geometry.addAttribute(key, baseGeometry.attributes[key]);\r\n\t\t\t\t// \tfor (var key in baseGeometry.morphAttributes) geometry.morphAttributes[key] = baseGeometry.morphAttributes[key];\r\n\r\n\t\t\t\t// \tvar indices = [];\r\n\t\t\t\t// \tvar offset = 0;\r\n\r\n\t\t\t\t// \tfor (var i = 0, il = originalPrimitives.length; i < il; i++) {\r\n\r\n\t\t\t\t// \t\tvar accessor = accessors[originalPrimitives[i].indices];\r\n\r\n\t\t\t\t// \t\tfor (var j = 0, jl = accessor.count; j < jl; j++) indices.push(accessor.array[j]);\r\n\r\n\t\t\t\t// \t\tgeometry.addGroup(offset, accessor.count, i);\r\n\r\n\t\t\t\t// \t\toffset += accessor.count;\r\n\r\n\t\t\t\t// \t}\r\n\r\n\t\t\t\t// \tgeometry.setIndex(indices);\r\n\r\n\t\t\t\t// \tcache.push({ geometry: geometry, baseGeometry: baseGeometry, primitives: originalPrimitives });\r\n\r\n\t\t\t\t// \treturn [geometry];\r\n\r\n\t\t\t\t// } \r\n\t\t\t\t// else if (geometries.length > 1 && THREE.BufferGeometryUtils !== undefined) {\r\n\r\n\t\t\t\t// \t// Tries to merge geometries with BufferGeometryUtils if possible\r\n\r\n\t\t\t\t// \tfor (var i = 1, il = primitives.length; i < il; i++) {\r\n\r\n\t\t\t\t// \t\t// can't merge if draw mode is different\r\n\t\t\t\t// \t\tif (primitives[0].mode !== primitives[i].mode) return geometries;\r\n\r\n\t\t\t\t// \t}\r\n\r\n\t\t\t\t// \t// See if we've already created this combined geometry\r\n\t\t\t\t// \tvar cache = parser.multiplePrimitivesCache;\r\n\t\t\t\t// \tvar cached = getCachedCombinedGeometry(cache, geometries);\r\n\r\n\t\t\t\t// \tif (cached) {\r\n\r\n\t\t\t\t// \t\tif (cached.geometry !== null) return [cached.geometry];\r\n\r\n\t\t\t\t// \t} else {\r\n\r\n\t\t\t\t// \t\tvar geometry = THREE.BufferGeometryUtils.mergeBufferGeometries(geometries, true);\r\n\r\n\t\t\t\t// \t\tcache.push({ geometry: geometry, baseGeometries: geometries });\r\n\r\n\t\t\t\t// \t\tif (geometry !== null) return [geometry];\r\n\r\n\t\t\t\t// \t}\r\n\r\n\t\t\t\t// }\r\n\r\n\t\t\t\treturn geometries;\r\n\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n\t * @param {number} meshIndex\r\n\t * @return {Promise<Object3D|Mesh3D>}\r\n\t */\r\n\tloadMesh(meshIndex) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\r\n\t\tvar meshDef = json.meshes[meshIndex];\r\n\r\n\t\treturn this.getMultiDependencies([\r\n\r\n\t\t\t'accessor',\r\n\t\t\t'material'\r\n\r\n\t\t]).then(function (dependencies) {\r\n\r\n\t\t\tvar primitives = meshDef.primitives;\r\n\t\t\tvar originalMaterials = [];\r\n\r\n\t\t\tfor (var i = 0, il = primitives.length; i < il; i++) {\r\n\r\n\t\t\t\toriginalMaterials[i] = primitives[i].material === undefined\r\n\t\t\t\t\t? createDefaultMaterial()\r\n\t\t\t\t\t: dependencies.materials[primitives[i].material];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn scope.loadGeometries(primitives).then(function (geometries) {\r\n\r\n\t\t\t\tvar isMultiMaterial = false//geometries.length === 1 && geometries[0].groups.length > 0;\r\n\r\n\t\t\t\tvar meshes = [];\r\n\r\n\t\t\t\tfor (var i = 0, il = geometries.length; i < il; i++) {\r\n\r\n\t\t\t\t\tvar geometry = geometries[i];\r\n\t\t\t\t\tvar primitive = primitives[i];\r\n\r\n\t\t\t\t\t// 1. create Mesh\r\n\r\n\t\t\t\t\tvar mesh: Mesh3D;\r\n\r\n\t\t\t\t\t// var material = isMultiMaterial ? originalMaterials : originalMaterials[i];\r\n\t\t\t\t\tvar material: BaseMaterial = originalMaterials[i];\r\n\r\n\t\t\t\t\tif (primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\r\n\t\t\t\t\t\tprimitive.mode === undefined) {\r\n\r\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\r\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\r\n\t\t\t\t\t\t\t? new SkinnedMesh3D(geometry, material)\r\n\t\t\t\t\t\t\t: new Mesh3D(geometry, material);\r\n\t\t\t\t\t\t// mesh = new Mesh3D(geometry, material);\r\n\r\n\t\t\t\t\t\tif (mesh.instanceType === \"SkinnedMesh3D\") {\r\n\t\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\r\n\t\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\r\n\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\tmesh.normalizeSkinWeights();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\r\n\r\n\t\t\t\t\t\t// \tmesh.drawMode = THREE.TriangleStripDrawMode;\r\n\r\n\t\t\t\t\t\t// } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\r\n\r\n\t\t\t\t\t\t// \tmesh.drawMode = THREE.TriangleFanDrawMode;\r\n\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\r\n\r\n\t\t\t\t\t// \tmesh = new THREE.LineSegments(geometry, material);\r\n\r\n\t\t\t\t\t// } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\r\n\r\n\t\t\t\t\t// \tmesh = new THREE.Line(geometry, material);\r\n\r\n\t\t\t\t\t// } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\r\n\r\n\t\t\t\t\t// \tmesh = new THREE.LineLoop(geometry, material);\r\n\r\n\t\t\t\t\t// } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\r\n\r\n\t\t\t\t\t// \tmesh = new THREE.Points(geometry, material);\r\n\r\n\t\t\t\t\t// } \r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tthrow new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\r\n\r\n\t\t\t\t\t// \tupdateMorphTargets(mesh, meshDef);\r\n\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t//变形的权重加上\r\n\t\t\t\t\tif (mesh.geometry._morphPositions) updateMorphTargets(mesh, meshDef);\r\n\r\n\t\t\t\t\tmesh.name = meshDef.name || ('mesh_' + meshIndex);\r\n\r\n\t\t\t\t\tif (geometries.length > 1) mesh.name += '_' + i;\r\n\r\n\t\t\t\t\t// assignExtrasToUserData(mesh, meshDef);\r\n\r\n\t\t\t\t\tmeshes.push(mesh);\r\n\r\n\t\t\t\t\t// 2. update Material depending on Mesh and BufferGeometry\r\n\r\n\t\t\t\t\t// var materials = isMultiMaterial ? mesh.material : [mesh.material];\r\n\t\t\t\t\tvar material: BaseMaterial = mesh.material;\r\n\r\n\t\t\t\t\t// var useVertexColors = geometry.attributes.color !== undefined;\r\n\t\t\t\t\t// var useFlatShading = geometry.attributes.normal === undefined;\r\n\t\t\t\t\tvar useSkinning = mesh.instanceType == \"SkinnedMesh3D\";\r\n\t\t\t\t\tvar useMorphTargets = !!geometry._morphPositions;\r\n\t\t\t\t\tvar useMorphNormals = useMorphTargets && !!geometry._morphNormals;\r\n\t\t\t\t\t//用相同的材质有覆盖的风险，所以有才设置吧，反正mesh也会判断一次\r\n\t\t\t\t\t// if (useMorphTargets) material.morphTargets = useMorphTargets;\r\n\t\t\t\t\t// if (useMorphNormals) material.morphNormals = useMorphNormals;\r\n\t\t\t\t\tif (/*useVertexColors || useFlatShading ||*/ useSkinning || useMorphTargets) {\r\n\r\n\t\t\t\t\t\tvar cacheKey = 'ClonedMaterial:' + material.instanceId + ':';\r\n\r\n\t\t\t\t\t\t// if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\r\n\t\t\t\t\t\tif (useSkinning) cacheKey += 'skinning:';\r\n\t\t\t\t\t\t// if (useVertexColors) cacheKey += 'vertex-colors:';\r\n\t\t\t\t\t\t// if (useFlatShading) cacheKey += 'flat-shading:';\r\n\t\t\t\t\t\tif (useMorphTargets) cacheKey += 'morph-targets:';\r\n\t\t\t\t\t\tif (useMorphNormals) cacheKey += 'morph-normals:';\r\n\r\n\t\t\t\t\t\tvar cachedMaterial: BaseMaterial = scope.cache.get(cacheKey);\r\n\r\n\t\t\t\t\t\tif (!cachedMaterial) {\r\n\r\n\t\t\t\t\t\t\tcachedMaterial = /*material.isGLTFSpecularGlossinessMaterial\r\n\t\t\t\t\t\t\t\t? extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(material)\r\n\t\t\t\t\t\t\t\t:*/ material.clone();\r\n\r\n\t\t\t\t\t\t\tif (useSkinning) cachedMaterial.skinning = true;\r\n\t\t\t\t\t\t\t// if (useVertexColors) cachedMaterial.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\t\t// if (useFlatShading) cachedMaterial.flatShading = true;\r\n\t\t\t\t\t\t\tif (useMorphTargets) cachedMaterial.morphTargets = true;\r\n\t\t\t\t\t\t\tif (useMorphNormals) cachedMaterial.morphNormals = true;\r\n\r\n\t\t\t\t\t\t\tscope.cache.add(cacheKey, cachedMaterial);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterial = cachedMaterial;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmesh.material = material\r\n\t\t\t\t\t// for (var j = 0, jl = materials.length; j < jl; j++) {\r\n\r\n\t\t\t\t\t// \tvar material = materials[j];\r\n\r\n\t\t\t\t\t// \tif (mesh.isPoints) {\r\n\r\n\t\t\t\t\t// \t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\r\n\r\n\t\t\t\t\t// \t\tvar pointsMaterial = scope.cache.get(cacheKey);\r\n\r\n\t\t\t\t\t// \t\tif (!pointsMaterial) {\r\n\r\n\t\t\t\t\t// \t\t\tpointsMaterial = new THREE.PointsMaterial();\r\n\t\t\t\t\t// \t\t\tTHREE.Material.prototype.copy.call(pointsMaterial, material);\r\n\t\t\t\t\t// \t\t\tpointsMaterial.color.copy(material.color);\r\n\t\t\t\t\t// \t\t\tpointsMaterial.map = material.map;\r\n\t\t\t\t\t// \t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\r\n\r\n\t\t\t\t\t// \t\t\tscope.cache.add(cacheKey, pointsMaterial);\r\n\r\n\t\t\t\t\t// \t\t}\r\n\r\n\t\t\t\t\t// \t\tmaterial = pointsMaterial;\r\n\r\n\t\t\t\t\t// \t} else if (mesh.isLine) {\r\n\r\n\t\t\t\t\t// \t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\r\n\r\n\t\t\t\t\t// \t\tvar lineMaterial = scope.cache.get(cacheKey);\r\n\r\n\t\t\t\t\t// \t\tif (!lineMaterial) {\r\n\r\n\t\t\t\t\t// \t\t\tlineMaterial = new THREE.LineBasicMaterial();\r\n\t\t\t\t\t// \t\t\tTHREE.Material.prototype.copy.call(lineMaterial, material);\r\n\t\t\t\t\t// \t\t\tlineMaterial.color.copy(material.color);\r\n\t\t\t\t\t// \t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\r\n\r\n\t\t\t\t\t// \t\t\tscope.cache.add(cacheKey, lineMaterial);\r\n\r\n\t\t\t\t\t// \t\t}\r\n\r\n\t\t\t\t\t// \t\tmaterial = lineMaterial;\r\n\r\n\t\t\t\t\t// \t}\r\n\r\n\t\t\t\t\t// \t// Clone the material if it will be modified\r\n\t\t\t\t\t// \tif (useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\r\n\r\n\t\t\t\t\t// \t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\r\n\r\n\t\t\t\t\t// \t\tif (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\r\n\t\t\t\t\t// \t\tif (useSkinning) cacheKey += 'skinning:';\r\n\t\t\t\t\t// \t\tif (useVertexColors) cacheKey += 'vertex-colors:';\r\n\t\t\t\t\t// \t\tif (useFlatShading) cacheKey += 'flat-shading:';\r\n\t\t\t\t\t// \t\tif (useMorphTargets) cacheKey += 'morph-targets:';\r\n\t\t\t\t\t// \t\tif (useMorphNormals) cacheKey += 'morph-normals:';\r\n\r\n\t\t\t\t\t// \t\tvar cachedMaterial = scope.cache.get(cacheKey);\r\n\r\n\t\t\t\t\t// \t\tif (!cachedMaterial) {\r\n\r\n\t\t\t\t\t// \t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\r\n\t\t\t\t\t// \t\t\t\t? extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(material)\r\n\t\t\t\t\t// \t\t\t\t: material.clone();\r\n\r\n\t\t\t\t\t// \t\t\tif (useSkinning) cachedMaterial.skinning = true;\r\n\t\t\t\t\t// \t\t\tif (useVertexColors) cachedMaterial.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t// \t\t\tif (useFlatShading) cachedMaterial.flatShading = true;\r\n\t\t\t\t\t// \t\t\tif (useMorphTargets) cachedMaterial.morphTargets = true;\r\n\t\t\t\t\t// \t\t\tif (useMorphNormals) cachedMaterial.morphNormals = true;\r\n\r\n\t\t\t\t\t// \t\t\tscope.cache.add(cacheKey, cachedMaterial);\r\n\r\n\t\t\t\t\t// \t\t}\r\n\r\n\t\t\t\t\t// \t\tmaterial = cachedMaterial;\r\n\r\n\t\t\t\t\t// \t}\r\n\r\n\t\t\t\t\t// \tmaterials[j] = material;\r\n\r\n\t\t\t\t\t// \t// workarounds for mesh and geometry\r\n\t\t\t\t\t// \t//暂时不管这个aoMap\r\n\t\t\t\t\t// \t// if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\r\n\r\n\t\t\t\t\t// \t// \tconsole.log('THREE.GLTFLoader: Duplicating UVs to support aoMap.');\r\n\t\t\t\t\t// \t// \tgeometry.addAttribute('uv2', new THREE.BufferAttribute(geometry.attributes.uv.array, 2));\r\n\r\n\t\t\t\t\t// \t// }\r\n\r\n\t\t\t\t\t// \tif (material.isGLTFSpecularGlossinessMaterial) {\r\n\r\n\t\t\t\t\t// \t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\r\n\t\t\t\t\t// \t\tmesh.onBeforeRender = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;\r\n\r\n\t\t\t\t\t// \t}\r\n\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t// mesh.material = isMultiMaterial ? materials : materials[0];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (meshes.length === 1) {\r\n\r\n\t\t\t\t\treturn meshes[0];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar group = new Object3D();\r\n\r\n\t\t\t\tfor (var i = 0; i < meshes.length; i++) {\r\n\r\n\t\t\t\t\tgroup.addChild(meshes[i]);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn group;\r\n\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * ok\r\n\t * @param {number} cameraIndex\r\n\t * @return {Promise<PerspectiveCamera>}\r\n\t */\r\n\tloadCamera(cameraIndex: number): Promise<PerspectiveCamera> {\r\n\r\n\t\tvar camera: PerspectiveCamera;\r\n\t\tvar cameraDef = this.json.cameras[cameraIndex];\r\n\t\tvar params = cameraDef[cameraDef.type];\r\n\r\n\t\tif (!params) {\r\n\t\t\tconsole.warn('模型相机参数异常');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (cameraDef.type === 'perspective') {\r\n\t\t\tcamera = new PerspectiveCamera(\r\n\t\t\t\tRAD_TO_DEG * params.yfov,\r\n\t\t\t\tparams.aspectRatio || 1,\r\n\t\t\t\tparams.znear || 1,\r\n\t\t\t\tparams.zfar || 2e6\r\n\t\t\t);\r\n\t\t}\r\n\t\t// else if (cameraDef.type === 'orthographic') {\r\n\r\n\t\t// \tcamera = new THREE.OrthographicCamera(params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar);\r\n\r\n\t\t// }\r\n\r\n\t\tif (cameraDef.name !== undefined) camera.name = cameraDef.name;\r\n\r\n\t\t// assignExtrasToUserData(camera, cameraDef);\r\n\r\n\t\treturn Promise.resolve(camera);\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n\t * @param {number} skinIndex\r\n\t * @return {Promise<Object>}\r\n\t */\r\n\tloadSkin(skinIndex) {\r\n\r\n\t\tvar skinDef = this.json.skins[skinIndex];\r\n\r\n\t\tvar skinEntry: any = { joints: skinDef.joints };\r\n\r\n\t\tif (skinDef.inverseBindMatrices === undefined) {\r\n\r\n\t\t\treturn Promise.resolve(skinEntry);\r\n\r\n\t\t}\r\n\r\n\t\treturn this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\r\n\r\n\t\t\tskinEntry.inverseBindMatrices = accessor;\r\n\r\n\t\t\treturn skinEntry;\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n\t * @param {number} animationIndex\r\n\t * @return {Promise<AnimationClip>}\r\n\t */\r\n\tloadAnimation(animationIndex: number) {\r\n\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar animationDef = json.animations[animationIndex];\r\n\r\n\t\treturn this.getMultiDependencies([\r\n\r\n\t\t\t'accessor',\r\n\t\t\t'node'\r\n\r\n\t\t]).then(function (dependencies) {\r\n\r\n\t\t\tvar tracks: AnimationTrack3D[] = [];\r\n\r\n\t\t\tfor (var i = 0, il = animationDef.channels.length; i < il; i++) {\r\n\r\n\t\t\t\tvar channel = animationDef.channels[i];\r\n\t\t\t\tvar sampler = animationDef.samplers[channel.sampler];\r\n\r\n\t\t\t\tif (sampler) {\r\n\r\n\t\t\t\t\tvar target = channel.target;\r\n\t\t\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n\t\t\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\r\n\t\t\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\r\n\r\n\t\t\t\t\tvar inputAccessor = dependencies.accessors[input];\r\n\t\t\t\t\tvar outputAccessor = dependencies.accessors[output];\r\n\t\t\t\t\t// console.log(2222222)\r\n\t\t\t\t\t// console.log(inputAccessor)\r\n\t\t\t\t\t// console.log(outputAccessor)\r\n\t\t\t\t\tvar node: Object3D = dependencies.nodes[name];\r\n\t\t\t\t\t// console.log(\"node:\", node)\r\n\t\t\t\t\tif (node) {\r\n\r\n\t\t\t\t\t\tnode.updateLocalMatrix();\r\n\r\n\t\t\t\t\t\tvar TypedKeyframeTrack;\r\n\r\n\t\t\t\t\t\tswitch (PATH_PROPERTIES[target.path]) {\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.weights:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = AnimationType3D.morphTargetInfluences;\r\n\t\t\t\t\t\t\t\t// console.log(\"weights\")\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.rotation:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = AnimationType3D.quaternion;\r\n\t\t\t\t\t\t\t\t// console.log(\"rotation\")\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.position:\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = AnimationType3D.position;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.scale:\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = AnimationType3D.scale;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = AnimationType3D.position;\r\n\t\t\t\t\t\t\t\t// console.log(\"position,scale\")\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar targetName = node.name ? node.name : node.instanceId;\r\n\r\n\t\t\t\t\t\t//TODO，暂时不用，以后用到再说\r\n\t\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\r\n\r\n\t\t\t\t\t\t//处理顶点变形的权重\r\n\t\t\t\t\t\tvar targetNames = [];\r\n\t\t\t\t\t\tif (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\r\n\t\t\t\t\t\t\t// node can be THREE.Group here but\r\n\t\t\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\r\n\t\t\t\t\t\t\t// the property of a mesh object under group.\r\n\t\t\t\t\t\t\t//递归处理 TODO\r\n\t\t\t\t\t\t\ttraverse(node, (object) => {\r\n\t\t\t\t\t\t\t\tif ((object.instanceType === \"Mesh3D\" || object.instanceType === \"SkinnedMesh3D\") &&\r\n\t\t\t\t\t\t\t\t\tobject[\"morphTargetInfluences\"]) {\r\n\t\t\t\t\t\t\t\t\ttargetNames.push(object.name ? object.name : object.instanceId);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttargetNames.push(targetName);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// console.log(\"targetNames:\", targetNames)\r\n\t\t\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n\t\t\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\r\n\t\t\t\t\t\t// be reused by other tracks, make copies here.\r\n\t\t\t\t\t\tfor (var j = 0, jl = targetNames.length; j < jl; j++) {\r\n\r\n\t\t\t\t\t\t\t// var track = new TypedKeyframeTrack(\r\n\t\t\t\t\t\t\t// \ttargetNames[j] + '.' + PATH_PROPERTIES[target.path],\r\n\t\t\t\t\t\t\t// \tarraySlice(inputAccessor.array, 0),\r\n\t\t\t\t\t\t\t// \tarraySlice(outputAccessor.array, 0),\r\n\t\t\t\t\t\t\t// \tinterpolation\r\n\t\t\t\t\t\t\t// );\r\n\t\t\t\t\t\t\tvar track = new AnimationTrack3D(\r\n\t\t\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack,\r\n\t\t\t\t\t\t\t\tarraySlice(inputAccessor.array, 0),\r\n\t\t\t\t\t\t\t\tarraySlice(outputAccessor.array, 0),\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t// Here is the trick to enable custom interpolation.\r\n\t\t\t\t\t\t\t// Overrides .createInterpolant in a factory method which creates custom interpolation.\r\n\t\t\t\t\t\t\t// if (sampler.interpolation === 'CUBICSPLINE') {\r\n\r\n\t\t\t\t\t\t\t// \ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\r\n\r\n\t\t\t\t\t\t\t// \t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\r\n\t\t\t\t\t\t\t// \t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\r\n\t\t\t\t\t\t\t// \t\t// must be divided by three to get the interpolant's sampleSize argument.\r\n\r\n\t\t\t\t\t\t\t// \t\treturn new GLTFCubicSplineInterpolant(this.times, this.values, this.getValueSize() / 3, result);\r\n\r\n\t\t\t\t\t\t\t// \t};\r\n\r\n\t\t\t\t\t\t\t// \t// Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\r\n\t\t\t\t\t\t\t// \t// track.getInterpolation() doesn't return valid value for custom interpolant.\r\n\t\t\t\t\t\t\t// \ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\r\n\r\n\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\ttracks.push(track);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\r\n\r\n\t\t\t// return new THREE.AnimationClip(name, undefined, tracks);\r\n\t\t\t//计算总时间\r\n\t\t\tvar duration = 0\r\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\r\n\t\t\t\tvar tt = tracks[i];\r\n\t\t\t\tduration = Math.max(duration, tt.times[tt.times.length - 1]);\r\n\t\t\t}\r\n\t\t\tvar clip = new AnimationClip(tracks, duration);\r\n\t\t\tclip.name = name;\r\n\t\t\treturn clip;\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n\t * @param {number} nodeIndex\r\n\t * @return {Promise<Object3D>}\r\n\t */\r\n\tloadNode(nodeIndex: number): Promise<Object3D> {\r\n\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\r\n\t\tvar meshReferences = json.meshReferences;\r\n\t\tvar meshUses = json.meshUses;\r\n\r\n\t\tvar nodeDef = json.nodes[nodeIndex];\r\n\r\n\t\treturn this.getMultiDependencies([\r\n\r\n\t\t\t'mesh',\r\n\t\t\t'skin',\r\n\t\t\t'camera',\r\n\t\t\t'light'\r\n\r\n\t\t]).then(function (dependencies) {\r\n\r\n\t\t\tvar node: Object3D;\r\n\r\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\r\n\t\t\tif (nodeDef.isBone === true) {\r\n\r\n\t\t\t\tnode = new Bone3D();\r\n\t\t\t\t// return null//临时解决\r\n\r\n\t\t\t} else if (nodeDef.mesh !== undefined) {\r\n\r\n\t\t\t\tvar mesh = dependencies.meshes[nodeDef.mesh];\r\n\r\n\t\t\t\tif (meshReferences[nodeDef.mesh] > 1) {\r\n\r\n\t\t\t\t\tvar instanceNum = meshUses[nodeDef.mesh]++;\r\n\r\n\t\t\t\t\tnode = mesh.clone();\r\n\t\t\t\t\tnode.name += '_instance_' + instanceNum;\r\n\r\n\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\r\n\t\t\t\t\t// node.onBeforeRender = mesh.onBeforeRender;\r\n\r\n\t\t\t\t\tfor (var i = 0, il = node.children.length; i < il; i++) {\r\n\r\n\t\t\t\t\t\tnode.children[i].name += '_instance_' + instanceNum;\r\n\t\t\t\t\t\t// node.children[i].onBeforeRender = mesh.children[i].onBeforeRender;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tnode = mesh;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (nodeDef.camera !== undefined) {\r\n\r\n\t\t\t\tnode = dependencies.cameras[nodeDef.camera];\r\n\r\n\t\t\t} else if (nodeDef.extensions\r\n\t\t\t\t&& nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]\r\n\t\t\t\t&& nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined) {\r\n\r\n\t\t\t\tvar lights = extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].lights;\r\n\t\t\t\tnode = lights[nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// node = new THREE.Object3D();\r\n\t\t\t\tnode = new Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (nodeDef.name !== undefined) {\r\n\r\n\t\t\t\tnode.name = sanitizeNodeName(nodeDef.name);\r\n\t\t\t\t// node.name = \"null\";\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// assignExtrasToUserData(node, nodeDef);\r\n\r\n\t\t\t// if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\r\n\r\n\t\t\tif (nodeDef.matrix !== undefined) {\r\n\r\n\t\t\t\tvar matrix = new Matrix4();\r\n\t\t\t\tmatrix.fromArray(nodeDef.matrix);\r\n\t\t\t\tnode.applyMatrix(matrix);\r\n\t\t\t} else {\r\n\t\t\t\tif (nodeDef.translation !== undefined) {\r\n\t\t\t\t\tnode.position.fromArray(nodeDef.translation);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (nodeDef.rotation !== undefined) {\r\n\r\n\t\t\t\t\tnode.quaternion.fromArray(nodeDef.rotation);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (nodeDef.scale !== undefined) {\r\n\r\n\t\t\t\t\tnode.scale.fromArray(nodeDef.scale);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n\t * @param {number} sceneIndex\r\n\t * @return {Promise<THREE.Scene>}\r\n\t */\r\n\tloadScene = function () {\r\n\r\n\t\t// scene node hierachy builder\r\n\r\n\t\tfunction buildNodeHierachy(nodeId, parentObject, json, allNodes, skins) {\r\n\r\n\t\t\tvar node = allNodes[nodeId];\r\n\t\t\tvar nodeDef = json.nodes[nodeId];\r\n\r\n\t\t\t// build skeleton here as well\r\n\t\t\t//骨骼以后再说\r\n\t\t\tif (nodeDef.skin !== undefined) {//暂时应该没有骨骼\r\n\r\n\t\t\t\t// var meshes = node.isGroup === true ? node.children : [node];\r\n\t\t\t\tvar meshes: SkinnedMesh3D[] = node.instanceType == \"Object3D\" ? node.children : [node];\r\n\r\n\t\t\t\tfor (var i = 0; i < meshes.length; i++) {\r\n\r\n\t\t\t\t\tvar mesh = meshes[i];\r\n\t\t\t\t\tvar skinEntry = skins[nodeDef.skin];\r\n\r\n\t\t\t\t\tvar bones = [];\r\n\t\t\t\t\tvar boneInverses = [];\r\n\r\n\t\t\t\t\tfor (var j = 0, jl = skinEntry.joints.length; j < jl; j++) {\r\n\r\n\t\t\t\t\t\tvar jointId = skinEntry.joints[j];\r\n\t\t\t\t\t\tvar jointNode = allNodes[jointId];\r\n\r\n\t\t\t\t\t\tif (jointNode) {\r\n\r\n\t\t\t\t\t\t\tbones.push(jointNode);\r\n\r\n\t\t\t\t\t\t\tvar mat = new Matrix4();\r\n\r\n\t\t\t\t\t\t\tif (skinEntry.inverseBindMatrices !== undefined) {\r\n\r\n\t\t\t\t\t\t\t\tmat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tboneInverses.push(mat);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn('Joint \"%s\" could not be found.', jointId);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.bind(new Skeleton3D(bones, boneInverses), mesh._worldMatrix);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// build node hierachy\r\n\r\n\t\t\tparentObject.addChild(node);\r\n\r\n\t\t\tif (nodeDef.children) {\r\n\r\n\t\t\t\tvar children = nodeDef.children;\r\n\r\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\r\n\t\t\t\t\tvar child = children[i];\r\n\t\t\t\t\t//临时处理，骨骼有问题，\r\n\t\t\t\t\tif (node) buildNodeHierachy(child, node, json, allNodes, skins);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn function loadScene(sceneIndex) {\r\n\r\n\t\t\tvar json = this.json;\r\n\t\t\tvar extensions = this.extensions;\r\n\t\t\tvar sceneDef = this.json.scenes[sceneIndex];\r\n\r\n\t\t\treturn this.getMultiDependencies([\r\n\r\n\t\t\t\t'node',\r\n\t\t\t\t'skin'\r\n\r\n\t\t\t]).then(function (dependencies) {\r\n\r\n\t\t\t\tvar scene = new Scene3D();\r\n\t\t\t\tif (sceneDef.name !== undefined) scene.name = sceneDef.name;\r\n\r\n\t\t\t\t// assignExtrasToUserData(scene, sceneDef);\r\n\r\n\t\t\t\t// if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\r\n\r\n\t\t\t\tvar nodeIds = sceneDef.nodes || [];\r\n\r\n\t\t\t\tfor (var i = 0, il = nodeIds.length; i < il; i++) {\r\n\r\n\t\t\t\t\tbuildNodeHierachy(nodeIds[i], scene, json, dependencies.nodes, dependencies.skins);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn scene;\r\n\r\n\t\t\t});\r\n\r\n\t\t};\r\n\r\n\t}();\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param  {GLTF.Primitive} primitiveDef\r\n * @param  {Array<THREE.BufferAttribute>} accessors\r\n */\r\nfunction addPrimitiveAttributes(primitiveDef, accessors) {\r\n\r\n\tvar attributes = primitiveDef.attributes;\r\n\t// POSITION: 1\r\n\t// NORMAL: 2\r\n\t// TEXCOORD_0: 3\r\n\r\n\tvar verticesAttribute = accessors[attributes[\"POSITION\"]];\r\n\tvar normalAttribute = accessors[attributes[\"NORMAL\"]];\r\n\tvar uvAttribute = accessors[attributes[\"TEXCOORD_0\"]] || accessors[attributes[\"TEXCOORD0\"]];\r\n\r\n\t// var indices = [];\r\n\t// var vertices = [];\r\n\t// var normals = [];\r\n\t// var uvs = [];\r\n\r\n\t//取顶点数据\r\n\r\n\t// for (var gltfAttributeName in attributes) {\r\n\r\n\t// \tvar threeAttributeName = ATTRIBUTES[gltfAttributeName];\r\n\t// \tvar bufferAttribute = accessors[attributes[gltfAttributeName]];\r\n\r\n\t// \t// Skip attributes already provided by e.g. Draco extension.\r\n\t// \tif (!threeAttributeName) continue;\r\n\t// \tif (threeAttributeName in geometry.attributes) continue;\r\n\r\n\t// \tgeometry.addAttribute(threeAttributeName, bufferAttribute);\r\n\r\n\t// }\r\n\r\n\t// if (primitiveDef.indices !== undefined && !geometry.index) {\r\n\r\n\t// \tgeometry.setIndex(accessors[primitiveDef.indices]);\r\n\r\n\t// }\r\n\r\n\tvar geo = new Geometry(\r\n\t\tattributeToArray(verticesAttribute),\r\n\t\tattributeToArray(accessors[primitiveDef.indices]),\r\n\t\tnormalAttribute ? attributeToArray(normalAttribute) : null,\r\n\t\tnull,\r\n\t\tuvAttribute ? attributeToArray(uvAttribute) : null\r\n\t)\r\n\t//骨骼相关的\r\n\tvar skinWeight = accessors[attributes[\"WEIGHTS_0\"]] || accessors[attributes[\"WEIGHTS\"]];\r\n\tif (skinWeight) geo._skinWeight = attributeToArray(skinWeight);\r\n\tvar skinIndex = accessors[attributes[\"JOINTS_0\"]] || accessors[attributes[\"JOINT\"]];\r\n\tif (skinIndex) geo._skinIndex = attributeToArray(skinIndex);\r\n\r\n\t//加变形的数据\r\n\tif (primitiveDef.targets !== undefined) {\r\n\t\taddMorphTargets(geo, primitiveDef.targets, accessors);\r\n\t}\r\n\t// assignExtrasToUserData(geometry, primitiveDef);\r\n\treturn geo\r\n}\r\n\r\n\r\n//用统一的，因为不止这里用到\r\n// function decodeText(array) {\r\n\r\n// \tif (typeof TextDecoder !== 'undefined') {\r\n// \t\treturn new TextDecoder().decode(array);\r\n// \t}\r\n\r\n// \t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n// \t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n// \tvar s = '';\r\n\r\n// \tfor (var i = 0, il = array.length; i < il; i++) {\r\n\r\n// \t\t// Implicitly assumes little-endian.\r\n// \t\ts += String.fromCharCode(array[i]);\r\n\r\n// \t}\r\n\r\n// \t// Merges multi-byte utf-8 characters.\r\n// \treturn decodeURIComponent(escape(s));\r\n\r\n// }\r\n\r\nfunction GLTFBinaryExtension(data) {\r\n\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n\tthis.content = null;\r\n\tthis.body = null;\r\n\tvar headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\r\n\tthis.header = {\r\n\t\tmagic: decodeText(new Uint8Array(data.slice(0, 4))),\r\n\t\tversion: headerView.getUint32(4, true),\r\n\t\tlength: headerView.getUint32(8, true)\r\n\t};\r\n\r\n\tif (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\r\n\r\n\t\tthrow new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\r\n\r\n\t} else if (this.header.version < 2.0) {\r\n\r\n\t\tthrow new Error('THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.');\r\n\r\n\t}\r\n\r\n\tvar chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\r\n\tvar chunkIndex = 0;\r\n\r\n\twhile (chunkIndex < chunkView.byteLength) {\r\n\r\n\t\tvar chunkLength = chunkView.getUint32(chunkIndex, true);\r\n\t\tchunkIndex += 4;\r\n\r\n\t\tvar chunkType = chunkView.getUint32(chunkIndex, true);\r\n\t\tchunkIndex += 4;\r\n\r\n\t\tif (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\r\n\r\n\t\t\tvar contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\r\n\t\t\tthis.content = decodeText(contentArray);\r\n\r\n\t\t} else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\r\n\r\n\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n\t\t\tthis.body = data.slice(byteOffset, byteOffset + chunkLength);\r\n\r\n\t\t}\r\n\r\n\t\t// Clients must ignore chunks with unknown types.\r\n\r\n\t\tchunkIndex += chunkLength;\r\n\r\n\t}\r\n\r\n\tif (this.content === null) {\r\n\t\tthrow new Error('THREE.GLTFLoader: JSON content not found.');\r\n\t}\r\n}\r\n\r\n\r\n/* UTILITY FUNCTIONS */\r\n\r\nfunction resolveURL(url, path) {\r\n\r\n\t// Invalid URL\r\n\tif (typeof url !== 'string' || url === '') return '';\r\n\r\n\t// Absolute URL http://,https://,//\r\n\tif (/^(https?:)?\\/\\//i.test(url)) return url;\r\n\r\n\t// Data URI\r\n\tif (/^data:.*,.*$/i.test(url)) return url;\r\n\r\n\t// Blob URL\r\n\tif (/^blob:.*$/i.test(url)) return url;\r\n\r\n\t// Relative URL\r\n\treturn path + url;\r\n\r\n}\r\n\r\n//用统一的，不止一个地方要用\r\n// function ArrayBufferToBase64(buff) {\r\n// \tvar alph =\r\n// \t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\r\n// \t\tenc = \"\",\r\n// \t\tn,\r\n// \t\tp,\r\n// \t\tbits,\r\n// \t\td = new Uint8Array(buff);\r\n// \tvar len = buff.byteLength * 8;\r\n// \tfor (var offset = 0; offset < len; offset += 6) {\r\n// \t\tn = (offset / 8) | 0;\r\n// \t\tp = offset % 8;\r\n// \t\tbits = ((d[n] || 0) << p) >> 2;\r\n// \t\tif (p > 2) {\r\n// \t\t\tbits |= (d[n + 1] || 0) >> (10 - p);\r\n// \t\t}\r\n// \t\tenc += alph.charAt(bits & 63);\r\n// \t}\r\n// \tenc += p == 4 ? \"=\" : p == 6 ? \"==\" : \"\";\r\n// \treturn enc;\r\n// }\r\n\r\n// class GLTFRegistry {\r\n// \tprivate static objects = {}\r\n// \tconstructor() { }\r\n// \tget(key: string) {\r\n// \t\treturn GLTFRegistry.objects[key];\r\n// \t}\r\n// \tadd(key: string, object: any) {\r\n// \t\tGLTFRegistry.objects[key] = object;\r\n// \t}\r\n// \tremove(key: string) {\r\n// \t\tdelete GLTFRegistry.objects[key];\r\n// \t}\r\n// \tremoveAll() {\r\n// \t\tGLTFRegistry.objects = {};\r\n// \t}\r\n// }\r\n//改成只缓存自己一个praser的，否则多个模型加载会取错缓存\r\nclass GLTFRegistry {\r\n\tprivate objects = {}\r\n\tconstructor() { }\r\n\tget(key: string) {\r\n\t\treturn this.objects[key];\r\n\t}\r\n\tadd(key: string, object: any) {\r\n\t\tthis.objects[key] = object;\r\n\t}\r\n\tremove(key: string) {\r\n\t\tdelete this.objects[key];\r\n\t}\r\n\tremoveAll() {\r\n\t\tthis.objects = {};\r\n\t}\r\n}\r\n\r\n//仿three的，暂时用于记录数据，到时自己的也这么用？onUpload以后再说\r\nclass BufferAttribute {\r\n\tpublic count: number;\r\n\tpublic name: string;\r\n\t/**\r\n\t * \r\n\t * @param array Int8Array,Uint8Array, Int16Array,Uint16Array,Uint32Array,Float32Array\r\n\t * @param itemSize 步长，比如位置是3\r\n\t * @param normalized \r\n\t */\r\n\tconstructor(\r\n\t\tpublic array: any,\r\n\t\tpublic itemSize: number,\r\n\t\tpublic normalized: boolean = false\r\n\t) {\r\n\t\tif (Array.isArray(array)) {\r\n\t\t\tthrow new TypeError('array必须士类型化数组');\r\n\t\t}\r\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t}\r\n\t/**\r\n\t * 重写覆盖\r\n\t * @param value 普通数组，或类型化数组\r\n\t * @param offset \r\n\t */\r\n\tset(value, offset: number = 0) {\r\n\t\tthis.array.set(value, offset);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * 重置数据\r\n\t * @param array \r\n\t */\r\n\tsetArray(array) {\r\n\t\tif (Array.isArray(array)) {\r\n\t\t\tthrow new TypeError('array必须士类型化数组');\r\n\t\t}\r\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\r\n\t\tthis.array = array;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @param index 第几个点\r\n\t */\r\n\tgetX(index: number) {\r\n\t\treturn this.array[index * this.itemSize];\r\n\t}\r\n\r\n\tsetX(index: number, x: number) {\r\n\t\tthis.array[index * this.itemSize] = x;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetY(index: number) {\r\n\t\treturn this.array[index * this.itemSize + 1];\r\n\t}\r\n\r\n\tsetY(index: number, y: number) {\r\n\t\tthis.array[index * this.itemSize + 1] = y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetZ(index: number) {\r\n\t\treturn this.array[index * this.itemSize + 2];\r\n\t}\r\n\r\n\tsetZ(index: number, z: number) {\r\n\t\tthis.array[index * this.itemSize + 2] = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetW(index: number) {\r\n\t\treturn this.array[index * this.itemSize + 3];\r\n\t}\r\n\r\n\tsetW(index: number, w: number) {\r\n\t\tthis.array[index * this.itemSize + 3] = w;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetXY(index: number, x: number, y: number) {\r\n\t\tindex *= this.itemSize;\r\n\t\tthis.array[index + 0] = x;\r\n\t\tthis.array[index + 1] = y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetXYZ(index: number, x: number, y: number, z: number) {\r\n\t\tindex *= this.itemSize;\r\n\t\tthis.array[index + 0] = x;\r\n\t\tthis.array[index + 1] = y;\r\n\t\tthis.array[index + 2] = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetXYZW(index: number, x: number, y: number, z: number, w: number) {\r\n\t\tindex *= this.itemSize;\r\n\t\tthis.array[index + 0] = x;\r\n\t\tthis.array[index + 1] = y;\r\n\t\tthis.array[index + 2] = z;\r\n\t\tthis.array[index + 3] = w;\r\n\t\treturn this;\r\n\t}\r\n\tcopy(source: BufferAttribute) {\r\n\r\n\t\tthis.name = source.name;\r\n\t\tthis.array = new source.array.constructor(source.array);\r\n\t\tthis.itemSize = source.itemSize;\r\n\t\tthis.count = source.count;\r\n\t\tthis.normalized = source.normalized;\r\n\t\treturn this;\r\n\t}\r\n\tclone() {\r\n\t\treturn new BufferAttribute(this.array, this.itemSize).copy(this);\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass InterleavedBuffer {\r\n\tpublic count: number;\r\n\tconstructor(\r\n\t\tpublic array?,\r\n\t\tpublic stride?: number\r\n\t) {\r\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\t}\r\n\tsetArray(array) {\r\n\r\n\t\tif (Array.isArray(array)) {\r\n\r\n\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\r\n\r\n\t\t}\r\n\r\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\r\n\t\tthis.array = array;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\tcopy(source: InterleavedBuffer) {\r\n\t\tthis.array = new source.array.constructor(source.array);\r\n\t\tthis.count = source.count;\r\n\t\tthis.stride = source.stride;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tset(value, offset = 0) {\r\n\t\tthis.array.set(value, offset);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new InterleavedBuffer().copy(this);\r\n\t}\r\n}\r\n\r\n//特殊用处，貌似不会感到几何里，临时用来解码数据用\r\nclass InterleavedBufferAttribute {\r\n\tdata: InterleavedBuffer;\r\n\tisInterleavedBufferAttribute = true;\r\n\tconstructor(\r\n\t\tinterleavedBuffer: InterleavedBuffer,\r\n\t\tpublic itemSize: number,\r\n\t\tpublic offset: number,\r\n\t\tpublic normalized: boolean = false\r\n\t) {\r\n\t\tthis.data = interleavedBuffer;\r\n\t};\r\n\tget count() {\r\n\t\treturn this.data.count;\r\n\t}\r\n\tget array() {\r\n\t\treturn this.data.array;\r\n\t}\r\n\tsetX(index, x) {\r\n\t\tthis.data.array[index * this.data.stride + this.offset] = x;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetY(index, y) {\r\n\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZ(index, z) {\r\n\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetW(index, w) {\r\n\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetX(index) {\r\n\t\treturn this.data.array[index * this.data.stride + this.offset];\r\n\t}\r\n\r\n\tgetY(index) {\r\n\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\r\n\t}\r\n\r\n\tgetZ(index) {\r\n\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\r\n\t}\r\n\r\n\tgetW(index) {\r\n\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\r\n\t}\r\n\r\n\tsetXY(index, x, y) {\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\t\tthis.data.array[index + 0] = x;\r\n\t\tthis.data.array[index + 1] = y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetXYZ(index, x, y, z) {\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\t\tthis.data.array[index + 0] = x;\r\n\t\tthis.data.array[index + 1] = y;\r\n\t\tthis.data.array[index + 2] = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetXYZW(index, x, y, z, w) {\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\t\tthis.data.array[index + 0] = x;\r\n\t\tthis.data.array[index + 1] = y;\r\n\t\tthis.data.array[index + 2] = z;\r\n\t\tthis.data.array[index + 3] = w;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n//取出数组数据,位置法线都是3位,uv两位,截取位数\r\nfunction attributeToArray(attr: BufferAttribute) {\r\n\tvar arr = [];\r\n\t// var data: Float32Array = attr.array;\r\n\tfor (var i = 0; i < attr.count; i++) {\r\n\t\tarr.push(attr.getX(i))\r\n\t\tif (attr.itemSize >= 2) arr.push(attr.getY(i));\r\n\t\tif (attr.itemSize >= 3) arr.push(attr.getZ(i));\r\n\t\tif (attr.itemSize >= 4) arr.push(attr.getW(i));\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\n\r\nvar reservedRe = new RegExp('[' + '\\\\[\\\\]\\\\.:\\\\/' + ']', 'g');\r\nfunction sanitizeNodeName(name) {\r\n\r\n\treturn name.replace(/\\s/g, '_').replace(reservedRe, '');\r\n};\r\n\r\n\r\n/**\r\n * 深度递归处理Object3D\r\n * @param object \r\n * @param callback \r\n */\r\nfunction traverse(object: Object3D, callback: (o: Object3D) => void) {\r\n\tcallback(object);\r\n\tvar children = object.children;\r\n\tfor (var i = 0, l = children.length; i < l; i++) {\r\n\t\tlet c = children[i];\r\n\t\ttraverse(c, callback);\r\n\t}\r\n}\r\n\r\nfunction decodeBase64() {\r\n\r\n}","import { Mesh3D } from '../Mesh3D';\n// import { Vector4 } from '../math/Vector4.js';\nimport { Skeleton3D } from './Skeleton3D';\nimport { Bone3D } from './Bone3D';\nimport { Matrix4 } from '../math/Matrix4';\nimport { Geometry } from '../Geometry';\nimport { BaseMaterial } from '../materials';\n\nexport class SkinnedMesh3D extends Mesh3D {\n\tpublic bindMode: \"attached\" | \"detached\" = \"attached\";\n\tpublic bindMatrix = new Matrix4();\n\tpublic bindMatrixInverse = new Matrix4();\n\tpublic skeleton: Skeleton3D;\n\tconstructor(geometry: Geometry, material: BaseMaterial) {\n\t\tsuper(geometry, material)\n\t\tthis._instanceType = \"SkinnedMesh3D\";\n\n\t\tvar bones = this.initBones();\n\t\tvar skeleton = new Skeleton3D(bones);\n\n\t\tthis.bind(skeleton, this._worldMatrix);\n\n\t\tthis.normalizeSkinWeights();\n\t}\n\n\tinitBones() {\n\n\t\tvar bones: Bone3D[] = [], bone: Bone3D, gbone: Bone3D;\n\t\tvar i: number, il: number;\n\n\t\tif (this.geometry && this.geometry.bones !== undefined) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor (i = 0, il = this.geometry.bones.length; i < il; i++) {\n\n\t\t\t\tgbone = this.geometry.bones[i];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone3D();\n\t\t\t\tbones.push(bone);\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\n\t\t\t\tbone.position.fromArray(gbone.pos);\n\t\t\t\tbone.quaternion.fromArray(gbone.rotq);\n\t\t\t\tif (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor (i = 0, il = this.geometry.bones.length; i < il; i++) {\n\n\t\t\t\tgbone = this.geometry.bones[i];\n\n\t\t\t\tif ((gbone.par !== - 1) && (gbone.par !== null) && (bones[gbone.par] !== undefined)) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[gbone.par].addChild(bones[i]);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.addChild(bones[i]);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateWorldMatrix();\n\n\t\treturn bones;\n\n\t}\n\n\tbind(skeleton: Skeleton3D, bindMatrix: Matrix4) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif (bindMatrix === undefined) {\n\n\t\t\tthis.updateWorldMatrix();\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this._worldMatrix;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy(bindMatrix);\n\t\tthis.bindMatrixInverse.setInverseOf(bindMatrix);\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\t\tvar scale, i;\n\t\tif (this.geometry) {\n\t\t\tvar vec = new Vector4();\n\t\t\tvar skinWeight = this.geometry._skinWeight;\n\t\t\tvar len = skinWeight.length / 4 || 0;\n\t\t\tfor (i = 0; i < len; i++) {\n\n\t\t\t\tvec.x = skinWeight[i * 4];\n\t\t\t\tvec.y = skinWeight[i * 4 + 1];\n\t\t\t\tvec.z = skinWeight[i * 4 + 2];\n\t\t\t\tvec.w = skinWeight[i * 4 + 3];\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\n\t\t\t\t\tvec.multiplyScalar(scale);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set(1, 0, 0, 0); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\t// skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n\t\t\t\tskinWeight[i * 4] = vec.x;\n\t\t\t\tskinWeight[i * 4 + 1] = vec.y;\n\t\t\t\tskinWeight[i * 4 + 2] = vec.z;\n\t\t\t\tskinWeight[i * 4 + 3] = vec.w;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix() {\n\t\tsuper.updateWorldMatrix()\n\t\tif (this.bindMode === 'attached') {\n\t\t\tthis.bindMatrixInverse.setInverseOf(this._worldMatrix);\n\t\t} else if (this.bindMode === 'detached') {\n\t\t\tthis.bindMatrixInverse.setInverseOf(this.bindMatrix);\n\t\t} else {\n\n\t\t}\n\t}\n\tupdate() {\n\t\tif (!this.visible) return;\n\t\tthis.skeleton.update();\n\t\tsuper.update();\n\t}\n\n\tclone() {\n\n\t\treturn new SkinnedMesh3D(this.geometry, this.material).copy(this);\n\n\t}\n}\n\n//暂时只有这里用到，就几个方法，简单写\nclass Vector4 {\n\tconstructor(\n\t\tpublic x: number = 0,\n\t\tpublic y: number = 0,\n\t\tpublic z: number = 0,\n\t\tpublic w = 1\n\t) { }\n\tset(x: number, y: number, z: number, w: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\t\treturn this;\n\t}\n\n\tmultiplyScalar(scalar: number) {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\t\treturn this;\n\t}\n\tmanhattanLength() {\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t}\n}\n","\r\n\r\nexport * from \"./AnimationTrack3D\"","\r\nexport * from \"./Sprite3D\"","import { Geometry } from \"../Geometry\";\r\nimport { Sprite3dMaterial } from \"../materials\";\r\nimport { Mesh3D } from \"../Mesh3D\";\r\n\r\n\r\nexport class Sprite3D extends Mesh3D {\r\n    constructor(material: Sprite3dMaterial) {\r\n        var vertices = [\r\n            - 0.5, - 0.5, 0,// 0, 0,\r\n            0.5, - 0.5, 0,// 1, 0,\r\n            0.5, 0.5, 0, //1, 1,\r\n            - 0.5, 0.5, 0,// 0, 1\r\n        ];\r\n        var uvs = [\r\n            0, 1,\r\n            1, 1,\r\n            1, 0,\r\n            0, 0\r\n        ]\r\n        //@ts-ignore\r\n        super(new Geometry(vertices, [0, 1, 2, 0, 2, 3], null, null,uvs), material);\r\n    }\r\n}","\r\nexport * from \"./Spine\";\r\n\r\nexport * from \"./loadAtlas\";\r\n\r\nexport * from \"./loadSpine\";","import { Container, Sprite } from \"../2d/display\";\r\nimport { Texture } from \"../2d/texture\";\r\nimport { RAD_TO_DEG, DEG_TO_RAD } from \"../2d/const\";\r\nimport { Graphics } from \"../2d/graphics\";\r\nimport { HashObject } from \"../2d/HashObject\";\r\nimport { Matrix } from \"../2d/math\";\r\n\r\n/**\r\n * 仿照three，用节点模拟，然后取全局矩阵，再赋值给显示对象\r\n */\r\nexport class Bone extends Container/*Container*/ {//为了测试用sprite\r\n    static yDown: boolean = true;//当前引擎y轴朝下\r\n    //a开头都是用于约束的，再说\r\n    public ax = 0;\r\n    public ay = 0;\r\n    public arotation = 0;\r\n    public ascaleX = 0;\r\n    public ascaleY = 0;\r\n    public ashearX = 0;\r\n    public ashearY = 0;\r\n    public appliedValid = false;\r\n    public sorted = false;\r\n\r\n    get matrix() {\r\n        return this.worldMatrix\r\n    }\r\n\r\n    private debugBone: Graphics\r\n    constructor(public data: IBoneData, public root: Container) {\r\n        super();\r\n        this._instanceType = \"Bone\";\r\n        this.name = data.name;\r\n        //考虑要不要处理下data\r\n        this.data.x = this.data.x || 0\r\n        this.data.y = this.data.y || 0\r\n        this.data.scaleX = this.data.scaleX || 1\r\n        this.data.scaleY = this.data.scaleY || 1\r\n        this.data.rotation = this.data.rotation || 0\r\n        this.data.shearX = this.data.shearX || 0\r\n        this.data.shearY = this.data.shearY || 0\r\n\r\n        this.setToSetupPose();\r\n        //到时去掉\r\n        if (root) {\r\n            this.debugBone = this.addChild(new Graphics())\r\n                .beginFill(0xff0000)\r\n                .drawRect(0, 0, data.length || 10, 10)\r\n                .endFill();\r\n        }\r\n\r\n    }\r\n    setToSetupPose() {\r\n        var data = this.data;\r\n        this.x = data.x;\r\n        this.y = data.y;\r\n        this.rotation = data.rotation;\r\n        this.scaleX = data.scaleX;\r\n        this.scaleY = data.scaleY;\r\n        this.skewX = data.shearX;\r\n        this.skewX = data.shearY;\r\n    };\r\n    //方式要改\r\n    updateTransform() {\r\n        var sy = Bone.yDown ? -1 : 1;\r\n        if (this.parent) {\r\n            var parent = this.parent\r\n            if (this.parent.instanceType == \"Bone\") {\r\n                // this.transform.updateLocalMatrix();//自己计算\r\n                this.transform._worldID++;\r\n                var pm = parent.transform.worldMatrix;\r\n                var lm = this.localMatrix;\r\n                var wm = this.worldMatrix;\r\n                //pc和pb写错了，再说\r\n                var pa = pm.a, pb = pm.c, pc = pm.b, pd = pm.d;\r\n                wm.tx = pa * this.x + pb * this.y + pm.tx;\r\n                wm.ty = pc * this.x + pd * this.y + pm.ty;\r\n                //自身计算方式要根据data.transform\r\n                switch (this.data.transform) {\r\n                    case TransformType.onlyTranslation://其他统统用lm的\r\n                        this.transform.updateLocalMatrix();\r\n                        wm.a = lm.a;\r\n                        wm.c = lm.c;\r\n                        wm.b = lm.b;\r\n                        wm.d = lm.d;\r\n                        break;\r\n                    case TransformType.noRotationOrReflection: {\r\n                        var s = pa * pa + pc * pc;\r\n                        var prx = 0;\r\n                        if (s > 0.0001) {\r\n                            s = Math.abs(pa * pd - pb * pc) / s;\r\n                            pb = pc * s;\r\n                            pd = pa * s;\r\n                            prx = Math.atan2(pc, pa) * RAD_TO_DEG;\r\n                        }\r\n                        else {\r\n                            pa = 0;\r\n                            pc = 0;\r\n                            prx = 90 - Math.atan2(pd, pb) * RAD_TO_DEG;\r\n                        }\r\n                        var rx = this.rotation + this.skewX - prx;\r\n                        var ry = this.rotation + this.skewY - prx + 90;\r\n                        var la = Math.cos(rx * DEG_TO_RAD) * this.scaleX;\r\n                        var lb = Math.cos(ry * DEG_TO_RAD) * this.scaleY * sy;//*sy反向，其他几种情况，遇到了再说\r\n                        var lc = Math.sin(rx * DEG_TO_RAD) * this.scaleX;\r\n                        var ld = Math.sin(ry * DEG_TO_RAD) * this.scaleY * sy;\r\n                        wm.a = pa * la - pb * lc;\r\n                        wm.c = pa * lb - pb * ld;\r\n                        wm.b = pc * la + pd * lc;\r\n                        wm.d = pc * lb + pd * ld;\r\n                        break;\r\n                    }\r\n                    case TransformType.noScale:\r\n                    case TransformType.noScaleOrReflection: {\r\n                        var cos = Math.cos(this.rotation * DEG_TO_RAD);\r\n                        var sin = Math.sin(this.rotation * DEG_TO_RAD);\r\n                        var za = (pa * cos + pb * sin) / 1//sx;\r\n                        var zc = (pc * cos + pd * sin) / 1//sy;\r\n                        var s = Math.sqrt(za * za + zc * zc);\r\n                        if (s > 0.00001)\r\n                            s = 1 / s;\r\n                        za *= s;\r\n                        zc *= s;\r\n                        s = Math.sqrt(za * za + zc * zc);\r\n                        if (this.data.transform == TransformType.noScale\r\n                            && (pa * pd - pb * pc < 0) != (Bone.yDown ?\r\n                                // (this.skeleton.scaleX < 0 != this.skeleton.scaleY > 0) :\r\n                                // (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0)))\r\n                                (1 < 0 != -1 > 0) :\r\n                                (1 < 0 != -1 < 0)))//先直接设置了\r\n                            s = -s;\r\n                        var r = Math.PI / 2 + Math.atan2(zc, za);\r\n                        var zb = Math.cos(r) * s;\r\n                        var zd = Math.sin(r) * s;\r\n                        var la = Math.cos(this.skewX * DEG_TO_RAD) * this.scaleX;\r\n                        var lb = Math.cos((90 + this.skewY) * DEG_TO_RAD) * this.scaleY;\r\n                        var lc = Math.sin(this.skewX * DEG_TO_RAD) * this.scaleX;\r\n                        var ld = Math.sin((90 + this.skewY) * DEG_TO_RAD) * this.scaleY;\r\n                        wm.a = za * la + zb * lc;\r\n                        wm.c = za * lb + zb * ld;\r\n                        wm.b = zc * la + zd * lc;\r\n                        wm.d = zc * lb + zd * ld;\r\n                        break;\r\n                    }\r\n                    case TransformType.normal:\r\n                    default:\r\n                        // super.updateTransform();\r\n                        // this.transform.updateWorldMatrix(this.parent.transform);\r\n                        this.displayObjectUpdateTransform()\r\n                        break;\r\n                }\r\n            } else {\r\n                // super.updateTransform();\r\n                //不能根据父级的来玩，把自己当作root\r\n                let temp = this.parent;\r\n                //@ts-ignore\r\n                this.parent = this._tempDisplayObjectParent;\r\n                this.transform.updateWorldMatrix(this.parent.transform);\r\n                this.parent = temp;\r\n            }\r\n        }\r\n\r\n        //子级\r\n        for (let i = 0, j = this.children.length; i < j; ++i) {\r\n            const child = this.children[i];\r\n            child.updateTransform();\r\n            if (child == this.debugBone) {\r\n                //还需要root转一次\r\n                child.worldMatrix.prepend(this.root.worldMatrix)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//用官网的吧，后续好扩展，比如ik啥的，用引擎的不好弄了\r\n// export class Bone extends HashObject {\r\n//     destroy() { }\r\n//     static yDown: boolean = true;//当前引擎y轴朝下\r\n//     public name: string;\r\n//     public matrix = new Matrix();\r\n//     public children:Bone[] = new Array();\r\n//     //常规属性\r\n//     public x = 0;\r\n//     public y = 0;\r\n//     public rotation = 0;\r\n//     public scaleX = 0;\r\n//     public scaleY = 0;\r\n//     public shearX = 0;\r\n//     public shearY = 0;\r\n//     //a开头都是用于约束的，再说\r\n//     public ax = 0;\r\n//     public ay = 0;\r\n//     public arotation = 0;\r\n//     public ascaleX = 0;\r\n//     public ascaleY = 0;\r\n//     public ashearX = 0;\r\n//     public ashearY = 0;\r\n//     public appliedValid = false;\r\n//     //标记未排序\r\n//     public sorted = false;\r\n\r\n//     //兼容下skew\r\n//     public get skewX() {\r\n//         return this.shearX\r\n//     }\r\n//     public set skewX(v) {\r\n//         this.shearX = v;\r\n//     }\r\n//     public get skewY() {\r\n//         return this.shearY\r\n//     }\r\n//     public set skewY(v) {\r\n//         this.shearY = v;\r\n//     }\r\n\r\n\r\n//     constructor(public data: IBoneData, public parent?: Bone) {\r\n//         super();\r\n//         this._instanceType = \"Bone\";\r\n//         this.name = data.name;\r\n//         //考虑要不要处理下data\r\n//         this.data.x = this.data.x || 0\r\n//         this.data.y = this.data.y || 0\r\n//         this.data.scaleX = this.data.scaleX || 1\r\n//         this.data.scaleY = this.data.scaleY || 1\r\n//         this.data.rotation = this.data.rotation || 0\r\n//         this.data.shearX = this.data.shearX || 0\r\n//         this.data.shearY = this.data.shearY || 0\r\n\r\n//         //重置一次\r\n//         this.setToSetupPose();\r\n//     }\r\n//     setToSetupPose() {\r\n//         var data = this.data;\r\n//         this.x = data.x;\r\n//         this.y = data.y;\r\n//         this.rotation = data.rotation;\r\n//         this.scaleX = data.scaleX;\r\n//         this.scaleY = data.scaleY;\r\n//         this.shearX = data.shearX;\r\n//         this.shearY = data.shearY;\r\n//     };\r\n\r\n//     get worldX() {\r\n//         return this.matrix.tx;\r\n//     }\r\n//     get worldY() {\r\n//         return this.matrix.ty;\r\n//     }\r\n//     update() {\r\n//         this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);\r\n//     };\r\n//     updateWorldTransform() {\r\n//         this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);\r\n//     };\r\n//     updateWorldTransformWith(x, y, rotation, scaleX, scaleY, shearX, shearY) {\r\n//         this.ax = x;\r\n//         this.ay = y;\r\n//         this.arotation = rotation;\r\n//         this.ascaleX = scaleX;\r\n//         this.ascaleY = scaleY;\r\n//         this.ashearX = shearX;\r\n//         this.ashearY = shearY;\r\n//         this.appliedValid = true;\r\n//         var parent = this.parent;\r\n//         var m = this.matrix;\r\n//         var sx = 1//this.skeleton.scaleX;\r\n//         var sy = -1//Bone.yDown ? -this.skeleton.scaleY : this.skeleton.scaleY;\r\n//         if (!parent) {\r\n//             if (Bone.yDown) {\r\n//                 rotation = -rotation;\r\n//                 this.arotation = rotation;\r\n//             }\r\n//             //var skeleton = this.skeleton;\r\n//             var rotationY = rotation + 90 + shearY;\r\n//             m.a = Math.cos((rotation + shearX) * DEG_TO_RAD) * scaleX * sx;\r\n//             m.c = Math.cos((rotationY) * DEG_TO_RAD) * scaleY * sy;\r\n//             m.b = Math.sin((rotation + shearX) * DEG_TO_RAD) * scaleX * sx;\r\n//             m.d = Math.sin((rotationY) * DEG_TO_RAD) * scaleY * sy;\r\n//             m.tx = x * sx //+ skeleton.x;\r\n//             m.ty = y * sy //+ skeleton.y;\r\n//             return;\r\n//         }\r\n//         var pa = parent.matrix.a, pb = parent.matrix.c, pc = parent.matrix.b, pd = parent.matrix.d;\r\n//         m.tx = pa * x + pb * y + parent.matrix.tx;\r\n//         m.ty = pc * x + pd * y + parent.matrix.ty;\r\n//         switch (this.data.transform) {\r\n//             case TransformType.normal: {\r\n//                 var rotationY = rotation + 90 + shearY;\r\n//                 var la = Math.cos((rotation + shearX) * DEG_TO_RAD) * scaleX;\r\n//                 var lb = Math.cos((rotationY) * DEG_TO_RAD) * scaleY;\r\n//                 var lc = Math.sin((rotation + shearX) * DEG_TO_RAD) * scaleX;\r\n//                 var ld = Math.sin((rotationY) * DEG_TO_RAD) * scaleY;\r\n//                 m.a = pa * la + pb * lc;\r\n//                 m.c = pa * lb + pb * ld;\r\n//                 m.b = pc * la + pd * lc;\r\n//                 m.d = pc * lb + pd * ld;\r\n//                 return;\r\n//             }\r\n//             case TransformType.onlyTranslation: {\r\n//                 var rotationY = rotation + 90 + shearY;\r\n//                 m.a = Math.cos((rotation + shearX) * DEG_TO_RAD) * scaleX;\r\n//                 m.c = Math.cos((rotationY) * DEG_TO_RAD) * scaleY;\r\n//                 m.b = Math.sin((rotation + shearX) * DEG_TO_RAD) * scaleX;\r\n//                 m.d = Math.sin((rotationY) * DEG_TO_RAD) * scaleY;\r\n//                 break;\r\n//             }\r\n//             case TransformType.noRotationOrReflection: {\r\n//                 var s = pa * pa + pc * pc;\r\n//                 var prx = 0;\r\n//                 if (s > 0.0001) {\r\n//                     s = Math.abs(pa * pd - pb * pc) / s;\r\n//                     pb = pc * s;\r\n//                     pd = pa * s;\r\n//                     prx = Math.atan2(pc, pa) * RAD_TO_DEG;\r\n//                 }\r\n//                 else {\r\n//                     pa = 0;\r\n//                     pc = 0;\r\n//                     prx = 90 - Math.atan2(pd, pb) * RAD_TO_DEG;\r\n//                 }\r\n//                 var rx = rotation + shearX - prx;\r\n//                 var ry = rotation + shearY - prx + 90;\r\n//                 var la = Math.cos(rx * DEG_TO_RAD) * scaleX;\r\n//                 var lb = Math.cos(ry * DEG_TO_RAD) * scaleY;\r\n//                 var lc = Math.sin(rx * DEG_TO_RAD) * scaleX;\r\n//                 var ld = Math.sin(ry * DEG_TO_RAD) * scaleY;\r\n//                 m.a = pa * la - pb * lc;\r\n//                 m.c = pa * lb - pb * ld;\r\n//                 m.b = pc * la + pd * lc;\r\n//                 m.d = pc * lb + pd * ld;\r\n//                 break;\r\n//             }\r\n//             case TransformType.noScale:\r\n//             case TransformType.noScaleOrReflection: {\r\n//                 var cos = Math.cos(rotation * DEG_TO_RAD);\r\n//                 var sin = Math.sin(rotation * DEG_TO_RAD);\r\n//                 var za = (pa * cos + pb * sin) / sx;\r\n//                 var zc = (pc * cos + pd * sin) / sy;\r\n//                 var s = Math.sqrt(za * za + zc * zc);\r\n//                 if (s > 0.00001)\r\n//                     s = 1 / s;\r\n//                 za *= s;\r\n//                 zc *= s;\r\n//                 s = Math.sqrt(za * za + zc * zc);\r\n//                 if (this.data.transform == TransformType.noScale\r\n//                     && (pa * pd - pb * pc < 0) != (Bone.yDown ?\r\n//                         // (this.skeleton.scaleX < 0 != this.skeleton.scaleY > 0) :\r\n//                         // (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0)))\r\n//                         (1 < 0 != 1 > 0) :\r\n//                         (1 < 0 != 1 < 0)))\r\n//                     s = -s;\r\n//                 var r = Math.PI / 2 + Math.atan2(zc, za);\r\n//                 var zb = Math.cos(r) * s;\r\n//                 var zd = Math.sin(r) * s;\r\n//                 var la = Math.cos((shearX) * DEG_TO_RAD) * scaleX;\r\n//                 var lb = Math.cos((90 + shearY) * DEG_TO_RAD) * scaleY;\r\n//                 var lc = Math.sin((shearX) * DEG_TO_RAD) * scaleX;\r\n//                 var ld = Math.sin((90 + shearY) * DEG_TO_RAD) * scaleY;\r\n//                 m.a = za * la + zb * lc;\r\n//                 m.c = za * lb + zb * ld;\r\n//                 m.b = zc * la + zd * lc;\r\n//                 m.d = zc * lb + zd * ld;\r\n//                 break;\r\n//             }\r\n//         }\r\n//         m.a *= sx;\r\n//         m.c *= sx;\r\n//         m.b *= sy;\r\n//         m.d *= sy;\r\n//     };\r\n// }\r\n\r\nexport interface IBoneData {\r\n    length: number\r\n    name: string\r\n    parent: string\r\n    rotation: number\r\n    x: number\r\n    y: number\r\n    scaleX: number//默认1\r\n    scaleY: number//默认1\r\n    shearX: number//默认0\r\n    shearY: number//默认0\r\n    transform: TransformType //跟随父级的变换类型\r\n    skin: boolean,//基本是false。不然有skin时才有效\r\n}\r\n\r\nenum TransformType {\r\n    // normal = 0,//默认\r\n    // onlyTranslation,\r\n    // noRotationOrReflection,\r\n    // noScale,\r\n    // noScaleOrReflection,\r\n    normal = \"normal\",//默认\r\n    onlyTranslation = \"onlyTranslation\",\r\n    noRotationOrReflection = \"noRotationOrReflection\",\r\n    noScale = \"noScale\",\r\n    noScaleOrReflection = \"noScaleOrReflection\",\r\n}","import { Container, Sprite } from \"../2d/display\";\r\nimport { Bone } from \"./Bone\";\r\nimport { Mesh } from \"../2d/mesh\";\r\nimport { Attachment } from \"./attachment/Attachment\";\r\nimport { SpineColor } from \"./SpineColor\";\r\nimport { Spine } from \"./Spine\";\r\n\r\n//作为插槽容器\r\n//外部控制子级的加入及显示隐藏\r\nexport class Slot extends Container {\r\n    currentMesh: Mesh;\r\n    currentSprite: Sprite;\r\n    currentGraphics: any;\r\n    clippingContainer: any;\r\n\r\n    meshes: { [key: string]: Mesh };\r\n    currentMeshName: string;\r\n    sprites: { [key: string]: Sprite };\r\n    currentSpriteName: string;\r\n\r\n    //需要显示的附着图片名字。循环时根据\r\n    attachment: Attachment;\r\n    deform = new Array<number>();//attachmentVertices\r\n\r\n    color: SpineColor\r\n    //讲道理原始数据都应该放进data\r\n    // public originAttachment: Attachment;\r\n    constructor(\r\n        /**\r\n         * 绑定的骨骼\r\n         */\r\n        public bone: Bone,\r\n        /**\r\n         * 数据，用于恢复初始状态\r\n         */\r\n        public data: ISlotData,\r\n\r\n        private spine: Spine\r\n    ) {\r\n        super();\r\n        this.name = this.data.name;\r\n        this.color = new SpineColor(1, 1, 1, 1);\r\n        if (this.data.color) this.color.setFromString(this.data.color);\r\n        // 数据里的也加一个，不然实时转换性能差\r\n        this.data.sColor = new SpineColor().setFromColor(this.color)\r\n    }\r\n    //重写，根据自己的bone的世界矩阵\r\n    // updateTransform() {\r\n    //     if (!this.visible) return;\r\n    //     this.worldMatrix.setFrom(this.bone.worldMatrix);\r\n    //     this.transform._worldID++;\r\n    //     // 子级attachment\r\n    //     for (var i = 0; i < this.children.length; i++) {\r\n    //         this.children[i].updateTransform();\r\n    //     }\r\n    // }\r\n    getAttachment(): Attachment {\r\n        return this.attachment;\r\n    }\r\n    setAttachment(attachment: Attachment) {\r\n        if (this.attachment == attachment) return;\r\n        this.attachment = attachment;\r\n        this.deform.length = 0;\r\n    }\r\n    //不再动画轨上执行，有需要自行执行\r\n    setToSetupPose() {\r\n        this.color.setFromColor(this.data.sColor);\r\n        if (this.data.attachment == null)\r\n            this.attachment = null;\r\n        else {\r\n            this.attachment = null;\r\n            this.setAttachment(this.spine.getAttachment(this.spine[\"findSlotIndex\"](this.name), this.data.attachment));\r\n        }\r\n    };\r\n}\r\n\r\nexport interface ISlotData {\r\n    attachment: string//附着显示的皮肤名字\r\n    bone: string//骨骼名字\r\n    name: string//自己名字\r\n    blend: \"normal\" | \"additive\" | \"multiply\" | \"screen\"//混色\r\n    color: string,\r\n    dark: string,//暂时不用\r\n\r\n    sColor?: SpineColor,\r\n\r\n}","import { Attachment } from \"./attachment/Attachment\";\r\nimport { Slot } from \"./Slot\";\r\n\r\nexport class Skin {\r\n    attachments = new Array();\r\n    constructor(public name: string) {\r\n    }\r\n    addAttachment(slotIndex: number, name: string, attachment: Attachment) {\r\n        var attachments = this.attachments;\r\n        if (slotIndex >= attachments.length)\r\n            attachments.length = slotIndex + 1;\r\n        if (!attachments[slotIndex])\r\n            attachments[slotIndex] = {};\r\n        attachments[slotIndex][name] = attachment;\r\n    };\r\n    getAttachment(slotIndex: number, name: string) {\r\n        var dictionary = this.attachments[slotIndex];\r\n        return dictionary ? dictionary[name] : null;\r\n    };\r\n    attachAll(slots: Slot[], oldSkin: Skin) {\r\n        var slotIndex = 0;\r\n        for (var i = 0; i < slots.length; i++) {\r\n            var slot = slots[i];\r\n            var slotAttachment = slot.getAttachment();\r\n            if (slotAttachment && slotIndex < oldSkin.attachments.length) {\r\n                var dictionary = oldSkin.attachments[slotIndex];\r\n                for (var key in dictionary) {\r\n                    var skinAttachment = dictionary[key];\r\n                    if (slotAttachment == skinAttachment) {\r\n                        var attachment = this.getAttachment(slotIndex, key);\r\n                        if (attachment != null)\r\n                            slot.setAttachment(attachment);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            slotIndex++;\r\n        }\r\n    };\r\n}\r\n","import { Attachment } from \"./Attachment\";\nimport { Texture } from \"../../2d/texture\";\nimport { SpineColor } from \"../SpineColor\";\n\nexport class RegionAttachment extends Attachment {\n    color: SpineColor = new SpineColor(1, 1, 1, 1);\n    constructor(\n        name: string,\n        public x: number = 0,\n        public y: number = 0,\n        public scaleX: number = 1,\n        public scaleY: number = 1,\n        public rotation: number = 0,\n        public width: number = 0,\n        public height: number = 0,\n        //应用的纹理\n        public texture: Texture\n    ) {\n        super(name)\n    }\n}\n\n","import { VertexAttachment } from \"./Attachment\";\nimport { Texture } from \"../../2d/texture\";\nimport { SpineColor } from \"../SpineColor\";\n\nexport class MeshAttachment extends VertexAttachment {\n    texture: Texture;\n    path: string;\n    regionUVs: Float32Array;\n    uvs: ArrayLike<number>;\n    triangles: Array<number>;\n    color:SpineColor = new SpineColor(1, 1, 1, 1);\n    width: number;\n    height: number;\n    hullLength: number;\n    edges: Array<number>;\n}\n\n","\r\nimport { Bone } from \"../Bone\";\r\n\r\nimport { Curve, readCurve, MixBlend, MixDirection } from \"./utils\";\r\nimport { BaseTrack } from \"./BaseTrack\";\r\nimport { sign } from \"../../2d/utils\";\r\n\r\nexport interface IBoneAniData {\r\n    time: number,\r\n    angle: number,//只有rotate类型有\r\n    x: number,\r\n    y: number,\r\n    curve: \"stepped\" | [number, number, number, number]\r\n}\r\n\r\nexport enum SpineBoneAniType {//这是按照\r\n    //bone的\r\n    rotate = \"rotate\",\r\n    translate = \"translate\",\r\n    scale = \"scale\",\r\n    shear = \"shear\",\r\n\r\n}\r\n\r\nexport class SpineBoneAniTrack extends BaseTrack {\r\n    curve: Curve;\r\n    resetValue() {\r\n        this.bone.setToSetupPose();\r\n    }\r\n    constructor(\r\n        /**\r\n         * 需要改变属性的节点对象\r\n         */\r\n        public bone: Bone,\r\n        /**\r\n         * 动画类型\r\n         */\r\n        public animationType: SpineBoneAniType,\r\n        /**\r\n         * 记录所有时间的数组，按顺序递增，没有的按最后一个时间的数据\r\n         */\r\n        public times: IBoneAniData[],\r\n    ) {\r\n        super();\r\n        this._instanceType = \"SpineBoneAniTrack\";\r\n        times.forEach((t) => {\r\n            t.time = t.time || 0;\r\n            switch (animationType) {\r\n                case SpineBoneAniType.rotate:\r\n                    t.angle = t.angle || 0;\r\n                    break;\r\n                case SpineBoneAniType.scale:\r\n                    t.x = t.x === undefined ? 1 : t.x;\r\n                    t.y = t.y === undefined ? 1 : t.y;\r\n                    break;\r\n                case SpineBoneAniType.translate:\r\n                case SpineBoneAniType.shear:\r\n                    t.x = t.x || 0;\r\n                    t.y = t.y || 0;\r\n                    break;\r\n            }\r\n\r\n\r\n        })\r\n        //记录缓动\r\n        this.curve = new Curve(times.length);\r\n        var frameIndex = 0;\r\n        for (var i = 0; i < times.length; i++) {\r\n            var map = times[i];\r\n            readCurve(map, this.curve, frameIndex)\r\n            frameIndex++;\r\n        }\r\n    }\r\n    /**\r\n     * 传入时间设置对应的属性值，time大于所有动画总时间，外部处理   blend到时考虑要怎么传\r\n     * @param time \r\n     */\r\n    // setValue1(time: number, mix: number = 1, blend: MixBlend = MixBlend.replace) {\r\n    //     var value: number[] = this.getValue(time);//返回的是数组\r\n    //     switch (this.animationType) {\r\n    //         case SpineBoneAniType.translate:\r\n    //             if (time < this.times[0].time) {\r\n    //                 switch (blend) {\r\n    //                     case MixBlend.setup:\r\n    //                         this.bone.x = this.bone.data.x;\r\n    //                         this.bone.y = this.bone.data.y;\r\n    //                         break;\r\n    //                     case MixBlend.first:\r\n    //                         this.bone.x += (this.bone.data.x - this.bone.x) //* mix;\r\n    //                         this.bone.y += (this.bone.data.y - this.bone.y) //* mix;\r\n    //                         break;\r\n    //                 }\r\n    //             } else {\r\n    //                 var x = value[0];\r\n    //                 var y = value[1];\r\n    //                 switch (blend) {\r\n    //                     case MixBlend.setup:\r\n    //                         this.bone.x = this.bone.data.x + x //* alpha;\r\n    //                         this.bone.y = this.bone.data.y + y //* alpha;\r\n    //                         break;\r\n    //                     case MixBlend.first:\r\n    //                     case MixBlend.replace:\r\n    //                         this.bone.x += (this.bone.data.x + x - this.bone.x) //* alpha;\r\n    //                         this.bone.y += (this.bone.data.y + y - this.bone.y) //* alpha;\r\n    //                         break;\r\n    //                     case MixBlend.add:\r\n    //                         this.bone.x += x //* alpha;\r\n    //                         this.bone.y += y //* alpha;\r\n    //                 }\r\n    //             }\r\n\r\n    //             // this.node.position.set(value[0], value[1]);\r\n    //             break;\r\n    //         case SpineBoneAniType.scale:\r\n\r\n    //             this.bone.scale.set(value[0], value[1]);\r\n    //             break;\r\n    //         case SpineBoneAniType.shear:\r\n\r\n    //             this.bone.skewX = value[0];\r\n    //             this.bone.skewY = value[1];\r\n    //             break;\r\n    //         case SpineBoneAniType.rotate:\r\n    //             if (time < this.times[0].time) {\r\n    //                 switch (blend) {\r\n    //                     case MixBlend.setup:\r\n    //                         this.bone.rotation = this.bone.data.rotation;\r\n    //                         return;\r\n    //                     case MixBlend.first:\r\n    //                         var r_1 = this.bone.data.rotation - this.bone.rotation;\r\n    //                         this.bone.rotation += (r_1 - (16384 - ((16384.499999999996 - r_1 / 360) | 0)) * 360) * 1//alpha;\r\n    //                 }\r\n    //             }\r\n    //             else if (time >= this.times[this.times.length - 1].time) {\r\n    //                 var r_2 = value[0]\r\n    //                 switch (blend) {\r\n    //                     case MixBlend.setup:\r\n    //                         this.node.rotation = this.node.data.rotation + value[0] //* alpha;\r\n    //                         break;\r\n    //                     case MixBlend.first:\r\n    //                     case MixBlend.replace:\r\n    //                         r_2 += this.node.data.rotation - this.node.rotation;\r\n    //                         this.node.rotation -= (16384 - ((16384.499999999996 - r_2 / 360) | 0)) * 360;\r\n    //                     case MixBlend.add:\r\n    //                         this.node.rotation += r_2 //* alpha;\r\n    //                 }\r\n    //             } else {\r\n    //                 var r = value[0];\r\n    //                 switch (blend) {\r\n    //                     case MixBlend.setup:\r\n    //                         this.bone.rotation = this.bone.data.rotation + (r - (16384 - ((16384.499999999996 - r / 360) | 0)) * 360) //* alpha;\r\n    //                         break;\r\n    //                     case MixBlend.first:\r\n    //                     case MixBlend.replace:\r\n    //                         r += this.bone.data.rotation - this.bone.rotation;\r\n    //                     case MixBlend.add:\r\n    //                         this.bone.rotation += (r - (16384 - ((16384.499999999996 - r / 360) | 0)) * 360) //* alpha;\r\n    //                 }\r\n    //             }\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n    setValue(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace, direction: MixDirection = MixDirection.in) {\r\n        switch (this.animationType) {\r\n            case SpineBoneAniType.translate:\r\n                this.setPosition(time, alpha, blend)\r\n                break;\r\n            case SpineBoneAniType.scale:\r\n                this.setScale(time, alpha, blend, direction)\r\n                break;\r\n            case SpineBoneAniType.shear:\r\n                this.setShear(time, alpha, blend)\r\n                break;\r\n            case SpineBoneAniType.rotate:\r\n                this.setRotation(time, alpha, blend)\r\n                break;\r\n        }\r\n    }\r\n\r\n    private setRotation(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace) {\r\n        var frames = this.times;\r\n        var bone = this.bone;\r\n        if (time < frames[0].time) {\r\n            switch (blend) {\r\n                case MixBlend.setup:\r\n                    bone.rotation = bone.data.rotation;\r\n                    return;\r\n                case MixBlend.first:\r\n                    var r_1 = bone.data.rotation - bone.rotation;\r\n                    bone.rotation += (r_1 - transRotation(r_1)) * alpha;\r\n            }\r\n            return;\r\n        }\r\n        if (time >= frames[frames.length - 1].time) {\r\n            var r_2 = frames[frames.length - 1].angle;\r\n            switch (blend) {\r\n                case MixBlend.setup:\r\n                    bone.rotation = bone.data.rotation + r_2 * alpha;\r\n                    break;\r\n                case MixBlend.first:\r\n                case MixBlend.replace:\r\n                    r_2 += bone.data.rotation - bone.rotation;\r\n                    r_2 -= transRotation(r_2);\r\n                case MixBlend.add:\r\n                    bone.rotation += r_2 * alpha;\r\n            }\r\n            return;\r\n        }\r\n        var frame = this.findPreIndex(time);\r\n        var prevRotation = frames[frame - 1].angle;\r\n        var frameTime = frames[frame].time;\r\n        var percent = this.curve.getCurvePercent(frame - 1, 1 - (time - frameTime) / (frames[frame - 1].time - frameTime));\r\n        var r = frames[frame].angle - prevRotation;\r\n        r = prevRotation + (r - transRotation(r)) * percent;\r\n        switch (blend) {\r\n            case MixBlend.setup:\r\n                bone.rotation = bone.data.rotation + (r - transRotation(r)) * alpha;\r\n                break;\r\n            case MixBlend.first:\r\n            case MixBlend.replace:\r\n                r += bone.data.rotation - bone.rotation;\r\n            case MixBlend.add:\r\n                bone.rotation += (r - transRotation(r)) * alpha;\r\n        }\r\n    }\r\n    private setPosition(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace) {\r\n        var frames = this.times;\r\n        var bone = this.bone;\r\n        if (time < frames[0].time) {\r\n            switch (blend) {\r\n                case MixBlend.setup:\r\n                    bone.x = bone.data.x;\r\n                    bone.y = bone.data.y;\r\n                    return;\r\n                case MixBlend.first:\r\n                    bone.x += (bone.data.x - bone.x) * alpha;\r\n                    bone.y += (bone.data.y - bone.y) * alpha;\r\n            }\r\n            return;\r\n        }\r\n        var x = 0, y = 0;\r\n        if (time >= frames[frames.length - 1].time) {\r\n            x = frames[frames.length - 1].x;\r\n            y = frames[frames.length - 1].y;\r\n        }\r\n        else {\r\n            var frame = this.findPreIndex(time);\r\n            x = frames[frame - 1].x;\r\n            y = frames[frame - 1].y;\r\n            var frameTime = frames[frame].time;\r\n            var percent = this.curve.getCurvePercent(frame - 1, 1 - (time - frameTime) / (frames[frame - 1].time - frameTime));\r\n            x += (frames[frame].x - x) * percent;\r\n            y += (frames[frame].y - y) * percent;\r\n        }\r\n        switch (blend) {\r\n            case MixBlend.setup:\r\n                bone.x = bone.data.x + x * alpha;\r\n                bone.y = bone.data.y + y * alpha;\r\n                break;\r\n            case MixBlend.first:\r\n            case MixBlend.replace:\r\n                bone.x += (bone.data.x + x - bone.x) * alpha;\r\n                bone.y += (bone.data.y + y - bone.y) * alpha;\r\n                break;\r\n            case MixBlend.add:\r\n                bone.x += x * alpha;\r\n                bone.y += y * alpha;\r\n        }\r\n    }\r\n    private setScale(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace, direction: MixDirection = MixDirection.in) {\r\n        var frames = this.times;\r\n        var bone = this.bone;\r\n        if (time < frames[0].time) {\r\n            switch (blend) {\r\n                case MixBlend.setup:\r\n                    bone.scaleX = bone.data.scaleX;\r\n                    bone.scaleY = bone.data.scaleY;\r\n                    return;\r\n                case MixBlend.first:\r\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\r\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\r\n            }\r\n            return;\r\n        }\r\n        var x = 0, y = 0;\r\n        if (time >= frames[frames.length - 1].time) {\r\n            x = frames[frames.length - 1].x * bone.data.scaleX;\r\n            y = frames[frames.length - 1].y * bone.data.scaleY;\r\n        }\r\n        else {\r\n            var frame = this.findPreIndex(time);\r\n            x = frames[frame - 1].x;\r\n            y = frames[frame - 1].y;\r\n            var frameTime = frames[frame].time;\r\n            var percent = this.curve.getCurvePercent(frame - 1, 1 - (time - frameTime) / (frames[frame - 1].time - frameTime));\r\n            x = (x + (frames[frame].x - x) * percent) * bone.data.scaleX;\r\n            y = (y + (frames[frame].y - y) * percent) * bone.data.scaleY;\r\n        }\r\n        if (alpha == 1) {\r\n            if (blend == MixBlend.add) {\r\n                bone.scaleX += x - bone.data.scaleX;\r\n                bone.scaleY += y - bone.data.scaleY;\r\n            }\r\n            else {\r\n                bone.scaleX = x;\r\n                bone.scaleY = y;\r\n            }\r\n        }\r\n        else {\r\n            var bx = 0, by = 0;\r\n            if (direction == MixDirection.out) {\r\n                switch (blend) {\r\n                    case MixBlend.setup:\r\n                        bx = bone.data.scaleX;\r\n                        by = bone.data.scaleY;\r\n                        bone.scaleX = bx + (Math.abs(x) * sign(bx) - bx) * alpha;\r\n                        bone.scaleY = by + (Math.abs(y) * sign(by) - by) * alpha;\r\n                        break;\r\n                    case MixBlend.first:\r\n                    case MixBlend.replace:\r\n                        bx = bone.scaleX;\r\n                        by = bone.scaleY;\r\n                        bone.scaleX = bx + (Math.abs(x) * sign(bx) - bx) * alpha;\r\n                        bone.scaleY = by + (Math.abs(y) * sign(by) - by) * alpha;\r\n                        break;\r\n                    case MixBlend.add:\r\n                        bx = bone.scaleX;\r\n                        by = bone.scaleY;\r\n                        bone.scaleX = bx + (Math.abs(x) * sign(bx) - bone.data.scaleX) * alpha;\r\n                        bone.scaleY = by + (Math.abs(y) * sign(by) - bone.data.scaleY) * alpha;\r\n                }\r\n            }\r\n            else {\r\n                switch (blend) {\r\n                    case MixBlend.setup:\r\n                        bx = Math.abs(bone.data.scaleX) * sign(x);\r\n                        by = Math.abs(bone.data.scaleY) * sign(y);\r\n                        bone.scaleX = bx + (x - bx) * alpha;\r\n                        bone.scaleY = by + (y - by) * alpha;\r\n                        break;\r\n                    case MixBlend.first:\r\n                    case MixBlend.replace:\r\n                        bx = Math.abs(bone.scaleX) * sign(x);\r\n                        by = Math.abs(bone.scaleY) * sign(y);\r\n                        bone.scaleX = bx + (x - bx) * alpha;\r\n                        bone.scaleY = by + (y - by) * alpha;\r\n                        break;\r\n                    case MixBlend.add:\r\n                        bx = sign(x);\r\n                        by = sign(y);\r\n                        bone.scaleX = Math.abs(bone.scaleX) * bx + (x - Math.abs(bone.data.scaleX) * bx) * alpha;\r\n                        bone.scaleY = Math.abs(bone.scaleY) * by + (y - Math.abs(bone.data.scaleY) * by) * alpha;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private setShear(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace) {\r\n        var frames = this.times;\r\n        var bone = this.bone;\r\n        if (time < frames[0].time) {\r\n            switch (blend) {\r\n                case MixBlend.setup:\r\n                    bone.skewX = bone.data.shearX;\r\n                    bone.skewY = bone.data.shearY;\r\n                    return;\r\n                case MixBlend.first:\r\n                    bone.skewX += (bone.data.shearX - bone.skewX) * alpha;\r\n                    bone.skewY += (bone.data.shearY - bone.skewY) * alpha;\r\n            }\r\n            return;\r\n        }\r\n        var x = 0, y = 0;\r\n        if (time >= frames[frames.length - 1].time) {\r\n            x = frames[frames.length - 1].x;\r\n            y = frames[frames.length - 1].y;\r\n        }\r\n        else {\r\n            var frame = this.findPreIndex(time);\r\n            x = frames[frame - 1].y;\r\n            y = frames[frame - 1].y;\r\n            var frameTime = frames[frame].time;\r\n            var percent = this.curve.getCurvePercent(frame - 1, 1 - (time - frameTime) / (frames[frame - 1].time - frameTime));\r\n            x = x + (frames[frame].x - x) * percent;\r\n            y = y + (frames[frame].y - y) * percent;\r\n        }\r\n        switch (blend) {\r\n            case MixBlend.setup:\r\n                bone.skewX = bone.data.shearX + x * alpha;\r\n                bone.skewY = bone.data.shearY + y * alpha;\r\n                break;\r\n            case MixBlend.first:\r\n            case MixBlend.replace:\r\n                bone.skewX += (bone.data.shearX + x - bone.skewX) * alpha;\r\n                bone.skewY += (bone.data.shearY + y - bone.skewY) * alpha;\r\n                break;\r\n            case MixBlend.add:\r\n                bone.skewX += x * alpha;\r\n                bone.skewY += y * alpha;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 外部已经剔除了第一帧和最后一帧。到时试试二元法，估计更快点\r\n     * @param time \r\n     */\r\n    private findPreIndex(time: number) {\r\n        var lastIndex = 0;\r\n        for (var i = 0; i < this.times.length; i++) {\r\n            if (this.times[i].time > time) {\r\n                lastIndex = i;\r\n                break\r\n            }\r\n        }\r\n        return lastIndex;\r\n    }\r\n\r\n\r\n    destroy() {\r\n        this.bone = null;\r\n        this.times = null;\r\n    }\r\n}\r\n\r\nfunction transRotation(r: number) {\r\n    return (16384 - ((16384.499999999996 - r / 360) | 0)) * 360\r\n}\r\n","\r\nimport { Slot } from \"../Slot\";\r\nimport { MixBlend, binarySearch, Curve, readCurve } from \"./utils\";\r\nimport { SpineColor } from \"../SpineColor\";\r\nimport { BaseTrack } from \"./BaseTrack\";\r\n\r\nexport interface IColorAniData {\r\n    curve: \"stepped\" | [number, number, number, number]\r\n    color: string\r\n    time: number\r\n}\r\nexport class SpineColorAniTrack extends BaseTrack {\r\n    resetValue(){\r\n        this.slot.setToSetupPose()\r\n    }\r\n    private frames: Float32Array\r\n    curve: Curve\r\n    constructor(\r\n        /**\r\n         * 需要改变颜色的插槽\r\n         */\r\n        public slot: Slot,\r\n        /**\r\n         * 改一下到时记录进frams数组\r\n         */\r\n        times: IColorAniData[],\r\n    ) {\r\n        super();\r\n        this._instanceType = \"SpineColorAniTrack\";\r\n        let len = times.length\r\n        this.frames = new Float32Array(len * SpineColorAniTrack.ENTRIES);\r\n        this.curve = new Curve(len);\r\n        var frameIndex = 0;\r\n        for (var i = 0; i < len; i++) {\r\n            var valueMap = times[i];\r\n            var color = new SpineColor().setFromString(valueMap.color || \"ffffffff\");\r\n            let fi = frameIndex * SpineColorAniTrack.ENTRIES;\r\n            this.frames[fi] = valueMap.time || 0;\r\n            this.frames[fi + SpineColorAniTrack.R] = color.r;\r\n            this.frames[fi + SpineColorAniTrack.G] = color.g;\r\n            this.frames[fi + SpineColorAniTrack.B] = color.b;\r\n            this.frames[fi + SpineColorAniTrack.A] = color.a;\r\n            readCurve(valueMap, this.curve, frameIndex);\r\n            frameIndex++;\r\n        }\r\n    }\r\n\r\n    setValue(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace) {\r\n        var slot = this.slot;\r\n        var frames = this.frames;\r\n        if (time < frames[0]) {\r\n            switch (blend) {\r\n                case MixBlend.setup:\r\n                    slot.color.setFromColor(slot.data.sColor);\r\n                    return;\r\n                case MixBlend.first:\r\n                case MixBlend.replace:\r\n                    var color = slot.color, setup = slot.data.sColor;\r\n                    color.add((setup.r - color.r) * alpha, (setup.g - color.g) * alpha, (setup.b - color.b) * alpha, (setup.a - color.a) * alpha);\r\n            }\r\n            return;\r\n        }\r\n        var r = 0, g = 0, b = 0, a = 0;\r\n        if (time >= frames[frames.length - SpineColorAniTrack.ENTRIES]) {\r\n            var i = frames.length;\r\n            r = frames[i + SpineColorAniTrack.PREV_R];\r\n            g = frames[i + SpineColorAniTrack.PREV_G];\r\n            b = frames[i + SpineColorAniTrack.PREV_B];\r\n            a = frames[i + SpineColorAniTrack.PREV_A];\r\n        }\r\n        else {\r\n            var frame = binarySearch(frames, time, SpineColorAniTrack.ENTRIES);\r\n            r = frames[frame + SpineColorAniTrack.PREV_R];\r\n            g = frames[frame + SpineColorAniTrack.PREV_G];\r\n            b = frames[frame + SpineColorAniTrack.PREV_B];\r\n            a = frames[frame + SpineColorAniTrack.PREV_A];\r\n            var frameTime = frames[frame];\r\n            var percent = this.curve.getCurvePercent(frame / SpineColorAniTrack.ENTRIES - 1, 1 - (time - frameTime) / (frames[frame + SpineColorAniTrack.PREV_TIME] - frameTime));\r\n            r += (frames[frame + SpineColorAniTrack.R] - r) * percent;\r\n            g += (frames[frame + SpineColorAniTrack.G] - g) * percent;\r\n            b += (frames[frame + SpineColorAniTrack.B] - b) * percent;\r\n            a += (frames[frame + SpineColorAniTrack.A] - a) * percent;\r\n        }\r\n        if (alpha == 1)\r\n            slot.color.set(r, g, b, a);\r\n        else {\r\n            var color = slot.color;\r\n            if (blend == MixBlend.setup)\r\n                color.setFromColor(slot.data.sColor);\r\n            color.add((r - color.r) * alpha, (g - color.g) * alpha, (b - color.b) * alpha, (a - color.a) * alpha);\r\n        }\r\n    }\r\n    static ENTRIES = 5;\r\n    static PREV_TIME = -5;\r\n    static PREV_R = -4;\r\n    static PREV_G = -3;\r\n    static PREV_B = -2;\r\n    static PREV_A = -1;\r\n    static R = 1;\r\n    static G = 2;\r\n    static B = 3;\r\n    static A = 4;\r\n}","import { Slot } from \"../Slot\";\r\nimport { MeshAttachment } from \"../attachment/MeshAttachment\";\r\nimport { MixBlend, binarySearch, Curve, readCurve, arrayCopy, setArraySize } from \"./utils\";\r\nimport { VertexAttachment } from \"../attachment/Attachment\";\r\nimport { BaseTrack } from \"./BaseTrack\";\r\n\r\nexport interface IDeformAniData {\r\n    curve: \"stepped\" | [number, number, number, number]\r\n    offset: number,//没有就是0\r\n    time: number,\r\n    vertices: number[]\r\n}\r\nexport class SpineDeformAniTrack extends BaseTrack {\r\n    curve: Curve\r\n    public frameTimes: Float32Array\r\n    private frameVertices: Float32Array[];\r\n    constructor(\r\n        /**\r\n         * 需要改变属性的节点对象\r\n         */\r\n        public slot: Slot,\r\n        /**\r\n         * 皮肤上获取的，slot可能不一致\r\n         */\r\n        public attachment: MeshAttachment,\r\n        /**\r\n         * 记录所有时间的数组，按顺序递增，没有的按最后一个时间的数据\r\n         */\r\n        public times: IDeformAniData[],\r\n    ) {\r\n        super();\r\n        this._instanceType = \"SpineDeformAniTrack\";\r\n\r\n        var weighted = attachment.bones != null;\r\n        var vertices = attachment.vertices;\r\n        var deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\r\n        this.frameTimes = new Float32Array(times.length)\r\n        this.frameVertices = new Array(times.length);\r\n        this.curve = new Curve(times.length);\r\n        var frameIndex = 0;\r\n        for (var j = 0; j < times.length; j++) {\r\n            let valueMap = times[j];\r\n            var deform = void 0;\r\n            var verticesValue = valueMap.vertices || null;\r\n            if (verticesValue == null)\r\n                deform = weighted ? new Float32Array(deformLength) : vertices;\r\n            else {\r\n                deform = new Float32Array(deformLength);\r\n                var start = valueMap.offset || 0\r\n                arrayCopy(verticesValue, 0, deform, start, verticesValue.length);\r\n                if (!weighted) {\r\n                    for (var i = 0; i < deformLength; i++)\r\n                        deform[i] += vertices[i];\r\n                }\r\n            }\r\n            // timeline.setFrame(frameIndex, valueMap.time, deform);\r\n            this.frameTimes[frameIndex] = valueMap.time || 0;\r\n            this.frameVertices[frameIndex] = deform;\r\n            readCurve(valueMap, this.curve, frameIndex);\r\n            frameIndex++;\r\n        }\r\n\r\n    }\r\n    //到时后两个参数直接赋值track吧\r\n    setValue(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace) {\r\n        var slotAttachment = this.slot.getAttachment();\r\n        if (!(slotAttachment instanceof VertexAttachment) || !slotAttachment.applyDeform(this.attachment))\r\n            return;\r\n        var verticesArray = this.slot.deform;\r\n        if (verticesArray.length == 0)\r\n            blend = MixBlend.setup;\r\n        var frameVertices = this.frameVertices;\r\n        var vertexCount = frameVertices[0].length;\r\n        var frames = this.frameTimes;\r\n        if (time < frames[0]) {\r\n            var vertexAttachment = slotAttachment;\r\n            switch (blend) {\r\n                case MixBlend.setup:\r\n                    verticesArray.length = 0;\r\n                    return;\r\n                case MixBlend.first:\r\n                    if (alpha == 1) {\r\n                        verticesArray.length = 0;\r\n                        break;\r\n                    }\r\n                    var vertices_1 = setArraySize(verticesArray, vertexCount);\r\n                    if (vertexAttachment.bones == null) {\r\n                        var setupVertices = vertexAttachment.vertices;\r\n                        for (var i = 0; i < vertexCount; i++)\r\n                            vertices_1[i] += (setupVertices[i] - vertices_1[i]) * alpha;\r\n                    }\r\n                    else {\r\n                        alpha = 1 - alpha;\r\n                        for (var i = 0; i < vertexCount; i++)\r\n                            vertices_1[i] *= alpha;\r\n                    }\r\n            }\r\n            return;\r\n        }\r\n        var vertices = setArraySize(verticesArray, vertexCount);\r\n        if (time >= frames[frames.length - 1]) {\r\n            var lastVertices = frameVertices[frames.length - 1];\r\n            if (alpha == 1) {\r\n                if (blend == MixBlend.add) {\r\n                    var vertexAttachment = slotAttachment;\r\n                    if (vertexAttachment.bones == null) {\r\n                        var setupVertices = vertexAttachment.vertices;\r\n                        for (var i = 0; i < vertexCount; i++) {\r\n                            vertices[i] += lastVertices[i] - setupVertices[i];\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0; i < vertexCount; i++)\r\n                            vertices[i] += lastVertices[i];\r\n                    }\r\n                }\r\n                else {\r\n                    arrayCopy(lastVertices, 0, vertices, 0, vertexCount);\r\n                }\r\n            }\r\n            else {\r\n                switch (blend) {\r\n                    case MixBlend.setup: {\r\n                        var vertexAttachment_1 = slotAttachment;\r\n                        if (vertexAttachment_1.bones == null) {\r\n                            var setupVertices = vertexAttachment_1.vertices;\r\n                            for (var i = 0; i < vertexCount; i++) {\r\n                                var setup = setupVertices[i];\r\n                                vertices[i] = setup + (lastVertices[i] - setup) * alpha;\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var i = 0; i < vertexCount; i++)\r\n                                vertices[i] = lastVertices[i] * alpha;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MixBlend.first:\r\n                    case MixBlend.replace:\r\n                        for (var i = 0; i < vertexCount; i++)\r\n                            vertices[i] += (lastVertices[i] - vertices[i]) * alpha;\r\n                    case MixBlend.add:\r\n                        var vertexAttachment = slotAttachment;\r\n                        if (vertexAttachment.bones == null) {\r\n                            var setupVertices = vertexAttachment.vertices;\r\n                            for (var i = 0; i < vertexCount; i++) {\r\n                                vertices[i] += (lastVertices[i] - setupVertices[i]) * alpha;\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var i = 0; i < vertexCount; i++)\r\n                                vertices[i] += lastVertices[i] * alpha;\r\n                        }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        //找的后一帧时间\r\n        var frame = binarySearch(frames, time);\r\n        var prevVertices = frameVertices[frame - 1];\r\n        var nextVertices = frameVertices[frame];\r\n        var frameTime = frames[frame];\r\n        var percent = this.curve.getCurvePercent(frame - 1, 1 - (time - frameTime) / (frames[frame - 1] - frameTime));\r\n        if (alpha == 1) {\r\n            if (blend == MixBlend.add) {\r\n                var vertexAttachment = slotAttachment;\r\n                if (vertexAttachment.bones == null) {\r\n                    var setupVertices = vertexAttachment.vertices;\r\n                    for (var i = 0; i < vertexCount; i++) {\r\n                        var prev = prevVertices[i];\r\n                        vertices[i] += prev + (nextVertices[i] - prev) * percent - setupVertices[i];\r\n                    }\r\n                }\r\n                else {\r\n                    for (var i = 0; i < vertexCount; i++) {\r\n                        var prev = prevVertices[i];\r\n                        vertices[i] += prev + (nextVertices[i] - prev) * percent;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < vertexCount; i++) {\r\n                    var prev = prevVertices[i];\r\n                    vertices[i] = prev + (nextVertices[i] - prev) * percent;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            switch (blend) {\r\n                case MixBlend.setup: {\r\n                    var vertexAttachment_2 = slotAttachment;\r\n                    if (vertexAttachment_2.bones == null) {\r\n                        var setupVertices = vertexAttachment_2.vertices;\r\n                        for (var i = 0; i < vertexCount; i++) {\r\n                            var prev = prevVertices[i], setup = setupVertices[i];\r\n                            vertices[i] = setup + (prev + (nextVertices[i] - prev) * percent - setup) * alpha;\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0; i < vertexCount; i++) {\r\n                            var prev = prevVertices[i];\r\n                            vertices[i] = (prev + (nextVertices[i] - prev) * percent) * alpha;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case MixBlend.first:\r\n                case MixBlend.replace:\r\n                    for (var i = 0; i < vertexCount; i++) {\r\n                        var prev = prevVertices[i];\r\n                        vertices[i] += (prev + (nextVertices[i] - prev) * percent - vertices[i]) * alpha;\r\n                    }\r\n                    break;\r\n                case MixBlend.add:\r\n                    var vertexAttachment = slotAttachment;\r\n                    if (vertexAttachment.bones == null) {\r\n                        var setupVertices = vertexAttachment.vertices;\r\n                        for (var i = 0; i < vertexCount; i++) {\r\n                            var prev = prevVertices[i];\r\n                            vertices[i] += (prev + (nextVertices[i] - prev) * percent - setupVertices[i]) * alpha;\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0; i < vertexCount; i++) {\r\n                            var prev = prevVertices[i];\r\n                            vertices[i] += (prev + (nextVertices[i] - prev) * percent) * alpha;\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n","\r\nimport { MixBlend, MixDirection } from \"./utils\";\r\nimport { Slot } from \"../Slot\";\r\nimport { Attachment } from \"../attachment/Attachment\";\r\nimport { BaseTrack } from \"./BaseTrack\";\r\nimport { Spine } from \"../Spine\";\r\n\r\nexport interface IAttachmentAniData {\r\n    name?: string,\r\n    time: number,\r\n    //需要替换的，根据name获取,到时上面的name不需要了\r\n    // attachment: Attachment,\r\n}\r\nexport class AttachmentAniTrack extends BaseTrack {\r\n    resetValue() {\r\n        this.slot.setToSetupPose()\r\n    }\r\n    constructor(\r\n        /**\r\n         * 需要改变附件的插槽\r\n         */\r\n        public slot: Slot,\r\n        /**\r\n         * 记录所有时间的数组，按顺序递增，没有的按最后一个时间的数据\r\n         */\r\n        public times: IAttachmentAniData[],\r\n        /**\r\n         * 初始，原始数据中获取的\r\n         */\r\n        // public originAttachment: Attachment\r\n        private spine: Spine\r\n    ) {\r\n        super();\r\n        this._instanceType = \"AttachmentAniTrack\";\r\n        // 处理下默认数据\r\n        times.forEach((t) => { t.time = t.time || 0 })\r\n    }\r\n\r\n    setValue(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace, direction: MixDirection = MixDirection.in) {\r\n        var slot = this.slot;\r\n        if (direction == MixDirection.out && blend == MixBlend.setup) {//还原成默认的。\r\n            var attachmentName_1 = slot.data.attachment;\r\n            slot.setAttachment(attachmentName_1 ? this.spine.getAttachment(this.spine.slots.indexOf(slot), attachmentName_1) : null);\r\n            return;\r\n        }\r\n        var frames = this.times;\r\n        if (time < frames[0].time) {\r\n            if (blend == MixBlend.setup || blend == MixBlend.first || blend == MixBlend.replace) {//replace是后加的,待测试有没有问题\r\n                var attachmentName_1 = slot.data.attachment;\r\n                slot.setAttachment(attachmentName_1 ? this.spine.getAttachment(this.spine.slots.indexOf(slot), attachmentName_1) : null);\r\n            }\r\n            return;\r\n        }\r\n        var frameIndex = 0;\r\n        if (time >= frames[frames.length - 1].time)\r\n            frameIndex = frames.length - 1;\r\n        else\r\n            frameIndex = binarySearch(frames, time) - 1;\r\n        var attachmentName = frames[frameIndex].name;\r\n        slot.setAttachment(attachmentName == null ? null : this.spine.getAttachment(this.spine.slots.indexOf(slot), attachmentName));\r\n    }\r\n}\r\n\r\n\r\nfunction binarySearch(values: IAttachmentAniData[], target: number) {\r\n    var low = 0;\r\n    var high = values.length - 2;\r\n    if (high == 0) return 1;\r\n    var current = high >>> 1;\r\n    while (true) {\r\n        if (values[current + 1].time <= target)\r\n            low = current + 1;\r\n        else\r\n            high = current;\r\n        if (low == high)\r\n            return low + 1;\r\n        current = (low + high) >>> 1;\r\n    }\r\n};","import { BaseTrack } from \"./BaseTrack\";\r\nimport { MixBlend, MixDirection, arrayCopy, newArray } from \"./utils\";\r\nimport { Slot } from \"../Slot\";\r\n\r\nexport interface IDrawOrderAniData {\r\n    time: number,\r\n    offsets?: {\r\n        slot: string,\r\n        offset: number\r\n    }[],\r\n    //将上面的offsets转成下面这个\r\n    drawOrder?: number[]\r\n}\r\n\r\nexport class DrawOrderAniTrack extends BaseTrack {\r\n\r\n    constructor(\r\n        public slots: Slot[],\r\n        public drawOrder: Slot[],\r\n        public times: IDrawOrderAniData[]\r\n    ) {\r\n        super();\r\n        this._instanceType = \"DrawOrderAniTrack\";\r\n    }\r\n    setValue(time: number, alpha: number = 1, blend: MixBlend = MixBlend.replace, direction: MixDirection = MixDirection.in) {\r\n        var drawOrder = this.drawOrder;\r\n        var slots = this.slots;\r\n        if (direction == MixDirection.out && blend == MixBlend.setup) {\r\n            arrayCopy(slots, 0, drawOrder, 0, slots.length);\r\n            return;\r\n        }\r\n        var frames = this.times;\r\n        if (time < frames[0].time) {\r\n            if (blend == MixBlend.setup || blend == MixBlend.first)\r\n                arrayCopy(slots, 0, drawOrder, 0, slots.length);\r\n            return;\r\n        }\r\n        var frame = 0;\r\n        if (time >= frames[frames.length - 1].time)\r\n            frame = frames.length - 1;\r\n        else\r\n            frame = binarySearch(frames, time) - 1;\r\n        var drawOrderToSetupIndex =frames[frame].drawOrder ;\r\n        if (!drawOrderToSetupIndex)\r\n            arrayCopy(slots, 0, drawOrder, 0, slots.length);\r\n        else {\r\n            for (var i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\r\n                drawOrder[i] = slots[drawOrderToSetupIndex[i]];\r\n        }\r\n    }\r\n}\r\nfunction binarySearch(values: IDrawOrderAniData[], target: number) {\r\n    var low = 0;\r\n    var high = values.length - 2;\r\n    if (high == 0) return 1;\r\n    var current = high >>> 1;\r\n    while (true) {\r\n        if (values[current + 1].time <= target)\r\n            low = current + 1;\r\n        else\r\n            high = current;\r\n        if (low == high)\r\n            return low + 1;\r\n        current = (low + high) >>> 1;\r\n    }\r\n};","import { AnimationManager } from \"../2d/AnimationManager\";\r\nimport { AnimationClip } from \"../2d/AnimationClip\";\r\nimport { MixBlend, MixDirection } from \"./animation/utils\";\r\nimport { AttachmentAniTrack } from \"./animation/AttachmentAniTrack\";\r\n\r\n\r\nexport class SpineAniClip extends AnimationClip {\r\n\r\n    alpha: number = 1;\r\n    blend: MixBlend = MixBlend.replace;\r\n    direction: MixDirection = MixDirection.in\r\n\r\n    fromClip: SpineAniClip\r\n    toClip: SpineAniClip\r\n\r\n    /**\r\n     * 已执行的过度时间\r\n     */\r\n    mixTime: number\r\n    /**\r\n     * 过度总时间，上一个和自身的过度总时间\r\n     */\r\n    mixDuration: number\r\n\r\n    protected rectify() {\r\n        if (!this.tracks || !this.tracks.length) return;\r\n\r\n\r\n        for (var i = 0; i < this.tracks.length; i++) {\r\n            //@ts-ignore\r\n            this.tracks[i].setValue(this.curTime, this.alpha, this.blend, this.direction)\r\n        }\r\n\r\n        //设置相等\r\n        this.lastTime = this.curTime;\r\n    }\r\n}\r\n\r\n\r\nexport class SpineAniManager extends AnimationManager {\r\n    currentClip: SpineAniClip\r\n    /**\r\n     * \r\n     * @param name \r\n     * @param loops \r\n     * @param callback \r\n     * @param mix 带这个后，上一个动画的回调可能会失效，得看过度时间，对于有某些，a动画隐藏的皮肤，b动画没有处理该插槽，需要重置去掉a动画的效果,最好别赋值mix\r\n     */\r\n    showAni(name: string, loops: number = 1, callback?: (loop: number) => void, mix: number = 0) {\r\n        //如果不设置过度\r\n        if (!mix || !this.currentClip) {\r\n            return super.showAni(name, loops, callback)\r\n        }\r\n        var from = this.currentClip;\r\n        var to = this.getAniClipByName(name) as SpineAniClip\r\n        if (!to) return null;\r\n        //同一个动作\r\n        if (from == to) {\r\n            return super.showAni(name, loops, callback)\r\n        }\r\n\r\n        if (from.fromClip) {\r\n            this.resetFrom(from.fromClip)\r\n            from.fromClip = null;\r\n        }\r\n        to.mixTime = 0;\r\n        to.mixDuration = mix;\r\n        to.fromClip = from;\r\n        (this.currentClip = to).startAniRange(0, undefined, loops, callback)\r\n        //返回当前\r\n        return this.currentClip;\r\n    }\r\n\r\n    update(deltaTime: number = 0.0167) {\r\n        this.applyMixingFrom(this.currentClip, deltaTime, MixBlend.first);\r\n        //更新过度的\r\n        super.update(deltaTime)\r\n    }\r\n\r\n    applyMixingFrom(to: SpineAniClip, deltaTime: number, blend: MixBlend) {\r\n        if (!to) return\r\n        var from = to.fromClip;\r\n        if (!from) return;\r\n        to.mixTime += deltaTime;\r\n        // if (from.mixingFrom != null)\r\n        //     this.applyMixingFrom(from, skeleton, blend);\r\n        var mix = 0;\r\n        if (to.mixDuration == 0) {\r\n            mix = 1;\r\n            if (blend == MixBlend.first) blend = MixBlend.setup;\r\n        }\r\n        else {\r\n            mix = to.mixTime / to.mixDuration;\r\n            if (mix > 1) mix = 1;\r\n            if (blend != MixBlend.first) blend = from.blend;\r\n        }\r\n        to.alpha = mix;\r\n        //执行赋值\r\n        from.alpha = 1 - mix;\r\n        from.blend = blend;\r\n\r\n        if (from.alpha == 0) {\r\n            this.resetFrom(from)\r\n            //@ts-ignore 单独对attachMent的进行一次重置，因为本来就硬切，不会有太大影响\r\n            to.fromClip.tracks.forEach((t: AttachmentAniTrack) => {\r\n                if (t.instanceType == \"AttachmentAniTrack\") t.resetValue();\r\n            })\r\n\r\n            to.fromClip = null;\r\n        }\r\n\r\n\r\n    }\r\n    private resetFrom(from: SpineAniClip) {\r\n        //@ts-ignore\r\n        from._isPlaying = false;\r\n        from.alpha = 1;\r\n        from.blend = MixBlend.replace;\r\n    }\r\n}","import { GlobalLoader } from \"../2d/loader\";\r\nimport { ArrayBufferToBase64, decodeText } from \"../2d/utils\";\r\nimport { createTexturesByAtlas } from \"./loadAtlas\";\r\nimport { BaseTexture, Texture } from \"../2d/texture\";\r\nimport { Spine, ISkeletonData } from \"./Spine\";\r\n\r\n/**\r\n * 包括动画数据和图集数据的原始数据，可复用\r\n */\r\nexport interface SpineData {\r\n    /**\r\n     * 骨骼动画数据\r\n     */\r\n    skeletonData: ISkeletonData,\r\n    /**\r\n     * 纹理数据\r\n     */\r\n    textures: { [key: string]: Texture },\r\n    /**\r\n     * 返回的一个显示对象实例\r\n     */\r\n    spine: Spine\r\n}\r\n/**\r\n * 加载spi文件，直接返回显示对象吧，数据不暴露了，spine有clone方法，用原数据生成，以后有需求单独加载数据再说\r\n * @param url \r\n * @param onLoad 到底怎么返回，只返回数据吧，对象自己new，还是直接返回对象，其实数据没必要暴露，svga是因为解析不带任何显示对象，只能返回数据\r\n * @param onError \r\n */\r\nexport function loadSpine(\r\n    url: string,\r\n    onLoad: (spineData: SpineData) => void,\r\n    onError?: (err: any) => void,\r\n) {\r\n    GlobalLoader.loadAB(async (s, res) => {\r\n        if (!s) {\r\n            onError && onError(res);\r\n            return\r\n        }\r\n        try {\r\n            var headerView = new DataView(res, 0, 12);\r\n            var imgLen = headerView.getUint32(0, true),\r\n                atlasLen = headerView.getUint32(4, true),\r\n                jsonLen = headerView.getUint32(8, true)\r\n\r\n            var base64String = `data:image/png;base64,${ArrayBufferToBase64(res.slice(12, imgLen + 12))}`;\r\n            var atlas = decodeText(new Uint8Array(res, 12 + imgLen, atlasLen));\r\n            var json = JSON.parse(decodeText(new Uint8Array(res, 12 + imgLen + atlasLen, jsonLen)));\r\n\r\n            GlobalLoader.loadImage((s, image) => {\r\n                var textures = createTexturesByAtlas(BaseTexture.fromImage(image), atlas);\r\n                onLoad && onLoad(\r\n                    {\r\n                        skeletonData: json,\r\n                        textures,\r\n                        spine: new Spine(json, textures)\r\n                    }\r\n                )\r\n            }, base64String)\r\n        } catch (e) {\r\n            onError && onError(e);\r\n        }\r\n\r\n    }, url)\r\n}"],"sourceRoot":""}